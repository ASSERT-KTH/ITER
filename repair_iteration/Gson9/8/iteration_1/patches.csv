bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  replaceRaw(JsonWriter.NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw(JsonWriter.NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw(JsonWriter.NONEMPTY_ARRAY);	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  replaceRaw(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw(DANGLING_NAME);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw(DANGLING_NAME);	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  replaceRaw(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw(JsonWriter.EXPR_RESULT);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw(JsonWriter.EXPR_RESULT);	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  replaceRaw(JsonWriter.VALUE_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw(JsonWriter.VALUE_NAME);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw(JsonWriter.VALUE_NAME);	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  replaceRaw(JsonWriter.WARNING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw(JsonWriter.WARNING_NAME);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw(JsonWriter.WARNING_NAME);	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
6	[BUG]  [BUGGY]  replaceRaw(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw(JsonNull.createJsonNull());  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw(JsonNull.createJsonNull());	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append(',');  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append(',');  break;  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append(',');  break;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append( ", ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append( ", ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  replaceWithEmpty(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceWithEmpty(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceWithEmpty(NONEMPTY_ARRAY);	  replaceWithNull(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  replaceWithNull(null);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceWithNull(null);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceWithNull(null);	  replaceWithNull(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  replaceWithNull(JsonWriter.NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceWithNull(JsonWriter.NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceWithNull(JsonWriter.NONEMPTY_ARRAY);	  replaceWithNull(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  replaceWithEmpty(JsonWriter.NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceWithEmpty(JsonWriter.NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceWithEmpty(JsonWriter.NONEMPTY_ARRAY);	  replaceWithNull(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  replaceWithNull(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceWithNull(JsonWriter.EXPR_RESULT);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceWithNull(JsonWriter.EXPR_RESULT);	  replaceWithNull(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  replaceWithNull(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceWithNull(DANGLING_NAME);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceWithNull(DANGLING_NAME);	  replaceWithNull(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_ARRAY  ||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  NONEMPTY_ARRAY  ||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborValue  <  NONEMPTY_ARRAY  ||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_ARRAY  ||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  NONEMPTY_ARRAY  ||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborValue  <  NONEMPTY_ARRAY  ||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  Annotation.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Annotation.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotation.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  Annotations.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Annotations.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotations.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  Annotation.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Annotation.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotation.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  Annotations.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Annotations.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotations.setValue(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_ARRAY  ||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)]  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  NONEMPTY_ARRAY  ||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)]  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborValue  <  NONEMPTY_ARRAY  ||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)]  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  out.append(',');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  out.append(',');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append(',');	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  new  JsonWriter(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  new  JsonWriter(JsonWriter.EXPR_RESULT);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	JsonWriter  jsonWriter  =  new  JsonWriter(JsonWriter.EXPR_RESULT);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  out.append(',');  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  out.append(',');  break;  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append(',');  break;	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  new  JsonWriter();  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  new  JsonWriter();  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	JsonWriter  jsonWriter  =  new  JsonWriter();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(this);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(this);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(this);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(JsonWriter.NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceValue(JsonWriter.NONEMPTY_ARRAY);	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  removeValue(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  removeValue(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	removeValue(NONEMPTY_ARRAY);	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  replaceValue(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(DANGLING_NAME);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceValue(DANGLING_NAME);	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  replaceValue(NONEMPTY_ARRAY,  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(NONEMPTY_ARRAY,  1);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceValue(NONEMPTY_ARRAY,  1);	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  validateValue(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  validateValue(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	validateValue(NONEMPTY_ARRAY);	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  replaceValue(NONEMPTY_ARRAY,  0);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(NONEMPTY_ARRAY,  0);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceValue(NONEMPTY_ARRAY,  0);	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  replaceRaw( "none ", "none ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "none ", "none ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "none ", "none ");	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
41	[BUG]  [BUGGY]  replaceRaw( "[NoneMPTY_ARRAY] ",  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "[NoneMPTY_ARRAY] ",  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "[NoneMPTY_ARRAY] ",  NONEMPTY_ARRAY);	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
42	[BUG]  [BUGGY]  replaceRaw( "none ", "NoneMPTY_ARRAY ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "none ", "NoneMPTY_ARRAY ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "none ", "NoneMPTY_ARRAY ");	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  replaceRaw( "[NoneMPTY_ARRAY] ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "[NoneMPTY_ARRAY] ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "[NoneMPTY_ARRAY] ");	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  replaceRaw( "none ",  JsonWriter.NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "none ",  JsonWriter.NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "none ",  JsonWriter.NONEMPTY_ARRAY);	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
45	[BUG]  [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(']');  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(']');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(']');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append('[');  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append('[');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append('[');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append( ", ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append( ", ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append( ", ");	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  while(isValidNumber())  {  out.append('[');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  out.append('[');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  out.append('[');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append( "n ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append( "n ");	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '[')  {  out.append(']');  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '[')  {  out.append(']');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '[')  {  out.append(']');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  ']')  {  out.append(']');  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  ']')  {  out.append(']');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  ']')  {  out.append(']');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
53	[BUG]  [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  out.append(',');  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  out.append(',');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  out.append(',');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  while(!isValidNumber())  {  if(isValidDesc())  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(!isValidNumber())  {  if(isValidDesc())  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(!isValidNumber())  {  if(isValidDesc())  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  while(isValidNumber())  {  out.append(',');  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  out.append(',');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  out.append(',');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  newline();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  newline();  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  newline();	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append(',');  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append(',');  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append(',');  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  append( "None ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  append( "None ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "None ");	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
60	[BUG]  [BUGGY]  append( "null ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  append( "null ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "null ");	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  append( "none ",  null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  append( "none ",  null);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "none ",  null);	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
62	[BUG]  [BUGGY]  append( ",none ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  append( ",none ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( ",none ");	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
63	[BUG]  [BUGGY]  append( "number ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  append( "number ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "number ");	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
64	[BUG]  [BUGGY]  Append( "none ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  Append( "none ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Append( "none ");	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
65	[BUG]  [BUGGY]  append( ", ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  append( ", ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( ", ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  append( ";n ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  append( ";n ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( ";n ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
67	[BUG]  [BUGGY]  append( "n ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  append( "n ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "n ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
68	[BUG]  [BUGGY]  append( "',');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  append( "',');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "',');	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
69	[BUG]  [BUGGY]  append( ",');  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  append( ",');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( ",');	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
70	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
71	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
73	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
74	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
75	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
76	[BUG]  [BUGGY]  Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
77	[BUG]  [BUGGY]  Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME))  {  replaceTop(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME))  {  replaceTop(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME))  {  replaceTop(NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
78	[BUG]  [BUGGY]  Annotations.beforeValue(JsonWriter.class))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Annotations.beforeValue(JsonWriter.class))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotations.beforeValue(JsonWriter.class))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
79	[BUG]  [BUGGY]  Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME,  true))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
80	[BUG]  [BUGGY]  Annotations.beforeValue(JsonWriter.class))  {  replaceTop(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  Annotations.beforeValue(JsonWriter.class))  {  replaceTop(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotations.beforeValue(JsonWriter.class))  {  replaceTop(NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
81	[BUG]  [BUGGY]  Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME,  true))  {  replaceTop(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME,  true))  {  replaceTop(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	Annotations.beforeValue(JsonWriter.EXPR_RESULT_NAME,  true))  {  replaceTop(NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
82	[BUG]  [BUGGY]  replaceRight(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(DANGLING_NAME);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(DANGLING_NAME);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
83	[BUG]  [BUGGY]  replaceRight(JsonWriter.NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(JsonWriter.NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(JsonWriter.NONEMPTY_ARRAY);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
84	[BUG]  [BUGGY]  replaceRight(null);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(null);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(null);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
85	[BUG]  [BUGGY]  replaceRight(NONEMPTY_ARRAY,  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(NONEMPTY_ARRAY,  1);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(NONEMPTY_ARRAY,  1);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  replaceRight(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(JsonWriter.EXPR_RESULT);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(JsonWriter.EXPR_RESULT);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  replaceRight(NONEMPTY_ARRAY  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(NONEMPTY_ARRAY  +  1);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(NONEMPTY_ARRAY  +  1);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
88	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_ARRAY))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_ARRAY))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_ARRAY))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
92	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
93	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
94	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
95	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
96	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break;  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
97	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRA  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRA  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRA	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
98	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(!isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(!isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(!isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
99	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
100	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
101	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
102	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  removeTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  removeTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  removeTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  removeTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  removeTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  removeTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
107	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.AUTO_STRING_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.AUTO_STRING_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.AUTO_STRING_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
108	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAMES+ ") ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAMES+ ") ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAMES+ ") ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
109	[BUG]  [BUGGY]  NullPointerException.printStackTrace();  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.printStackTrace();  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.printStackTrace();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
110	[BUG]  [BUGGY]  NullPointerException.println( "Failed  to  parse  NONEMPTY_ARRAY ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Failed  to  parse  NONEMPTY_ARRAY ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "Failed  to  parse  NONEMPTY_ARRAY ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
111	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+getClass().getName()  + ") ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+getClass().getName()  + ") ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter.notEnabled( "+getClass().getName()  + ") ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
112	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  beforeValue);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  beforeValue);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter.start  of  expression: "  +  beforeValue);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
113	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAME+ ") ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAME+ ") ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAME+ ") ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
114	[BUG]  [BUGGY]  replaceRaw( "[none] ",  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "[none] ",  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "[none] ",  NONEMPTY_ARRAY);	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
115	[BUG]  [BUGGY]  replaceRaw( "  {   ",  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "  {   ",  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "  {   ",  NONEMPTY_ARRAY);	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
116	[BUG]  [BUGGY]  replaceRaw( "  <   ",  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "  <   ",  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "  <   ",  NONEMPTY_ARRAY);	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
117	[BUG]  [BUGGY]  NeighborUtil.throwAsIOException( " ");  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NeighborUtil.throwAsIOException( " ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborUtil.throwAsIOException( " ");	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
118	[BUG]  [BUGGY]  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  out.append( "n ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append( "n ");	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
119	[BUG]  [BUGGY]  State  state  =  getState();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  State  state  =  getState();  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	State  state  =  getState();	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
120	[BUG]  [BUGGY]  out.append( "n ").append('n');  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  out.append( "n ").append('n');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append( "n ").append('n');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
121	[BUG]  [BUGGY]  NeighborUtil.throwInternal();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NeighborUtil.throwInternal();  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborUtil.throwInternal();	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
122	[BUG]  [BUGGY]  NeighborReporter.this.afterValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NeighborReporter.this.afterValue();  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborReporter.this.afterValue();	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
123	[BUG]  [BUGGY]  replaceWithEmpty(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceWithEmpty(JsonNull.createJsonNull());  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceWithEmpty(JsonNull.createJsonNull());	  replaceWithNull(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
124	[BUG]  [BUGGY]  replaceRight(NONEMPTY_ARRAY,  out);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(NONEMPTY_ARRAY,  out);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(NONEMPTY_ARRAY,  out);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
125	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
126	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
127	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
128	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)] ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)] ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)] ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
129	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) "));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) "));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) "));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
130	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME) ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME) ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME) ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
131	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)];  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)];  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)];	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
132	[BUG]  [BUGGY]  replaceRaw(NONEMPTY_ARRAY,  out);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw(NONEMPTY_ARRAY,  out);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw(NONEMPTY_ARRAY,  out);	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
133	[BUG]  [BUGGY]  replaceRaw(NONEMPTY_ARRAY,  0);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw(NONEMPTY_ARRAY,  0);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw(NONEMPTY_ARRAY,  0);	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
134	[BUG]  [BUGGY]  append( "  }   ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  append( "  }   ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "  }   ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
135	[BUG]  [BUGGY]  append( "  {   ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  append( "  {   ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "  {   ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
136	[BUG]  [BUGGY]  append( "  : ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  append( "  : ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "  : ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
137	[BUG]  [BUGGY]  append( "  {,' ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  append( "  {,' ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "  {,' ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
138	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME));  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
139	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME));  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME));  break;  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME));  break;	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
140	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_ALIASING_NAME));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_ALIASING_NAME));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceTop(NONEMPTY_ARRAY,  isValueWriteEnabled(Feature.QUOTE_ALIASING_NAME));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
141	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ARRAY,  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_ARRAY,  null);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceTop(NONEMPTY_ARRAY,  null);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
142	[BUG]  [BUGGY]  append( "[none] ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  append( "[none] ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "[none] ");	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
143	[BUG]  [BUGGY]  append( "native  value ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  append( "native  value ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "native  value ");	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
144	[BUG]  [BUGGY]  append( "native ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  append( "native ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "native ");	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
145	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.toString(NONEMPTY_ARRAY));  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.toString(NONEMPTY_ARRAY));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.toString(NONEMPTY_ARRAY));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
146	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.asList(new  String[]  {  }  ));  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.asList(new  String[]  {  }  ));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.asList(new  String[]  {  }  ));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
147	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.asList(new  JsonWriter()));  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.asList(new  JsonWriter()));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.asList(new  JsonWriter()));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
148	[BUG]  [BUGGY]  NullPointerException.println( "JsonValue.start  of  expression: "  +  Arrays.asList(new  String[]  {  }  ));  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonValue.start  of  expression: "  +  Arrays.asList(new  String[]  {  }  ));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonValue.start  of  expression: "  +  Arrays.asList(new  String[]  {  }  ));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
149	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.asList(new  String[]  {  name  }  ));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.asList(new  String[]  {  name  }  ));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter.start  of  expression: "  +  Arrays.asList(new  String[]  {  name  }  ));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
150	[BUG]  [BUGGY]  NullPointerException.startValue(this,  NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.startValue(this,  NONEMPTY_EXPR_RESULT);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.startValue(this,  NONEMPTY_EXPR_RESULT);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
151	[BUG]  [BUGGY]  out.append('[');  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  out.append('[');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append('[');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
152	[BUG]  [BUGGY]  out.append(']');  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  out.append(']');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append(']');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
153	[BUG]  [BUGGY]  out.append( ", ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  out.append( ", ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append( ", ");	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
154	[BUG]  [BUGGY]  out.append( "[ ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  out.append( "[ ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append( "[ ");	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
155	[BUG]  [BUGGY]  out.append('  ');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  out.append('  ');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append('  ');	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
156	[BUG]  [BUGGY]  out.append(')');  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  out.append(')');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append(')');	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
157	[BUG]  [BUGGY]  out.append('n');  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  out.append('n');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append('n');	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
158	[BUG]  [BUGGY]  if(value  ==  null)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehashCode();  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(value  ==  null)  {  rehashCode();  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
159	[BUG]  [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(value  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
160	[BUG]  [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(value  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
161	[BUG]  [BUGGY]  if(value!=  null)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(value!=  null)  {  rehashCode();  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(value!=  null)  {  rehashCode();  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
162	[BUG]  [BUGGY]  if(value!=  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(value!=  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(value!=  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
163	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  _reportUnsupportedOperation();  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	_reportUnsupportedOperation();	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
164	[BUG]  [BUGGY]  replaceValue(null);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(null);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceValue(null);	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
165	[BUG]  [BUGGY]  replaceValue(NONEMPTY_ARRAY,  out);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(NONEMPTY_ARRAY,  out);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceValue(NONEMPTY_ARRAY,  out);	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
166	[BUG]  [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  'n')  {  out.append('n');  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  'n')  {  out.append('n');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  'n')  {  out.append('n');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
167	[BUG]  [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '-')  {  out.append('-');  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '-')  {  out.append('-');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '-')  {  out.append('-');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
168	[BUG]  [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '-')  {  out.append('+');  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '-')  {  out.append('+');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '-')  {  out.append('+');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
169	[BUG]  [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  'n')  {  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  'n')  {  out.append( "n ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  'n')  {  out.append( "n ");	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
170	[BUG]  [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '-')  {  out.append(',');  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '-')  {  out.append(',');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '-')  {  out.append(',');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
171	[BUG]  [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '0')  {  out.append(',');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '0')  {  out.append(',');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber()  &&  out.charAt(out.length()  -  1)!=  '0')  {  out.append(',');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
172	[BUG]  [BUGGY]  RectangleEdge.this.startValue(out,  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  RectangleEdge.this.startValue(out,  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	RectangleEdge.this.startValue(out,  NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
173	[BUG]  [BUGGY]  RectangleEdge.this.setValue(out,  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  RectangleEdge.this.setValue(out,  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	RectangleEdge.this.setValue(out,  NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
174	[BUG]  [BUGGY]  NullPointerException.startValue(out,  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.startValue(out,  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.startValue(out,  NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
175	[BUG]  [BUGGY]  NullPointerException.startValue(out,  NONEMPTY_EXTENDS);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.startValue(out,  NONEMPTY_EXTENDS);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.startValue(out,  NONEMPTY_EXTENDS);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
176	[BUG]  [BUGGY]  NullPointerException.startValue(out,  NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.startValue(out,  NONEMPTY_EXPR_RESULT);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.startValue(out,  NONEMPTY_EXPR_RESULT);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
177	[BUG]  [BUGGY]  NullPointerException.startValue(out,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.startValue(out,  NONEMPTY_NAME);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.startValue(out,  NONEMPTY_NAME);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
178	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(getValue(),  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	parent.replaceChild(getValue(),  NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
179	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.NUMBER_OF_ARRAY);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.NUMBER_OF_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	parent.replaceChild(getValue(),  JsonWriter.NUMBER_OF_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
180	[BUG]  [BUGGY]  parent.replaceChild(null,  next());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(null,  next());  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	parent.replaceChild(null,  next());	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
181	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.NUMBER_OF_RANGE);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.NUMBER_OF_RANGE);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	parent.replaceChild(getValue(),  JsonWriter.NUMBER_OF_RANGE);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
182	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.EXPR_RESULT_TAG);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.EXPR_RESULT_TAG);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	parent.replaceChild(getValue(),  JsonWriter.EXPR_RESULT_TAG);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
183	[BUG]  [BUGGY]  parent.replaceChild(null,  new  JsonWriter(this));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(null,  new  JsonWriter(this));  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	parent.replaceChild(null,  new  JsonWriter(this));	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
184	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  break;  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  break;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
185	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  break;  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  break;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
186	[BUG]  [BUGGY]  append( "  {  n ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  append( "  {  n ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "  {  n ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
187	[BUG]  [BUGGY]  append( "  {  0  }   ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  append( "  {  0  }   ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "  {  0  }   ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
188	[BUG]  [BUGGY]  append( "  <   ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  append( "  <   ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "  <   ");	  append(',');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
189	[BUG]  [BUGGY]  replaceValue(NONEMPTY_ARRAY,  newline());  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(NONEMPTY_ARRAY,  newline());  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceValue(NONEMPTY_ARRAY,  newline());	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
190	[BUG]  [BUGGY]  replaceValue(NONEMPTY_ARRAY,  true);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(NONEMPTY_ARRAY,  true);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceValue(NONEMPTY_ARRAY,  true);	  replaceValue(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
191	[BUG]  [BUGGY]  append( "no  expression ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  append( "no  expression ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	append( "no  expression ");	  append(   "none   ");    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
192	[BUG]  [BUGGY]  if(isValidNumber())  {  out.append(',');  out.append(separator);  break;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(isValidNumber())  {  out.append(',');  out.append(separator);  break;  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValidNumber())  {  out.append(',');  out.append(separator);  break;  }	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
193	[BUG]  [BUGGY]  if(isValidNumber())  {  out.append( ", ");  }  else  {  out.append(',');  out.append(separator);  break;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(isValidNumber())  {  out.append( ", ");  }  else  {  out.append(',');  out.append(separator);  break;  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValidNumber())  {  out.append( ", ");  }  else  {  out.append(',');  out.append(separator);  break;  }	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
194	[BUG]  [BUGGY]  if(isValidNumber())  {  out.append(',');  out.append(DANGLING_NAME);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(isValidNumber())  {  out.append(',');  out.append(DANGLING_NAME);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValidNumber())  {  out.append(',');  out.append(DANGLING_NAME);  }	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
195	[BUG]  [BUGGY]  while(isValidNumber())  {  out.append('n');  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  out.append('n');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  out.append('n');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
196	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_ALIASING_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_ALIASING_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_ALIASING_NAME))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
197	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(noneMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(noneMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(noneMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
198	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isCollection())  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isCollection())  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isCollection())  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
199	[BUG]  [BUGGY]  replaceRight(NONEMPTY_ARRAY,  true);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(NONEMPTY_ARRAY,  true);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(NONEMPTY_ARRAY,  true);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
200	[BUG]  [BUGGY]  replaceRight(NONEMPTY_ARRAY,  line);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(NONEMPTY_ARRAY,  line);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(NONEMPTY_ARRAY,  line);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
201	[BUG]  [BUGGY]  replaceRight(NONEMPTY_ARRAY,  0);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceRight(NONEMPTY_ARRAY,  0);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRight(NONEMPTY_ARRAY,  0);	  replaceRight(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
202	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(!isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(!isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break;  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(!isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
203	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NullPointerException.println( "JsonWriter:  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES) ");  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
204	[BUG]  [BUGGY]  while(isValidNumber())  {  replaceTop(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  replaceTop(NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  replaceTop(NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
205	[BUG]  [BUGGY]  while(isValidNumber())  {  replaceTop(noneMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  replaceTop(noneMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  replaceTop(noneMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
206	[BUG]  [BUGGY]  while(isValidNumber())  {  replaceTop(0,  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  replaceTop(0,  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  replaceTop(0,  NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
207	[BUG]  [BUGGY]  while(isValidNumber())  {  replaceTop(nonemTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  replaceTop(nonemTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  replaceTop(nonemTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
208	[BUG]  [BUGGY]  while(isValidNumber())  {  replaceTop(null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  replaceTop(null);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  replaceTop(null);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
209	[BUG]  [BUGGY]  parent.replaceChild(this,  NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(this,  NONEMPTY_ARRAY);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	parent.replaceChild(this,  NONEMPTY_ARRAY);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
210	[BUG]  [BUGGY]  while(isValidNumber())  {  replaceTop(separator);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  replaceTop(separator);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  replaceTop(separator);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
211	[BUG]  [BUGGY]  while(isValidNumber())  {  out.append('  ');  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  out.append('  ');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  out.append('  ');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
212	[BUG]  [BUGGY]  while(isValidNumber())  {  out.append(':');  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(isValidNumber())  {  out.append(':');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(isValidNumber())  {  out.append(':');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
213	[BUG]  [BUGGY]  while(!isValidNumber())  {  out.append('  ');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(!isValidNumber())  {  out.append('  ');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(!isValidNumber())  {  out.append('  ');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
214	[BUG]  [BUGGY]  while(!isValidNumber())  {  out.append('n');  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(!isValidNumber())  {  out.append('n');  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	while(!isValidNumber())  {  out.append('n');	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    out.append(separator);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
215	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_ARRAY))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_ARRAY))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_ARRAY))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
216	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_ARRAY))  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_ARRAY))  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_ARRAY))  {  replaceTop(NONEMPTY_ARRAY);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
217	[BUG]  [BUGGY]  replaceRaw( "  <  NONEMPTY_ARRAY> ", "none ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "  <  NONEMPTY_ARRAY> ", "none ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "  <  NONEMPTY_ARRAY> ", "none ");	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
218	[BUG]  [BUGGY]  replaceRaw( "number ", "NoneMPTY_ARRAY ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "number ", "NoneMPTY_ARRAY ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "number ", "NoneMPTY_ARRAY ");	  replaceRaw(   "none   ",    NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
219	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  an  argument ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  an  argument ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	_reportError( "Current  token( "+getMessage()  + ")not  an  argument ");	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
220	[BUG]  [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  an  object  of  type "+getClass().getName());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  _reportError( "Current  token( "+getMessage()  + ")not  an  object  of  type "+getClass().getName());  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	_reportError( "Current  token( "+getMessage()  + ")not  an  object  of  type "+getClass().getName());	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
221	[BUG]  [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  an  ARRAY  or  NONEMPTY_ARRAY. ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  _reportError( "Current  token( "+getClass().getName()  + ")not  an  ARRAY  or  NONEMPTY_ARRAY. ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	_reportError( "Current  token( "+getClass().getName()  + ")not  an  ARRAY  or  NONEMPTY_ARRAY. ");	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
222	[BUG]  [BUGGY]  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  out.append(separator);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append(separator);	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
223	[BUG]  [BUGGY]  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  out.append( "null ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	out.append( "null ");	  if(isValidNumber())    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(']');    out.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
224	[BUG]  [BUGGY]  replaceWithNull(JsonWriter.DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceWithNull(JsonWriter.DEFAULT_NAME);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceWithNull(JsonWriter.DEFAULT_NAME);	  replaceWithNull(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
225	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append(',');  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append(',');  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append(',');  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
226	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  out.append(',');  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    out.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
227	[BUG]  [BUGGY]  NeighborWriter.this.reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter.this.reportUnsupportedOperation();  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborWriter.this.reportUnsupportedOperation();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
228	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.undef.start  of  expression: "+getMessage());  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter.this.reportError( "msg.undef.start  of  expression: "+getMessage());  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborWriter.this.reportError( "msg.undef.start  of  expression: "+getMessage());	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
229	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.undef.end-of-expression ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter.this.reportError( "msg.undef.end-of-expression ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborWriter.this.reportError( "msg.undef.end-of-expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
230	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.undef.no.expression ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter.this.reportError( "msg.undef.no.expression ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborWriter.this.reportError( "msg.undef.no.expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
231	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.undef.start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter.this.reportError( "msg.undef.start  of  expression ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborWriter.this.reportError( "msg.undef.start  of  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
232	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue( "start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter.this.beforeValue( "start  of  expression ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	NeighborWriter.this.beforeValue( "start  of  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    replaceTop(NONEMPTY_ARRAY);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
233	[BUG]  [BUGGY]  replaceRaw( "[NONEMPTY_ARRAY] ");  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw( "[NONEMPTY_ARRAY] ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw( "[NONEMPTY_ARRAY] ");	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
234	[BUG]  [BUGGY]  replaceRaw(NONEMPTY_ARRAY,  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceRaw(NONEMPTY_ARRAY,  1);  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	replaceRaw(NONEMPTY_ARRAY,  1);	  replaceRaw(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
235	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	throw  new  IllegalStateException( " ");	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
236	[BUG]  [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  out.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  out.append( ", ");  }  [BUGGY]    newline();  break;  case  NONEMPTY_ARRAY:  //  another  in  array  out.append(',');  newline();  break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	if(value  ==  null)  {  rehashCode();  }  else  {  out.append( ", ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
