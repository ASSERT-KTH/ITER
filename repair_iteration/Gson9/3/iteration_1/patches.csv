bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while(value!=  null  &&  value.equals( " "))  {  writeDeferredName();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.equals( " "))  {  writeDeferredName();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.equals( " "))  {  writeDeferredName();	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  writeDeferredName();  }  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  writeDeferredName();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.length()  >  0)  {  writeDeferredName();  }	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	9	None	replace
3	[BUG]  [BUGGY]  while(value!=  null  &&  value.equals( " "))  {  writeDeferredName();  }  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.equals( " "))  {  writeDeferredName();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.equals( " "))  {  writeDeferredName();  }	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	9	None	replace
4	[BUG]  [BUGGY]  while(value!=  null  &&  value.equals( "null "))  {  writeDeferredName();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.equals( "null "))  {  writeDeferredName();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.equals( "null "))  {  writeDeferredName();	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  while(value!=  null  &&  value.equals( "null "))  {  writeDeferredName();  }  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.equals( "null "))  {  writeDeferredName();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.equals( "null "))  {  writeDeferredName();  }	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	9	None	replace
6	[BUG]  [BUGGY]  reader.write(value?   "true "  : "false ");  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  reader.write(value?   "true "  : "false ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	reader.write(value?   "true "  : "false ");	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	9	None	replace
7	[BUG]  [BUGGY]  while(value!=  null)  {  writeDeferredName();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  writeDeferredName();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null)  {  writeDeferredName();	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  while(value!=  null)  {  out.write(value?  null  :  value.toString());  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  out.write(value?  null  :  value.toString());  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null)  {  out.write(value?  null  :  value.toString());	  if(value!=    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  while(value!=  null)  {  out.write(value?   "null "  :  value.toString());  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  out.write(value?   "null "  :  value.toString());  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null)  {  out.write(value?   "null "  :  value.toString());	  if(value!=    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  while(value!=  null)  {  writeDeferredName();  }  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  writeDeferredName();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null)  {  writeDeferredName();  }	  if(value!=    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
11	[BUG]  [BUGGY]  because(value!=  null)  {  writeDeferredName();  }  else  {  out.write( "null ");  }  [CE]  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  because(value!=  null)  {  writeDeferredName();  }  else  {  out.write( "null ");  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	because(value!=  null)  {  writeDeferredName();  }  else  {  out.write( "null ");  }	  if(value!=    null)    {    writeDeferredName();    }    else    {    out.write(   "null   ");    }    	non-compiled	[CE]  	6	None	replace
12	[BUG]  [BUGGY]  because(value!=  null)  {  writeDeferredName();  }  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  because(value!=  null)  {  writeDeferredName();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	because(value!=  null)  {  writeDeferredName();  }	  if(value!=    null)    {    writeDeferredName();    }    else    {    out.write(   "null   ");    }    	non-compiled	[CE]  	6	None	replace
13	[BUG]  [BUGGY]  while(value!=  null  &&  value.equals( "null "))  {  out.write( "null ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.equals( "null "))  {  out.write( "null ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.equals( "null "))  {  out.write( "null ");	  if(value!=    null)    {    writeDeferredName();    }    else    {    out.write(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.write( "null ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.write( "null ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.write( "null ");	  if(value!=    null)    {    writeDeferredName();    }    else    {    out.write(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  out.write( "null ");  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  out.write( "null ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	out.write( "null ");	  if(value    ==    null)    {    writeDeferredName();    }    else    {    out.write(   "null   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
16	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass().isArray())  {  out.write( "null ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.getClass().isArray())  {  out.write( "null ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.getClass().isArray())  {  out.write( "null ");	  if(value    ==    null)    {    writeDeferredName();    }    else    {    out.write(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.write(String.valueOf(value));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.write(String.valueOf(value));  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.write(String.valueOf(value));	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  while(value!=  null  &&  value.equals( " "))  {  out.write(String.valueOf(value));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.equals( " "))  {  out.write(String.valueOf(value));  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.equals( " "))  {  out.write(String.valueOf(value));	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  while(value!=  null  &&  value.equals( "null "))  {  out.write(String.valueOf(value));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.equals( "null "))  {  out.write(String.valueOf(value));  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.equals( "null "))  {  out.write(String.valueOf(value));	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  while(value!=  null)  {  out.write(String.valueOf(value));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  out.write(String.valueOf(value));  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null)  {  out.write(String.valueOf(value));	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  Writer  out  =  getWriter();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Writer  out  =  getWriter();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer  out  =  getWriter();	  if(value    ==    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
22	[BUG]  [BUGGY]  Writer  out  =  JsonWriter.createChildObjectWriter(this,  value);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Writer  out  =  JsonWriter.createChildObjectWriter(this,  value);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer  out  =  JsonWriter.createChildObjectWriter(this,  value);	  if(value    ==    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
23	[BUG]  [BUGGY]  Writer  out  =  JsonWriter.createChildObjectWriter(this);  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Writer  out  =  JsonWriter.createChildObjectWriter(this);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer  out  =  JsonWriter.createChildObjectWriter(this);	  if(value    ==    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
24	[BUG]  [BUGGY]  Writer  out  =  getWriter().writeEndObject();  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Writer  out  =  getWriter().writeEndObject();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer  out  =  getWriter().writeEndObject();	  if(value    ==    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
25	[BUG]  [BUGGY]  because(value!=  null)  {  writeDeferredName();  }  else  {  out.write( "   ");  }  [CE]  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  because(value!=  null)  {  writeDeferredName();  }  else  {  out.write( "   ");  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	because(value!=  null)  {  writeDeferredName();  }  else  {  out.write( "   ");  }	  if(value!=    null)    {    writeDeferredName();    }    else    {    out.write(   "   ");    }    	non-compiled	[CE]  	11	None	replace
26	[BUG]  [BUGGY]  JsonWriter  out  =(JsonWriter)this.values.get(0);  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  out  =(JsonWriter)this.values.get(0);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	JsonWriter  out  =(JsonWriter)this.values.get(0);	      	non-compiled	[CE]  not  a  statement	8	None	replace
27	[BUG]  [BUGGY]  JsonWriter  out  =(JsonWriter)this.value;  [CE]  not  a  statement  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  out  =(JsonWriter)this.value;  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	JsonWriter  out  =(JsonWriter)this.value;	      	non-compiled	[CE]  not  a  statement	8	None	replace
28	[BUG]  [BUGGY]  JsonWriter  out  =(JsonWriter)null;  [CE]  not  a  statement  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  out  =(JsonWriter)null;  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	JsonWriter  out  =(JsonWriter)null;	      	non-compiled	[CE]  not  a  statement	8	None	replace
29	[BUG]  [BUGGY]  JsonWriter  out  =  getWriter();  [CE]  not  a  statement  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  out  =  getWriter();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	JsonWriter  out  =  getWriter();	      	non-compiled	[CE]  not  a  statement	8	None	replace
30	[BUG]  [BUGGY]  if(value  ==  null)  {  out.write( "null ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  out.write( "null ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value  ==  null)  {  out.write( "null ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
31	[BUG]  [BUGGY]  if(value  ==  null)  {  out.write( "null ");  }  else  {  value  =  JsonNull.createJsonNull();  }  [CE]  not  a  statement  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  out.write( "null ");  }  else  {  value  =  JsonNull.createJsonNull();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value  ==  null)  {  out.write( "null ");  }  else  {  value  =  JsonNull.createJsonNull();  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
32	[BUG]  [BUGGY]  JsonWriter  out  =(JsonWriter)values.get(0);  [CE]  not  a  statement  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  out  =(JsonWriter)values.get(0);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	JsonWriter  out  =(JsonWriter)values.get(0);	      	non-compiled	[CE]  not  a  statement	8	None	replace
33	[BUG]  [BUGGY]  reader.write(value?  null  :  value.toString());  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  reader.write(value?  null  :  value.toString());  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	reader.write(value?  null  :  value.toString());	  if(value    ==    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
34	[BUG]  [BUGGY]  aughtExceptionHandler.handleNullPointerException( " ");  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleNullPointerException( " ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	aughtExceptionHandler.handleNullPointerException( " ");	  if(value    ==    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
35	[BUG]  [BUGGY]  Parchet.checkNotNull(value);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkNotNull(value);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Parchet.checkNotNull(value);	  if(value    ==    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
36	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName();  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMissingName();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	aughtExceptionHandler.handleMissingName();	  if(value    ==    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
37	[BUG]  [BUGGY]  Parchet.checkState(value!=  null);  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(value!=  null);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Parchet.checkState(value!=  null);	  if(value    ==    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
38	[BUG]  [BUGGY]  Parchet.checkState(value  ==  null);  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(value  ==  null);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Parchet.checkState(value  ==  null);	  if(value    ==    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
39	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.write( "null ");  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.write( "null ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  out.write( "null ");	  if(value    ==    null)    {    writeDeferredName();    }    else    {    out.write(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  while(value!=  null)  {  value  =  value.next();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  value  =  value.next();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null)  {  value  =  value.next();	  if(value    ==    null)    {    writeDeferredName();    }    else    {    out.write(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
41	[BUG]  [BUGGY]  Writer.getInstance().writeName(value);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Writer.getInstance().writeName(value);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer.getInstance().writeName(value);	  if(value    ==    null)    {    writeDeferredName();    }    else    {    out.write(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
42	[BUG]  [BUGGY]  value  =  JsonNull.createJsonNull();  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  value  =  JsonNull.createJsonNull();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	value  =  JsonNull.createJsonNull();	      	non-compiled	[CE]  not  a  statement	8	None	replace
43	[BUG]  [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
44	[BUG]  [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  [CE]  not  a  statement  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
45	[BUG]  [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write( "null ");  }  [CE]  not  a  statement  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write( "null ");  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write( "null ");  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
46	[BUG]  [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write( "null ");  return  null;  }  [CE]  not  a  statement  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write( "null ");  return  null;  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write( "null ");  return  null;  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
47	[BUG]  [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write(String.valueOf(value));  }  [CE]  not  a  statement  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write(String.valueOf(value));  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value  ==  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write(String.valueOf(value));  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
48	[BUG]  [BUGGY]  JsonValue  value  =(JsonValue)value.clone();  [CE]  not  a  statement  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  JsonValue  value  =(JsonValue)value.clone();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	JsonValue  value  =(JsonValue)value.clone();	      	non-compiled	[CE]  not  a  statement	8	None	replace
49	[BUG]  [BUGGY]  Writer.this.writeDeferredName();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Writer.this.writeDeferredName();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer.this.writeDeferredName();	  if(value    ==    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
50	[BUG]  [BUGGY]  Writer.getInstance().writeDeferredName(value);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Writer.getInstance().writeDeferredName(value);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer.getInstance().writeDeferredName(value);	  if(value    ==    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
51	[BUG]  [BUGGY]  WriteDeferredName();  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  WriteDeferredName();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	WriteDeferredName();	  if(value    ==    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
52	[BUG]  [BUGGY]  if(value  ==  null)  {  writeNull();  }  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  writeNull();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value  ==  null)  {  writeNull();  }	  if(value    ==    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
53	[BUG]  [BUGGY]  while(value!=  null  &&  value.equals( " "))  {  out.write( "null ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.equals( " "))  {  out.write( "null ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.equals( " "))  {  out.write( "null ");	  if(value!=    null)    {    writeDeferredName();    }    else    {    out.write(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  while(value!=  null)  {  out.write( "null ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  out.write( "null ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null)  {  out.write( "null ");	  if(value!=    null)    {    writeDeferredName();    }    else    {    out.write(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  reader.write(value?   "false "  : "false ");  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  reader.write(value?   "false "  : "false ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	reader.write(value?   "false "  : "false ");	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	9	None	replace
56	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMissingValue();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	aughtExceptionHandler.handleMissingValue();	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	9	None	replace
57	[BUG]  [BUGGY]  reader.write(value?   "false "  : "true ");  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  reader.write(value?   "false "  : "true ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	reader.write(value?   "false "  : "true ");	  if(value)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	9	None	replace
58	[BUG]  [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "false "  : "false ");  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "false "  : "false ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "false "  : "false ");	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  not  a  statement	7	None	replace
59	[BUG]  [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>();  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>();	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  not  a  statement	7	None	replace
60	[BUG]  [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "true "  : "false ");  [CE]  not  a  statement  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "true "  : "false ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "true "  : "false ");	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  not  a  statement	7	None	replace
61	[BUG]  [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "true "  :  null);  [CE]  not  a  statement  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "true "  :  null);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "true "  :  null);	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  not  a  statement	7	None	replace
62	[BUG]  [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "false "  : "true ");  [CE]  not  a  statement  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "false "  : "true ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "false "  : "true ");	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  not  a  statement	7	None	replace
63	[BUG]  [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "null "  : "null ");  [CE]  not  a  statement  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "null "  : "null ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	NeighborValue  <  NoStatement>  out  =  new  NeighborValue  <  NoStatement>(this);  out.write(value?   "null "  : "null ");	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  not  a  statement	7	None	replace
64	[BUG]  [BUGGY]  Writer.getInstance().reportCodeChange();  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Writer.getInstance().reportCodeChange();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer.getInstance().reportCodeChange();	  if(value    ==    null)    {    writeDeferredName();    }    else    {    out.write(   "null   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
65	[BUG]  [BUGGY]  Writer.this.writeName(value);  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Writer.this.writeName(value);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer.this.writeName(value);	  if(value!=    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	4	None	replace
66	[BUG]  [BUGGY]  reader.write(value?   "null "  : "null ");  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  reader.write(value?   "null "  : "null ");  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	reader.write(value?   "null "  : "null ");	  if(value!=    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
67	[BUG]  [BUGGY]  JsonWriter  out  =  new  JsonWriter(this);  [CE]  not  a  statement  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  out  =  new  JsonWriter(this);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	JsonWriter  out  =  new  JsonWriter(this);	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  not  a  statement	7	None	replace
68	[BUG]  [BUGGY]  JsonWriter  out  =  new  JsonWriter(this);  out.write(String.valueOf(value));  [CE]  not  a  statement  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  out  =  new  JsonWriter(this);  out.write(String.valueOf(value));  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	JsonWriter  out  =  new  JsonWriter(this);  out.write(String.valueOf(value));	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  not  a  statement	7	None	replace
69	[BUG]  [BUGGY]  while(value!=  null)  {  out.write(value?   "null "  :  value);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  out.write(value?   "null "  :  value);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null)  {  out.write(value?   "null "  :  value);	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  if(value  ==  null)  {  writeDeferredNull();  }  [CE]  not  a  statement  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  writeDeferredNull();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value  ==  null)  {  writeDeferredNull();  }	  if(value    ==    null)    {    writeDeferredName();    }    else    {    JsonWriter    out    =    new    JsonWriter(this);    out.write(String.valueOf(value));    out.write(String.valueOf(value));    }    	non-compiled	[CE]  not  a  statement	7	None	replace
71	[BUG]  [BUGGY]  Writer.getInstance().writeValue(value);  [CE]  not  a  statement  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Writer.getInstance().writeValue(value);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer.getInstance().writeValue(value);	  if(value!=    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	4	None	replace
72	[BUG]  [BUGGY]  Writer.this.writeValue(value);  [CE]  not  a  statement  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Writer.this.writeValue(value);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer.this.writeValue(value);	  if(value!=    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	4	None	replace
73	[BUG]  [BUGGY]  Writer.this.write(value,  out);  [CE]  not  a  statement  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Writer.this.write(value,  out);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer.this.write(value,  out);	  if(value!=    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	4	None	replace
74	[BUG]  [BUGGY]  Writer.this.write(value);  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Writer.this.write(value);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	Writer.this.write(value);	  if(value    ==    null)    {    writeDeferredName();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
75	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  writeDeferredName();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  writeDeferredName();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.length()  >  0)  {  writeDeferredName();	  if(value!=    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
76	[BUG]  [BUGGY]  reader.write(value?   "null "  :  null);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  reader.write(value?   "null "  :  null);  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	reader.write(value?   "null "  :  null);	  if(value    ==    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  reader.write(value?   "null "  :  value.toString());  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  reader.write(value?   "null "  :  value.toString());  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	reader.write(value?   "null "  :  value.toString());	  if(value    ==    null)    {    writeDeferredName();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  writeDeferredName();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  writeDeferredName();  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  writeDeferredName();	  if(value!=    null)    {    writeDeferredName();    }    else    {    out.write(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
79	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write('n');  return  null;  }  [CE]  not  a  statement  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write('n');  return  null;  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write('n');  return  null;  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
82	[BUG]  [BUGGY]  if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write('n');  }  [CE]  not  a  statement  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write('n');  }  [BUGGY]    beforeValue();  out.write(value  ?     "true   "  :     "false   ");  return  this;  }  [CLASS]  JsonWriter  [METHOD]  value  [RETURN_TYPE]  JsonWriter  boolean  value  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	if(value!=  null)  {  value  =  JsonNull.createJsonNull();  }  else  {  out.write('n');  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
