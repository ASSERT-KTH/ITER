bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull()));  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull()));  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull()));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull());  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( " ".equals(this.beforeValue));  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ".equals(this.beforeValue));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  throw  new  NullPointerException( " ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   ");  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.   ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.   ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.   ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.   ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  beforeValue);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  beforeValue);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_OBJECT);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  break;	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  if(jsonWriter  ==  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(jsonWriter  ==  null)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter  ==  null)  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  if(jsonReader!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(jsonReader!=  null)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader!=  null)  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEmpty())  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.isEmpty())  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  while(jsonWriter!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  while(jsonWriter!=  null)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null)  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(0);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonNull(0);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(0);	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonNull(null);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(null);	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  last  =  JsonNull.createJSNull();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJSNull();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJSNull();	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonLiteral();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral();	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(1);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonNull(1);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(1);	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator);	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "n ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "n ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "n ");	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_OBJECT);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(NONEMPTY_OBJECT);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "n ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "n ");	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( ", ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( ", ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( ", ");	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  out.append( "n ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n ");	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "n ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "n ");	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append(separator);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append(separator);	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "n ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "n ");	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue);	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter();	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue);	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator);	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  nullWriter();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  nullWriter();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  nullWriter();	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  beforeValue);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  beforeValue);	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
55	[BUG]  [BUGGY]  if(value!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(value!=  null)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null)  {  break;  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.length()  ==  0)  {  break;  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  break;  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()!=  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null  ||  value.length()!=  0)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.length()!=  0)  {  break;  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <?>  value  =  beforeValue.getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N>  value  =  beforeValue.getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  K,  V>  value  =  getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  beforeValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstanceUTC();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.getInstanceUTC();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstanceUTC();	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonNullWriter.class);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonNullWriter.class);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonNullWriter.class);	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
68	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance2();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.getInstance2();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance2();	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
69	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonReader.class);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonReader.class);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonReader.class);	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonWriter.class);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonWriter.class);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonWriter.class);	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
72	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeThan  <  NullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  safely(value)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safely(value)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safely(value)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonWriter.EXPR_RESULT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonWriter.EXPR_RESULT);	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
75	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonNull.valueOf(value));  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonNull.valueOf(value));  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonNull.valueOf(value));	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.beforeValue();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.beforeValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.beforeValue();	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getValue();	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.beforeValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.beforeValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.beforeValue();	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  while(value!=  null)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  while(value!=  null)  {  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  out.append(separator);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append(separator);	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  out.append( "n ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( "n ");	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
83	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(value!=  null)  {  out.append( "null ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( "null ");	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
84	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(this);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonNull(this);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(this);	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
85	[BUG]  [BUGGY]  if(jsonReader  ==  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(jsonReader  ==  null)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader  ==  null)  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
86	[BUG]  [BUGGY]  if(separator  ==  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(separator  ==  null)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null)  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
87	[BUG]  [BUGGY]  if(out!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(out!=  null)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null)  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
88	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(jsonWriter,  out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
89	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(separator);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(separator);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(separator);	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
90	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance();	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
91	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonNull();	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
92	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out);	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
93	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out);	  if(jsonWriter!=    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
94	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));	  if(jsonWriter!=    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
95	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT);	  if(jsonWriter!=    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
96	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  null);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  null);	  if(jsonWriter!=    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
97	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
98	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH);	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
99	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
100	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
101	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
102	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
103	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
104	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
105	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( " ".equals(this.beforeValue);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ".equals(this.beforeValue);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
106	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( " "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null  ||  value.equals( " "))  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.equals( " "))  {  break;  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  if(value  ==  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null)  {  throw  new  NullPointerException( " ");  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
108	[BUG]  [BUGGY]  if(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
109	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
110	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Negative  start  of  expression: ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
111	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.   ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.   ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.   ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
112	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
113	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_OBJECT);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
114	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
115	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  break;	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
116	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_ERROR);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_ERROR);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_ERROR);	  if(jsonWriter    ==    null)    {    break;    }    else    {    replaceTop(JsonWriter.NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
117	[BUG]  [BUGGY]  out.append(separator);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  out.append(separator);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append(separator);	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
118	[BUG]  [BUGGY]  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  out.append( "null ");  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "null ");	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
119	[BUG]  [BUGGY]  if(value!=  null)  {  out.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(value!=  null)  {  out.append( ", ");  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null)  {  out.append( ", ");  }	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
120	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance());  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance());  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance());	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
121	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
122	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);	  last    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
123	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
124	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  Node>  value  =  getValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
125	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  null;  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NeighborValueWriter.this.beforeValue  =  null;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  null;	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
126	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NeighborValueWriter.this.beforeValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue();	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
127	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue();  break;  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NeighborValueWriter.this.beforeValue();  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue();  break;	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
128	[BUG]  [BUGGY]  parent.beforeValue(this);  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  parent.beforeValue(this);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.beforeValue(this);  break;	  if(value    ==    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
129	[BUG]  [BUGGY]  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
130	[BUG]  [BUGGY]  out.append( "n ");  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  out.append( "n ");  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n ");  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
131	[BUG]  [BUGGY]  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n ");  replaceTop(NONEMPTY_OBJECT);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
132	[BUG]  [BUGGY]  out.append( ", ");  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  out.append( ", ");  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ", ");  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
133	[BUG]  [BUGGY]  out.append('n');  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  out.append('n');  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append('n');  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
134	[BUG]  [BUGGY]  out.append( "n ").append(separator);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  out.append( "n ").append(separator);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n ").append(separator);  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
135	[BUG]  [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
136	[BUG]  [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
137	[BUG]  [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
138	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLong();  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonLong();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLong();	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
139	[BUG]  [BUGGY]  last  =  JsonNull.createJsonSeparator();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonSeparator();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonSeparator();	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
140	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLong(0);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonLong(0);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLong(0);	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
141	[BUG]  [BUGGY]  last  =  JsonNull.createJsonValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonValue();	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
142	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  last  =  JsonNull.createJsonString();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString();	  last    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
143	[BUG]  [BUGGY]  if(value  ==  null  ||  out.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null  ||  out.length()  ==  0)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  out.length()  ==  0)  {  break;  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
144	[BUG]  [BUGGY]  if(value  ==  NULL)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  NULL)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  NULL)  {  break;  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
145	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  <  =  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null  ||  value.length()  <  =  0)  {  break;  }  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.length()  <  =  0)  {  break;  }	  if(value    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
146	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull();	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
147	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(separator);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(separator);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(separator);	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
148	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
149	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  null;  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  null;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  null;	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
150	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull();  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonNull();  break;	  if(jsonWriter!=    null)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
151	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputValue();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputValue();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  out  =  getOutputValue();	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
152	[BUG]  [BUGGY]  parent.replaceChild(this,  out);  break;  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(this,  out);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out);  break;	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
153	[BUG]  [BUGGY]  parent.replaceChild(null,  nextValue);  break;  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(null,  nextValue);  break;  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  nextValue);  break;	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
154	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getOut();  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NeighborValue  <  N,  E>  out  =  getOut();  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  E>  out  =  getOut();	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
155	[BUG]  [BUGGY]  parent.replaceChild(null,  nextValue);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  parent.replaceChild(null,  nextValue);  [BUGGY]      case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  nextValue);	  if(value    ==    null)    {    break;    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
