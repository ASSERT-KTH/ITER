bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  1);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
2	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  true);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  true);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  true);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
3	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  false);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  false);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  false);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
4	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  first);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  first);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  first);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
5	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  0);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  0);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
6	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  next);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  next);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  next);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
7	[BUG]  [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan(NullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
8	[BUG]  [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan  ==  NullPointerException.class)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan  ==  NullPointerException.class)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan  ==  NullPointerException.class)  {  throw  new  IllegalStateException( " ");  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
9	[BUG]  [BUGGY]  safeThan(JsonNull.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeThan(JsonNull.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan(JsonNull.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
10	[BUG]  [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan  ==  null)  {  throw  new  IllegalStateException( " ");  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
11	[BUG]  [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan!=  null)  {  throw  new  IllegalStateException( " ");  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
12	[BUG]  [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan  ==  NullPointerException.class)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan  ==  NullPointerException.class)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan(NullPointerException.class)  {  break;  }  else  if(safeThan  ==  NullPointerException.class)  {  replaceTop(NONEMPTY_OBJECT);  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
13	[BUG]  [BUGGY]  out.append( ", ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  out.append( ", ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ", ");	  if(value!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
14	[BUG]  [BUGGY]  out.append( ",n ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( ",n ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ",n ");	  if(value!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
15	[BUG]  [BUGGY]  out.append( ",' ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  out.append( ",' ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ",' ");	  if(value!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
16	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  cannot  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Native  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  while(jsonReader!=  null  &&  jsonReader.getCurrentToken()!=  JsonToken.VALUE_STRING)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(jsonReader!=  null  &&  jsonReader.getCurrentToken()!=  JsonToken.VALUE_STRING)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonReader!=  null  &&  jsonReader.getCurrentToken()!=  JsonToken.VALUE_STRING)  {  break;  }	  if(jsonReader!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
20	[BUG]  [BUGGY]  while(jsonReader!=  null  &&  jsonReader.getCurrentToken()  ==  JsonToken.VALUE_STRING)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(jsonReader!=  null  &&  jsonReader.getCurrentToken()  ==  JsonToken.VALUE_STRING)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonReader!=  null  &&  jsonReader.getCurrentToken()  ==  JsonToken.VALUE_STRING)  {  break;  }	  if(jsonReader!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
21	[BUG]  [BUGGY]  while(jsonReader!=  null  &&  jsonReader.hasValue(separator))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(jsonReader!=  null  &&  jsonReader.hasValue(separator))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonReader!=  null  &&  jsonReader.hasValue(separator))  {  break;  }	  if(jsonReader!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  while(jsonReader!=  null  &&  jsonReader.getType()  ==  Token.EXPR_RESULT)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(jsonReader!=  null  &&  jsonReader.getType()  ==  Token.EXPR_RESULT)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonReader!=  null  &&  jsonReader.getType()  ==  Token.EXPR_RESULT)  {  break;  }	  if(jsonReader!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  while(jsonReader!=  null  &&  jsonReader.getTypeDesc()  ==  Token.EXPR_RESULT)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(jsonReader!=  null  &&  jsonReader.getTypeDesc()  ==  Token.EXPR_RESULT)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonReader!=  null  &&  jsonReader.getTypeDesc()  ==  Token.EXPR_RESULT)  {  break;  }	  if(jsonReader!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  while(out!=  null)  {  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(out!=  null)  {  out.append(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(out!=  null)  {  out.append(separator);	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
25	[BUG]  [BUGGY]  while(out!=  null)  {  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(out!=  null)  {  out.append( "n ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(out!=  null)  {  out.append( "n ");	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
26	[BUG]  [BUGGY]  if(separator!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator!=  null)  {  break;  }	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
27	[BUG]  [BUGGY]  if(out  ==  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(out  ==  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out  ==  null)  {  break;  }	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
28	[BUG]  [BUGGY]  while(out!=  null)  {  out.append('n');  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  while(out!=  null)  {  out.append('n');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(out!=  null)  {  out.append('n');	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
29	[BUG]  [BUGGY]  final  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_EXPR_RESULT);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_STRING);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_STRING);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  name);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  name);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  name);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_EXTENDS);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_EXTENDS);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_EXTENDS);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( "Negative  start  of  expression: ");	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalStateException( "Negative  start  of  expression: ");	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  this);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  this);	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  name);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  name);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  name);	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getClass());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getClass());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getClass());	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getValue());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getValue());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getValue());	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  if(out!=  null  ||  out.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null  ||  out.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null  ||  out.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    out.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
43	[BUG]  [BUGGY]  if(out  ==  null  ||  out.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(out  ==  null  ||  out.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out  ==  null  ||  out.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    out.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
44	[BUG]  [BUGGY]  if(out!=  null  ||  value.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null  ||  value.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null  ||  value.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    out.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
45	[BUG]  [BUGGY]  if(out  ==  null  ||  value.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(out  ==  null  ||  value.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out  ==  null  ||  value.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    out.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
46	[BUG]  [BUGGY]  because(out!=  null  ||  out.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  because(out!=  null  ||  out.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	because(out!=  null  ||  out.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    out.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
47	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression.   ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression.   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalStateException( "Negative  start  of  expression.   ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Example: ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Example: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Example: ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Could  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Could  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Could  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Example: "  +  this);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Example: "  +  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Example: "  +  this);	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  this.beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  this.beforeValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  this.beforeValue.getValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
52	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  nextValue.getValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  nextValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  nextValue.getValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
53	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  firstValue.getValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  firstValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  firstValue.getValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
54	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  this.afterValue.getValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  this.afterValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  this.afterValue.getValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
55	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.toString();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.toString();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.toString();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
56	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.getKey();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.getKey();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.getKey();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
57	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
58	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  String.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  String.valueOf(separator));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  String.valueOf(separator));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
59	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
60	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
61	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Locale.getDefault());  [CE]  illegal  start  of  expression  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Locale.getDefault());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Locale.getDefault());	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
62	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(str.charAt(0));  [CE]  illegal  start  of  expression  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(str.charAt(0));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(str.charAt(0));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
63	[BUG]  [BUGGY]  parent.replaceChild(next,  nextValue);  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  nextValue);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  nextValue);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
64	[BUG]  [BUGGY]  parent.replaceChild(null,  beforeValue);  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  beforeValue);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  beforeValue);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
65	[BUG]  [BUGGY]  parent.replaceChild(next,  next);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  next);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  next);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
66	[BUG]  [BUGGY]  reader.replaceChild(next,  nextValue);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  reader.replaceChild(next,  nextValue);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader.replaceChild(next,  nextValue);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
67	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.TYPE_OBJECT);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
68	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(null);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    getJsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
69	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(true);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(true);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(true);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    getJsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
70	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(separator);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    getJsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
71	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(this);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(this);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    getJsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
72	[BUG]  [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter();	  NeighborWriter    <    JsonWriter>    jsonWriter    =    getJsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
73	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(0);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(0);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    getJsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
74	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNumber();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNumber();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNumber();	  last    =    JsonNull.createJsonLong();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
75	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLong(1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLong(1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLong(1);	  last    =    JsonNull.createJsonLong();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
76	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNumber(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNumber(JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNumber(JsonNull.createJsonNull());	  last    =    JsonNull.createJsonLong();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
77	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNumber(JsonNull.createJsonLong(0));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNumber(JsonNull.createJsonLong(0));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNumber(JsonNull.createJsonLong(0));	  last    =    JsonNull.createJsonLong();    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
78	[BUG]  [BUGGY]  out.append('n');  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  out.append('n');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append('n');	  out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
79	[BUG]  [BUGGY]  out.setLength(0);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  out.setLength(0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.setLength(0);	  out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
80	[BUG]  [BUGGY]  out.append( ": ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  out.append( ": ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ": ");	  out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
81	[BUG]  [BUGGY]  out.append( "' ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( "' ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "' ");	  out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
82	[BUG]  [BUGGY]  out.append( "  - ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  out.append( "  - ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "  - ");	  out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
83	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "' ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "' ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "' ");	  while(value!=    null    &&    value.length    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
84	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "null ");	  while(value!=    null    &&    value.length    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
85	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( ", ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( ", ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( ", ");	  while(value!=    null    &&    value.length    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
86	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "- ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "- ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "- ");	  while(value!=    null    &&    value.length    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
87	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "no  expression ");  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "no  expression ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "no  expression ");	  while(value!=    null    &&    value.length    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
88	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "msg.no.body ");  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "msg.no.body ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "msg.no.body ");	  while(value!=    null    &&    value.length    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
89	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
90	[BUG]  [BUGGY]  while(value!=  null  ||  value.length()  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  ||  value.length()  >  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  ||  value.length()  >  0)  {  break;  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
91	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  <  =  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  <  =  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  <  =  0)  {  break;  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
92	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  ==  0)  {  break;  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
93	[BUG]  [BUGGY]  while(value  ==  null  &&  value.length()  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value  ==  null  &&  value.length()  >  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value  ==  null  &&  value.length()  >  0)  {  break;  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
94	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >=  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >=  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >=  0)  {  break;  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
95	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "' ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "' ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "' ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
96	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "null ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
97	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "# ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "# ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "# ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
98	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "None ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "None ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "None ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
99	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getEndValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getEndValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  out  =  getEndValue();	  NeighborValue    <    N,    V>    out    =    getOutputValue();    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
100	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getErrorValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getErrorValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  out  =  getErrorValue();	  NeighborValue    <    N,    V>    out    =    getOutputValue();    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
101	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getStartValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getStartValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  out  =  getStartValue();	  NeighborValue    <    N,    V>    out    =    getOutputValue();    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
102	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getCurrentValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getCurrentValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  out  =  getCurrentValue();	  NeighborValue    <    N,    V>    out    =    getOutputValue();    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
103	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getInputValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getInputValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  out  =  getInputValue();	  NeighborValue    <    N,    V>    out    =    getOutputValue();    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
104	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutput();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutput();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  out  =  getOutput();	  NeighborValue    <    N,    V>    out    =    getOutputValue();    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
105	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( ",n ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( ",n ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( ",n ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
106	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(',');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(',');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(',');	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
107	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( ",');  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( ",');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( ",');	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
108	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  end);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  end);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  end);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
109	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  1);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
110	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  start);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  start);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  start);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
111	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  null);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
112	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  -1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  -1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  -1);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
113	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  str);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  str);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
114	[BUG]  [BUGGY]  if(jsonWriter!=  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
115	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
116	[BUG]  [BUGGY]  if(jsonWriter  ==  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter  ==  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter  ==  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
117	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
118	[BUG]  [BUGGY]  if(jsonWriter  ==  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter  ==  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter  ==  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
119	[BUG]  [BUGGY]  if(jsonWriter!=  null  &&!jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null  &&!jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  &&!jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
120	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(this,  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(this,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(this,  out);	  last    =    JsonNull.createJsonNull(this);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
121	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(getValue());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(getValue());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(getValue());	  last    =    JsonNull.createJsonNull(this);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
122	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(this,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(this,  beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(this,  beforeValue);	  last    =    JsonNull.createJsonNull(this);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
123	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(this,  column);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(this,  column);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(this,  column);	  last    =    JsonNull.createJsonNull(this);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
124	[BUG]  [BUGGY]  JsonWriter  out  =  JsonWriter.parseJsonWriter(out);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  out  =  JsonWriter.parseJsonWriter(out);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  out  =  JsonWriter.parseJsonWriter(out);  break;	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
125	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out);  break;	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
126	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  str);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  str);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  str);  break;	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
127	[BUG]  [BUGGY]  if(out!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out);  break;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
128	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  out);  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  out);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  out);  break;	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
129	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  this);  break;  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  this);  break;	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
130	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  null);  break;  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  null);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  null);  break;	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
131	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
132	[BUG]  [BUGGY]  if(out.length()  ==  0)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(out.length()  ==  0)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out.length()  ==  0)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
133	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
134	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
135	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
136	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
137	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  this.beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <?>  value  =  this.beforeValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  this.beforeValue.getValue();	  NeighborValue    <?>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
138	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  nextValue.getValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <?>  value  =  nextValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  nextValue.getValue();	  NeighborValue    <?>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
139	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  NONEMPTY_OBJECT.getValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <?>  value  =  NONEMPTY_OBJECT.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  NONEMPTY_OBJECT.getValue();	  NeighborValue    <?>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
140	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  this.afterValue.getValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <?>  value  =  this.afterValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  this.afterValue.getValue();	  NeighborValue    <?>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
141	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <?>  value  =  JsonNull.createJsonNull();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  JsonNull.createJsonNull();	  NeighborValue    <?>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
142	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  NONEMPTY_NAME.getValue();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <?>  value  =  NONEMPTY_NAME.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  NONEMPTY_NAME.getValue();	  NeighborValue    <?>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
143	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  this.beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N>  value  =  this.beforeValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N>  value  =  this.beforeValue.getValue();	  NeighborValue    <    N>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
144	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  nextValue.getValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N>  value  =  nextValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N>  value  =  nextValue.getValue();	  NeighborValue    <    N>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
145	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  this.afterValue.getValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N>  value  =  this.afterValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N>  value  =  this.afterValue.getValue();	  NeighborValue    <    N>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
146	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  beforeValue.toString();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N>  value  =  beforeValue.toString();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N>  value  =  beforeValue.toString();	  NeighborValue    <    N>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
147	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  firstValue.getValue();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N>  value  =  firstValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N>  value  =  firstValue.getValue();	  NeighborValue    <    N>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
148	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  first.getValue();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N>  value  =  first.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N>  value  =  first.getValue();	  NeighborValue    <    N>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
149	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLong(JsonNull.createJsonLong(0));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLong(JsonNull.createJsonLong(0));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLong(JsonNull.createJsonLong(0));	  last    =    JsonNull.createJsonLong(0);    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
150	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLong(JsonNull.createJsonLong(1));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLong(JsonNull.createJsonLong(1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLong(JsonNull.createJsonLong(1));	  last    =    JsonNull.createJsonLong(0);    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
151	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNumber(0);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNumber(0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNumber(0);	  last    =    JsonNull.createJsonLong(0);    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
152	[BUG]  [BUGGY]  last  =  JsonNullWriter.getInstance(JsonNullWriter.class);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNullWriter.getInstance(JsonNullWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNullWriter.getInstance(JsonNullWriter.class);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
153	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonValueWriter.class);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonValueWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonValueWriter.class);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
154	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonNullWriter.class,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonNullWriter.class,  DANGLING_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonNullWriter.class,  DANGLING_NAME);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
155	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonNullWriter.class,  JsonNullWriter.class);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonNullWriter.class,  JsonNullWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonNullWriter.class,  JsonNullWriter.class);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
156	[BUG]  [BUGGY]  last  =  JsonNullWriter.getInstance();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNullWriter.getInstance();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNullWriter.getInstance();	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
157	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLiteralWriter.class);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLiteralWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLiteralWriter.class);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
158	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(this);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(this);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
159	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(null);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
160	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(null,  separator);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(null,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(null,  separator);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
161	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(this,  separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(this,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(this,  separator);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
162	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  separator);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  separator);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
163	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  this.beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  this.beforeValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  this.beforeValue.getValue();	  NeighborValue    <    Node>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
164	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  nextValue.getValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  nextValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  nextValue.getValue();	  NeighborValue    <    Node>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
165	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  this.afterValue.getValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  this.afterValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  this.afterValue.getValue();	  NeighborValue    <    Node>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
166	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  firstValue.getValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  firstValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  firstValue.getValue();	  NeighborValue    <    Node>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
167	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.createJsonNull();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonNull.createJsonNull();	  NeighborValue    <    Node>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
168	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  NONEMPTY_OBJECT.getValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  NONEMPTY_OBJECT.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  NONEMPTY_OBJECT.getValue();	  NeighborValue    <    Node>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
169	[BUG]  [BUGGY]  read()  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  read()  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	read()  {  throw  new  IllegalArgumentException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
170	[BUG]  [BUGGY]  read()  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  read()  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	read()  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
171	[BUG]  [BUGGY]  bucket(1)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  bucket(1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	bucket(1)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
172	[BUG]  [BUGGY]  bucket(1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  bucket(1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	bucket(1)  {  throw  new  IllegalArgumentException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
173	[BUG]  [BUGGY]  Parchet.checkState(!start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(!start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Parchet.checkState(!start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
174	[BUG]  [BUGGY]  Parchet.checkState(this.start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(this.start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Parchet.checkState(this.start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
175	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  [Delete]  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	[Delete]	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
176	[BUG]  [BUGGY]  final  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  final  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
177	[BUG]  [BUGGY]  nullWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  nullWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	nullWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
178	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createParser();  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createParser();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createParser();  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
179	[BUG]  [BUGGY]  NonNullWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NonNullWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NonNullWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
180	[BUG]  [BUGGY]  NullWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NullWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NullWriter  jsonWriter  =  JsonNullWriter.createJsonNull();  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
181	[BUG]  [BUGGY]  while(jsonWriter  ==  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter  ==  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter  ==  null  &&  jsonWriter.hasValue(separator))  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.hasValue(separator))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
182	[BUG]  [BUGGY]  while(separator!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(separator!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.hasValue(separator))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
183	[BUG]  [BUGGY]  While(jsonWriter!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  While(jsonWriter!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	While(jsonWriter!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.hasValue(separator))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
184	[BUG]  [BUGGY]  while(jsonReader!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(jsonReader!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonReader!=  null  &&  jsonWriter.hasValue(separator))  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.hasValue(separator))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
185	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&!jsonWriter.hasValue(separator))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&!jsonWriter.hasValue(separator))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&!jsonWriter.hasValue(separator))  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.hasValue(separator))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
186	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  1);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
187	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  -1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  -1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  -1);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
188	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  null);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  null);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
189	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  this);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  this);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
190	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC  +  1);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC  +  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC  +  1);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
191	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  str);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC,  str);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
192	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
193	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
194	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
195	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( "' ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append( "' ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( "' ");  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
196	[BUG]  [BUGGY]  while(separator!=  null)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(separator!=  null)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
197	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
198	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ").equals(this.beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ").equals(this.beforeValue);	  throw    new    IllegalStateException(   "   ".equals(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
199	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " "  +  this.beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " "  +  this.beforeValue);	  throw    new    IllegalStateException(   "   ".equals(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
200	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   ".equals(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   ".equals(this.beforeValue));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.   ".equals(this.beforeValue));	  throw    new    IllegalStateException(   "   ".equals(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
201	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ").equals(this.beforeValue));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ").equals(this.beforeValue));	  throw    new    IllegalStateException(   "   ".equals(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
202	[BUG]  [BUGGY]  while(out!=  null)  {  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(out!=  null)  {  out.append( "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(out!=  null)  {  out.append( "null ");	  while(value!=    null)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
203	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( "' ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append( "' ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( "' ");	  while(value!=    null)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
204	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( ", ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append( ", ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( ", ");	  while(value!=    null)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
205	[BUG]  [BUGGY]  last  =  JsonNull.createJsonValue(null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonValue(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonValue(null);	  last    =    JsonNull.createJsonValue();    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
206	[BUG]  [BUGGY]  last  =  JsonNull.createJsonValue(separator);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonValue(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonValue(separator);	  last    =    JsonNull.createJsonValue();    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
207	[BUG]  [BUGGY]  last  =  JsonNull.createJsonValue(this);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonValue(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonValue(this);	  last    =    JsonNull.createJsonValue();    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
208	[BUG]  [BUGGY]  last  =  JsonNull.createJSValue();  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJSValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJSValue();	  last    =    JsonNull.createJsonValue();    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
209	[BUG]  [BUGGY]  last  =  JsonNull.createJsonValue(null,  null);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonValue(null,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonValue(null,  null);	  last    =    JsonNull.createJsonValue();    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
210	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null  ||  value.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    value.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
211	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  ==  0)  {  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  ==  0)  {  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  ==  0)  {  break;	  if(value    ==    null    ||    value.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
212	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  ==  0)  {  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  ==  0)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
213	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter();	  NeighborWriter    jsonWriter    =    null;    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
214	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this);	  NeighborWriter    jsonWriter    =    null;    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
215	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonEncoder.getInstance());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonEncoder.getInstance());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonEncoder.getInstance());	  NeighborWriter    jsonWriter    =    null;    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
216	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonNull.createJsonNull());	  NeighborWriter    jsonWriter    =    null;    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
217	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(null);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(null);	  NeighborWriter    jsonWriter    =    null;    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
218	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_OBJECT,  JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_OBJECT,  JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_OBJECT,  JsonWriter.DEFAULT_TITLE_FONT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
219	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_NAME,  JsonWriter.DEFAULT_TITLE_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_NAME,  JsonWriter.DEFAULT_TITLE_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_NAME,  JsonWriter.DEFAULT_TITLE_OBJECT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
220	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_QUOTE,  JsonWriter.DEFAULT_TITLE_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_QUOTE,  JsonWriter.DEFAULT_TITLE_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_QUOTE,  JsonWriter.DEFAULT_TITLE_OBJECT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
221	[BUG]  [BUGGY]  reader.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  reader.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_OBJECT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
222	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
223	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  out);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  out);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  out);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
224	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  beforeValue);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  beforeValue);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  beforeValue);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
225	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  before);  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  before);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  before);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
226	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  column);  break;  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  column);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  column);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
227	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createParser(this);  break;  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createParser(this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createParser(this);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
228	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  before);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  before);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  before);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
229	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  DANGLING_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  DANGLING_NAME);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
230	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  1);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  1);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
231	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  this);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  this);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
232	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  NONEMPTY_OBJECT);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
233	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  replaceTop(NONEMPTY_OBJECT);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
234	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
235	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
236	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  separator);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  separator);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
237	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
238	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createParser(separator);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createParser(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createParser(separator);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
239	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  segment);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  segment);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  segment);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
240	[BUG]  [BUGGY]  parent.replaceChild(next,  nextValue);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  nextValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  nextValue);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
241	[BUG]  [BUGGY]  parent.replaceChild(null,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  beforeValue);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
242	[BUG]  [BUGGY]  parent.replaceChild(next,  next);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  next);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  next);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
243	[BUG]  [BUGGY]  parent.replaceChild(null,  next);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  next);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  next);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
244	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.EMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.EMPTY_STRING);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.EMPTY_STRING);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
245	[BUG]  [BUGGY]  parent.replaceChild(this,  nextValue);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  nextValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  nextValue);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
246	[BUG]  [BUGGY]  out.append( "[null] ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  out.append( "[null] ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "[null] ");	  out.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
247	[BUG]  [BUGGY]  out.append( "Null ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  out.append( "Null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "Null ");	  out.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
248	[BUG]  [BUGGY]  out.append( "] ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( "] ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "] ");	  out.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
249	[BUG]  [BUGGY]  out.append( "null ",  null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  out.append( "null ",  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "null ",  null);	  out.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
250	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
251	[BUG]  [BUGGY]  replaceStart(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceStart(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
252	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceValue(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
253	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(JsonWriter.NONEMPTY_NAME);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
254	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceNext(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
255	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(JsonWriter.NONEMPTY_STRING);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
256	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  this);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  this);	  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,    null);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
257	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  JsonNull.createJsonNull());	  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,    null);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
258	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  null);	  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,    null);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
259	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  JsonWriter.EMPTY_STRING_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  JsonWriter.EMPTY_STRING_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  JsonWriter.EMPTY_STRING_OBJECT);	  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,    null);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
260	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  JsonWriter.START_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  JsonWriter.START_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  JsonWriter.START_OBJECT);	  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,    null);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
261	[BUG]  [BUGGY]  out.append(Separator.charAt(value.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  out.append(Separator.charAt(value.length()  -  1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append(Separator.charAt(value.length()  -  1));	  while(value!=    null    &&    value.length()    >    0)    {    out.append(Separator.charAt(value.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
262	[BUG]  [BUGGY]  while(separator!=  null  &&  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(separator!=  null  &&  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));	  while(value!=    null    &&    value.length()    >    0)    {    out.append(Separator.charAt(value.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
263	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator.charAt(value.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator.charAt(value.length()  -  1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator.charAt(value.length()  -  1));	  while(value!=    null    &&    value.length()    >    0)    {    out.append(Separator.charAt(value.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
264	[BUG]  [BUGGY]  while(value  ==  null  &&  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value  ==  null  &&  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value  ==  null  &&  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));	  while(value!=    null    &&    value.length()    >    0)    {    out.append(Separator.charAt(value.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
265	[BUG]  [BUGGY]  while(value!=  null  ||  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  ||  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  ||  value.length()  >  0)  {  out.append(Separator.charAt(value.length()  -  1));	  while(value!=    null    &&    value.length()    >    0)    {    out.append(Separator.charAt(value.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
266	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  1)  {  out.append(Separator.charAt(value.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  1)  {  out.append(Separator.charAt(value.length()  -  1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  1)  {  out.append(Separator.charAt(value.length()  -  1));	  while(value!=    null    &&    value.length()    >    0)    {    out.append(Separator.charAt(value.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
267	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  <  =  0)  {  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  <  =  0)  {  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  <  =  0)  {  break;	  if(value    ==    null    ||    value.length()    <    =    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
268	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
269	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
270	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
271	[BUG]  [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
272	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('_'));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('_'));  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('_'));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
273	[BUG]  [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
274	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  before);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  before);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  before);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
275	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  DANGLING_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  DANGLING_NAME);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
276	[BUG]  [BUGGY]  JsonWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  before);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  before);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  before);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
277	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  this);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  this);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
278	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  1);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue,  1);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
279	[BUG]  [BUGGY]  NeighborWriter  out  =  JsonNullWriter.createJsonNullWriter(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  out  =  JsonNullWriter.createJsonNullWriter(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  out  =  JsonNullWriter.createJsonNullWriter(separator);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
280	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  NONEMPTY_OBJECT);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
281	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  str);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  str);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
282	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(null,  out);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(null,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(null,  out);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
283	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  this);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  this);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
284	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  out.length);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  out.length);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  out.length);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
285	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonValue.class);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonValue.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonValue.class);	  last    =    JsonStringEncoder.getInstance(JsonWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
286	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonTextWriter.class);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonTextWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonTextWriter.class);	  last    =    JsonStringEncoder.getInstance(JsonWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
287	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.class);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.class);	  last    =    JsonStringEncoder.getInstance(JsonWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
288	[BUG]  [BUGGY]  last  =  JsonNull.createJsonSeparator(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonSeparator(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonSeparator(separator);	  last    =    JsonNull.createJsonSeparator();    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
289	[BUG]  [BUGGY]  last  =  JsonNull.createParser(JsonNull.createJsonSeparator());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createParser(JsonNull.createJsonSeparator());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createParser(JsonNull.createJsonSeparator());	  last    =    JsonNull.createJsonSeparator();    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
290	[BUG]  [BUGGY]  last  =  JsonNull.createJsonSeparator(null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonSeparator(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonSeparator(null);	  last    =    JsonNull.createJsonSeparator();    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
291	[BUG]  [BUGGY]  last  =  JsonNull.createJsonSeparator(this);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonSeparator(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonSeparator(this);	  last    =    JsonNull.createJsonSeparator();    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
292	[BUG]  [BUGGY]  last  =  JsonNull.createJsonValueSeparator();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonValueSeparator();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonValueSeparator();	  last    =    JsonNull.createJsonSeparator();    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
293	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  this.beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  this.beforeValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  this.beforeValue.getValue();	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
294	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  nextValue.getValue();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  nextValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  nextValue.getValue();	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
295	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  firstValue.getValue();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  firstValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  firstValue.getValue();	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
296	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.toString();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.toString();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  beforeValue.toString();	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
297	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getKey();  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getKey();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  beforeValue.getKey();	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
298	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getValue(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getValue(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  beforeValue.getValue(JsonWriter.EXPR_RESULT);	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
299	[BUG]  [BUGGY]  while(value  ==  null)  {  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value  ==  null)  {  out.append( "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value  ==  null)  {  out.append( "null ");	  while(value!=    null)    {    out.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
300	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(value);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(value);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonNull.valueOf(value);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
301	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonNull.valueOf(separator);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
302	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(this.beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonNull.valueOf(this.beforeValue);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
303	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(beforeValue);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonNull.valueOf(beforeValue);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
304	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(null);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonNull.valueOf(null);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
305	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(value));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(value));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonNull.valueOf(value));	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
306	[BUG]  [BUGGY]  reader.beforeValue(this);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  reader.beforeValue(this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader.beforeValue(this);  break;	  parent.beforeValue(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
307	[BUG]  [BUGGY]  parent.setValue(this);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.setValue(this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.setValue(this);  break;	  parent.beforeValue(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
308	[BUG]  [BUGGY]  parent.startValue(this);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.startValue(this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.startValue(this);  break;	  parent.beforeValue(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
309	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  0));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  0));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  0));	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
310	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT);	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
311	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT));	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
312	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()!=  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null  ||  value.length()!=  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null  ||  value.length()!=  0)  {  break;  }	  if(value    ==    null    ||    value.length()!=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
313	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()!=  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()!=  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()!=  0)  {  break;  }	  if(value    ==    null    ||    value.length()!=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
314	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()!=  0)  {  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()!=  0)  {  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()!=  0)  {  break;	  if(value    ==    null    ||    value.length()!=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
315	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    break;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
316	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  String.valueOf(separator));  break;  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  String.valueOf(separator));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  String.valueOf(separator));  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    break;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
317	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  break;  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    break;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
318	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  break;  [CE]  illegal  start  of  expression  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    break;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
319	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  break;  [CE]  illegal  start  of  expression  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    break;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
320	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(str.charAt(0));  break;  [CE]  illegal  start  of  expression  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(str.charAt(0));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(str.charAt(0));  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    break;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
321	[BUG]  [BUGGY]  final  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
322	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonNull.createJsonNull());  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonNull.createJsonNull());  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonNull.createJsonNull());  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
323	[BUG]  [BUGGY]  nullWriter  jsonWriter  =  JsonNull.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  nullWriter  jsonWriter  =  JsonNull.createJsonNull();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	nullWriter  jsonWriter  =  JsonNull.createJsonNull();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
324	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonNull.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonNull.createJsonNull();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonNull.createJsonNull();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
325	[BUG]  [BUGGY]  if(jsonWriter!=  null  ||  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null  ||  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  ||  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
326	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
327	[BUG]  [BUGGY]  if(jsonWriter  ==  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter  ==  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter  ==  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
328	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
329	[BUG]  [BUGGY]  if(jsonWriter  ==  null  ||  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter  ==  null  ||  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter  ==  null  ||  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
330	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(out);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
331	[BUG]  [BUGGY]  if(out!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(out);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
332	[BUG]  [BUGGY]  if(out.length()  ==  0)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(out.length()  ==  0)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out.length()  ==  0)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(out);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
333	[BUG]  [BUGGY]  if(out.length()  >  0)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(out.length()  >  0)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out.length()  >  0)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(out);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
334	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(out);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
335	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(out);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
336	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  str);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  str);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  str);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(out);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
337	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  this.beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  this.beforeValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  this.beforeValue.getValue();	  NeighborValue    <    K,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
338	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  nextValue.getValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  nextValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  nextValue.getValue();	  NeighborValue    <    K,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
339	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  firstValue.getValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  firstValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  firstValue.getValue();	  NeighborValue    <    K,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
340	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.toString();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.toString();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  beforeValue.toString();	  NeighborValue    <    K,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
341	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.getKey();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.getKey();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  beforeValue.getKey();	  NeighborValue    <    K,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
342	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  this.afterValue.getValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  this.afterValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  this.afterValue.getValue();	  NeighborValue    <    K,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
343	[BUG]  [BUGGY]  new  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
344	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
345	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Native  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalArgumentException( "Native  start  of  expression  cannot  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Native  start  of  expression  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
346	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  separator);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  separator);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
347	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this.beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this.beforeValue);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
348	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(out,  separator);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(out,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(out,  separator);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
349	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(null,  separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(null,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(null,  separator);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
350	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('n');  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('n');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append('n');	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
351	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('_');  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('_');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append('_');	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
352	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('-');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('-');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append('-');	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
353	[BUG]  [BUGGY]  while(this.jsonWriter!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(this.jsonWriter!=  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(this.jsonWriter!=  null)  {  break;  }	  while(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
354	[BUG]  [BUGGY]  while(separator!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(separator!=  null)  {  break;  }	  while(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
355	[BUG]  [BUGGY]  while(out!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  while(out!=  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(out!=  null)  {  break;  }	  while(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
356	[BUG]  [BUGGY]  while(null!=  jsonWriter)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  while(null!=  jsonWriter)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(null!=  jsonWriter)  {  break;  }	  while(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
357	[BUG]  [BUGGY]  while(jsonWriter  ==  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter  ==  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter  ==  null)  {  break;  }	  while(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
358	[BUG]  [BUGGY]  while(jsonReader!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  while(jsonReader!=  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonReader!=  null)  {  break;  }	  while(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
359	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getLastChild();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getLastChild();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getLastChild();	  last    =    JsonStringEncoder.getInstanceUTC();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
360	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstanceUTC()  +  1;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstanceUTC()  +  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstanceUTC()  +  1;	  last    =    JsonStringEncoder.getInstanceUTC();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
361	[BUG]  [BUGGY]  while(value!=  null  &&  value.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.isEmpty())  {  break;  }	  if(value!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
362	[BUG]  [BUGGY]  while(jsonWriter  ==  null  &&  jsonWriter.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter  ==  null  &&  jsonWriter.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter  ==  null  &&  jsonWriter.isEmpty())  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.isEmpty())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
363	[BUG]  [BUGGY]  While(jsonWriter!=  null  &&  jsonWriter.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  While(jsonWriter!=  null  &&  jsonWriter.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	While(jsonWriter!=  null  &&  jsonWriter.isEmpty())  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.isEmpty())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
364	[BUG]  [BUGGY]  while(jsonReader!=  null  &&  jsonWriter.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(jsonReader!=  null  &&  jsonWriter.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonReader!=  null  &&  jsonWriter.isEmpty())  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.isEmpty())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
365	[BUG]  [BUGGY]  while(jsonWriter!=  null  ||  jsonWriter.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  ||  jsonWriter.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  ||  jsonWriter.isEmpty())  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.isEmpty())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
366	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isNull())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isNull())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.isNull())  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.isEmpty())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
367	[BUG]  [BUGGY]  reader  =  JsonReader.createRootValue(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  reader  =  JsonReader.createRootValue(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader  =  JsonReader.createRootValue(separator);	  if(jsonReader    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
368	[BUG]  [BUGGY]  out.append( "null ");  replaceTop(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( "null ");  replaceTop(NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "null ");  replaceTop(NONEMPTY_OBJECT);  break;	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
369	[BUG]  [BUGGY]  out.append( "none ");  replaceTop(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  out.append( "none ");  replaceTop(NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "none ");  replaceTop(NONEMPTY_OBJECT);  break;	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
370	[BUG]  [BUGGY]  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  break;	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
371	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getNumberValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getNumberValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getNumberValue();	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
372	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getEmptyValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getEmptyValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getEmptyValue();	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
373	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getNullValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getNullValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getNullValue();	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
374	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getEndValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getEndValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getEndValue();	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
375	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue().getValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue().getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getValue().getValue();	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
376	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue(JsonNull.class);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue(JsonNull.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getValue(JsonNull.class);	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
377	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLiteral.class);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLiteral.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLiteral.class);	  last    =    JsonStringEncoder.getInstance(JsonReader.class);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
378	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonReader.class,  SHORT_DESCRIPTOR);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonReader.class,  SHORT_DESCRIPTOR);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonReader.class,  SHORT_DESCRIPTOR);	  last    =    JsonStringEncoder.getInstance(JsonReader.class);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
379	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getNumberValue();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getNumberValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getNumberValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
380	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getNullValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getNullValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getNullValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
381	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getRawValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getRawValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getRawValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
382	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getAssignedValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getAssignedValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getAssignedValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
383	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue().getValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue().getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getValue().getValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
384	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue(JsonNull.class);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue(JsonNull.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getValue(JsonNull.class);	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
385	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  break;	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
386	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  break;	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
387	[BUG]  [BUGGY]  reader.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  reader.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  break;	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
388	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
389	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  before);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  before);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  before);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
390	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT));	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
391	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT),  beforeValue);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT),  beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT),  beforeValue);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
392	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  first);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  first);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  first);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
393	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  beforeName);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  beforeName);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  beforeName);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
394	[BUG]  [BUGGY]  out.append( "null ").append(separator);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  out.append( "null ").append(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "null ").append(separator);  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
395	[BUG]  [BUGGY]  out.append( "none ").append(separator);  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  out.append( "none ").append(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "none ").append(separator);  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
396	[BUG]  [BUGGY]  out.append( ": ").append(separator);  break;  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  out.append( ": ").append(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ": ").append(separator);  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
397	[BUG]  [BUGGY]  out.append( "n ").append(getValue());  break;  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( "n ").append(getValue());  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n ").append(getValue());  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
398	[BUG]  [BUGGY]  out.append( "n ").append(separator);  [CE]  illegal  start  of  expression  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  out.append( "n ").append(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n ").append(separator);	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
399	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString(JsonNull.createJsonNull());	  last    =    JsonNull.createJsonString();    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
400	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.getValueTypeDesc());  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.getValueTypeDesc());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString(JsonNull.getValueTypeDesc());	  last    =    JsonNull.createJsonString();    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
401	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString(0);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonString(0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString(0);	  last    =    JsonNull.createJsonString();    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
402	[BUG]  [BUGGY]  throw  new  IllegalStateException( "JsonNull  value: "  +  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "JsonNull  value: "  +  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "JsonNull  value: "  +  JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
403	[BUG]  [BUGGY]  throw  new  IllegalStateException( "JsonNull  is  null. ".equals(JsonNull.createJsonNull()));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "JsonNull  is  null. ".equals(JsonNull.createJsonNull()));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "JsonNull  is  null. ".equals(JsonNull.createJsonNull()));	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
404	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull()),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull()),  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull()),  JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
405	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull(),  JsonNull.createJsonNull()));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull(),  JsonNull.createJsonNull()));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull(),  JsonNull.createJsonNull()));	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
406	[BUG]  [BUGGY]  throw  new  IllegalStateException( "JsonNull  is  null. "  +  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "JsonNull  is  null. "  +  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "JsonNull  is  null. "  +  JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
407	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  break;	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
408	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  break;	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
409	[BUG]  [BUGGY]  reader.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  reader.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  break;	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
410	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME),  replaceTop(NONEMPTY_NAME);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME),  replaceTop(NONEMPTY_NAME);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME),  replaceTop(NONEMPTY_NAME);  break;	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
411	[BUG]  [BUGGY]  parser.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parser.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parser.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  break;	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
412	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(separator);	  last    =    JsonNull.createJsonNull(null);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
413	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(null,  null);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(null,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(null,  null);	  last    =    JsonNull.createJsonNull(null);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
414	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(null,  1);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(null,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(null,  1);	  last    =    JsonNull.createJsonNull(null);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
415	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(jsonNull);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(jsonNull);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(jsonNull);	  last    =    JsonNull.createJsonNull(null);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
416	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter();	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
417	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createParser();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createParser();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createParser();	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
418	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createParser(JsonNullWriter.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createParser(JsonNullWriter.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createParser(JsonNullWriter.createJsonNull());	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
419	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
420	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
421	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  must  be  initialized. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Native  start  of  expression  must  be  initialized. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
422	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized.n ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized.n ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized.n ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
423	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(2);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(2);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(2);	  last    =    JsonNull.createJsonNull(1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
424	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(3);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(3);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(3);	  last    =    JsonNull.createJsonNull(1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
425	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(-1);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(-1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(-1);	  last    =    JsonNull.createJsonNull(1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
426	[BUG]  [BUGGY]  throw  new  NullPointerException( " ".equals(getMessage()));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( " ".equals(getMessage()));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( " ".equals(getMessage()));	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
427	[BUG]  [BUGGY]  throw  new  NullPointerException( " ".equals(StringUtils.stringValue(value)));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( " ".equals(StringUtils.stringValue(value)));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( " ".equals(StringUtils.stringValue(value)));	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
428	[BUG]  [BUGGY]  throw  new  NullPointerException( " ".equals(this.beforeValue)?  null  : "null ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( " ".equals(this.beforeValue)?  null  : "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( " ".equals(this.beforeValue)?  null  : "null ");	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
429	[BUG]  [BUGGY]  throw  new  NullPointerException( " ".equals(StringUtils.stringValue(this.value)));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( " ".equals(StringUtils.stringValue(this.value)));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( " ".equals(StringUtils.stringValue(this.value)));	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
430	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createParser(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createParser(JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createParser(JsonNull.createJsonNull());	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
431	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull(null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonNull(null);	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
432	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull(0);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull(0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonNull(0);	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
433	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull(this);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNull(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonNull(this);	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
434	[BUG]  [BUGGY]  out.append( "null ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  out.append( "null ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "null ");  replaceTop(NONEMPTY_OBJECT);	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
435	[BUG]  [BUGGY]  out.append( "none ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  out.append( "none ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "none ");  replaceTop(NONEMPTY_OBJECT);	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
436	[BUG]  [BUGGY]  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ", ");  replaceTop(NONEMPTY_OBJECT);	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
437	[BUG]  [BUGGY]  safeReplacement(out,  JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(out,  JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(out,  JsonWriter.NONEMPTY_OBJECT);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT,    out);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
438	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT));	  safeReplacement(JsonWriter.NONEMPTY_OBJECT,    out);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
439	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT,    out);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
440	[BUG]  [BUGGY]  validateValue(JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  validateValue(JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	validateValue(JsonWriter.NONEMPTY_OBJECT,  out);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT,    out);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
441	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out,  false);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out,  false);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out,  false);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT,    out);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
442	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));	  safeReplacement(JsonWriter.NONEMPTY_OBJECT,    out);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
443	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.US);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.US);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.US);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
444	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  1);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
445	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  true);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  true);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  true);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
446	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  -1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  -1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  -1);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
447	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  null);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
448	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  nextValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  nextValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  nextValue();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
449	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.afterValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.afterValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.afterValue();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
450	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.toString();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.toString();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.toString();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
451	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.intValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.intValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.intValue();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
452	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.first();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.first();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.first();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
453	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.nextValue();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.nextValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.nextValue();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
454	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( " "));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
455	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( ", ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
456	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(getMessage()));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(getMessage()));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(getMessage()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
457	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( ". ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( ". ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( ". ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
458	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(this.beforeValue));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(this.beforeValue));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
459	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(JsonWriter.TYPE_OBJECT));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(JsonWriter.TYPE_OBJECT));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(JsonWriter.TYPE_OBJECT));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
460	[BUG]  [BUGGY]  out.append( "none ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  out.append( "none ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "none ");	  out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
461	[BUG]  [BUGGY]  out.append( "None ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( "None ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "None ");	  out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
462	[BUG]  [BUGGY]  out.append( "mv.start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  out.append( "mv.start  of  expression ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "mv.start  of  expression ");	  out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
463	[BUG]  [BUGGY]  out.append( "msg.js. ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  out.append( "msg.js. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "msg.js. ");	  out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
464	[BUG]  [BUGGY]  if(value!=  NULL)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  NULL)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  NULL)  {  break;  }	  if(value    ==    NULL)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
465	[BUG]  [BUGGY]  if(value  ==  NULL  ||  value.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  NULL  ||  value.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  NULL  ||  value.length()  ==  0)  {  break;  }	  if(value    ==    NULL)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
466	[BUG]  [BUGGY]  if(value  ==  NULL  ||  value.equals( " "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  NULL  ||  value.equals( " "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  NULL  ||  value.equals( " "))  {  break;  }	  if(value    ==    NULL)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
467	[BUG]  [BUGGY]  if(value!=  NULL  ||  value.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  NULL  ||  value.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  NULL  ||  value.length()  ==  0)  {  break;  }	  if(value    ==    NULL)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
468	[BUG]  [BUGGY]  if(value  ==  NULL  ||  value.length()!=  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  NULL  ||  value.length()!=  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  NULL  ||  value.length()!=  0)  {  break;  }	  if(value    ==    NULL)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
469	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "null ");	  while(value!=    null    &&    value.getClass()!=    getClass())    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
470	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "' ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "' ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "' ");	  while(value!=    null    &&    value.getClass()!=    getClass())    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
471	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( ", ");  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( ", ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( ", ");	  while(value!=    null    &&    value.getClass()!=    getClass())    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
472	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "None ");  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "None ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "None ");	  while(value!=    null    &&    value.getClass()!=    getClass())    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
473	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "Non-standard  expression ");  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "Non-standard  expression ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "Non-standard  expression ");	  while(value!=    null    &&    value.getClass()!=    getClass())    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
474	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "msg.no.body ");  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "msg.no.body ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append( "msg.no.body ");	  while(value!=    null    &&    value.getClass()!=    getClass())    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
475	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  separator);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  separator);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
476	[BUG]  [BUGGY]  JsonWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  separator);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  separator);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
477	[BUG]  [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  separator);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  separator);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
478	[BUG]  [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  beforeValue);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
479	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  segment);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  segment);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  segment);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
480	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  before);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  before);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  before);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
481	[BUG]  [BUGGY]  out.append( "null ");  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  out.append( "null ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "null ");  break;	  out.append('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
482	[BUG]  [BUGGY]  out.append('N');  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  out.append('N');  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append('N');  break;	  out.append('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
483	[BUG]  [BUGGY]  out.append( "' ");  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  out.append( "' ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "' ");  break;	  out.append('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
484	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "' ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "' ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "' ");  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
485	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  this.beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  this.beforeValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  this.beforeValue.getValue();	  NeighborValue    <    N,>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
486	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  nextValue.getValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  nextValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  nextValue.getValue();	  NeighborValue    <    N,>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
487	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.getKey();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.getKey();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.getKey();	  NeighborValue    <    N,>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
488	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  firstValue.getValue();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  firstValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  firstValue.getValue();	  NeighborValue    <    N,>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
489	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  this.afterValue.getValue();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  this.afterValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  this.afterValue.getValue();	  NeighborValue    <    N,>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
490	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "' ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "' ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "' ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
491	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "None ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "None ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "None ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
492	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "null ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "null ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
493	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "n ").append( "n ");  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "n ").append( "n ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "n ").append( "n ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
494	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "none ");  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "none ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "none ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
495	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "no-expression ");  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "no-expression ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "no-expression ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
496	[BUG]  [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
497	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  separator);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  separator);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
498	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(out,  separator);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(out,  separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(out,  separator);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
499	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this.beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this.beforeValue);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
500	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
501	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  out);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  out);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
502	[BUG]  [BUGGY]  out.append( "None ");  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  out.append( "None ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "None ");  break;	  out.append(   "n   ");    break;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
503	[BUG]  [BUGGY]  out.append( "none ");  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  out.append( "none ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "none ");  break;	  out.append(   "n   ");    break;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
504	[BUG]  [BUGGY]  out.append( "mv.start  of  expression ");  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  out.append( "mv.start  of  expression ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "mv.start  of  expression ");  break;	  out.append(   "n   ");    break;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
505	[BUG]  [BUGGY]  out.append( "no  expression ");  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  out.append( "no  expression ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "no  expression ");  break;	  out.append(   "n   ");    break;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
506	[BUG]  [BUGGY]  wrongfulJsonWriterError( "Non-simple  expression: "  +  beforeValue.toString());  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  wrongfulJsonWriterError( "Non-simple  expression: "  +  beforeValue.toString());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	wrongfulJsonWriterError( "Non-simple  expression: "  +  beforeValue.toString());	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
507	[BUG]  [BUGGY]  wrongfulJsonWriterError( "Missing  value: "  +  value);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  wrongfulJsonWriterError( "Missing  value: "  +  value);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	wrongfulJsonWriterError( "Missing  value: "  +  value);	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
508	[BUG]  [BUGGY]  wrongfulJsonWriterError( "Non-existing  value: "  +  value);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  wrongfulJsonWriterError( "Non-existing  value: "  +  value);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	wrongfulJsonWriterError( "Non-existing  value: "  +  value);	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
509	[BUG]  [BUGGY]  wrongfulJsonWriterError( "Non-simple  expression: "  +  beforeValue.getClass().getName());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  wrongfulJsonWriterError( "Non-simple  expression: "  +  beforeValue.getClass().getName());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	wrongfulJsonWriterError( "Non-simple  expression: "  +  beforeValue.getClass().getName());	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
510	[BUG]  [BUGGY]  wrongfulJsonWriterError( "Non-simple  expression: "  +  beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  wrongfulJsonWriterError( "Non-simple  expression: "  +  beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	wrongfulJsonWriterError( "Non-simple  expression: "  +  beforeValue);	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
511	[BUG]  [BUGGY]  wrongfulJsonWriterError( "Non-simple  expression: "  +  getClass().getName());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  wrongfulJsonWriterError( "Non-simple  expression: "  +  getClass().getName());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	wrongfulJsonWriterError( "Non-simple  expression: "  +  getClass().getName());	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
512	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter();	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
513	[BUG]  [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  nullWriter();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  final  NeighborWriter  <  JsonWriter>  jsonWriter  =  nullWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  NeighborWriter  <  JsonWriter>  jsonWriter  =  nullWriter();	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
514	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  this;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  this;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  this;	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
515	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriterWriter();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriterWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriterWriter();	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
516	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  nullWriter(separator);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  nullWriter(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  nullWriter(separator);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
517	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
518	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( " "));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
519	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(getMessage()));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(getMessage()));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(getMessage()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
520	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ". ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( ". ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( ". ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
521	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( ", ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
522	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  true);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  true);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  true);	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
523	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  false);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  false);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  false);	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
524	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  -1);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  -1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  -1);	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
525	[BUG]  [BUGGY]  while(value!=  null  ||  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  ||  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  ||  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
526	[BUG]  [BUGGY]  whilst(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  whilst(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	whilst(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
527	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT,  out.toString());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT,  out.toString());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT,  out.toString());	  while(value!=    null    &&    value.length()    >    0)    {    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
528	[BUG]  [BUGGY]  While(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  While(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	While(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
529	[BUG]  [BUGGY]  while(value  ==  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value  ==  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value  ==  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
530	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
531	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
532	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  0);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  0);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
533	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  null);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  null);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
534	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  this.beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(jsonWriter,  this.beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  this.beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
535	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  beforeValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(jsonWriter,  beforeValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  beforeValue)  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
536	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  beforeValue)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(jsonWriter,  beforeValue)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  beforeValue)  {  break;  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
537	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  beforeValue,  replaceTop(NONEMPTY_OBJECT));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(jsonWriter,  beforeValue,  replaceTop(NONEMPTY_OBJECT));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  beforeValue,  replaceTop(NONEMPTY_OBJECT));	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
538	[BUG]  [BUGGY]  safe(this.beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safe(this.beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(this.beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
539	[BUG]  [BUGGY]  safe(separator)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safe(separator)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(separator)  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
540	[BUG]  [BUGGY]  safely(this.beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safely(this.beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safely(this.beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
541	[BUG]  [BUGGY]  safe(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safe(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
542	[BUG]  [BUGGY]  safe(this.beforeValue)  {  break;  }  else  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safe(this.beforeValue)  {  break;  }  else  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(this.beforeValue)  {  break;  }  else  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
543	[BUG]  [BUGGY]  safely(separator)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safely(separator)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safely(separator)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
544	[BUG]  [BUGGY]  safe(this.beforeValue)  {  break;  }  else  if(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safe(this.beforeValue)  {  break;  }  else  if(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(this.beforeValue)  {  break;  }  else  if(value!=  null)  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
545	[BUG]  [BUGGY]  new  IllegalArgumentException( "Negative  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalArgumentException( "Negative  start  of  expression: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalArgumentException( "Negative  start  of  expression: ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
546	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  this);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  this);	  throw    new    IllegalArgumentException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
547	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Negative  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Negative  start  of  expression: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( "Negative  start  of  expression: ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
548	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  name);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  name);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  name);	  throw    new    IllegalArgumentException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
549	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  getClass());  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  getClass());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  getClass());	  throw    new    IllegalArgumentException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
550	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance1();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance1();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance1();	  last    =    JsonStringEncoder.getInstance2();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
551	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance2StandardValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance2StandardValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance2StandardValue();	  last    =    JsonStringEncoder.getInstance2();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
552	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance2D();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance2D();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance2D();	  last    =    JsonStringEncoder.getInstance2();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
553	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance2CharacterEncoding();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance2CharacterEncoding();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance2CharacterEncoding();	  last    =    JsonStringEncoder.getInstance2();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
554	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance3();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance3();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance3();	  last    =    JsonStringEncoder.getInstance2();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
555	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " "  +  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " "  +  JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
556	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
557	[BUG]  [BUGGY]  throw  new  IllegalStateException( "JsonNull  is  null. ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "JsonNull  is  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "JsonNull  is  null. ");	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
558	[BUG]  [BUGGY]  throw  new  IllegalStateException( "JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
559	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_OBJECT);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
560	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  1);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
561	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_OBJECT);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
562	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  null);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  null);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
563	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  0);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  0);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
564	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  this);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  this);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
565	[BUG]  [BUGGY]  While(value!=  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  While(value!=  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	While(value!=  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
566	[BUG]  [BUGGY]  While(value  ==  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  While(value  ==  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	While(value  ==  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
567	[BUG]  [BUGGY]  While(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  While(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	While(value!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
568	[BUG]  [BUGGY]  While(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  While(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	While(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
569	[BUG]  [BUGGY]  While(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  While(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	While(value  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
570	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.n ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.n ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.n ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
571	[BUG]  [BUGGY]  new  IllegalStateException( "Nesting  problem.   ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Nesting  problem.   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalStateException( "Nesting  problem.   ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
572	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Example: ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Example: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Example: ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
573	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   "  +  this);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   "  +  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.   "  +  this);	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
574	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   "  +  name);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   "  +  name);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.   "  +  name);	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
575	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  true);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  true);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  true);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
576	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  false);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  false);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  false);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
577	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(NONEMPTY_OBJECT);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
578	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
579	[BUG]  [BUGGY]  validateValue(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  validateValue(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	validateValue(JsonWriter.NONEMPTY_OBJECT);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
580	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME));	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
581	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_NAME);	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
582	[BUG]  [BUGGY]  reader.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  reader.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT);	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
583	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  next);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  next);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  next);	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
584	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  name);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  name);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  name);	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
585	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  0);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  0);	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
586	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  nextValue;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue  =  nextValue;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  nextValue;	  NeighborValueWriter.this.beforeValue    =    null;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
587	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  this;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue  =  this;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  this;	  NeighborValueWriter.this.beforeValue    =    null;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
588	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  beforeValue;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue  =  beforeValue;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  beforeValue;	  NeighborValueWriter.this.beforeValue    =    null;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
589	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  new  JsonWriter();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue  =  new  JsonWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  new  JsonWriter();	  NeighborValueWriter.this.beforeValue    =    null;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
590	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  nextValueWriter;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue  =  nextValueWriter;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  nextValueWriter;	  NeighborValueWriter.this.beforeValue    =    null;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
591	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  firstValue;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue  =  firstValue;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  firstValue;	  NeighborValueWriter.this.beforeValue    =    null;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
592	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(DANGLING_NAME);  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
593	[BUG]  [BUGGY]  null  =  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonNull.createJsonNull();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	null  =  JsonNull.createJsonNull();	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
594	[BUG]  [BUGGY]  removeValue(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  removeValue(NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	removeValue(NONEMPTY_OBJECT);  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
595	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME);  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
596	[BUG]  [BUGGY]  null  =  JsonNull.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonNull.createJsonNull();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	null  =  JsonNull.createJsonNull();  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
597	[BUG]  [BUGGY]  replace(DANGLING_NAME);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replace(DANGLING_NAME);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replace(DANGLING_NAME);  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
598	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
599	[BUG]  [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
600	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
601	[BUG]  [BUGGY]  replaceTop(JsonWriter.createJsonWriter(separator));  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.createJsonWriter(separator));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(JsonWriter.createJsonWriter(separator));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
602	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(true);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(true);  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(true);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
603	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.n ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.n ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.n ");	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
604	[BUG]  [BUGGY]  new  IllegalStateException( "Nesting  argument.   ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Nesting  argument.   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalStateException( "Nesting  argument.   ");	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
605	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.   "  +  name);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.   "  +  name);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.   "  +  name);	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
606	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Example: ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Example: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.  Example: ");	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
607	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.   "  +  this);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.   "  +  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.   "  +  this);	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
608	[BUG]  [BUGGY]  NeighborValueWriter.this.beginValue();  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beginValue();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beginValue();  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
609	[BUG]  [BUGGY]  NeighborValueWriter.this.afterValue();  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.afterValue();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.afterValue();  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
610	[BUG]  [BUGGY]  NeighborValueWriter.this.reset();  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.reset();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.reset();  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
611	[BUG]  [BUGGY]  NeighborValueWriter.this.replaceChild(null,  beforeValue);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.replaceChild(null,  beforeValue);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.replaceChild(null,  beforeValue);  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
612	[BUG]  [BUGGY]  NeighborValueWriter.this.start(JsonWriter.this);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.start(JsonWriter.this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.start(JsonWriter.this);  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
613	[BUG]  [BUGGY]  NeighborValueWriter.this.replaceChild(null,  beforeValue());  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.replaceChild(null,  beforeValue());  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.replaceChild(null,  beforeValue());  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
614	[BUG]  [BUGGY]  NeighborValueWriter.this.reportError( "Missing  value: "  +  beforeValue);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.reportError( "Missing  value: "  +  beforeValue);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.reportError( "Missing  value: "  +  beforeValue);  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
615	[BUG]  [BUGGY]  new  IllegalArgumentException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalArgumentException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalArgumentException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
616	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
617	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Native  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalArgumentException( "Native  start  of  expression  should  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Native  start  of  expression  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
618	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getNumberValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getNumberValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getNumberValue();	  NeighborValue    <    Node>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
619	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getAssignedValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getAssignedValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getAssignedValue();	  NeighborValue    <    Node>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
620	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getRawValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getRawValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getRawValue();	  NeighborValue    <    Node>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
621	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getNullValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getNullValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getNullValue();	  NeighborValue    <    Node>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
622	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getEmptyValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getEmptyValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getEmptyValue();	  NeighborValue    <    Node>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
623	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getValue().getNext();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getValue().getNext();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getValue().getNext();	  NeighborValue    <    Node>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
624	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
625	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_WARNING,  JsonWriter.DEFAULT_TITLE_ERROR);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_WARNING,  JsonWriter.DEFAULT_TITLE_ERROR);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_WARNING,  JsonWriter.DEFAULT_TITLE_ERROR);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
626	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JSONWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JSONWriter.DEFAULT_TITLE_FONT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JSONWriter.DEFAULT_TITLE_FONT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
627	[BUG]  [BUGGY]  reader.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  reader.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
628	[BUG]  [BUGGY]  parent.replaceChild(this,  DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
629	[BUG]  [BUGGY]  parser.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  parser.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parser.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
630	[BUG]  [BUGGY]  while(separator!=  null)  {  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null)  {  out.append(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(separator!=  null)  {  out.append(separator);	  if(separator    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
631	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( "null "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  ||  value.equals( "null "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.equals( "null "))  {  break;  }	  if(value    ==    null    ||    value.equals(   "   "))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
632	[BUG]  [BUGGY]  while(value!=  null  &&  value.equals( "   "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.equals( "   "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.equals( "   "))  {  break;  }	  if(value    ==    null    ||    value.equals(   "   "))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
633	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( "_ "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  ||  value.equals( "_ "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.equals( "_ "))  {  break;  }	  if(value    ==    null    ||    value.equals(   "   "))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
634	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( "- "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  ||  value.equals( "- "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.equals( "- "))  {  break;  }	  if(value    ==    null    ||    value.equals(   "   "))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
635	[BUG]  [BUGGY]  if(value  ==  null  &&  value.equals( "   "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  &&  value.equals( "   "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  &&  value.equals( "   "))  {  break;  }	  if(value    ==    null    ||    value.equals(   "   "))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
636	[BUG]  [BUGGY]  safeMultiply(out,  jsonWriter)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(out,  jsonWriter)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(out,  jsonWriter)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    out)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
637	[BUG]  [BUGGY]  safeMultiply(out,  jsonWriter)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(out,  jsonWriter)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(out,  jsonWriter)  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    out)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
638	[BUG]  [BUGGY]  safeMultiply(out,  jsonWriter)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(out,  jsonWriter)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(out,  jsonWriter)  {  break;  }	  safeMultiply(jsonWriter,    out)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
639	[BUG]  [BUGGY]  safeMultiply(out,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(out,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(out,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    out)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
640	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral(0);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLiteral(0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral(0);	  last    =    JsonNull.createJsonLiteral();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
641	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral(null);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLiteral(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral(null);	  last    =    JsonNull.createJsonLiteral();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
642	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral(separator);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLiteral(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral(separator);	  last    =    JsonNull.createJsonLiteral();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
643	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral(this);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLiteral(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral(this);	  last    =    JsonNull.createJsonLiteral();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
644	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral( "null ");  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLiteral( "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral( "null ");	  last    =    JsonNull.createJsonLiteral();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
645	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral(null,  null);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLiteral(null,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral(null,  null);	  last    =    JsonNull.createJsonLiteral();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
646	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(JsonNullWriter.class);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(JsonNullWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(JsonNullWriter.class);	  NeighborWriter    jsonWriter    =    JsonNullWriter.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
647	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(this);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(this);	  NeighborWriter    jsonWriter    =    JsonNullWriter.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
648	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(null);	  NeighborWriter    jsonWriter    =    JsonNullWriter.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
649	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstanceUTC();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstanceUTC();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.getInstanceUTC();	  NeighborWriter    jsonWriter    =    JsonNullWriter.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
650	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getIn();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  out  =  getIn();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  E>  out  =  getIn();	  NeighborValue    <    N,    E>    out    =    getOut();    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
651	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getCurrentValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  out  =  getCurrentValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  E>  out  =  getCurrentValue();	  NeighborValue    <    N,    E>    out    =    getOut();    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
652	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getDestination();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  out  =  getDestination();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  E>  out  =  getDestination();	  NeighborValue    <    N,    E>    out    =    getOut();    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
653	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getOut()  -  1;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  out  =  getOut()  -  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  E>  out  =  getOut()  -  1;	  NeighborValue    <    N,    E>    out    =    getOut();    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
654	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getEnd();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  out  =  getEnd();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  E>  out  =  getEnd();	  NeighborValue    <    N,    E>    out    =    getOut();    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
655	[BUG]  [BUGGY]  out.append( ",n ");  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  out.append( ",n ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ",n ");  break;	  out.append(   ",   ");    break;    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
656	[BUG]  [BUGGY]  out.append( ",' ");  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  out.append( ",' ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ",' ");  break;	  out.append(   ",   ");    break;    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
657	[BUG]  [BUGGY]  out.append(',');  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  out.append(',');  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append(',');  break;	  out.append(   ",   ");    break;    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
658	[BUG]  [BUGGY]  NeighborValueWriter.this.beginValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beginValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beginValue();	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
659	[BUG]  [BUGGY]  NeighborValueWriter.this.afterValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.afterValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.afterValue();	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
660	[BUG]  [BUGGY]  NeighborValueWriter.this.reset();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.reset();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.reset();	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
661	[BUG]  [BUGGY]  NeighborValueWriter.this.remove(separator);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.remove(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.remove(separator);	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
662	[BUG]  [BUGGY]  NeighborValueWriter.this.repeat();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.repeat();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.repeat();	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
663	[BUG]  [BUGGY]  NeighborValueWriter.this.start(JsonWriter.this);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.start(JsonWriter.this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.start(JsonWriter.this);	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
664	[BUG]  [BUGGY]  NeighborValueWriter.this.reportError( "Non-existing  value. ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.reportError( "Non-existing  value. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.reportError( "Non-existing  value. ");	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
665	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT,  true);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT,  true);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_OBJECT,  true);	  safeReturn(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
666	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT,  false);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT,  false);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_OBJECT,  false);	  safeReturn(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
667	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  nullValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  nullValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  nullValue();	  NeighborValue    <    Node>    value    =    beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
668	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  nextValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  nextValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  nextValue();	  NeighborValue    <    Node>    value    =    beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
669	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  firstValue();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  firstValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  firstValue();	  NeighborValue    <    Node>    value    =    beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
670	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  emptyValue();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  emptyValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  emptyValue();	  NeighborValue    <    Node>    value    =    beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
671	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(JsonNull.createJsonNull(0));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(JsonNull.createJsonNull(0));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(JsonNull.createJsonNull(0));	  last    =    JsonNull.createJsonNull(0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
672	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(JsonNull.createJsonNull(1));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(JsonNull.createJsonNull(1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(JsonNull.createJsonNull(1));	  last    =    JsonNull.createJsonNull(0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
673	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.afterValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.afterValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.afterValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
674	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  nextValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  nextValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  nextValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
675	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  nextValue.beforeValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  nextValue.beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  nextValue.beforeValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
676	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  this.beforeValue.afterValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  this.beforeValue.afterValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  this.beforeValue.afterValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
677	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.first();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.first();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.first();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
678	[BUG]  [BUGGY]  last  =  JsonNull.createJSNull(separator);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJSNull(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJSNull(separator);	  last    =    JsonNull.createJSNull();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
679	[BUG]  [BUGGY]  last  =  JsonNull.createJSNull(null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJSNull(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJSNull(null);	  last    =    JsonNull.createJSNull();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
680	[BUG]  [BUGGY]  last  =  JsonNull.createJSNull(JsonNull.createJSNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJSNull(JsonNull.createJSNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJSNull(JsonNull.createJSNull());	  last    =    JsonNull.createJSNull();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
681	[BUG]  [BUGGY]  last  =  JsonNull.createParser();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createParser();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createParser();	  last    =    JsonNull.createJSNull();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
682	[BUG]  [BUGGY]  last  =  JsonNull.createJSNull(JsonNull.getValueTypeDesc());  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJSNull(JsonNull.getValueTypeDesc());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJSNull(JsonNull.getValueTypeDesc());	  last    =    JsonNull.createJSNull();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
683	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
684	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
685	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
686	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
687	[BUG]  [BUGGY]  while(value!=  null)  {  out.append('n');  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append('n');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append('n');	  while(value!=    null)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
688	[BUG]  [BUGGY]  while(value!=  null)  {  out.append('  ');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append('  ');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append('  ');	  while(value!=    null)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
689	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstanceUTC());  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstanceUTC());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstanceUTC());	  last    =    JsonStringEncoder.encode(JsonStringEncoder.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
690	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  this);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  this);	  last    =    JsonStringEncoder.encode(JsonStringEncoder.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
691	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance())+  1;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance())+  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance())+  1;	  last    =    JsonStringEncoder.encode(JsonStringEncoder.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
692	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  true);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  true);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  true);	  last    =    JsonStringEncoder.encode(JsonStringEncoder.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
693	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  false);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  false);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  false);	  last    =    JsonStringEncoder.encode(JsonStringEncoder.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
694	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  null);	  last    =    JsonStringEncoder.encode(JsonStringEncoder.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
695	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT;	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
696	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.valueOf(beforeValue.evaluate(JsonWriter.EXPR_RESULT));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.valueOf(beforeValue.evaluate(JsonWriter.EXPR_RESULT));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonWriter.valueOf(beforeValue.evaluate(JsonWriter.EXPR_RESULT));	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
697	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT,  beforeValue.evaluate(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT,  beforeValue.evaluate(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT,  beforeValue.evaluate(JsonWriter.EXPR_RESULT);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
698	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.getEmptyValue(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.getEmptyValue(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonWriter.getEmptyValue(JsonWriter.EXPR_RESULT);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
699	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.createEmptyValue(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.createEmptyValue(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonWriter.createEmptyValue(JsonWriter.EXPR_RESULT);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
700	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT.evaluate(this);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT.evaluate(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT.evaluate(this);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
701	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT.evaluate(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT.evaluate(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT.evaluate(JsonWriter.EXPR_RESULT);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
702	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getNumberValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getNumberValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getNumberValue();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
703	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getEmptyValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getEmptyValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getEmptyValue();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
704	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getRawValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getRawValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getRawValue();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
705	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getAssignedValue();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getAssignedValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getAssignedValue();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
706	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getKey();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getKey();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getKey();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
707	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getValue().getValue();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getValue().getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getValue().getValue();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
708	[BUG]  [BUGGY]  if(jsonWriter!=  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
709	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
710	[BUG]  [BUGGY]  if(jsonWriter  ==  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter  ==  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter  ==  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
711	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
712	[BUG]  [BUGGY]  if(jsonWriter  ==  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter  ==  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter  ==  null  ||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
713	[BUG]  [BUGGY]  if(jsonWriter!=  null  &&!jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null  &&!jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  &&!jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
714	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  null);  break;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  null);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  null);  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
715	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  replaceTop(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  replaceTop(NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  replaceTop(NONEMPTY_OBJECT);  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
716	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  0);  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  0);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  0);  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
717	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  false);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  false);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  false);  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
718	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  this);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  this);  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
719	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  -1);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  -1);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  -1);  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
720	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  '_');  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  '_');  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  '_');  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
721	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append('n');  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append('n');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append('n');	  while(value!=    null    &&    value.length    >    0)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
722	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append('-');  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append('-');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append('-');	  while(value!=    null    &&    value.length    >    0)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
723	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append('_');  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append('_');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append('_');	  while(value!=    null    &&    value.length    >    0)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
724	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
725	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  should  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Native  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
726	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
727	[BUG]  [BUGGY]  out.append( "JsonWriter.start  of  expression ");  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  out.append( "JsonWriter.start  of  expression ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "JsonWriter.start  of  expression ");  break;	  out.append(   "n   ");    break;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
728	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_ELEMENT);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_ELEMENT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_ELEMENT);  break;	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
729	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_ARRAY);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_ARRAY);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_ARRAY);  break;	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
730	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  next);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  next);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  next);  break;	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
731	[BUG]  [BUGGY]  parent.replaceChild(null,  out);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  out);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  out);  break;	  if(separator    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
732	[BUG]  [BUGGY]  if(this.value  ==  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(this.value  ==  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(this.value  ==  null)  {  break;  }	  if(separator    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
733	[BUG]  [BUGGY]  parent.setValue(separator);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.setValue(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.setValue(separator);	  if(separator    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
734	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  out);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
735	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue  +  1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue  +  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  beforeValue  +  1);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
736	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  SHORT_DESCRIPTOR);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  SHORT_DESCRIPTOR);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  SHORT_DESCRIPTOR);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
737	[BUG]  [BUGGY]  safeStart  <  NullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeStart  <  NullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeStart  <  NullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
738	[BUG]  [BUGGY]  safeThan  =  nullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  =  nullPointerException.class)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
739	[BUG]  [BUGGY]  safeThan  =  nullPointerException.class;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  =  nullPointerException.class;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  =  nullPointerException.class;	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
740	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonSeparator.class);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonSeparator.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonSeparator.class);	  last    =    JsonStringEncoder.getInstance(JsonWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
741	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonKeyword.class);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonKeyword.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonKeyword.class);	  last    =    JsonStringEncoder.getInstance(JsonWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
742	[BUG]  [BUGGY]  out.append( "] ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  out.append( "] ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "] ");  replaceTop(NONEMPTY_OBJECT);	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
743	[BUG]  [BUGGY]  out.append( "')n ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  out.append( "')n ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "')n ");  replaceTop(NONEMPTY_OBJECT);	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
744	[BUG]  [BUGGY]  throw  new  NullPointerException( ", ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( ", ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( ", ");	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
745	[BUG]  [BUGGY]  throw  new  NullPointerException( " ".equals(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( " ".equals(this.beforeValue));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( " ".equals(this.beforeValue));	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
746	[BUG]  [BUGGY]  throw  new  NullPointerException( " ".equals(getText()));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( " ".equals(getText()));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( " ".equals(getText()));	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
747	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( "> ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append( "> ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( "> ");	  while(value!=    null)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
748	[BUG]  [BUGGY]  while(value!=  null)  {  out.append('-');  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append('-');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append('-');	  while(value!=    null)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
749	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  false);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  false);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  false);  break;	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
750	[BUG]  [BUGGY]  out.append('  ');  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  out.append('  ');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append('  ');	  out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
751	[BUG]  [BUGGY]  out.append( "') ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  out.append( "') ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "') ");	  out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
752	[BUG]  [BUGGY]  out.append( "')n ").append(separator);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  out.append( "')n ").append(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "')n ").append(separator);  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
753	[BUG]  [BUGGY]  out.append( ";n ").append(separator);  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  out.append( ";n ").append(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ";n ").append(separator);  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
754	[BUG]  [BUGGY]  out.append( "n ").append('n');  break;  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  out.append( "n ").append('n');  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n ").append('n');  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
755	[BUG]  [BUGGY]  out.append( "n ").append(this.value);  break;  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( "n ").append(this.value);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n ").append(this.value);  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
756	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(separator);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(separator);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
757	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(null);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(null);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
758	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(0);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(0);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
759	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(1);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
760	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(this);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(this);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
761	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.getAssignedValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.getAssignedValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  beforeValue.getAssignedValue();	  NeighborValue    <    Node>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
762	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  out.getValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  out.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  out.getValue();	  NeighborValue    <    Node>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
763	[BUG]  [BUGGY]  out.append( "mv.start-of-expression ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  out.append( "mv.start-of-expression ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "mv.start-of-expression ");	  out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
764	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized:   ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized:   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized:   ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
765	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonIndex();  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonIndex();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonIndex();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
766	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonValue();  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonValue();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonValue();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
767	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonText();  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonText();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonText();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
768	[BUG]  [BUGGY]  NullPointer  jsonWriter  =  JsonNull.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NullPointer  jsonWriter  =  JsonNull.createJsonNull();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NullPointer  jsonWriter  =  JsonNull.createJsonNull();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
769	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_STATEMENT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_STATEMENT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_STATEMENT);	  last    =    JsonStringEncoder.getInstanceUTC();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
770	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.class);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.class);	  last    =    JsonStringEncoder.getInstanceUTC();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
771	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SOURCE);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SOURCE);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SOURCE);	  last    =    JsonStringEncoder.getInstanceUTC();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
772	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
773	[BUG]  [BUGGY]  while(value!=  null)  {  out.append(DANGLING_NAME);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append(DANGLING_NAME);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append(DANGLING_NAME);  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
774	[BUG]  [BUGGY]  while(value!=  null)  {  out.append('  ');  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append('  ');  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append('  ');  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
775	[BUG]  [BUGGY]  while(value!=  null)  {  out.append('n');  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append('n');  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append('n');  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
776	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_TO_STREAM,  JsonWriter.DEFAULT_TITLE_FONT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
777	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_STREAM,  JsonWriter.DEFAULT_TITLE_TO_STREAM);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_STREAM,  JsonWriter.DEFAULT_TITLE_TO_STREAM);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_STREAM,  JsonWriter.DEFAULT_TITLE_TO_STREAM);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
778	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_PREFIX,  JsonWriter.DEFAULT_TITLE_TO_STREAM);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_PREFIX,  JsonWriter.DEFAULT_TITLE_TO_STREAM);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_PREFIX,  JsonWriter.DEFAULT_TITLE_TO_STREAM);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
779	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_NAME,  JsonWriter.DEFAULT_TITLE_TO_STREAM);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_NAME,  JsonWriter.DEFAULT_TITLE_TO_STREAM);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_NAME,  JsonWriter.DEFAULT_TITLE_TO_STREAM);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_TO_STREAM);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
780	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  next);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  next);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  next);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
781	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  out);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
782	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_ELEMENT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_ELEMENT);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
783	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  end);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  end);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  end);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
784	[BUG]  [BUGGY]  reader.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  reader.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
785	[BUG]  [BUGGY]  while(value!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  break;  }	  while(jsonWriter!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
786	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(String.valueOf(value.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(String.valueOf(value.length()  -  1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(String.valueOf(value.length()  -  1));	  while(value!=    null    &&    value.length()    >    0)    {    out.append(Separator.charAt(value.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
787	[BUG]  [BUGGY]  if(value  ==  NULL  ||  value.equals(null))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  NULL  ||  value.equals(null))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  NULL  ||  value.equals(null))  {  break;  }	  if(value    ==    NULL)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
788	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString( "jsonNull ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonString( "jsonNull ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString( "jsonNull ");	  last    =    JsonNull.createJsonString();    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
789	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasValue(SEPARATOR))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasValue(SEPARATOR))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.hasValue(SEPARATOR))  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.hasValue(separator))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
790	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasKey(separator))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasKey(separator))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.hasKey(separator))  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.hasValue(separator))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
791	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasValue(this))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasValue(this))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.hasValue(this))  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.hasValue(separator))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
792	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
793	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
794	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(!isEnabled(Feature.QUOTE_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(!isEnabled(Feature.QUOTE_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
795	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
796	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
797	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_NULL_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(!isEnabled(Feature.QUOTE_NULL_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(!isEnabled(Feature.QUOTE_NULL_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
798	[BUG]  [BUGGY]  out.append( ";n ");  replaceTop(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( ";n ");  replaceTop(NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ";n ");  replaceTop(NONEMPTY_OBJECT);  break;	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
799	[BUG]  [BUGGY]  out.append( "')n ");  replaceTop(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  out.append( "')n ");  replaceTop(NONEMPTY_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "')n ");  replaceTop(NONEMPTY_OBJECT);  break;	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
800	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.removeFirst();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.removeFirst();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.removeFirst();	  NeighborValue    <    N,>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
801	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.clone();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.clone();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.clone();	  NeighborValue    <    N,>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
802	[BUG]  [BUGGY]  last  =  JsonNull.createJSNull(0);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJSNull(0);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJSNull(0);	  last    =    JsonNull.createJSNull();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
803	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null    ||    value.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
804	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  >=  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  ||  value.length()  >=  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.length()  >=  0)  {  break;  }	  if(value    ==    null    ||    value.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
805	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "  start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "  start  of  expression ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "  start  of  expression ");	  while(value!=    null    &&    value.length    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
806	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "   ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "   ");	  while(value!=    null    &&    value.length    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
807	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ").equals(JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ").equals(JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
808	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ")  :  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ")  :  JsonNull.createJsonNull();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ")  :  JsonNull.createJsonNull();	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
809	[BUG]  [BUGGY]  throw  new  IllegalStateException( "JsonNull.createJsonNull()  :  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "JsonNull.createJsonNull()  :  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "JsonNull.createJsonNull()  :  JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
810	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  endValue);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  endValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  endValue);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
811	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  seed);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  seed);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  seed);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
812	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(beforeValue,  beforeValue);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
813	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replace(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
814	[BUG]  [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceLeft(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
815	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(separator,  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(separator,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(separator,  1);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
816	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLongSeparator();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLongSeparator();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLongSeparator();	  last    =    JsonNull.createJsonSeparator();    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
817	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLongValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLongValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLongValue();	  last    =    JsonNull.createJsonSeparator();    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
818	[BUG]  [BUGGY]  last  =  JsonNull.createJsonWriter();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonWriter();	  last    =    JsonNull.createJsonSeparator();    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
819	[BUG]  [BUGGY]  if(this.beforeValue  ==  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.beforeValue  ==  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(this.beforeValue  ==  null)  {  break;  }	  if(jsonWriter    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
820	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.removeFirst();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.removeFirst();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  beforeValue.removeFirst();	  NeighborValue    <    K,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
821	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.getAssignedValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.getAssignedValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  beforeValue.getAssignedValue();	  NeighborValue    <    K,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
822	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY)+  1;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY)+  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY)+  1;	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
823	[BUG]  [BUGGY]  reader  =  JsonReader.getInstance();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  reader  =  JsonReader.getInstance();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader  =  JsonReader.getInstance();	  if(jsonReader    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
824	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(separator);  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNull(separator);  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
825	[BUG]  [BUGGY]  out.append( "n, ");  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  out.append( "n, ");  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "n, ");  break;	  out.append(   ",   ");    break;    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
826	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>();	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
827	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(separator);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(separator);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
828	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getNeighborWriter();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getNeighborWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  getNeighborWriter();	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
829	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  end);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  end);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  end);  break;	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
830	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  next);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  next);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  next);  break;	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
831	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Long.valueOf(separator));  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Long.valueOf(separator));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Long.valueOf(separator));  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    break;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
832	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(start));  break;  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(start));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(start));  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    break;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
833	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  start  of  expression  does  not  exist. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  start  of  expression  does  not  exist. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  start  of  expression  does  not  exist. ");	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
834	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  name  is  not  followed  by  a  string. ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  name  is  not  followed  by  a  string. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  name  is  not  followed  by  a  string. ");	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
835	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT)+  1;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT)+  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT)+  1;	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
836	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.END_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.END_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.END_OBJECT);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
837	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  STRING_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  STRING_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  STRING_NAME);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
838	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append( "n ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( "n ");  }	  while(value!=    null)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
839	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.END_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.END_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.END_OBJECT);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
840	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_ROOT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_ROOT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.TYPE_ROOT);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
841	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.TYPE_OBJECT);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
842	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_INT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_INT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.TYPE_INT);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
843	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
844	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('n'));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('n'));  replaceTop(jsonWriter);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('n'));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
845	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  out.beforeValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  out.beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  out.beforeValue();	  NeighborValue    <    Node>    value    =    beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
846	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  endValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  endValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  endValue();	  NeighborValue    <    Node>    value    =    beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
847	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue().beforeValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue().beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getValue().beforeValue();	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
848	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue(null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getValue(null);	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
849	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getBaseValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getBaseValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getBaseValue();	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
850	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  nextValue.evaluate(JsonNull.valueOf(value));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  nextValue.evaluate(JsonNull.valueOf(value));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  nextValue.evaluate(JsonNull.valueOf(value));	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
851	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  firstValue.evaluate(JsonNull.valueOf(value));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  firstValue.evaluate(JsonNull.valueOf(value));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  firstValue.evaluate(JsonNull.valueOf(value));	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
852	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonNull.valueOf(separator));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonNull.valueOf(separator));	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
853	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(afterValue);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonNull.valueOf(afterValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonNull.valueOf(afterValue);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
854	[BUG]  [BUGGY]  if(null!=  out)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  out)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(null!=  out)  {  break;  }	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
855	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.class)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.class)  {  throw  new  IllegalArgumentException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
856	[BUG]  [BUGGY]  safeMultiply(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
857	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
858	[BUG]  [BUGGY]  safeThan  <  NullPointerException.JSON_SECOND)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.JSON_SECOND)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.JSON_SECOND)  {  throw  new  IllegalArgumentException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
859	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.class)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.class)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
860	[BUG]  [BUGGY]  safeMultiply(start)  {  throw  new  IllegalArgumentException( " ".equals(separator));  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(start)  {  throw  new  IllegalArgumentException( " ".equals(separator));  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(start)  {  throw  new  IllegalArgumentException( " ".equals(separator));  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
861	[BUG]  [BUGGY]  while(separator!=  null  &&  jsonWriter.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  jsonWriter.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(separator!=  null  &&  jsonWriter.isEmpty())  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.isEmpty())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
862	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT  +  1);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT  +  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT  +  1);	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
863	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT)+  1;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT)+  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT)+  1;	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
864	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.removeFirst();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.removeFirst();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  beforeValue.removeFirst();	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
865	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.clone();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.clone();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  beforeValue.clone();	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
866	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNCHRONIZED)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNCHRONIZED)  {  throw  new  NullPointerException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.UNKNOWN_SYNCHRONIZED)  {  throw  new  NullPointerException( " ");  }	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
867	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SECOND)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SECOND)  {  throw  new  NullPointerException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.UNKNOWN_SECOND)  {  throw  new  NullPointerException( " ");  }	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
868	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SINGLE_KEY)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SINGLE_KEY)  {  throw  new  NullPointerException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.UNKNOWN_SINGLE_KEY)  {  throw  new  NullPointerException( " ");  }	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
869	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SINGLE_ERROR)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SINGLE_ERROR)  {  throw  new  NullPointerException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.UNKNOWN_SINGLE_ERROR)  {  throw  new  NullPointerException( " ");  }	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
870	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNTHETIC)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNTHETIC)  {  throw  new  NullPointerException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.UNKNOWN_SYNTHETIC)  {  throw  new  NullPointerException( " ");  }	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
871	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNCHRONIZED)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNCHRONIZED)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.UNKNOWN_SYNCHRONIZED)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
872	[BUG]  [BUGGY]  parent.replaceChild(next,  null);  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  null);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  null);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
873	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_ROOT);  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_ROOT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.TYPE_ROOT);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
874	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.END_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.END_OBJECT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.END_OBJECT);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
875	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.EMPTY_STRING);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.EMPTY_STRING);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.EMPTY_STRING);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
876	[BUG]  [BUGGY]  parent.replaceChild(null,  next);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  next);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  next);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
877	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonElementWriter.class);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonElementWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonElementWriter.class);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
878	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocaleWriter.class);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocaleWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocaleWriter.class);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
879	[BUG]  [BUGGY]  While(value!=  null  &&  value.length()  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  While(value!=  null  &&  value.length()  >  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	While(value!=  null  &&  value.length()  >  0)  {  break;  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
880	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
881	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null.n ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null.n ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null.n ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
882	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(JsonNullWriter.TYPE_ARRAY);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(JsonNullWriter.TYPE_ARRAY);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(JsonNullWriter.TYPE_ARRAY);	  NeighborWriter    jsonWriter    =    JsonNullWriter.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
883	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  <  =  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null  ||  value.length()  <  =  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null  ||  value.length()  <  =  0)  {  break;  }	  if(value    ==    null    ||    value.length()    <    =    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
884	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.clone();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.clone();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.clone();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
885	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.removeFirst();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.removeFirst();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.removeFirst();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
886	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  out.getValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  out.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  out.getValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
887	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonIndex();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonIndex();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonIndex();	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
888	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonValue();	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
889	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNotNull();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonNotNull();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonNotNull();	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
890	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonText();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonText();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonText();	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
891	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance2StdValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance2StdValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance2StdValue();	  last    =    JsonStringEncoder.getInstance2();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
892	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  out);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  out);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
893	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  NONEMPTY_OBJECT);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
894	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue  +  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  beforeValue  +  1);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
895	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  endValue);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  endValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  endValue);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
896	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.nextValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.nextValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.nextValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
897	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.firstValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.firstValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.firstValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
898	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.incrementValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.incrementValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.incrementValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
899	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
900	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Long.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Long.valueOf(separator));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Long.valueOf(separator));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
901	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('n'));  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('n'));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('n'));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
902	[BUG]  [BUGGY]  parent.afterValue(this);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.afterValue(this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.afterValue(this);  break;	  parent.beforeValue(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
903	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "- ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "- ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "- ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
904	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "  start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "  start  of  expression ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "  start  of  expression ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
905	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "   ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( "   ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
906	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_OBJECT,  JSONWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_OBJECT,  JSONWriter.DEFAULT_TITLE_FONT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_OBJECT,  JSONWriter.DEFAULT_TITLE_FONT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
907	[BUG]  [BUGGY]  if(jsonReader!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(jsonReader!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
908	[BUG]  [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  continue;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  continue;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
909	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getValue(null);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getValue(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getValue(null);	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
910	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getBaseValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getBaseValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getBaseValue();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
911	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getValue().beforeValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getValue().beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getValue().beforeValue();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
912	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  out);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  out);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  out);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(out);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
913	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  strBuffer);  replaceTop(jsonWriter);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  strBuffer);  replaceTop(jsonWriter);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  strBuffer);  replaceTop(jsonWriter);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(out);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
914	[BUG]  [BUGGY]  NeighborValueWriter.this.start(separator);  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.start(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.start(separator);  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
915	[BUG]  [BUGGY]  NeighborValueWriter.this.start(null);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.start(null);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.start(null);  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
916	[BUG]  [BUGGY]  NeighborValueWriter.this.begin();  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.begin();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.begin();  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
917	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getEndValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getEndValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getEndValue();	  NeighborValue    <    Node>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
918	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getSeparator();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getSeparator();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getSeparator();	  NeighborValue    <    Node>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
919	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(this,  SHORT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(this,  SHORT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(this,  SHORT);	  last    =    JsonNull.createJsonNull(this);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
920	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(this)+  1;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(this)+  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(this)+  1;	  last    =    JsonNull.createJsonNull(this);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
921	[BUG]  [BUGGY]  out.append('$');  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  out.append('$');  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append('$');  break;	  out.append('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
922	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  name  is  null. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  name  is  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  name  is  null. ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
923	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('n');  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('n');  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append('n');  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
924	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(desc);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(desc);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(desc);  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
925	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('-');  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append('-');  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append('-');  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
926	[BUG]  [BUGGY]  sortir.append( ", ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sortir.append( ", ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	sortir.append( ", ");	  if(value!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
927	[BUG]  [BUGGY]  out.append( "   ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( "   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "   ");	  if(value!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
928	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(null,  this);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(null,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(null,  this);	  last    =    JsonNull.createJsonNull(null);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
929	[BUG]  [BUGGY]  safely(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safely(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safely(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
930	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  start,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(jsonWriter,  start,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  start,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
931	[BUG]  [BUGGY]  safestart(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safestart(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safestart(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
932	[BUG]  [BUGGY]  safe(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safe(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(jsonWriter,  beforeValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
933	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  end);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  end);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  end);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
934	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  start);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  start);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  start);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
935	[BUG]  [BUGGY]  if(jsonReader!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(jsonReader!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader!=  null  &&  jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
936	[BUG]  [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.FIELD_NAME))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
937	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " ".);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( " ".);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
938	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(getText()));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(getText()));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(getText()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
939	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue(null);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getValue(null);	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
940	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue().beforeValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue().beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getValue().beforeValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
941	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getBaseValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getBaseValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getBaseValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
942	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getEmptyValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getEmptyValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getEmptyValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
943	[BUG]  [BUGGY]  Negative  start  of  expression  =  null;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Negative  start  of  expression  =  null;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Negative  start  of  expression  =  null;	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
944	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Could  not  instantiate  the  NONEMPTY  start. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Could  not  instantiate  the  NONEMPTY  start. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Could  not  instantiate  the  NONEMPTY  start. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
945	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Please  check  that  the  initial  start  of  the  expression  does  not  exist. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Please  check  that  the  initial  start  of  the  expression  does  not  exist. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Please  check  that  the  initial  start  of  the  expression  does  not  exist. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
946	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ")  :  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ")  :  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ")  :  JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
947	[BUG]  [BUGGY]  throw  new  IllegalStateException( "JsonNull  value  is  null. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "JsonNull  value  is  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "JsonNull  value  is  null. ");	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
948	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
949	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLong(2);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLong(2);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLong(2);	  last    =    JsonNull.createJsonLong(0);    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
950	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLong(-1);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLong(-1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLong(-1);	  last    =    JsonNull.createJsonLong(0);    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
951	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  nextValue.evaluate(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  nextValue.evaluate(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  nextValue.evaluate(JsonWriter.EXPR_RESULT);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
952	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  firstValue.evaluate(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  firstValue.evaluate(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  firstValue.evaluate(JsonWriter.EXPR_RESULT);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
953	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT.evaluate(scope);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT.evaluate(scope);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonWriter.EXPR_RESULT.evaluate(scope);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
954	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  out.evaluate(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  out.evaluate(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  out.evaluate(JsonWriter.EXPR_RESULT);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
955	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonWriter.EXPR_RESULT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonWriter.EXPR_RESULT,  DANGLING_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  beforeValue.evaluate(JsonWriter.EXPR_RESULT,  DANGLING_NAME);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
956	[BUG]  [BUGGY]  while(separator!=  null)  {  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null)  {  out.append( "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(separator!=  null)  {  out.append( "null ");	  while(value!=    null)    {    out.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
957	[BUG]  [BUGGY]  while(value!=  null)  {  out.append( "null ",  value);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  out.append( "null ",  value);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null)  {  out.append( "null ",  value);	  while(value!=    null)    {    out.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
958	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  first.getValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <?>  value  =  first.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  first.getValue();	  NeighborValue    <?>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
959	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  firstValue.getValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <?>  value  =  firstValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  firstValue.getValue();	  NeighborValue    <?>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
960	[BUG]  [BUGGY]  NeighborValue  <?>  value  =  out.getValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <?>  value  =  out.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <?>  value  =  out.getValue();	  NeighborValue    <?>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
961	[BUG]  [BUGGY]  last  =  JsonNull.createJsonValue(-1);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonValue(-1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonValue(-1);	  last    =    JsonNull.createJsonValue();    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
962	[BUG]  [BUGGY]  last  =  JsonNull.createJsonValue(JsonNull.getStackTrace());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonValue(JsonNull.getStackTrace());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonValue(JsonNull.getStackTrace());	  last    =    JsonNull.createJsonValue();    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
963	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  nextValue.beforeValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  nextValue.beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  nextValue.beforeValue();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
964	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  first.beforeValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  first.beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  first.beforeValue();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
965	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.incrementValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.incrementValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.incrementValue();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
966	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral(-1);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLiteral(-1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral(-1);	  last    =    JsonNull.createJsonLiteral();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
967	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(separator,  out);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(separator,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(separator,  out);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
968	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(out);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(out);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
969	[BUG]  [BUGGY]  safeMultiply(out,  out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(out,  out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(out,  out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    out)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
970	[BUG]  [BUGGY]  safeMultiply(out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    out)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
971	[BUG]  [BUGGY]  safe(jsonWriter,  out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safe(jsonWriter,  out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(jsonWriter,  out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    out)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
972	[BUG]  [BUGGY]  safe(separator)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safe(separator)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(separator)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
973	[BUG]  [BUGGY]  safe(this.value)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safe(this.value)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(this.value)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
974	[BUG]  [BUGGY]  safely(start)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safely(start)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safely(start)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
975	[BUG]  [BUGGY]  safe(value)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safe(value)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(value)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
976	[BUG]  [BUGGY]  safe(out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safe(out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safe(out)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
977	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()  ==  getClass())  {  out.append( "null ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass()  ==  getClass())  {  out.append( "null ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()  ==  getClass())  {  out.append( "null ");	  while(value!=    null    &&    value.getClass()!=    getClass())    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
978	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()  ==  getClass())  {  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass()  ==  getClass())  {  out.append( "n ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()  ==  getClass())  {  out.append( "n ");	  while(value!=    null    &&    value.getClass()!=    getClass())    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
979	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNTHETIC  ||  value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNTHETIC  ||  value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.UNKNOWN_SYNTHETIC  ||  value  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
980	[BUG]  [BUGGY]  safeMultiply(value)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(value)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(value)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
981	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNTHETIC)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SYNTHETIC)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.UNKNOWN_SYNTHETIC)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
982	[BUG]  [BUGGY]  safeGet(value)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(value)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeGet(value)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
983	[BUG]  [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(value!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
984	[BUG]  [BUGGY]  if(this.value!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.value!=  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(this.value!=  null)  {  break;  }	  if(value!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
985	[BUG]  [BUGGY]  if(value  >=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  >=  null)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  >=  null)  {  break;  }	  if(value!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
986	[BUG]  [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
987	[BUG]  [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
988	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT),  this);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT),  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT),  this);	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
989	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT)+  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT)+  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT)+  1);	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
990	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(false);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(false);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonWriter(false);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    getJsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
991	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  nextValue);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  nextValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  nextValue);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
992	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  out);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
993	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(null);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
994	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(out);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(out);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
995	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
996	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator  +  1);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator  +  1);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator  +  1);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
997	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  str);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  str);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out,  str);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
998	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  out);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  out);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
999	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  false);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  false);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  false);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1000	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  SHORT_DESCRIPTOR);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  SHORT_DESCRIPTOR);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  SHORT_DESCRIPTOR);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1001	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.US_ASCII);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.US_ASCII);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.US_ASCII);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1002	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH)+  1;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH)+  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH)+  1;	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1003	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.START_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.START_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.START_OBJECT);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1004	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH  +  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH  +  1);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1005	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  end);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  end);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  end);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1006	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  next;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue  =  next;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  next;	  NeighborValueWriter.this.beforeValue    =    null;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1007	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  new  JsonReader();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue  =  new  JsonReader();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  new  JsonReader();	  NeighborValueWriter.this.beforeValue    =    null;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1008	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( " ")	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1009	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null.. ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null.. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null.. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1010	[BUG]  [BUGGY]  reader.replaceChild(this,  out);  break;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  reader.replaceChild(this,  out);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	reader.replaceChild(this,  out);  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1011	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_PLUS);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_PLUS);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_PLUS);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1012	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC)+  1;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC)+  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC)+  1;	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1013	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_STANDARD);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_STANDARD);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_STANDARD);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1014	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  out);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  out);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT,    out);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1015	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out,  null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out,  null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out,  null);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT,    out);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1016	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(':');  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(':');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(':');	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1017	[BUG]  [BUGGY]  safely(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safely(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safely(JsonWriter.NONEMPTY_OBJECT);	  safeReturn(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1018	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_OBJECT,  out);	  safeReturn(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1019	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_ELEMENT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_ELEMENT);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1020	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_ARRAY);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_ARRAY);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1021	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1022	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  out);	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1023	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  end);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  end);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  end);	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1024	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "- ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "- ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "- ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1025	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "   ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "   ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1026	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "> ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "> ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "> ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1027	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append(':');  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append(':');  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append(':');	  while(value!=    null    &&    value.length    >    0)    {    out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1028	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLong.class);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLong.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLong.class);	  last    =    JsonStringEncoder.getInstance(JsonReader.class);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1029	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonReader.class,  this);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonReader.class,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonReader.class,  this);	  last    =    JsonStringEncoder.getInstance(JsonReader.class);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1030	[BUG]  [BUGGY]  NeighborValueWriter.this.start(separator);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.start(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.start(separator);	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1031	[BUG]  [BUGGY]  NeighborValueWriter.this.startTime  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.startTime  =  System.currentTimeMillis();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.startTime  =  System.currentTimeMillis();	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1032	[BUG]  [BUGGY]  NeighborValueWriter.this.start(null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.start(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.start(null);	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1033	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT,  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT,  out);	  while(value!=    null    &&    value.length()    >    0)    {    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1034	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceStart(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceStart(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  replaceStart(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1035	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  beforeValue.removeFirst();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N>  value  =  beforeValue.removeFirst();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N>  value  =  beforeValue.removeFirst();	  NeighborValue    <    N>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1036	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  out.getValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N>  value  =  out.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N>  value  =  out.getValue();	  NeighborValue    <    N>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1037	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT);	  safeReplacement(JsonWriter.NONEMPTY_EXPR_RESULT,    null);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1038	[BUG]  [BUGGY]  out.append( "  <  null> ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  out.append( "  <  null> ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "  <  null> ");	  out.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1039	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encodeJsonString(JsonStringEncoder.getInstance());  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encodeJsonString(JsonStringEncoder.getInstance());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encodeJsonString(JsonStringEncoder.getInstance());	  last    =    JsonStringEncoder.encode(JsonStringEncoder.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1040	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  out);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  out);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encode(JsonStringEncoder.getInstance(),  out);	  last    =    JsonStringEncoder.encode(JsonStringEncoder.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1041	[BUG]  [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1042	[BUG]  [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1043	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( "* "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  ||  value.equals( "* "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.equals( "* "))  {  break;  }	  if(value    ==    null    ||    value.equals(   "   "))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1044	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( "n "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  ||  value.equals( "n "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.equals( "n "))  {  break;  }	  if(value    ==    null    ||    value.equals(   "   "))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1045	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( "+ "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  ||  value.equals( "+ "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.equals( "+ "))  {  break;  }	  if(value    ==    null    ||    value.equals(   "   "))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1046	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getError();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  out  =  getError();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  E>  out  =  getError();	  NeighborValue    <    N,    E>    out    =    getOut();    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1047	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.END_ARRAY);  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.END_ARRAY);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.END_ARRAY);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1048	[BUG]  [BUGGY]  parent.replaceChild(next,  this);  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  this);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1049	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_INT);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.TYPE_INT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.TYPE_INT);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1050	[BUG]  [BUGGY]  parent.replaceChild(next,  1);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  1);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  1);  break;	  parent.replaceChild(null,    nextValue);    break;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1051	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  name  is  not  valid. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  name  is  not  valid. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  name  is  not  valid. ");	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1052	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  value  is  less  than  1. ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  value  is  less  than  1. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  value  is  less  than  1. ");	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1053	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  value  is  less  than  1: ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  value  is  less  than  1: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  argument.  Please  check  that  the  value  is  less  than  1: ");	  throw    new    IllegalStateException(   "Nesting    argument.       ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1054	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_PLAIN);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_PLAIN);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_PLAIN);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1055	[BUG]  [BUGGY]  if(null  ==  value)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(null  ==  value)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(null  ==  value)  {  break;  }	  if(value!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1056	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getMeanValue();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getMeanValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getMeanValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1057	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getEndValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getEndValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  getEndValue();	  NeighborValue    <    N,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1058	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasValue(separator)||  jsonWriter.hasValue(separator))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasValue(separator)||  jsonWriter.hasValue(separator))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.hasValue(separator)||  jsonWriter.hasValue(separator))  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.hasValue(separator))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1059	[BUG]  [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME)||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME)||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME)||  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAME))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1060	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1061	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1062	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1063	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1064	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1065	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1066	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  this.beforeValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  this.beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  this.beforeValue();	  NeighborValue    <    Node>    value    =    beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1067	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(separator,  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(separator,  1);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(separator,  1);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(separator);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1068	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getAssignedValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getAssignedValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getAssignedValue();	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1069	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getMeanValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getMeanValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  getMeanValue();	  NeighborValue    <    N,    End>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1070	[BUG]  [BUGGY]  if(out!=  null  &&  out.length()  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null  &&  out.length()  >  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null  &&  out.length()  >  0)  {  break;  }	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1071	[BUG]  [BUGGY]  if(out!=  null  ||  out.length()  <  =  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null  ||  out.length()  <  =  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null  ||  out.length()  <  =  0)  {  break;  }	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1072	[BUG]  [BUGGY]  if(out!=  null  &&  out.size()  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null  &&  out.size()  >  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null  &&  out.size()  >  0)  {  break;  }	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1073	[BUG]  [BUGGY]  if(out!=  null  &&  out.length  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null  &&  out.length  >  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null  &&  out.length  >  0)  {  break;  }	  if(out!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1074	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1075	[BUG]  [BUGGY]  if(jsonReader!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(jsonReader!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader!=  null  &&  jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1076	[BUG]  [BUGGY]  if(jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1077	[BUG]  [BUGGY]  throw  new  NullPointerException( "Non-standard  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( "Non-standard  start  of  expression: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( "Non-standard  start  of  expression: ");	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1078	[BUG]  [BUGGY]  throw  new  NullPointerException( "Negative  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( "Negative  start  of  expression: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( "Negative  start  of  expression: ");	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1079	[BUG]  [BUGGY]  throw  new  NullPointerException( "Non-standard  start  of  expression. ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( "Non-standard  start  of  expression. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( "Non-standard  start  of  expression. ");	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1080	[BUG]  [BUGGY]  throw  new  NullPointerException( "Non-separator  argument. ");  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  NullPointerException( "Non-separator  argument. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  NullPointerException( "Non-separator  argument. ");	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1081	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.createJsonValue());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.createJsonValue());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString(JsonNull.createJsonValue());	  last    =    JsonNull.createJsonString();    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1082	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.createJsonName(null));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.createJsonName(null));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString(JsonNull.createJsonName(null));	  last    =    JsonNull.createJsonString();    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1083	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.createJsonText());  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.createJsonText());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString(JsonNull.createJsonText());	  last    =    JsonNull.createJsonString();    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1084	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString(null);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonString(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString(null);	  last    =    JsonNull.createJsonString();    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1085	[BUG]  [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.getStackTrace());  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonString(JsonNull.getStackTrace());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonString(JsonNull.getStackTrace());	  last    =    JsonNull.createJsonString();    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1086	[BUG]  [BUGGY]  out.append( "[ ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  out.append( "[ ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "[ ");	  if(value!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1087	[BUG]  [BUGGY]  safeThan(NullPointerException.class))  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeThan(NullPointerException.class))  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan(NullPointerException.class))  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
1088	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.class)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeThan  <  NullPointerException.class)  {  break;  }	  safeThan    <    NullPointerException.class)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
1089	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  this.beforeValue.evaluate(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  this.beforeValue.evaluate(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  this.beforeValue.evaluate(JsonWriter.EXPR_RESULT);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1090	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  arguments.evaluate(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  arguments.evaluate(JsonWriter.EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  arguments.evaluate(JsonWriter.EXPR_RESULT);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1091	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.createEmptyValue(JsonWriter.EXPR_RESULT,  str);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  JsonWriter.createEmptyValue(JsonWriter.EXPR_RESULT,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  JsonWriter.createEmptyValue(JsonWriter.EXPR_RESULT,  str);	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1092	[BUG]  [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1093	[BUG]  [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1094	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  getMessage());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  getMessage());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Negative  start  of  expression: "  +  getMessage());	  throw    new    IllegalArgumentException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1095	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.createJsonWriter(this));  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.createJsonWriter(this));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.createJsonWriter(this));  break;	  parent.beforeValue(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1096	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.JSON_SYNTHETIC);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.JSON_SYNTHETIC);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.JSON_SYNTHETIC);  break;	  parent.beforeValue(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1097	[BUG]  [BUGGY]  parent.replaceChild(this,  new  JsonWriter());  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  new  JsonWriter());  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  new  JsonWriter());  break;	  parent.beforeValue(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1098	[BUG]  [BUGGY]  if(separator  ==  null  ||  str.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null  ||  str.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null  ||  str.length()  ==  0)  {  break;  }	  if(separator    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1099	[BUG]  [BUGGY]  if(separator  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(separator    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1100	[BUG]  [BUGGY]  if(separator  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(separator    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1101	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null  ||  separator.length()  ==  0)  {  break;  }	  if(separator    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1102	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null  ||  separator.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null  ||  separator.isEmpty())  {  break;  }	  if(separator    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1103	[BUG]  [BUGGY]  out.append( ", ").append(separator);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  out.append( ", ").append(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( ", ").append(separator);  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1104	[BUG]  [BUGGY]  out.append( "  => ").append(separator);  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  out.append( "  => ").append(separator);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "  => ").append(separator);  break;	  out.append(   "n   ").append(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1105	[BUG]  [BUGGY]  parent.replaceChild(next,  this);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  this);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
1106	[BUG]  [BUGGY]  parent.replaceChild(next,  JsonWriter.END_ARRAY);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(next,  JsonWriter.END_ARRAY);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(next,  JsonWriter.END_ARRAY);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
1107	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.TYPE_ROOT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.TYPE_ROOT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.TYPE_ROOT);	  parent.replaceChild(null,    nextValue);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
1108	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.getAssignedValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.getAssignedValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.getAssignedValue();	  NeighborValue    <    N,>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1109	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "' ").append(separator).append( "' ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( "' ").append(separator).append( "' ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( "' ").append(separator).append( "' ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1110	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( ", ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( ", ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( ", ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1111	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( ": ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( ": ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator).append( ": ");	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator).append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1112	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem: ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem: ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1113	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  name  is  not  valid. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  name  is  not  valid. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  name  is  not  valid. ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1114	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  1. ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  1. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  1. ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1115	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  1: ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  1: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  1: ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1116	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  one. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  one. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  one. ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1117	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  endValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(jsonWriter,  endValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  endValue)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1118	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  this.beforeValue)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(jsonWriter,  this.beforeValue)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  this.beforeValue)  {  break;  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1119	[BUG]  [BUGGY]  safeMultiply(jsonWriter,  startTime)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(jsonWriter,  startTime)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeMultiply(jsonWriter,  startTime)  {  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  safeMultiply(jsonWriter,    beforeValue)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1120	[BUG]  [BUGGY]  if(value  ==  NULL  ||  value.startsWith( "- "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  NULL  ||  value.startsWith( "- "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  NULL  ||  value.startsWith( "- "))  {  break;  }	  if(value    ==    NULL)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1121	[BUG]  [BUGGY]  if(value  ==  NULL  ||  value.charAt(0)!=  '-')  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  NULL  ||  value.charAt(0)!=  '-')  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  NULL  ||  value.charAt(0)!=  '-')  {  break;  }	  if(value    ==    NULL)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1122	[BUG]  [BUGGY]  if(value  ==  NULL  ||  value.equals( "- "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  NULL  ||  value.equals( "- "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  NULL  ||  value.equals( "- "))  {  break;  }	  if(value    ==    NULL)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1123	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  str);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  str);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  str);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1124	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  true);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  true);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  true);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    break;    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1125	[BUG]  [BUGGY]  out.append( "  = ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  out.append( "  = ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "  = ");	  out.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1126	[BUG]  [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1127	[BUG]  [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1128	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  nextValue);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  nextValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  nextValue);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1129	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  beforeValue,  after);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  beforeValue,  after);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(separator,  beforeValue,  after);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(separator,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1130	[BUG]  [BUGGY]  NeighborValueWriter.this.startValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.startValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.startValue();	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1131	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue(null);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue(null);	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1132	[BUG]  [BUGGY]  NeighborValueWriter.this.startTime  =  System.currentTimeMillis()  -  1;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.startTime  =  System.currentTimeMillis()  -  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.startTime  =  System.currentTimeMillis()  -  1;	  NeighborValueWriter.this.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1133	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getAssignedValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getAssignedValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  beforeValue.getAssignedValue();	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1134	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  this.afterValue.getValue();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  this.afterValue.getValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  V>  value  =  this.afterValue.getValue();	  NeighborValue    <    N,    V>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1135	[BUG]  [BUGGY]  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1136	[BUG]  [BUGGY]  Negative  start  of  expression  must  be  initialized.   ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Negative  start  of  expression  must  be  initialized.   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Negative  start  of  expression  must  be  initialized.   ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1137	[BUG]  [BUGGY]  if(value  ==  NULL  ||  value.length()  <  =  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  NULL  ||  value.length()  <  =  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  NULL  ||  value.length()  <  =  0)  {  break;  }	  if(value    ==    null    ||    value.length()    <    =    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1138	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  <  =  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null  &&  value.length()  <  =  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null  &&  value.length()  <  =  0)  {  break;  }	  if(value    ==    null    ||    value.length()    <    =    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1139	[BUG]  [BUGGY]  validateValue(JsonWriter.NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  validateValue(JsonWriter.NONEMPTY_EXPR_RESULT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	validateValue(JsonWriter.NONEMPTY_EXPR_RESULT);	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1140	[BUG]  [BUGGY]  if(jsonReader!=  null  &&  jsonReader.getType()  ==  Token.EXPR_RESULT)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(jsonReader!=  null  &&  jsonReader.getType()  ==  Token.EXPR_RESULT)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader!=  null  &&  jsonReader.getType()  ==  Token.EXPR_RESULT)  {  break;  }	  if(jsonReader!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1141	[BUG]  [BUGGY]  if(jsonReader!=  null  ||  jsonReader.getType()  ==  Token.EXPR_RESULT)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(jsonReader!=  null  ||  jsonReader.getType()  ==  Token.EXPR_RESULT)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader!=  null  ||  jsonReader.getType()  ==  Token.EXPR_RESULT)  {  break;  }	  if(jsonReader!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1142	[BUG]  [BUGGY]  if(jsonReader!=  null  &&  jsonReader.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(jsonReader!=  null  &&  jsonReader.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader!=  null  &&  jsonReader.isEmpty())  {  break;  }	  if(jsonReader!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1143	[BUG]  [BUGGY]  if(jsonReader!=  null  &&  jsonReader.hasNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(jsonReader!=  null  &&  jsonReader.hasNext())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader!=  null  &&  jsonReader.hasNext())  {  break;  }	  if(jsonReader!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1144	[BUG]  [BUGGY]  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1145	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  must  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1146	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  endValue);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  endValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  endValue);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1147	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  JsonNull.createJsonNull());	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1148	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  SHORT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  SHORT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(this,  SHORT);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1149	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  SHORT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  SHORT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  SHORT);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1150	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  SHORT_DESCRIPTOR);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  SHORT_DESCRIPTOR);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  SHORT_DESCRIPTOR);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1151	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  SHORT_DESCENDING);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  SHORT_DESCENDING);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter(this,  SHORT_DESCENDING);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    new    NeighborWriter(this,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1152	[BUG]  [BUGGY]  out.append( "Non-separator ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  out.append( "Non-separator ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "Non-separator ");	  out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1153	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getMessage());  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getMessage());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getMessage());	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1154	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  column);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  column);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(out,  column);  break;	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1155	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(this);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.parseJsonWriter(this);  break;	  JsonWriter    jsonWriter    =    JsonWriter.parseJsonWriter(out);    break;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1156	[BUG]  [BUGGY]  if(out!=  null  &&  out.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null  &&  out.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(out!=  null  &&  out.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    out.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1157	[BUG]  [BUGGY]  if(value!=  null  ||  out.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null  ||  out.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null  ||  out.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    out.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1158	[BUG]  [BUGGY]  if(separator  ==  null  ||  out.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null  ||  out.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null  ||  out.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    out.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1159	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonString.class);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonString.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonString.class);	  last    =    JsonStringEncoder.getInstance(JsonReader.class);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1160	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonReader.class,  LAST_VALID_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonReader.class,  LAST_VALID_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonReader.class,  LAST_VALID_NAME);	  last    =    JsonStringEncoder.getInstance(JsonReader.class);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1161	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  this.beforeValue.beforeValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  this.beforeValue.beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  this.beforeValue.beforeValue();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1162	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.previousValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  beforeValue.previousValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,>  value  =  beforeValue.previousValue();	  NeighborValue    <    N,>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1163	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  str);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  str);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1164	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  endValue);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  endValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  endValue);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1165	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  line);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  line);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  line);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1166	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  endOffset);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  endOffset);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_OBJECT,  endOffset);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT,    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1167	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " "),  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " "),  JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1168	[BUG]  [BUGGY]  throw  new  IllegalStateException( "JsonNull.createJsonNull()  : "  +  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "JsonNull.createJsonNull()  : "  +  JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "JsonNull.createJsonNull()  : "  +  JsonNull.createJsonNull());	  throw    new    IllegalStateException(   "   ".equals(JsonNull.createJsonNull()));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1169	[BUG]  [BUGGY]  if(start)  {  out.append('n');  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  out.append('n');  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  out.append('n');  break;  }	  out.append('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1170	[BUG]  [BUGGY]  if(start)  {  out.append('n');  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  out.append('n');  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  out.append('n');  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  out.append('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1171	[BUG]  [BUGGY]  if(start)  {  out.append('n');  break;  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  out.append('n');  break;  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  out.append('n');  break;  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  out.append('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1172	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPECT);	  safeReturn(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1173	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  3)  {  out.append(Separator.charAt(value.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  3)  {  out.append(Separator.charAt(value.length()  -  1));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  3)  {  out.append(Separator.charAt(value.length()  -  1));	  while(value!=    null    &&    value.length()    >    0)    {    out.append(Separator.charAt(value.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1174	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(String.valueOf(value.length()));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(String.valueOf(value.length()));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(String.valueOf(value.length()));	  while(value!=    null    &&    value.length()    >    0)    {    out.append(Separator.charAt(value.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1175	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonParser();  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonParser();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonParser();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1176	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonLiteral();  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonLiteral();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonLiteral();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1177	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonReader();  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonReader();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonReader();  break;	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1178	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1179	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  this.beforeValue.beforeValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  this.beforeValue.beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  this.beforeValue.beforeValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1180	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  value.beforeValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  value.beforeValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  value.beforeValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.beforeValue();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1181	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  out.toString());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  out.toString());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  out.toString());	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1182	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  column);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  column);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonNullWriter(out,  column);	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNullWriter(out);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1183	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonText();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonText();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonText();	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1184	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonArrayWriter();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonArrayWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonArrayWriter();	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1185	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonParser();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonParser();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonParser();	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1186	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonValue();	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1187	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonLiteral();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonLiteral();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonLiteral();	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1188	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonIndexWriter();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonIndexWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonIndexWriter();	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1189	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue  =  nextValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue  =  nextValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue  =  nextValue();	  NeighborValueWriter.this.beforeValue    =    null;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1190	[BUG]  [BUGGY]  aught(1)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aught(1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aught(1)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1191	[BUG]  [BUGGY]  aught(1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aught(1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aught(1)  {  throw  new  IllegalArgumentException( " ");  }	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1192	[BUG]  [BUGGY]  aughtException( "Non-Javadoc  not  a  valid  start  of  expression. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-Javadoc  not  a  valid  start  of  expression. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aughtException( "Non-Javadoc  not  a  valid  start  of  expression. ");	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1193	[BUG]  [BUGGY]  aughtException( "Non-Javadoc  not  a  valid  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-Javadoc  not  a  valid  start  of  expression: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aughtException( "Non-Javadoc  not  a  valid  start  of  expression: ");	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1194	[BUG]  [BUGGY]  aughtException( "Non-standard  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-standard  start  of  expression  must  be  initialized. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aughtException( "Non-standard  start  of  expression  must  be  initialized. ");	  if(start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1195	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonText();  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonText();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonText();  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1196	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonValue();  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonValue();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonValue();  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1197	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonArrayWriter();  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonArrayWriter();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonArrayWriter();  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1198	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonLiteral();  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonLiteral();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.createJsonLiteral();  break;	  NeighborWriter    jsonWriter    =    JsonNullWriter.createJsonNull();    break;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1199	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1200	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1201	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  initialized. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  initialized. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1202	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  in  the  range  [ "  +  getClass().getName()  + "]. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  in  the  range  [ "  +  getClass().getName()  + "]. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  in  the  range  [ "  +  getClass().getName()  + "]. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1203	[BUG]  [BUGGY]  Parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_ERROR,  JsonWriter.DEFAULT_TITLE_FONT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1204	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_ERROR,  this);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_ERROR,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_ERROR,  this);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1205	[BUG]  [BUGGY]  if(jsonWriter!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1206	[BUG]  [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  else  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  else  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  else  {  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1207	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT_DESCRIPTOR);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT_DESCRIPTOR);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT_DESCRIPTOR);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1208	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    break;    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1209	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  numeric  value. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  numeric  value. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aughtException( "Non-separator  method  not  followed  by  a  numeric  value. ");	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1210	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  null  value ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  null  value ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aughtException( "Non-separator  method  not  followed  by  a  null  value ");	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1211	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  value. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  value. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aughtException( "Non-separator  method  not  followed  by  a  value. ");	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1212	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  numeric  value ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  numeric  value ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aughtException( "Non-separator  method  not  followed  by  a  numeric  value ");	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1213	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  string  value. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  string  value. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aughtException( "Non-separator  method  not  followed  by  a  string  value. ");	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1214	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  null  value. ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  null  value. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	aughtException( "Non-separator  method  not  followed  by  a  null  value. ");	  if(value    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1215	[BUG]  [BUGGY]  NeighborValueWriter.this.startValue();  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.startValue();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.startValue();  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1216	[BUG]  [BUGGY]  NeighborValueWriter.this.notifyValueChanged();  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.notifyValueChanged();  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.notifyValueChanged();  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1217	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue(null);  break;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue(null);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue(null);  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1218	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue(JsonWriter.this);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue(JsonWriter.this);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValueWriter.this.beforeValue(JsonWriter.this);  break;	  NeighborValueWriter.this.beforeValue();    break;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1219	[BUG]  [BUGGY]  if(start)  {  out.append( "null ");  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  out.append( "null ");  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  out.append( "null ");  replaceTop(NONEMPTY_OBJECT);  break;  }	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1220	[BUG]  [BUGGY]  if(start)  {  out.append( "none ");  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  out.append( "none ");  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  out.append( "none ");  replaceTop(NONEMPTY_OBJECT);  break;  }	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1221	[BUG]  [BUGGY]  if(start)  {  out.append( "None ");  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  out.append( "None ");  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  out.append( "None ");  replaceTop(NONEMPTY_OBJECT);  break;  }	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1222	[BUG]  [BUGGY]  if(start)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(start)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  break;  }	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1223	[BUG]  [BUGGY]  last  =  JsonNull.createJSParser();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJSParser();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJSParser();	  last    =    JsonNull.createJSNull();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1224	[BUG]  [BUGGY]  last  =  JsonNull.createJSDocInfo();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJSDocInfo();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJSDocInfo();	  last    =    JsonNull.createJSNull();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
1225	[BUG]  [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out,  str);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReplacement(JsonWriter.NONEMPTY_OBJECT,  out,  str);	  safeReplacement(JsonWriter.NONEMPTY_OBJECT,    out);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1226	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( ", ");  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1227	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null)    {    out.append(separator);    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1228	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral(JsonNull.createJsonLiteral());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLiteral(JsonNull.createJsonLiteral());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral(JsonNull.createJsonLiteral());	  last    =    JsonNull.createJsonLiteral();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1229	[BUG]  [BUGGY]  last  =  JsonNull.createJsonLiteral(JsonNull.createJsonLiteral(0));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonLiteral(JsonNull.createJsonLiteral(0));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonLiteral(JsonNull.createJsonLiteral(0));	  last    =    JsonNull.createJsonLiteral();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1230	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  str);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  str);	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1231	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.getClass()!=  getClass())  {  out.append(separator);	  while(value!=    null    &&    value.getClass()!=    getClass())    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1232	[BUG]  [BUGGY]  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1233	[BUG]  [BUGGY]  Negative  start  of  expression  cannot  be  null.   ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Negative  start  of  expression  cannot  be  null.   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Negative  start  of  expression  cannot  be  null.   ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1234	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  null. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  must  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1235	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.WHOLE_COLLECTION);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.WHOLE_COLLECTION);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.WHOLE_COLLECTION);	  last    =    JsonStringEncoder.getInstanceUTC();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1236	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encodeAsString(JsonStringEncoder.getInstanceUTC());  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encodeAsString(JsonStringEncoder.getInstanceUTC());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encodeAsString(JsonStringEncoder.getInstanceUTC());	  last    =    JsonStringEncoder.getInstanceUTC();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1237	[BUG]  [BUGGY]  last  =  JsonStringEncoder.encodeAsString(JsonStringEncoder.getInstance());  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.encodeAsString(JsonStringEncoder.getInstance());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.encodeAsString(JsonStringEncoder.getInstance());	  last    =    JsonStringEncoder.getInstanceUTC();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1238	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(JsonNullWriter.TYPE_INT_ARRAY);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(JsonNullWriter.TYPE_INT_ARRAY);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNullWriter.getInstance(JsonNullWriter.TYPE_INT_ARRAY);	  NeighborWriter    jsonWriter    =    JsonNullWriter.getInstance();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1239	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Nesting  exception: ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Nesting  exception: ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( "Nesting  exception: ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1240	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Nesting  problem.   ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Nesting  problem.   ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	Throwables.throw  new  IllegalStateException( "Nesting  problem.   ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1241	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.UTF8);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.UTF8);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.UTF8);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1242	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  this);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLocale.ENGLISH,  this);	  last    =    JsonStringEncoder.getInstance(JsonLocale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1243	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  1);  break;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  1);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  1);  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1244	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  'n');  break;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  'n');  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  'n');  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1245	[BUG]  [BUGGY]  parent.replaceChild(this,  out,  '-');  break;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out,  '-');  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  out,  '-');  break;	  parent.replaceChild(this,    out);    break;    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1246	[BUG]  [BUGGY]  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	IllegalArgumentException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1247	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  DEFAULT_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  DEFAULT_NAME);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1248	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  true);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  true);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT,  true);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1249	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull(JsonNull.createJsonNull());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonNull(JsonNull.createJsonNull());	  last    =    JsonNull.createJsonNull(0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1250	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parseAndIgnoreWhitespace(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1251	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_DANGLING_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	replaceTop(JsonWriter.NONEMPTY_DANGLING_NAME);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1252	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  str);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  str);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1253	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonParser();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonParser();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonParser();	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1254	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonReader();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonReader();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonReader();	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1255	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonWriter();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonWriter();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonWriter();	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1256	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonLiteral();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonNull.createJsonLiteral();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  JsonNull.createJsonLiteral();	  NeighborWriter    jsonWriter    =    JsonNull.createJsonNull();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1257	[BUG]  [BUGGY]  last  =  JsonNull.createJsonValue(JsonNull.TYPE_INT_ARRAY);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonValue(JsonNull.TYPE_INT_ARRAY);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonNull.createJsonValue(JsonNull.TYPE_INT_ARRAY);	  last    =    JsonNull.createJsonValue();    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
1258	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression  must  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalArgumentException( "Negative  start  of  expression  must  not  be  null. ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalArgumentException( "Negative  start  of  expression  must  not  be  null. ");	  throw    new    IllegalArgumentException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1259	[BUG]  [BUGGY]  if(separator  ==  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(separator  ==  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  break;  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    break;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1260	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_BOTH,  JsonWriter.DEFAULT_TITLE_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_BOTH,  JsonWriter.DEFAULT_TITLE_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_BOTH,  JsonWriter.DEFAULT_TITLE_OBJECT);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1261	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_NAME);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.DEFAULT_TITLE_FONT,  JsonWriter.DEFAULT_TITLE_NAME);	  parent.replaceChild(this,    JsonWriter.DEFAULT_TITLE_FONT,    JsonWriter.DEFAULT_TITLE_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1262	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ")  :  this.beforeValue.equals(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ")  :  this.beforeValue.equals(this.beforeValue);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	throw  new  IllegalStateException( " ")  :  this.beforeValue.equals(this.beforeValue);	  throw    new    IllegalStateException(   "   ".equals(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1263	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "# ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  out.append( "# ");  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  out.append( "# ");	  while(value!=    null    &&    value.length    >    0)    {    out.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1264	[BUG]  [BUGGY]  if(jsonWriter  ==  null  ||!jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter  ==  null  ||!jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter  ==  null  ||!jsonWriter.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonWriter    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1265	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_EXPECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_EXPECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_EXPECT);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1266	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_LONG);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_LONG);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  jsonWriter  =  new  NeighborWriter(JsonWriter.NONEMPTY_LONG);	  NeighborWriter    jsonWriter    =    new    NeighborWriter(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1267	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getMeanValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getMeanValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getMeanValue();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1268	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  getEndValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  getEndValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  K,  V>  value  =  getEndValue();	  NeighborValue    <    K,    V>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1269	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(null);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(null);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(null);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1270	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(this);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(this);	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1271	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(nullWriter());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(nullWriter());  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  new  NeighborWriter  <  JsonWriter>(nullWriter());	  NeighborWriter    <    JsonWriter>    jsonWriter    =    nullWriter();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1272	[BUG]  [BUGGY]  while(value!=  null  &&  key.length()  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  key.length()  >  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  key.length()  >  0)  {  break;  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1273	[BUG]  [BUGGY]  while(separator!=  null  &&  value.length()  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  value.length()  >  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(separator!=  null  &&  value.length()  >  0)  {  break;  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1274	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length  >  0)  {  break;  }	  while(value!=    null    &&    value.length()    >    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1275	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance2(JsonStringEncoder.class);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance2(JsonStringEncoder.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance2(JsonStringEncoder.class);	  last    =    JsonStringEncoder.getInstance2();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1276	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance2(JsonStringEncoder.TYPE_INT_ARRAY);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance2(JsonStringEncoder.TYPE_INT_ARRAY);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance2(JsonStringEncoder.TYPE_INT_ARRAY);	  last    =    JsonStringEncoder.getInstance2();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1277	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getEmptyValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  out  =  getEmptyValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  E>  out  =  getEmptyValue();	  NeighborValue    <    N,    E>    out    =    getOut();    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1278	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&!jsonWriter.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&!jsonWriter.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&!jsonWriter.isEmpty())  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.isEmpty())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1279	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonReader.isEmpty())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonReader.isEmpty())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonReader.isEmpty())  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.isEmpty())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1280	[BUG]  [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(jsonWriter!=  null  &&  jsonWriter.hasNext())  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(jsonWriter!=  null  &&  jsonWriter.hasNext())  {  break;  }	  while(jsonWriter!=    null    &&    jsonWriter.isEmpty())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1281	[BUG]  [BUGGY]  if(jsonReader  ==  null  ||!jsonReader.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(jsonReader  ==  null  ||!jsonReader.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader  ==  null  ||!jsonReader.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  break;  }	  if(jsonReader    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1282	[BUG]  [BUGGY]  if(jsonReader  ==  null  ||!jsonReader.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(jsonReader  ==  null  ||!jsonReader.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonReader  ==  null  ||!jsonReader.isEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(jsonReader    ==    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1283	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  str);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  str);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1284	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  end);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  end);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  end);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1285	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  start);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  start);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY,  start);	  last    =    JsonStringEncoder.getInstance(JsonStringEncoder.TYPE_INT_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1286	[BUG]  [BUGGY]  safely(separator)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safely(separator)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safely(separator)  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1287	[BUG]  [BUGGY]  safely(value)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safely(value)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safely(value)  {  throw  new  IllegalStateException( " ");  }	  safely(value)    {    break;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1288	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT),  JsonWriter.START_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT),  JsonWriter.START_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT),  JsonWriter.START_OBJECT);	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1289	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  str));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  str));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT,  str));	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1290	[BUG]  [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(JsonWriter.NONEMPTY_OBJECT));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	safeReturn(JsonWriter.NONEMPTY_OBJECT));	  safeReturn(JsonWriter.NONEMPTY_EXPR_RESULT));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1291	[BUG]  [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(jsonWriter!=  null  &&  jsonWriter.isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  break;  }	  if(jsonWriter!=    null    &&    jsonWriter.isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1292	[BUG]  [BUGGY]  out.append( "None ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  out.append( "None ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	out.append( "None ");  replaceTop(NONEMPTY_OBJECT);	  out.append(   "n   ");    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1293	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getValue()  -  1;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getValue()  -  1;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  getValue()  -  1;	  NeighborValue    <    Node>    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1294	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  this.beforeValue.evaluate(JsonNull.valueOf(value));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  this.beforeValue.evaluate(JsonNull.valueOf(value));  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  Node>  value  =  this.beforeValue.evaluate(JsonNull.valueOf(value));	  NeighborValue    <    Node>    value    =    beforeValue.evaluate(JsonNull.valueOf(value));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1295	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()!=  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null  &&  value.length()!=  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null  &&  value.length()!=  0)  {  break;  }	  if(value    ==    null    ||    value.length()!=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1296	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.getAssignedValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.getAssignedValue();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.getAssignedValue();	  NeighborValue    <    N,    End>    value    =    beforeValue.getValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
1297	[BUG]  [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonReader();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonReader();  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	NeighborWriter  <  JsonWriter>  jsonWriter  =  getJsonReader();	  NeighborWriter    <    JsonWriter>    jsonWriter    =    getJsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1298	[BUG]  [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT));  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT));  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(this,  JsonWriter.NONEMPTY_OBJECT,  replaceTop(NONEMPTY_OBJECT));  break;	  parent.replaceChild(this,    JsonWriter.NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1299	[BUG]  [BUGGY]  if(value!=  null  ||  value.equals( "   "))  {  break;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null  ||  value.equals( "   "))  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null  ||  value.equals( "   "))  {  break;  }	  if(value    ==    null    ||    value.equals(   "   "))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1300	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  str);  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  str);  break;  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  str);  break;	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    break;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1301	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLongValueWriter.class);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLongValueWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLongValueWriter.class);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1302	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLongWriter.class);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonLongWriter.class);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonLongWriter.class);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1303	[BUG]  [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonNullWriter.class,  str);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonStringEncoder.getInstance(JsonNullWriter.class,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	last  =  JsonStringEncoder.getInstance(JsonNullWriter.class,  str);	  last    =    JsonStringEncoder.getInstance(JsonNullWriter.class);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1304	[BUG]  [BUGGY]  while(value!=  null  &&  key.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  key.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  key.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT);	  while(value!=    null    &&    value.length()    >    0)    {    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1305	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT,  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT,  out.append(separator);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	while(value!=  null  &&  value.length()  >  0)  {  replaceTop(NONEMPTY_OBJECT,  out.append(separator);	  while(value!=    null    &&    value.length()    >    0)    {    replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1306	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  name);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  name);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  name);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1307	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  str);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  str);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  str);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1308	[BUG]  [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  this);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  this);  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	parent.replaceChild(null,  JsonWriter.NONEMPTY_OBJECT,  this);	  parent.replaceChild(null,    JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1309	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null  &&  value.length()  ==  0)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value!=  null  &&  value.length()  ==  0)  {  break;  }	  if(value    ==    null    ||    value.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1310	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  1)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null  ||  value.length()  ==  1)  {  break;  }  [BUGGY]        case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	if(value  ==  null  ||  value.length()  ==  1)  {  break;  }	  if(value    ==    null    ||    value.length()    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
