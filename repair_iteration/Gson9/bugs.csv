bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] out.write(value ? "true" : "false"); [FE] NullPointerException [CONTEXT] [BUGGY] out.write(value ? "true" : "false"); [BUGGY] return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value 	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.35355339059327373	467	467	1	replace	
2	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] out.write(value ? "true" : "false"); return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value 	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.35355339059327373	467	467	1	add	
3	[BUG] [BUGGY] return this; [FE] NullPointerException [CONTEXT] [BUGGY] return this; [BUGGY] } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value 	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.35355339059327373	468	468	1	replace	
4	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value 	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.35355339059327373	468	468	1	add	
5	[BUG] [BUGGY] writeDeferredName(); [FE] NullPointerException [CONTEXT] [BUGGY] writeDeferredName(); [BUGGY] beforeValue(); out.write(value ? "true" : "false"); return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value 	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	replace	
6	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] writeDeferredName(); beforeValue(); out.write(value ? "true" : "false"); return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value 	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	465	465	1	add	
7	[BUG] [BUGGY] beforeValue(); [FE] NullPointerException [CONTEXT] [BUGGY] beforeValue(); [BUGGY] out.write(value ? "true" : "false"); return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value 	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	466	466	1	replace	
8	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] beforeValue(); out.write(value ? "true" : "false"); return this; } [CLASS] JsonWriter [METHOD] value [RETURN_TYPE] JsonWriter  boolean value 	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.3333333333333333	466	466	1	add	
9	[BUG] [BUGGY] out.append(','); [FE] NullPointerException [CONTEXT] [BUGGY] out.append(','); [BUGGY] newline(); break; case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); break; default: throw new IllegalStateException("Nesting problem."); [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	637	637	1	replace	
10	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] out.append(','); newline(); break; case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); break; default: throw new IllegalStateException("Nesting problem."); [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	637	637	1	add	
11	[BUG] [BUGGY] newline(); [FE] NullPointerException [CONTEXT] [BUGGY] newline(); [BUGGY] break; case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); break; default: throw new IllegalStateException("Nesting problem."); } [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	
12	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] newline(); break; case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); break; default: throw new IllegalStateException("Nesting problem."); } [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	add	
13	[BUG] [BUGGY] break; [FE] NullPointerException [CONTEXT] [BUGGY] break; [BUGGY]  case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); break; default: throw new IllegalStateException("Nesting problem."); } } [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	replace	
14	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] break; case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); break; default: throw new IllegalStateException("Nesting problem."); } } [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	639	639	1	add	
15	[BUG] [BUGGY] replaceTop(NONEMPTY_ARRAY); [FE] NullPointerException [CONTEXT] [BUGGY] replaceTop(NONEMPTY_ARRAY); [BUGGY] newline(); break; case NONEMPTY_ARRAY: // another in array out.append(','); newline(); break; case DANGLING_NAME: // value for name out.append(separator); [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	replace	
16	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] replaceTop(NONEMPTY_ARRAY); newline(); break; case NONEMPTY_ARRAY: // another in array out.append(','); newline(); break; case DANGLING_NAME: // value for name out.append(separator); [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	632	632	1	add	
17	[BUG] [BUGGY] newline(); [FE] NullPointerException [CONTEXT] [BUGGY] newline(); [BUGGY] break; case NONEMPTY_ARRAY: // another in array out.append(','); newline(); break; case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	633	633	1	replace	
18	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] newline(); break; case NONEMPTY_ARRAY: // another in array out.append(','); newline(); break; case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	633	633	1	add	
19	[BUG] [BUGGY] break; [FE] NullPointerException [CONTEXT] [BUGGY] break; [BUGGY]  case NONEMPTY_ARRAY: // another in array out.append(','); newline(); break; case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); break; [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	634	634	1	replace	
20	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] break; case NONEMPTY_ARRAY: // another in array out.append(','); newline(); break; case DANGLING_NAME: // value for name out.append(separator); replaceTop(NONEMPTY_OBJECT); break; [CLASS] JsonWriter [METHOD] beforeValue [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.2581988897471611	634	634	1	add	
21	[BUG] [BUGGY] return; [FE] NullPointerException [CONTEXT] [BUGGY] return; [BUGGY] } out.write("\n"); for (int i = 1, size = stackSize; i < size; i++) { out.write(indent); } } [CLASS] JsonWriter [METHOD] newline [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.24253562503633297	589	589	1	replace	
22	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] return; } out.write("\n"); for (int i = 1, size = stackSize; i < size; i++) { out.write(indent); } } [CLASS] JsonWriter [METHOD] newline [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.24253562503633297	589	589	1	add	
23	[BUG] [BUGGY] if (indent == null) { [FE] NullPointerException [CONTEXT] [BUGGY] if (indent == null) { [BUGGY] return; } out.write("\n"); for (int i = 1, size = stackSize; i < size; i++) { out.write(indent); } } [CLASS] JsonWriter [METHOD] newline [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.22941573387056174	588	588	1	replace	
24	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (indent == null) { return; } out.write("\n"); for (int i = 1, size = stackSize; i < size; i++) { out.write(indent); } } [CLASS] JsonWriter [METHOD] newline [RETURN_TYPE] void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.22941573387056174	588	588	1	add	
