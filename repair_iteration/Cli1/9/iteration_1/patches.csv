bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  false);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  false);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  false);	      String    args    =    getOptionName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
2	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  null);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  null);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  null);	      String    args    =    getOptionName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
3	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  true);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  true);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  true);	      String    args    =    getOptionName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
4	[BUG]  [BUGGY]  String  option  =  getOption(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOption(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOption(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	      String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
5	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt)+  1);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt)+  1);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt)+  1);	      String    option    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  missing  return  statement	8	None	replace
6	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt  +  1));  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt  +  1));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt  +  1));	      String    option    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  missing  return  statement	8	None	replace
7	[BUG]  [BUGGY]  String  option  =  getOption(String.valueOf(opt),  args);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOption(String.valueOf(opt),  args);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOption(String.valueOf(opt),  args);	      String    option    =    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
8	[BUG]  [BUGGY]  String  option  =  getOption(String.valueOf(opt),  false);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOption(String.valueOf(opt),  false);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOption(String.valueOf(opt),  false);	      String    option    =    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
9	[BUG]  [BUGGY]  String  option  =  getOption(String.valueOf(opt),  null);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOption(String.valueOf(opt),  null);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOption(String.valueOf(opt),  null);	      String    option    =    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
10	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	12	None	add
11	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	12	None	add
12	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  Option  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  Option  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    Option  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	12	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
14	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
15	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  >=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  >=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option  >=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	12	None	add
16	[BUG]  [BUGGY]  String  option  =  getOption(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOption(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOption(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	      String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  2));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(String.valueOf(opt  +  2));	  return    getOptionValue(String.valueOf(opt    +    1));    	compilable	  [FE]  ComparisonFailure  	5	1	replace
18	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  2));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  2));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt  +  2));	  return    getOptionValue(String.valueOf(opt    +    1));    	compilable	  [FE]  ComparisonFailure  	5	1	replace
19	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1),  true);  [CE]  no  suitable  method  found  for  getOptionValue(String,boolean)  [FE]      ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1),  true);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt  +  1),  true);	  return    getOptionValue(String.valueOf(opt    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,boolean)	5	None	replace
20	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  false);  [CE]  no  suitable  method  found  for  getOptionValue(String,boolean)  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  false);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  false);	      String    option    =    getOptionValue(String.valueOf(option));    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,boolean)	19	None	replace
21	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  true);  [CE]  no  suitable  method  found  for  getOptionValue(String,boolean)  [FE]              AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  true);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  true);	      String    option    =    getOptionValue(String.valueOf(option));    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,boolean)	19	None	replace
22	[BUG]  [BUGGY]  String  args  =  getOption(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOption(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOption(String.valueOf(opt));	      String    args    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
23	[BUG]  [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt)+  1);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt)+  1);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionValue(String.valueOf(opt)+  1);	      String    args    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  missing  return  statement	11	None	replace
24	[BUG]  [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt  +  1));  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt  +  1));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionValue(String.valueOf(opt  +  1));	      String    args    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  missing  return  statement	11	None	replace
25	[BUG]  [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));  [CE]  variable  options  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    options    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  getOptionValue(char)	16	None	add
26	[BUG]  [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(option));  [CE]  variable  options  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(option));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    options    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(option));	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  getOptionValue(char)	16	None	add
27	[BUG]  [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  String  options  =  findOptionValue(String.valueOf(opt));  [CE]  variable  options  is  already  defined  in  method  getOptionValue(char)  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  String  options  =  findOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    options    =    getOptionValue(String.valueOf(opt));    String  options  =  findOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  getOptionValue(char)	16	None	add
28	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  option  =  getOptionValue(String.valueOf(opt  +  1));  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  option  =  getOptionValue(String.valueOf(opt  +  1));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt    +    1));    String  option  =  getOptionValue(String.valueOf(opt  +  1));	  	non-compiled	[CE]  unreachable  statement	4	None	add
29	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  args  =  getOptionValue(String.valueOf(opt  +  1));  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  args  =  getOptionValue(String.valueOf(opt  +  1));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt    +    1));    String  args  =  getOptionValue(String.valueOf(opt  +  1));	  	non-compiled	[CE]  unreachable  statement	4	None	add
30	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  options  =  getOptionValue(String.valueOf(opt  +  1));  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  options  =  getOptionValue(String.valueOf(opt  +  1));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt    +    1));    String  options  =  getOptionValue(String.valueOf(opt  +  1));	  	non-compiled	[CE]  unreachable  statement	4	None	add
31	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  value  =  getOptionValue(String.valueOf(opt  +  1));  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  value  =  getOptionValue(String.valueOf(opt  +  1));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt    +    1));    String  value  =  getOptionValue(String.valueOf(opt  +  1));	  	non-compiled	[CE]  unreachable  statement	4	None	add
32	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  opt  =  getOptionValue(String.valueOf(opt  +  1));  [CE]  variable  opt  is  already  defined  in  method  getOptionValue(char)  [FE]            ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  opt  =  getOptionValue(String.valueOf(opt  +  1));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt    +    1));    String  opt  =  getOptionValue(String.valueOf(opt  +  1));	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  getOptionValue(char)	4	None	add
33	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  2);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(String.valueOf(opt)+  2);	  return    getOptionValue(String.valueOf(opt)+    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
34	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  2);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt)+  2);	  return    getOptionValue(String.valueOf(opt)+    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  0);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(String.valueOf(opt)+  0);	  return    getOptionValue(String.valueOf(opt)+    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
36	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  0);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  0);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt)+  0);	  return    getOptionValue(String.valueOf(opt)+    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();	  return    getOptionValue(String.valueOf(opt)+    1);    	compilable	  [FE]  NullPointerException  	2	1	replace
38	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [FE]  NullPointerException  [FE]        ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();	  return    getOptionValue(String.valueOf(opt)+    1);    	compilable	  [FE]  NullPointerException  	2	1	replace
39	[BUG]  [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  args);  [CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  args);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptions(String.valueOf(opt),  args);	      String    options    =    getOptions(String.valueOf(opt));    	non-compiled	[CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;	18	None	replace
40	[BUG]  [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  hashcode);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptions(String.valueOf(opt),  hashcode);	      String    options    =    getOptions(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  hashcode	18	None	replace
41	[BUG]  [BUGGY]  String  options  =  getOptions(String.valueOf(opt)+  1);  [CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  options  =  getOptions(String.valueOf(opt)+  1);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptions(String.valueOf(opt)+  1);	      String    options    =    getOptions(String.valueOf(opt));    	non-compiled	[CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;	18	None	replace
42	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOption(String.valueOf(opt),  String.valueOf(opt));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  String.valueOf(opt));	  return    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
43	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  args);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOption(String.valueOf(opt),  args);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  args);	  return    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
44	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  String.class);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOption(String.valueOf(opt),  String.class);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  String.class);	  return    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
45	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  option  =  getOptionValue(String.valueOf(opt));  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  option  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    String  option  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	7	None	add
46	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  option  =  getOptionValue(String.valueOf(option));  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  option  =  getOptionValue(String.valueOf(option));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    String  option  =  getOptionValue(String.valueOf(option));	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	7	None	add
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  Option  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	        String    option    =    getOptionValue(String.valueOf(opt));    String  Option  =  getOptionValue(String.valueOf(opt));	  	compilable	  [FE]  AssertionFailedError  	7	1	add
48	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  Option  =  getOptionValue(String.valueOf(opt));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  Option  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    String  Option  =  getOptionValue(String.valueOf(opt));	  	compilable	  [FE]  AssertionFailedError  	7	1	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	        String    option    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(opt));	  	compilable	  [FE]  AssertionFailedError  	7	1	add
50	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(opt));	  	compilable	  [FE]  AssertionFailedError  	7	1	add
51	[BUG]  [BUGGY]  String  options  =  getOption(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  options  =  getOption(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOption(String.valueOf(opt));	      String    options    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
52	[BUG]  [BUGGY]  String  options  =  getOptionValue(String.valueOf(opt)+  1);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  options  =  getOptionValue(String.valueOf(opt)+  1);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptionValue(String.valueOf(opt)+  1);	      String    options    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  missing  return  statement	17	None	replace
53	[BUG]  [BUGGY]  String  options  =  getOptionValue(String.valueOf(opt  +  1));  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  options  =  getOptionValue(String.valueOf(opt  +  1));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptionValue(String.valueOf(opt  +  1));	      String    options    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  missing  return  statement	17	None	replace
54	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	14	None	add
55	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	14	None	add
56	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  Option  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  Option  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    Option  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	14	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	        String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
58	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
59	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  >=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  >=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option  >=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	14	None	add
60	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  option  =  getOptionValue(String.valueOf(opt)+  1);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  option  =  getOptionValue(String.valueOf(opt)+  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1);    String  option  =  getOptionValue(String.valueOf(opt)+  1);	  	non-compiled	[CE]  unreachable  statement	1	None	add
61	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  value  =  getOptionValue(String.valueOf(opt)+  1);  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  value  =  getOptionValue(String.valueOf(opt)+  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1);    String  value  =  getOptionValue(String.valueOf(opt)+  1);	  	non-compiled	[CE]  unreachable  statement	1	None	add
62	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  args  =  getOptionValue(String.valueOf(opt)+  1);  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  args  =  getOptionValue(String.valueOf(opt)+  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1);    String  args  =  getOptionValue(String.valueOf(opt)+  1);	  	non-compiled	[CE]  unreachable  statement	1	None	add
63	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  options  =  getOptionValue(String.valueOf(opt)+  1);  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  options  =  getOptionValue(String.valueOf(opt)+  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1);    String  options  =  getOptionValue(String.valueOf(opt)+  1);	  	non-compiled	[CE]  unreachable  statement	1	None	add
64	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  optionValue  =  String.valueOf(opt)+  1;  [CE]  unreachable  statement  [FE]            ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  optionValue  =  String.valueOf(opt)+  1;  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1);    String  optionValue  =  String.valueOf(opt)+  1;	  	non-compiled	[CE]  unreachable  statement	1	None	add
65	[BUG]  [BUGGY]      String  args  =  getOptionValue(String.valueOf(opt));  String  args  =  getOptionValue(String.valueOf(opt));  [CE]  variable  args  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  args  =  getOptionValue(String.valueOf(opt));  String  args  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    args    =    getOptionValue(String.valueOf(opt));    String  args  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  args  is  already  defined  in  method  getOptionValue(char)	10	None	add
66	[BUG]  [BUGGY]      String  args  =  getOptionValue(String.valueOf(opt));  String  args  =  getOptionValue(String.valueOf(option));  [CE]  variable  args  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  args  =  getOptionValue(String.valueOf(opt));  String  args  =  getOptionValue(String.valueOf(option));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    args    =    getOptionValue(String.valueOf(opt));    String  args  =  getOptionValue(String.valueOf(option));	  	non-compiled	[CE]  variable  args  is  already  defined  in  method  getOptionValue(char)	10	None	add
67	[BUG]  [BUGGY]      String  args  =  getOptionValue(String.valueOf(opt));  String  args  =  findOptionValue(String.valueOf(opt));  [CE]  variable  args  is  already  defined  in  method  getOptionValue(char)  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  args  =  getOptionValue(String.valueOf(opt));  String  args  =  findOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    args    =    getOptionValue(String.valueOf(opt));    String  args  =  findOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  args  is  already  defined  in  method  getOptionValue(char)	10	None	add
68	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]              AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(opt);	      	compilable	  [FE]  StackOverflowError  	6	1	replace
69	[BUG]  [BUGGY]  return  getOptionValue(opt);  [FE]  StackOverflowError  [FE]              AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(opt);	      	compilable	  [FE]  StackOverflowError  	6	1	replace
70	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  100  [FE]                AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return(String)args.get(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return(String)args.get(opt);	      	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  100  	6	1	replace
71	[BUG]  [BUGGY]  return(String)args.get(opt);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  100  [FE]                AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return(String)args.get(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return(String)args.get(opt);	      	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  100  	6	1	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(opt,  null);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(opt,  null);	      	compilable	  [FE]  AssertionFailedError  	6	1	replace
73	[BUG]  [BUGGY]  return  getOptionValue(opt,  null);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(opt,  null);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(opt,  null);	      	compilable	  [FE]  AssertionFailedError  	6	1	replace
74	[BUG]  [BUGGY]  return(String)args.get(option);  [CE]  cannot  find  symbol  option  [FE]                    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return(String)args.get(option);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return(String)args.get(option);	      	non-compiled	[CE]  cannot  find  symbol  option	6	None	replace
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  3);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(String.valueOf(opt)+  3);	  return    getOptionValue(String.valueOf(opt)+    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
76	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  3);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt)+  3);	  return    getOptionValue(String.valueOf(opt)+    1);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
77	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  str  =  getOptionValue(String.valueOf(opt  +  1));  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  str  =  getOptionValue(String.valueOf(opt  +  1));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt    +    1));    String  str  =  getOptionValue(String.valueOf(opt  +  1));	  	non-compiled	[CE]  unreachable  statement	4	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  String  alternatives  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	        String    options    =    getOptionValue(String.valueOf(opt));    String  alternatives  =  getOptionValue(String.valueOf(opt));	  	compilable	  [FE]  AssertionFailedError  	16	1	add
79	[BUG]  [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  String  alternatives  =  getOptionValue(String.valueOf(opt));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  String  alternatives  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    options    =    getOptionValue(String.valueOf(opt));    String  alternatives  =  getOptionValue(String.valueOf(opt));	  	compilable	  [FE]  AssertionFailedError  	16	1	add
80	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	14	None	add
81	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(option));  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(option));  if(option  ==  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(option));  if(option  ==  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	14	None	add
82	[BUG]  [BUGGY]  return  getOption(StringUtils.valueOf(opt));  [CE]  cannot  find  symbol  StringUtils  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOption(StringUtils.valueOf(opt));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(StringUtils.valueOf(opt));	  return    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  StringUtils	3	None	replace
83	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  options);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOption(String.valueOf(opt),  options);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  options);	  return    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
84	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  hashcode);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  hashcode);	      String    args    =    getOptionName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  hashcode	20	None	replace
85	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  options);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  options);	      String    args    =    getOptionName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
86	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1)+  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(String.valueOf(opt  +  1)+  1);	  return    getOptionValue(String.valueOf(opt    +    1));    	compilable	  [FE]  ComparisonFailure  	5	1	replace
87	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1)+  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1)+  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt  +  1)+  1);	  return    getOptionValue(String.valueOf(opt    +    1));    	compilable	  [FE]  ComparisonFailure  	5	1	replace
88	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args);  [CE]  no  suitable  method  found  for  getOptionValue(String,List)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  args);	      String    option    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,List)	8	None	replace
89	[BUG]  [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  arguments);  [CE]  cannot  find  symbol  arguments  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  arguments);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptions(String.valueOf(opt),  arguments);	      String    options    =    getOptions(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  arguments	18	None	replace
90	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  String.valueOf(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  String.valueOf(opt);	      	compilable	  [FE]  ComparisonFailure  	6	1	replace
91	[BUG]  [BUGGY]  return  String.valueOf(opt);  [FE]  ComparisonFailure  [FE]              AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  String.valueOf(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  String.valueOf(opt);	      	compilable	  [FE]  ComparisonFailure  	6	1	replace
92	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	12	None	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  options  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  options  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
94	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  options  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  options  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  options  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
95	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  optionValue  =  getOptionValue(String.valueOf(opt)+  1);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1);  String  optionValue  =  getOptionValue(String.valueOf(opt)+  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1);    String  optionValue  =  getOptionValue(String.valueOf(opt)+  1);	  	non-compiled	[CE]  unreachable  statement	1	None	add
96	[BUG]  [BUGGY]  return(String)args.get(opt).toLowerCase();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return(String)args.get(opt).toLowerCase();  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return(String)args.get(opt).toLowerCase();	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
97	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  char  opt  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  variable  opt  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  char  opt  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    char  opt  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  getOptionValue(char)	14	None	add
98	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)/  1);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt)/  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt)/  1);	  return    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	2	None	replace
99	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  args  =  getOptionName(String.valueOf(opt  +  1));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  args  =  getOptionName(String.valueOf(opt  +  1));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt    +    1));    String  args  =  getOptionName(String.valueOf(opt  +  1));	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
100	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  option  =  getOption(String.valueOf(opt  +  1));  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1));  String  option  =  getOption(String.valueOf(opt  +  1));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt    +    1));    String  option  =  getOption(String.valueOf(opt  +  1));	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
101	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  String.class);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  String.class);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  String.class);	      String    args    =    getOptionName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
102	[BUG]  [BUGGY]  String  args  =  getOptionName(StringUtils.valueOf(opt));  [CE]  cannot  find  symbol  StringUtils  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionName(StringUtils.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(StringUtils.valueOf(opt));	      String    args    =    getOptionName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  StringUtils	20	None	replace
103	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  Character.UTF8);  [CE]  cannot  find  symbol  UTF8  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  Character.UTF8);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  Character.UTF8);	      String    args    =    getOptionName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  UTF8	20	None	replace
104	[BUG]  [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  hashcodeMap);  [CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  hashcodeMap);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptions(String.valueOf(opt),  hashcodeMap);	      String    options    =    getOptions(String.valueOf(opt));    	non-compiled	[CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;	18	None	replace
105	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  String.class);  [CE]  no  suitable  method  found  for  getOptionValue(String,Class<String>)  [FE]            AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  String.class);  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  String.class);	      String    option    =    getOptionValue(String.valueOf(option));    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,Class<String>)	19	None	replace
106	[BUG]  [BUGGY]  String  option  =  getOption(StringUtils.valueOf(opt));  [CE]  cannot  find  symbol  StringUtils  [FE]          AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  String  option  =  getOption(StringUtils.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOption(StringUtils.valueOf(opt));	      String    option    =    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  StringUtils	9	None	replace
107	[BUG]  [BUGGY]  if(opt!=  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  if(opt!=  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(opt!=  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	      String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  3));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(String.valueOf(opt  +  3));	  return    getOptionValue(String.valueOf(opt    +    1));    	compilable	  [FE]  ComparisonFailure  	5	1	replace
109	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  3));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]  return  getOptionValue(String.valueOf(opt  +  3));  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt  +  3));	  return    getOptionValue(String.valueOf(opt    +    1));    	compilable	  [FE]  ComparisonFailure  	5	1	replace
110	[BUG]  [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  Option  options  =  getOptionValue(String.valueOf(opt));  [CE]  variable  options  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  options  =  getOptionValue(String.valueOf(opt));  Option  options  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    options    =    getOptionValue(String.valueOf(opt));    Option  options  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  getOptionValue(char)	16	None	add
111	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  char  opt  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  variable  opt  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  char  opt  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    char  opt  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  getOptionValue(char)	12	None	add
112	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(option));  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(option));  if(option!=  null)  {  return  option;  }  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(option));  if(option!=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	12	None	add
113	[BUG]  [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  Option  option  =  getOptionValue(String.valueOf(opt));  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]    public  String  getOptionValue(char  opt)  {    [BUGGY]      String  option  =  getOptionValue(String.valueOf(opt));  Option  option  =  getOptionValue(String.valueOf(opt));  [BUGGY]    return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	        String    option    =    getOptionValue(String.valueOf(opt));    Option  option  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	7	None	add
