bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  Option  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  Option  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	Option  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  incompatible  types	10	None	replace
3	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  options,  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOption(String.valueOf(opt),  options,  hashcode);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  options,  hashcode);	  return    getOption(String.valueOf(opt),    options);    	non-compiled	[CE]  cannot  find  symbol  hashcode	83	None	replace
4	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  options,  args);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOption(String.valueOf(opt),  options,  args);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  options,  args);	  return    getOption(String.valueOf(opt),    options);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
5	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOption(String.valueOf(opt),  null);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  null);	  return    getOption(String.valueOf(opt),    options);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
6	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  args,  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOption(String.valueOf(opt),  args,  hashcode);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  args,  hashcode);	  return    getOption(String.valueOf(opt),    args);    	non-compiled	[CE]  cannot  find  symbol  hashcode	43	None	replace
7	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  String.valueOf(args));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOption(String.valueOf(opt),  String.valueOf(args));  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  String.valueOf(args));	  return    getOption(String.valueOf(opt),    args);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
8	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  args,  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOption(String.valueOf(opt),  args,  null);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  args,  null);	  return    getOption(String.valueOf(opt),    args);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
9	[BUG]  [BUGGY]  return  getOption(String.valueOf(opt),  args,  options);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOption(String.valueOf(opt),  args,  options);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(String.valueOf(opt),  args,  options);	  return    getOption(String.valueOf(opt),    args);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
10	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt)+  2);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt)+  2);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt)+  2);	  String    option    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  missing  return  statement	5	None	replace
11	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt)+  0);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt)+  0);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt)+  0);	  String    option    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  missing  return  statement	5	None	replace
12	[BUG]  [BUGGY]  String  option  =  getOption(String.valueOf(opt)+  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOption(String.valueOf(opt)+  1);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOption(String.valueOf(opt)+  1);	  String    option    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
13	[BUG]  [BUGGY]  if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
14	[BUG]  [BUGGY]  Option  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  Option  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	Option  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    	non-compiled	[CE]  incompatible  types	54	None	replace
15	[BUG]  [BUGGY]  String  options  =  getOption(String.valueOf(opt  +  1));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOption(String.valueOf(opt  +  1));  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOption(String.valueOf(opt  +  1));	  return    getOptionValue(String.valueOf(opt    +    1));    String    options    =    getOptionValue(String.valueOf(opt    +    1));    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
16	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(0));  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(0));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(0));	          String    option    =    getOptionValue(String.valueOf(opt));    String    options    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  missing  return  statement	50	None	replace
17	[BUG]  [BUGGY]  Option  option  =  getOptionValue(String.valueOf(opt));  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  Option  option  =  getOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	Option  option  =  getOptionValue(String.valueOf(opt));	          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String    option    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  incompatible  types	80	None	replace
18	[BUG]  [BUGGY]  String  options  =  getOptions(String.valueOf(opt)+  args);  [CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOptions(String.valueOf(opt)+  args);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptions(String.valueOf(opt)+  args);	  String    options    =    getOptions(String.valueOf(opt)+    1);    	non-compiled	[CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;	41	None	replace
19	[BUG]  [BUGGY]  String  options  =  getOptions(String.valueOf(opt)+  2);  [CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOptions(String.valueOf(opt)+  2);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptions(String.valueOf(opt)+  2);	  String    options    =    getOptions(String.valueOf(opt)+    1);    	non-compiled	[CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;	41	None	replace
20	[BUG]  [BUGGY]  String  options  =  getOptions(String.valueOf(opt)+  1,  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]                      AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOptions(String.valueOf(opt)+  1,  hashcode);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptions(String.valueOf(opt)+  1,  hashcode);	  String    options    =    getOptions(String.valueOf(opt)+    1);    	non-compiled	[CE]  cannot  find  symbol  hashcode	41	None	replace
21	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option!=        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	13	None	add
22	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option!=        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	13	None	add
23	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  variable  Option  is  already  defined  in  method  getOptionValue(char)  [FE]        AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option!=        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  Option  is  already  defined  in  method  getOptionValue(char)	13	None	add
24	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  Option  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]          AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  Option  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option!=        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    Option  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	13	None	add
25	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  Option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]            AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  Option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option!=        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  Option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	13	None	add
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt  -  1));  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(String.valueOf(opt  -  1));	  return    getOptionValue(String.valueOf(opt    +    3));    	compilable	  [FE]  ComparisonFailure  	109	1	replace
27	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  -  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt  -  1));  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt  -  1));	  return    getOptionValue(String.valueOf(opt    +    3));    	compilable	  [FE]  ComparisonFailure  	109	1	replace
28	[BUG]  [BUGGY]  if(opt  >=  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  if(opt  >=  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(opt  >=  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  if(opt!=    null)    {    String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
29	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args,  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args,  hashcode);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  args,  hashcode);	  String    option    =    getOptionValue(String.valueOf(opt),    args);    	non-compiled	[CE]  cannot  find  symbol  hashcode	88	None	replace
30	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args,  options);  [CE]  no  suitable  method  found  for  getOptionValue(String,List,Map)  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args,  options);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  args,  options);	  String    option    =    getOptionValue(String.valueOf(opt),    args);    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,List,Map)	88	None	replace
31	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args,  symbol);  [CE]  cannot  find  symbol  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args,  symbol);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  args,  symbol);	  String    option    =    getOptionValue(String.valueOf(opt),    args);    	non-compiled	[CE]  cannot  find  symbol  symbol	88	None	replace
32	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args,  hashcodeMap);  [CE]  no  suitable  method  found  for  getOptionValue(String,List,Map)  [FE]              AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  args,  hashcodeMap);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  args,  hashcodeMap);	  String    option    =    getOptionValue(String.valueOf(opt),    args);    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,List,Map)	88	None	replace
33	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  false,  true);  [CE]  no  suitable  method  found  for  getOptionValue(String,boolean,boolean)  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  false,  true);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  false,  true);	  String    option    =    getOptionValue(String.valueOf(opt),    false);    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,boolean,boolean)	20	None	replace
34	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  false,  args);  [CE]  no  suitable  method  found  for  getOptionValue(String,boolean,List)  [FE]                  AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  false,  args);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  false,  args);	  String    option    =    getOptionValue(String.valueOf(opt),    false);    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,boolean,List)	20	None	replace
35	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  true,  true);  [CE]  no  suitable  method  found  for  getOptionValue(String,boolean,boolean)  [FE]                    AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  true,  true);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  true,  true);	  String    option    =    getOptionValue(String.valueOf(opt),    false);    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,boolean,boolean)	20	None	replace
36	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  option  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  option  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1).toLowerCase();    String  option  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();	  	non-compiled	[CE]  unreachable  statement	37	None	add
37	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  options  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  options  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1).toLowerCase();    String  options  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();	  	non-compiled	[CE]  unreachable  statement	37	None	add
38	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  args  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  args  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1).toLowerCase();    String  args  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();	  	non-compiled	[CE]  unreachable  statement	37	None	add
39	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  value  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [CE]  unreachable  statement  [FE]          NullPointerException    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  value  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1).toLowerCase();    String  value  =  getOptionValue(String.valueOf(opt)+  1).toLowerCase();	  	non-compiled	[CE]  unreachable  statement	37	None	add
40	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  optionValue  =  String.valueOf(opt)+  1).toLowerCase();  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt)+  1).toLowerCase();  String  optionValue  =  String.valueOf(opt)+  1).toLowerCase();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return    getOptionValue(String.valueOf(opt)+    1).toLowerCase();    String  optionValue  =  String.valueOf(opt)+  1).toLowerCase();	  	non-compiled	[CE]  ';'  expected	37	None	add
41	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  options,  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]              AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  options,  hashcode);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  options,  hashcode);	  String    args    =    getOptionName(String.valueOf(opt),    options);    	non-compiled	[CE]  cannot  find  symbol  hashcode	85	None	replace
42	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  hashcodeMap);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  hashcodeMap);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  hashcodeMap);	  String    args    =    getOptionName(String.valueOf(opt),    options);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
43	[BUG]  [BUGGY]  String  options  =  getOption(String.valueOf(opt),  args);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOption(String.valueOf(opt),  args);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOption(String.valueOf(opt),  args);	  String    options    =    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
44	[BUG]  [BUGGY]  String  options  =  getOption(String.valueOf(opt),  false);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOption(String.valueOf(opt),  false);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOption(String.valueOf(opt),  false);	  String    options    =    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
45	[BUG]  [BUGGY]  String  options  =  getOption(String.valueOf(opt),  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOption(String.valueOf(opt),  null);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOption(String.valueOf(opt),  null);	  String    options    =    getOption(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
46	[BUG]  [BUGGY]  String  options  =  getOption(String.valueOf(opt)+  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOption(String.valueOf(opt)+  1);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOption(String.valueOf(opt)+  1);	  String    options    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
47	[BUG]  [BUGGY]  String  options  =  getOptionValue(String.valueOf(opt)+  2);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOptionValue(String.valueOf(opt)+  2);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptionValue(String.valueOf(opt)+  2);	  String    options    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  missing  return  statement	52	None	replace
48	[BUG]  [BUGGY]  String  options  =  getOptionValue(String.valueOf(opt)+  0);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOptionValue(String.valueOf(opt)+  0);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptionValue(String.valueOf(opt)+  0);	  String    options    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  missing  return  statement	52	None	replace
49	[BUG]  [BUGGY]  return  getArgumentValue(opt);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getArgumentValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getArgumentValue(opt);	  return    getOptionValue(opt);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
50	[BUG]  [BUGGY]  return  getCommonValue(opt);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getCommonValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getCommonValue(opt);	  return    getOptionValue(opt);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
51	[BUG]  [BUGGY]  return  getOption(opt);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOption(opt);	  return    getOptionValue(opt);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
52	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(opt));  String  option  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(opt));  String  option  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        String    options    =    getOptionValue(String.valueOf(opt));    String  option  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	49	None	add
53	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(opt));  String  option  =  getOptionValue(String.valueOf(option));  String  options  =  getOptionValue(String.valueOf(opt));  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(opt));  String  option  =  getOptionValue(String.valueOf(option));  String  options  =  getOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        String    options    =    getOptionValue(String.valueOf(opt));    String  option  =  getOptionValue(String.valueOf(option));  String  options  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	49	None	add
54	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(opt));  Option  option  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]        AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    String  options  =  getOptionValue(String.valueOf(opt));  Option  option  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        String    options    =    getOptionValue(String.valueOf(opt));    Option  option  =  getOptionValue(String.valueOf(opt));  String  options  =  getOptionValue(String.valueOf(opt));	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	49	None	add
55	[BUG]  [BUGGY]  String  option  =  getOption(String.valueOf(opt  +  1));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOption(String.valueOf(opt  +  1));  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOption(String.valueOf(opt  +  1));	  return    getOptionValue(String.valueOf(opt    +    1));    String    option    =    getOptionValue(String.valueOf(opt    +    1));    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
56	[BUG]  [BUGGY]  List  <  String>  args  =  getOptionValue(String.valueOf(opt));  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  List  <  String>  args  =  getOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	List  <  String>  args  =  getOptionValue(String.valueOf(opt));	          String    args    =    getOptionValue(String.valueOf(opt));    String    args    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  incompatible  types	65	None	replace
57	[BUG]  [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt),  String.valueOf(opt));  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt),  String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionValue(String.valueOf(opt),  String.valueOf(opt));	          String    args    =    getOptionValue(String.valueOf(opt));    String    args    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  missing  return  statement	65	None	replace
58	[BUG]  [BUGGY]  Number  args  =  getOptionValue(String.valueOf(opt));  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  Number  args  =  getOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	Number  args  =  getOptionValue(String.valueOf(opt));	          String    args    =    getOptionValue(String.valueOf(opt));    String    args    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  incompatible  types	65	None	replace
59	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]    AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option        ==        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	57	None	add
60	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]      AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option        ==        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	57	None	add
61	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  variable  Option  is  already  defined  in  method  getOptionValue(char)  [FE]        AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option        ==        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	non-compiled	[CE]  variable  Option  is  already  defined  in  method  getOptionValue(char)	57	None	add
62	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  Option  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]          AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  Option  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option        ==        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    Option  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	57	None	add
63	[BUG]  [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  Option;  }  [CE]  variable  option  is  already  defined  in  method  getOptionValue(char)  [FE]            AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]          String    option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  Option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  option;  }  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  Option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	                String        option        =        getOptionValue(String.valueOf(opt));        if(option        ==        null)        {        return        option;        }        String    Option    =    getOptionValue(String.valueOf(opt));    if(option    ==    null)    {    return    option;    }    String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  Option;  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  getOptionValue(char)	57	None	add
64	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  null,  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]              AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  null,  hashcode);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  null,  hashcode);	  String    args    =    getOptionName(String.valueOf(opt),    null);    	non-compiled	[CE]  cannot  find  symbol  hashcode	2	None	replace
65	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  null,  true);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  null,  true);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  null,  true);	  String    args    =    getOptionName(String.valueOf(opt),    null);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
66	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  null,  false);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionName(String.valueOf(opt),  null,  false);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt),  null,  false);	  String    args    =    getOptionName(String.valueOf(opt),    null);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
67	[BUG]  [BUGGY]  String  args  =  getOptionName(StringUtils.escapeHtml(opt));  [CE]  cannot  find  symbol  StringUtils  [FE]              AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionName(StringUtils.escapeHtml(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(StringUtils.escapeHtml(opt));	  String    args    =    getOptionName(StringUtils.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  StringUtils	102	None	replace
68	[BUG]  [BUGGY]  String  args  =  getOptionName(StringUtils.repeat(opt));  [CE]  cannot  find  symbol  StringUtils  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionName(StringUtils.repeat(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(StringUtils.repeat(opt));	  String    args    =    getOptionName(StringUtils.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol  StringUtils	102	None	replace
69	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)/  2);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt)/  2);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt)/  2);	  return    getOptionValue(String.valueOf(opt)/    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	98	None	replace
70	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)/  2.0);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt)/  2.0);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt)/  2.0);	  return    getOptionValue(String.valueOf(opt)/    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	98	None	replace
71	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt)/  10);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt)/  10);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt)/  10);	  return    getOptionValue(String.valueOf(opt)/    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	98	None	replace
72	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  100    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return(String)args.get(0);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return(String)args.get(0);	  return(String)args.get(opt);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	71	1	replace
73	[BUG]  [BUGGY]  return(String)args.get(0);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  100    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return(String)args.get(0);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return(String)args.get(0);	  return(String)args.get(opt);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	71	1	replace
74	[BUG]  [BUGGY]  return(String)args.get(0,  opt);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]      java.lang.IndexOutOfBoundsException:  Index:  100    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return(String)args.get(0,  opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return(String)args.get(0,  opt);	  return(String)args.get(opt);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	71	None	replace
75	[BUG]  [BUGGY]  if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  }  [CE]  incomparable  types:  char  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  }	          String    option    =    getOptionValue(String.valueOf(opt));    String    option    =    getOptionValue(String.valueOf(option));    	non-compiled	[CE]  incomparable  types:  char  and  <null>	46	None	replace
76	[BUG]  [BUGGY]  String  args  =  findOptionValue(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  findOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  findOptionValue(String.valueOf(opt));	          String    args    =    getOptionValue(String.valueOf(opt));    String    args    =    findOptionValue(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
77	[BUG]  [BUGGY]  List  <  String>  args  =  findOptionValue(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  List  <  String>  args  =  findOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	List  <  String>  args  =  findOptionValue(String.valueOf(opt));	          String    args    =    getOptionValue(String.valueOf(opt));    String    args    =    findOptionValue(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
78	[BUG]  [BUGGY]  String  args  =  findOptionValue(String.valueOf(opt),  false);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  findOptionValue(String.valueOf(opt),  false);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  findOptionValue(String.valueOf(opt),  false);	          String    args    =    getOptionValue(String.valueOf(opt));    String    args    =    findOptionValue(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
79	[BUG]  [BUGGY]  String  args  =  getOptionValue(String.valueOf(option));  [CE]  cannot  find  symbol  option  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionValue(String.valueOf(option));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionValue(String.valueOf(option));	          String    args    =    getOptionValue(String.valueOf(opt));    String    args    =    getOptionValue(String.valueOf(option));    	non-compiled	[CE]  cannot  find  symbol  option	66	None	replace
80	[BUG]  [BUGGY]  if(opt  ==  null)  {  String  args  =  getOptionValue(String.valueOf(opt));  }  [CE]  incomparable  types:  char  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  if(opt  ==  null)  {  String  args  =  getOptionValue(String.valueOf(opt));  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(opt  ==  null)  {  String  args  =  getOptionValue(String.valueOf(opt));  }	          String    args    =    getOptionValue(String.valueOf(opt));    String    args    =    getOptionValue(String.valueOf(option));    	non-compiled	[CE]  incomparable  types:  char  and  <null>	66	None	replace
81	[BUG]  [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt),  String.valueOf(option));  [CE]  cannot  find  symbol  option  [FE]              AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt),  String.valueOf(option));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionValue(String.valueOf(opt),  String.valueOf(option));	          String    args    =    getOptionValue(String.valueOf(opt));    String    args    =    getOptionValue(String.valueOf(option));    	non-compiled	[CE]  cannot  find  symbol  option	66	None	replace
82	[BUG]  [BUGGY]  String  options  =  findOptionValue(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  findOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  findOptionValue(String.valueOf(opt));	          String    options    =    getOptionValue(String.valueOf(opt));    String    options    =    findOptionValue(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
83	[BUG]  [BUGGY]  String  options  =  findOption(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  findOption(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  findOption(String.valueOf(opt));	          String    options    =    getOptionValue(String.valueOf(opt));    String    options    =    findOptionValue(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
84	[BUG]  [BUGGY]  String  option  =  findOptionValue(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  findOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  findOptionValue(String.valueOf(opt));	          String    options    =    getOptionValue(String.valueOf(opt));    String    options    =    findOptionValue(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
85	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  String.class,  args);  [CE]  no  suitable  method  found  for  getOptionValue(String,Class<String>,List)  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  String.class,  args);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  String.class,  args);	  String    option    =    getOptionValue(String.valueOf(opt),    String.class);    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,Class<String>,List)	105	None	replace
86	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  String.class,  options);  [CE]  no  suitable  method  found  for  getOptionValue(String,Class<String>,Map)  [FE]                  AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  String.class,  options);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  String.class,  options);	  String    option    =    getOptionValue(String.valueOf(opt),    String.class);    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,Class<String>,Map)	105	None	replace
87	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  String.class,  null);  [CE]  no  suitable  method  found  for  getOptionValue(String,Class<String>,<null>)  [FE]                    AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt),  String.class,  null);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt),  String.class,  null);	  String    option    =    getOptionValue(String.valueOf(opt),    String.class);    	non-compiled	[CE]  no  suitable  method  found  for  getOptionValue(String,Class<String>,<null>)	105	None	replace
88	[BUG]  [BUGGY]  Option  option  =  getOption(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  Option  option  =  getOption(String.valueOf(opt));  if(option!=  null)  {  return  option;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	Option  option  =  getOption(String.valueOf(opt));  if(option!=  null)  {  return  option;  }	  String    option    =    getOption(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
89	[BUG]  [BUGGY]  String  optionValue  =  getOptionValue(String.valueOf(opt)+  1);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  optionValue  =  getOptionValue(String.valueOf(opt)+  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  optionValue  =  getOptionValue(String.valueOf(opt)+  1);	  return    getOptionValue(String.valueOf(opt)+    1);    String    optionValue    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  missing  return  statement	95	None	replace
90	[BUG]  [BUGGY]  if(options!=  null)  {  return  getOptionValue(String.valueOf(opt)+  1);  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  if(options!=  null)  {  return  getOptionValue(String.valueOf(opt)+  1);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(options!=  null)  {  return  getOptionValue(String.valueOf(opt)+  1);  }	  return    getOptionValue(String.valueOf(opt)+    1);    String    optionValue    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  missing  return  statement	95	None	replace
91	[BUG]  [BUGGY]  String  optionValue  =  getOptionValue(String.valueOf(opt)+  2);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  optionValue  =  getOptionValue(String.valueOf(opt)+  2);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  optionValue  =  getOptionValue(String.valueOf(opt)+  2);	  return    getOptionValue(String.valueOf(opt)+    1);    String    optionValue    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  missing  return  statement	95	None	replace
92	[BUG]  [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt)+  2);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt)+  2);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionValue(String.valueOf(opt)+  2);	  String    args    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  missing  return  statement	23	None	replace
93	[BUG]  [BUGGY]  String  args  =  getOption(String.valueOf(opt)+  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOption(String.valueOf(opt)+  1);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOption(String.valueOf(opt)+  1);	  String    args    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
94	[BUG]  [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt)+  3);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionValue(String.valueOf(opt)+  3);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionValue(String.valueOf(opt)+  3);	  String    args    =    getOptionValue(String.valueOf(opt)+    1);    	non-compiled	[CE]  missing  return  statement	23	None	replace
95	[BUG]  [BUGGY]  String  args  =  getOptionName(String.valueOf(opt  +  1));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionName(String.valueOf(opt  +  1));  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionName(String.valueOf(opt  +  1));	  return    getOptionValue(String.valueOf(opt    +    1));    String    args    =    getOptionName(String.valueOf(opt    +    1));    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
96	[BUG]  [BUGGY]  String  args  =  getOptionString(String.valueOf(opt  +  1));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  args  =  getOptionString(String.valueOf(opt  +  1));  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  args  =  getOptionString(String.valueOf(opt  +  1));	  return    getOptionValue(String.valueOf(opt    +    1));    String    args    =    getOptionName(String.valueOf(opt    +    1));    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
97	[BUG]  [BUGGY]  Option  options  =  getOptionValue(String.valueOf(opt));  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  Option  options  =  getOptionValue(String.valueOf(opt));  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	Option  options  =  getOptionValue(String.valueOf(opt));	          String    options    =    getOptionValue(String.valueOf(opt));    Option    options    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  incompatible  types	110	None	replace
98	[BUG]  [BUGGY]  if(options!=  null)  {  String  options  =  getOptionValue(String.valueOf(opt));  options  =  getOptionValue(String.valueOf(opt));  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  if(options!=  null)  {  String  options  =  getOptionValue(String.valueOf(opt));  options  =  getOptionValue(String.valueOf(opt));  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(options!=  null)  {  String  options  =  getOptionValue(String.valueOf(opt));  options  =  getOptionValue(String.valueOf(opt));  }	          String    options    =    getOptionValue(String.valueOf(opt));    Option    options    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  missing  return  statement	110	None	replace
99	[BUG]  [BUGGY]  if(options!=  null)  {  String  options  =  getOptionValue(String.valueOf(opt));  Options  options  =  getOptionValue(String.valueOf(opt));  }  [CE]  variable  options  is  already  defined  in  method  getOptionValue(char)  [FE]            AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  if(options!=  null)  {  String  options  =  getOptionValue(String.valueOf(opt));  Options  options  =  getOptionValue(String.valueOf(opt));  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(options!=  null)  {  String  options  =  getOptionValue(String.valueOf(opt));  Options  options  =  getOptionValue(String.valueOf(opt));  }	          String    options    =    getOptionValue(String.valueOf(opt));    Option    options    =    getOptionValue(String.valueOf(opt));    	non-compiled	[CE]  variable  options  is  already  defined  in  method  getOptionValue(char)	110	None	replace
100	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }	          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String    options    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    options;    }    	non-compiled	[CE]  incompatible  types	94	None	replace
101	[BUG]  [BUGGY]  if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	if(opt  ==  null)  {  String  option  =  getOptionValue(String.valueOf(opt));  if(option!=  null)  {  return  options;  }	          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String    options    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    options;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
102	[BUG]  [BUGGY]  String  option  =  getOption(String.valueOf(opt));  if(option!=  null)  {  return  options;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOption(String.valueOf(opt));  if(option!=  null)  {  return  options;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOption(String.valueOf(opt));  if(option!=  null)  {  return  options;  }	          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String    options    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    options;    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
103	[BUG]  [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  options;  }  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  options;  }  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  option  =  getOptionValue(String.valueOf(opt));  if(option  ==  null)  {  return  options;  }	          String    option    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    option;    }    String    options    =    getOptionValue(String.valueOf(opt));    if(option!=    null)    {    return    options;    }    	non-compiled	[CE]  incompatible  types	94	None	replace
104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1)+  2);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	add	return  getOptionValue(String.valueOf(opt  +  1)+  2);	  return    getOptionValue(String.valueOf(opt    +    1)+    1);    	compilable	  [FE]  ComparisonFailure  	87	1	replace
105	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1)+  2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1)+  2);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt  +  1)+  2);	  return    getOptionValue(String.valueOf(opt    +    1)+    1);    	compilable	  [FE]  ComparisonFailure  	87	1	replace
106	[BUG]  [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1)/  1);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]      ComparisonFailure    [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  return  getOptionValue(String.valueOf(opt  +  1)/  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	return  getOptionValue(String.valueOf(opt  +  1)/  1);	  return    getOptionValue(String.valueOf(opt    +    1)+    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	87	None	replace
107	[BUG]  [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  opt);  [CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  String  getOptionValue(char  opt)  {      [BUGGY]  String  options  =  getOptions(String.valueOf(opt),  opt);  [BUGGY]      return  getOptionValue(String.valueOf(opt));  }  [CLASS]  CommandLine  [METHOD]  getOptionValue  [RETURN_TYPE]  String  char  opt  [VARIABLES]  char  opt  List  args  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	137	137	1	replace	String  options  =  getOptions(String.valueOf(opt),  opt);	  String    options    =    getOptions(String.valueOf(opt),    hashcode);    	non-compiled	[CE]  method  getOptions  in  class  CommandLine  cannot  be  applied  to  given  types;	40	None	replace
