bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  return  false;  }  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  for(String  option  :  options.keySet())  {  return  false;  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  option  :  options.keySet())  {  return  false;  }	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    return    false;    }    	non-compiled	[CE]  incompatible  types	19	None	replace
2	[BUG]  [BUGGY]  if(options!=  null)  {  for(String  opt  :  options.keySet())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options!=  null)  {  for(String  opt  :  options.keySet())  {  return  false;  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  for(String  opt  :  options.keySet())  {  return  false;  }	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  if(options!=  null)  {  for(String  option  :  options.values())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options!=  null)  {  for(String  option  :  options.values())  {  return  false;  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  for(String  option  :  options.values())  {  return  false;  }	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)&&  options.containsKey(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	3	1	replace
5	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)&&  options.containsKey(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	3	1	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)||  options.containsValue(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	3	1	replace
7	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsValue(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	3	1	replace
8	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(option);  [CE]  cannot  find  symbol  option  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(option);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsKey(option);	  return    options.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol  option	3	None	replace
9	[BUG]  [BUGGY]  return  options.containsValue(opt);  options.containsValue(opt);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  options.containsValue(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    options.containsValue(opt);	  	non-compiled	[CE]  unreachable  statement	20	None	add
10	[BUG]  [BUGGY]  return  options.containsValue(opt);  if(options.containsValue(opt)!=  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  if(options.containsValue(opt)!=  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    if(options.containsValue(opt)!=  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
11	[BUG]  [BUGGY]  return  options.containsValue(opt);  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
12	[BUG]  [BUGGY]  return  options.containsValue(opt);  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	20	None	add
13	[BUG]  [BUGGY]  return  options.containsValue(opt);  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
14	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt);	  	non-compiled	[CE]  ')'  expected	2	None	add
15	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	2	None	add
16	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  options.containsKey(opt)||  options.containsKey(opt);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  options.containsKey(opt)||  options.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    options.containsKey(opt)||  options.containsKey(opt);	  	non-compiled	[CE]  not  a  statement	2	None	add
17	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  ||  options.containsKey(opt);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  ||  options.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    ||  options.containsKey(opt);	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
18	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt))  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	2	None	add
19	[BUG]  [BUGGY]  return  args.containsKey(opt)||  options.containsKey(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  args.containsKey(opt)||  options.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.containsKey(opt)||  options.containsKey(opt);	  return    args.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
20	[BUG]  [BUGGY]  return  args.containsKey(opt)||  hashcodeMap.containsKey(opt);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  args.containsKey(opt)||  hashcodeMap.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.containsKey(opt)||  hashcodeMap.containsKey(opt);	  return    args.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
21	[BUG]  [BUGGY]  for(String  opt  :  options.keySet())  {  return  true;  }  [CE]  variable  opt  is  already  defined  in  method  hasOption(String)  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  for(String  opt  :  options.keySet())  {  return  true;  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  opt  :  options.keySet())  {  return  true;  }	      if(options!=    null)    {    for(String    opt    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  variable  opt  is  already  defined  in  method  hasOption(String)	17	None	replace
22	[BUG]  [BUGGY]  options  =  new  HashMap  <  String,Object>();  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  options  =  new  HashMap  <  String,Object>();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  HashMap  <  String,Object>();	      if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
23	[BUG]  [BUGGY]  Options  options  =  new  HashMap  <  String,Object>();  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Options  options  =  new  HashMap  <  String,Object>();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =  new  HashMap  <  String,Object>();	      if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  incompatible  types	15	None	replace
24	[BUG]  [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  new  OptionalOption(opt);	      if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
25	[BUG]  [BUGGY]  options.put(opt,  new  HashMap  <  String,Object>());  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  options.put(opt,  new  HashMap  <  String,Object>());  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  new  HashMap  <  String,Object>());	      if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
26	[BUG]  [BUGGY]  HashcodeMap  names  =  options.keySet();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashcodeMap  names  =  options.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  options.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
27	[BUG]  [BUGGY]  HashCodeMap  names  =  options.keySet();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashCodeMap  names  =  options.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  options.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
28	[BUG]  [BUGGY]  HashMap  <  String,Object>  options  =  options.keySet();  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashMap  <  String,Object>  options  =  options.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashMap  <  String,Object>  options  =  options.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap    =    true;    }    	non-compiled	[CE]  incompatible  types	9	None	replace
29	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.keySet()));  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.keySet()));  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.keySet()));	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap    =    true;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
30	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    	non-compiled	[CE]  missing  return  statement	21	None	replace
31	[BUG]  [BUGGY]  return  options.contains(opt)||  options.containsValue(opt);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.contains(opt)||  options.containsValue(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  options.containsValue(opt);	  return    options.containsValue(opt);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
32	[BUG]  [BUGGY]  if(options  ==  null)  {  options  =  new  ArrayList  <  String>();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options  ==  null)  {  options  =  new  ArrayList  <  String>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null)  {  options  =  new  ArrayList  <  String>();  }	      if(options!=    null)    {    options    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
33	[BUG]  [BUGGY]  if(options  ==  null)  {  options  =  new  LinkedList  <  String>();  }  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options  ==  null)  {  options  =  new  LinkedList  <  String>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null)  {  options  =  new  LinkedList  <  String>();  }	      if(options!=    null)    {    options    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  incompatible  types	10	None	replace
34	[BUG]  [BUGGY]  if(options!=  null)  {  options  =  new  LinkedList  <  String>();  }  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options!=  null)  {  options  =  new  LinkedList  <  String>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  options  =  new  LinkedList  <  String>();  }	      if(options!=    null)    {    options    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  incompatible  types	10	None	replace
35	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  return  true;  }  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  for(String  option  :  options.keySet())  {  return  true;  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  option  :  options.keySet())  {  return  true;  }	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  incompatible  types	8	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
37	[BUG]  [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
39	[BUG]  [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
40	[BUG]  [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  >=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  >=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  >=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	14	None	add
41	[BUG]  [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  If(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  If(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    If(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	non-compiled	[CE]  ';'  expected	14	None	add
42	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsKey(opt);  }	  if(options!=    null)    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	1	None	replace
43	[BUG]  [BUGGY]  if(options  ==  null)  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options  ==  null)  {  return  options.containsKey(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null)  {  return  options.containsKey(opt);  }	  if(options!=    null)    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	1	None	replace
44	[BUG]  [BUGGY]  options  =  new  HashMap();  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  options  =  new  HashMap();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  HashMap();	      if(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
45	[BUG]  [BUGGY]  Options  options  =  new  HashMap();  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Options  options  =  new  HashMap();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =  new  HashMap();	      if(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  incompatible  types	12	None	replace
46	[BUG]  [BUGGY]  options.clear();  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  options.clear();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.clear();	      if(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
47	[BUG]  [BUGGY]  options.put(opt,  options);  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  options.put(opt,  options);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  options);	      if(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
48	[BUG]  [BUGGY]  hashcodeMap.put(opt,  false);  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  hashcodeMap.put(opt,  false);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	hashcodeMap.put(opt,  false);	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap.put(opt,    false);    }    	non-compiled	[CE]  missing  return  statement	7	None	replace
49	[BUG]  [BUGGY]  HashcodeMap  names  =  hashcodeMap.keySet();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashcodeMap  names  =  hashcodeMap.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  hashcodeMap.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap.put(opt,    false);    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
50	[BUG]  [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.keySet()));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.keySet()));  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  new  HashMap  <  String,Object>(options.keySet()));	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap.put(opt,    true);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
51	[BUG]  [BUGGY]  hashcodeMap.put(opt,  true);  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  hashcodeMap.put(opt,  true);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	hashcodeMap.put(opt,  true);	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap.put(opt,    true);    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
52	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)||  options.containsKey(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)||  options.containsKey(opt));  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt)||  options.containsKey(opt));	      OptionHandler.checkArgument(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	18	None	replace
53	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.get(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  OptionHandler.checkArgument(options.get(opt));  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.get(opt));	      OptionHandler.checkArgument(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	18	None	replace
54	[BUG]  [BUGGY]  OptionHandler.checkArgument(args.containsKey(opt));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  OptionHandler.checkArgument(args.containsKey(opt));  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(args.containsKey(opt));	      OptionHandler.checkArgument(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
55	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Options  options  =(Options)args.get(opt,  hashcode);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  hashcode);	      Options    options    =(Options)args.get(opt);    	non-compiled	[CE]  cannot  find  symbol  hashcode	13	None	replace
56	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  names);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Options  options  =(Options)args.get(opt,  names);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  names);	      Options    options    =(Options)args.get(opt);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	replace
57	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  hashcodeMap);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Options  options  =(Options)args.get(opt,  hashcodeMap);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  hashcodeMap);	      Options    options    =(Options)args.get(opt);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	replace
58	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  name);  [CE]  cannot  find  symbol  name  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Options  options  =(Options)args.get(opt,  name);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  name);	      Options    options    =(Options)args.get(opt);    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
59	[BUG]  [BUGGY]  return  options.contains(opt)||  options.contains(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.contains(opt)||  options.contains(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  options.contains(opt);	  return    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
60	[BUG]  [BUGGY]  return  hashcodeMap.contains(opt);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  hashcodeMap.contains(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  hashcodeMap.contains(opt);	  return    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
62	[BUG]  [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	        if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
64	[BUG]  [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	        if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
65	[BUG]  [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  if(options  >=  null)  {  options  =  new  HashMap();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  if(options  >=  null)  {  options  =  new  HashMap();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	        if(options!=    null)    {    options    =    new    HashMap();    }    if(options  >=  null)  {  options  =  new  HashMap();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	add
66	[BUG]  [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  If(options!=  null)  {  options  =  new  HashMap();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]      if(options!=  null)  {  options  =  new  HashMap();  }  If(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	        if(options!=    null)    {    options    =    new    HashMap();    }    If(options!=  null)  {  options  =  new  HashMap();  }	  	non-compiled	[CE]  ';'  expected	11	None	add
67	[BUG]  [BUGGY]  return  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.hasOption(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hasOption(opt);	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);	      	compilable	  [FE]  AssertionFailedError  	5	1	replace
69	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);	      	compilable	  [FE]  AssertionFailedError  	5	1	replace
70	[BUG]  [BUGGY]  return  options.hasOption(opt)  ==  false;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.hasOption(opt)  ==  false;  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hasOption(opt)  ==  false;	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
71	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  options);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Options  options  =(Options)args.get(opt,  options);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  options);	      Options    options    =(Options)args.get(opt);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	replace
72	[BUG]  [BUGGY]  HashcodeMap  options  =  options.keySet();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashcodeMap  options  =  options.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  options  =  options.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
73	[BUG]  [BUGGY]  hashcodeMap  =  true;  [CE]  incompatible  types  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  hashcodeMap  =  true;  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	hashcodeMap  =  true;	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap    =    true;    }    	non-compiled	[CE]  incompatible  types	9	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)||  options.containsKey(opt  +  1);	  return    options.containsKey(opt)||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	3	1	replace
75	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsKey(opt  +  1);	  return    options.containsKey(opt)||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	3	1	replace
76	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  options.hasOption(opt);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(opt  ==  null)  {  return  options.hasOption(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  return  options.hasOption(opt);  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
77	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.hasOption(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.hasOption(opt);	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
78	[BUG]  [BUGGY]  return  options.contains(opt)&&  options.contains(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.contains(opt)&&  options.contains(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)&&  options.contains(opt);	  return    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
79	[BUG]  [BUGGY]  Option  options  =  new  Option(opt);  [CE]  no  suitable  constructor  found  for  Option(String)  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Option  options  =  new  Option(opt);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  new  Option(opt);	      if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	15	None	replace
80	[BUG]  [BUGGY]  OptionHandler.checkOption(options.containsKey(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  OptionHandler.checkOption(options.containsKey(opt));  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkOption(options.containsKey(opt));	      OptionHandler.checkArgument(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	18	None	replace
81	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length);  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt),  options.length);	      OptionHandler.checkArgument(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
82	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }	  	non-compiled	[CE]  ')'  expected	2	None	add
83	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt);  else  {  return  options.containsKey(opt)||  options.containsKey(opt);  }	  	non-compiled	[CE]  ')'  expected	2	None	add
84	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  Option  option  =  options.get(opt);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  Option  option  =  options.get(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    Option  option  =  options.get(opt);	  	non-compiled	[CE]  incompatible  types	2	None	add
85	[BUG]  [BUGGY]  return  options.containsValue(opt);  Options  options  =  options.getValue(opt);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  Options  options  =  options.getValue(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    Options  options  =  options.getValue(opt);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
86	[BUG]  [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  options.containsValue(opt);  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  options.containsValue(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    if(options!=  null)  {  options.containsValue(opt);  }	  	non-compiled	[CE]  unreachable  statement	20	None	add
87	[BUG]  [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	non-compiled	[CE]  unreachable  statement	20	None	add
88	[BUG]  [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  options  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  Lists  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  options  =  Lists.newArrayList();  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    if(options!=  null)  {  options  =  Lists.newArrayList();  }	  	non-compiled	[CE]  cannot  find  symbol  Lists	20	None	add
89	[BUG]  [BUGGY]  options.keySet())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  options.keySet())  {  return  true;  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.keySet())  {  return  true;  }	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
90	[BUG]  [BUGGY]  Option  options  =  options.keySet();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Option  options  =  options.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  options.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
91	[BUG]  [BUGGY]  HashcodeMap  hashcodeMap  =  hashcodeMap.get(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashcodeMap  hashcodeMap  =  hashcodeMap.get(opt);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  hashcodeMap  =  hashcodeMap.get(opt);	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap.put(opt,    true);    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
92	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt  +  1);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Options  options  =(Options)args.get(opt  +  1);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt  +  1);	      Options    options    =(Options)args.get(opt);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	13	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.get(opt);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  Option  option  =  options.get(opt);  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  option  =  options.get(opt);	      if(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  incompatible  types	12	None	replace
94	[BUG]  [BUGGY]  options.put(opt,  new  HashMap());  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  options.put(opt,  new  HashMap());  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  new  HashMap());	      if(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
95	[BUG]  [BUGGY]  if(options!=  null)  {  for(String  opt  :  options.values())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options!=  null)  {  for(String  opt  :  options.values())  {  return  true;  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  for(String  opt  :  options.values())  {  return  true;  }	      if(options!=    null)    {    for(String    opt    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
96	[BUG]  [BUGGY]  OptionalOption  options  =  options.keySet();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  OptionalOption  options  =  options.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  options.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
97	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  options  =  options.keySet();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashcodeMap  <  String,Object>  options  =  options.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  options  =  options.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
98	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	2	None	add
99	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt);  }	  	non-compiled	[CE]  ')'  expected	2	None	add
100	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }	  	non-compiled	[CE]  ')'  expected	2	None	add
101	[BUG]  [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  return  options.containsValue(opt);  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  return  options.containsValue(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    if(options!=  null)  {  return  options.containsValue(opt);  }	  	non-compiled	[CE]  unreachable  statement	20	None	add
102	[BUG]  [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsValue(opt);    if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
103	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.hashCode());  [CE]  cannot  find  symbol  OptionHandler  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.hashCode());  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt),  options.hashCode());	      OptionHandler.checkArgument(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	18	None	replace
104	[BUG]  [BUGGY]  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	      if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
105	[BUG]  [BUGGY]  return  hashcodeMap().containsKey(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  hashcodeMap().containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  hashcodeMap().containsKey(opt);	  return    args.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  hashcodeMap.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  hashcodeMap.containsKey(opt);	  return    args.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	4	1	replace
107	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  hashcodeMap.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  hashcodeMap.containsKey(opt);	  return    args.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	4	1	replace
108	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.keySet();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  options.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
109	[BUG]  [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.keySet();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.keySet();  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  <  String,Object>  hashcodeMap  =  options.keySet();	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
110	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  true;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  true;  [BUGGY]    return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  true;	      if(options!=    null)    {    for(String    option    :    options.keySet())    {    hashcodeMap    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
111	[BUG]  [BUGGY]  return  options.contains(opt)||  options.containsKey(opt);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.contains(opt)||  options.containsKey(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  options.containsKey(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
112	[BUG]  [BUGGY]  if(options!=  null  &&  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(options!=  null  &&  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null  &&  options.containsKey(opt))  {  return  options.containsKey(opt);  }	  if(options!=    null)    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	1	None	replace
113	[BUG]  [BUGGY]  return  options.hasOption(opt)||  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  return  options.hasOption(opt)||  options.hasOption(opt);  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hasOption(opt)||  options.hasOption(opt);	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
114	[BUG]  [BUGGY]  if(opt.equals( " "))  {  return  true;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(opt.equals( " "))  {  return  true;  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( " "))  {  return  true;  }	      	non-compiled	[CE]  missing  return  statement	5	None	replace
115	[BUG]  [BUGGY]  if(opt.equals( " "))  {  return  options.hasOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  hasOption(String  opt)  {    [BUGGY]  if(opt.equals( " "))  {  return  options.hasOption(opt);  }  [BUGGY]    }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( " "))  {  return  options.hasOption(opt);  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
