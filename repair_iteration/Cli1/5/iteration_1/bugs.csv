bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt);  }  [BUGGY]  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsKey(opt);  }	return  options.containsKey(opt);  	non-compiled	[CE]  missing  return  statement	11	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  [BUGGY]  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)||  options.containsKey(opt);	return  options.containsKey(opt);  	compilable	  [FE]  AssertionFailedError  	11	1	replace
3	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  [BUGGY]  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsKey(opt);	return  options.containsKey(opt);  	compilable	  [FE]  AssertionFailedError  	11	1	replace
4	[BUG]  [BUGGY]  return  args.containsKey(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]  return  args.containsKey(opt);  [BUGGY]  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.containsKey(opt);	return  options.containsKey(opt);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    [BUGGY]  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	  	return  options.containsKey(opt);  	non-compiled	[CE]  missing  return  statement	11	None	replace
6	[BUG]  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  hashcodeMap.put(opt,  true);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  hashcodeMap.put(opt,  true);  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    if(options!=  null)  {  for(String  option  :  options.keySet())  {  hashcodeMap.put(opt,  true);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
7	[BUG]  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  hashcodeMap.put(opt,  false);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  hashcodeMap.put(opt,  false);  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    if(options!=  null)  {  for(String  option  :  options.keySet())  {  hashcodeMap.put(opt,  false);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
8	[BUG]  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  return  true;  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    if(options!=  null)  {  for(String  option  :  options.keySet())  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
9	[BUG]  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  hashcodeMap  =  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  hashcodeMap  =  true;  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    if(options!=  null)  {  for(String  option  :  options.keySet())  {  hashcodeMap  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
10	[BUG]  [BUGGY]    if(options!=  null)  {  options  =  new  ArrayList  <  String>();  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  options  =  new  ArrayList  <  String>();  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    if(options!=  null)  {  options  =  new  ArrayList  <  String>();  }		non-compiled	[CE]  cannot  find  symbol	12	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	    if(options!=  null)  {  options  =  new  HashMap();  }		compilable	  [FE]  AssertionFailedError  	12	1	add
12	[BUG]  [BUGGY]    if(options!=  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    if(options!=  null)  {  options  =  new  HashMap();  }		compilable	  [FE]  AssertionFailedError  	12	1	add
13	[BUG]  [BUGGY]    Options  options  =(Options)args.get(opt);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    Options  options  =(Options)args.get(opt);  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    Options  options  =(Options)args.get(opt);		non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	12	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }		compilable	  [FE]  AssertionFailedError  	12	1	add
15	[BUG]  [BUGGY]    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }		compilable	  [FE]  AssertionFailedError  	12	1	add
16	[BUG]  [BUGGY]  return  options.contains(opt);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]  return  options.contains(opt);  [BUGGY]  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt);	return  options.containsKey(opt);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
17	[BUG]  [BUGGY]    if(options!=  null)  {  for(String  opt  :  options.keySet())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  for(String  opt  :  options.keySet())  {  return  true;  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    if(options!=  null)  {  for(String  opt  :  options.keySet())  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
18	[BUG]  [BUGGY]    OptionHandler.checkArgument(options.containsKey(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    OptionHandler.checkArgument(options.containsKey(opt));  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    OptionHandler.checkArgument(options.containsKey(opt));		non-compiled	[CE]  cannot  find  symbol  OptionHandler	12	None	add
19	[BUG]  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]    if(options!=  null)  {  for(String  option  :  options.keySet())  {  return  false;  }  [BUGGY]  return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	    if(options!=  null)  {  for(String  option  :  options.keySet())  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]  return  options.containsValue(opt);  [BUGGY]  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsValue(opt);	return  options.containsKey(opt);  	compilable	  [FE]  AssertionFailedError  	11	1	replace
21	[BUG]  [BUGGY]  return  options.containsValue(opt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  hasOption(String  opt)  {  [BUGGY]  return  options.containsValue(opt);  [BUGGY]  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsValue(opt);	return  options.containsKey(opt);  	compilable	  [FE]  AssertionFailedError  	11	1	replace
