bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  return  options.containsKey(opt);  }	  if(options    ==    null)    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	43	None	replace
2	[BUG]  [BUGGY]  Options  options  =  new  LinkedHashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =  new  LinkedHashMap  <  String,Object>();	  Options    options    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
3	[BUG]  [BUGGY]  Options  options  =  new  HashMap  <  String,Object>(opt);  [CE]  no  suitable  constructor  found  for  HashMap(String)  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =  new  HashMap  <  String,Object>(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =  new  HashMap  <  String,Object>(opt);	  Options    options    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(String)	23	None	replace
4	[BUG]  [BUGGY]  Option  options  =  new  HashMap  <  String,Object>();  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  new  HashMap  <  String,Object>();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  new  HashMap  <  String,Object>();	  Options    options    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  incompatible  types	23	None	replace
5	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  options.containsKey(opt)||  options.containsValue(opt);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  options.containsKey(opt)||  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    options.containsKey(opt)||  options.containsValue(opt);	  	non-compiled	[CE]  not  a  statement	6	None	add
6	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  if(options.containsKey(opt)||  options.containsValue(opt))  {  return  options.containsKey(opt)||  options.containsValue(opt);  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  if(options.containsKey(opt)||  options.containsValue(opt))  {  return  options.containsKey(opt)||  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    if(options.containsKey(opt)||  options.containsValue(opt))  {  return  options.containsKey(opt)||  options.containsValue(opt);  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
7	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  if(options.containsKey(opt)||  options.containsValue(opt);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  if(options.containsKey(opt)||  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    if(options.containsKey(opt)||  options.containsValue(opt);	  	non-compiled	[CE]  ')'  expected	6	None	add
8	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  ||  options.containsKey(opt)||  options.containsValue(opt);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  ||  options.containsKey(opt)||  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    ||  options.containsKey(opt)||  options.containsValue(opt);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
9	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  if(options.containsKey(opt)||  options.containsValue(opt))  {  return  true;  }  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  if(options.containsKey(opt)||  options.containsValue(opt))  {  return  true;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    if(options.containsKey(opt)||  options.containsValue(opt))  {  return  true;  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt)||  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  hashcodeMap.containsKey(opt)||  hashcodeMap.containsKey(opt);	  return    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	107	1	replace
11	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt)||  hashcodeMap.containsKey(opt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt)||  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  hashcodeMap.containsKey(opt)||  hashcodeMap.containsKey(opt);	  return    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	107	1	replace
12	[BUG]  [BUGGY]  boolean  hasOption  =  hashcodeMap.containsKey(opt);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  boolean  hasOption  =  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	boolean  hasOption  =  hashcodeMap.containsKey(opt);	  return    hashcodeMap.containsKey(opt);    	non-compiled	[CE]  missing  return  statement	107	None	replace
13	[BUG]  [BUGGY]  Options  options  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =  new  LinkedHashMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =  new  LinkedHashMap();	  Options    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
14	[BUG]  [BUGGY]  Options  options  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =  new  ArrayList();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =  new  ArrayList();	  Options    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
15	[BUG]  [BUGGY]  Options  options  =  new  HashMap(options);  [CE]  no  suitable  constructor  found  for  HashMap(Options)  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =  new  HashMap(options);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =  new  HashMap(options);	  Options    options    =    new    HashMap();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(Options)	45	None	replace
16	[BUG]  [BUGGY]  for(String  opt  :  options.keySet())  {  return  false;  }  [CE]  variable  opt  is  already  defined  in  method  hasOption(String)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  for(String  opt  :  options.keySet())  {  return  false;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  opt  :  options.keySet())  {  return  false;  }	  if(options!=    null)    {    for(String    opt    :    options.keySet())    {    return    false;    }    	non-compiled	[CE]  variable  opt  is  already  defined  in  method  hasOption(String)	2	None	replace
17	[BUG]  [BUGGY]  if(options!=  null)  {  for(String  opt  :  options.values())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  for(String  opt  :  options.values())  {  return  false;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  for(String  opt  :  options.values())  {  return  false;  }	  if(options!=    null)    {    for(String    opt    :    options.keySet())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  HashCodeMap  names  =  options.hashCodeMap();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  options.hashCodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  options.hashCodeMap();	  HashCodeMap    names    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
19	[BUG]  [BUGGY]  HashCodeMap  names  =  arrays.keySet();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  arrays.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  arrays.keySet();	  HashCodeMap    names    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
20	[BUG]  [BUGGY]  HashCodeMap  names  =  this.options.keySet();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  this.options.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  this.options.keySet();	  HashCodeMap    names    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
21	[BUG]  [BUGGY]  if(opt  ==  null)  {  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
22	[BUG]  [BUGGY]  HashMap  <  String,Object>  options  =  new  HashMap  <  String,Object>();  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashMap  <  String,Object>  options  =  new  HashMap  <  String,Object>();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashMap  <  String,Object>  options  =  new  HashMap  <  String,Object>();	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	39	None	replace
23	[BUG]  [BUGGY]  if(opt  ==  null)  {  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
24	[BUG]  [BUGGY]  OptionHandler  <  String,Object>  options  =  new  OptionHandler  <  String,Object>();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler  <  String,Object>  options  =  new  OptionHandler  <  String,Object>();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler  <  String,Object>  options  =  new  OptionHandler  <  String,Object>();	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
25	[BUG]  [BUGGY]  options.put(option,  new  HashMap());  [CE]  cannot  find  symbol  option  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.put(option,  new  HashMap());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(option,  new  HashMap());	  options.put(opt,    new    HashMap());    	non-compiled	[CE]  cannot  find  symbol  option	94	None	replace
26	[BUG]  [BUGGY]  options.put(opt,  new  HashMap(),  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.put(opt,  new  HashMap(),  hashcode);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  new  HashMap(),  hashcode);	  options.put(opt,    new    HashMap());    	non-compiled	[CE]  cannot  find  symbol  hashcode	94	None	replace
27	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  opt  +  1);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  opt  +  1);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  opt  +  1);	  Options    options    =(Options)args.get(opt    +    1);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	92	None	replace
28	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt  -  1);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt  -  1);	  Options    options    =(Options)args.get(opt    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	92	None	replace
29	[BUG]  [BUGGY]  Option  options  =  new  Option(args,  opt);  [CE]  no  suitable  constructor  found  for  Option(List,String)  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  new  Option(args,  opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  new  Option(args,  opt);	  Option    options    =    new    Option(opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(List,String)	79	None	replace
30	[BUG]  [BUGGY]  Option  options  =  new  Option(args);  [CE]  no  suitable  constructor  found  for  Option(List)  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  new  Option(args);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  new  Option(args);	  Option    options    =    new    Option(opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(List)	79	None	replace
31	[BUG]  [BUGGY]  Option  options  =  new  Option(args.hashCode(),  opt);  [CE]  no  suitable  constructor  found  for  Option(int,String)  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  new  Option(args.hashCode(),  opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  new  Option(args.hashCode(),  opt);	  Option    options    =    new    Option(opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(int,String)	79	None	replace
32	[BUG]  [BUGGY]  Option  options  =  new  Option(opt,  hashcodeMap);  [CE]  no  suitable  constructor  found  for  Option(String,Map)  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  new  Option(opt,  hashcodeMap);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  new  Option(opt,  hashcodeMap);	  Option    options    =    new    Option(opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String,Map)	79	None	replace
33	[BUG]  [BUGGY]  if(options  ==  null)  {  for(String  opt  :  options.values())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options  ==  null)  {  for(String  opt  :  options.values())  {  return  false;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null)  {  for(String  opt  :  options.values())  {  return  false;  }	  if(options!=    null)    {    for(String    opt    :    options.values())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
34	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  hashcodeMap.containsKey(opt);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt);  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    hashcodeMap.containsKey(opt);    hashcodeMap.containsKey(opt);	  	non-compiled	[CE]  unreachable  statement	106	None	add
35	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  getHashCodeMap();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  getHashCodeMap();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    hashcodeMap.containsKey(opt);    HashcodeMap  hashcodeMap  =  getHashCodeMap();	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
36	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =(HashCodeMap)this.names.get(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =(HashCodeMap)this.names.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    hashcodeMap.containsKey(opt);    HashcodeMap  hashcodeMap  =(HashCodeMap)this.names.get(opt);	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
37	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  new  HashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  new  HashMap  <  String,Object>();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    hashcodeMap.containsKey(opt);    HashcodeMap  hashcodeMap  =  new  HashMap  <  String,Object>();	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
38	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  new  HashMap();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  new  HashMap();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    hashcodeMap.containsKey(opt);    HashcodeMap  hashcodeMap  =  new  HashMap();	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
40	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
42	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
44	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
46	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
47	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options	  	non-compiled	[CE]  ')'  expected	36	None	add
48	[BUG]  [BUGGY]  hashcodeMap.put(opt,  null);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  hashcodeMap.put(opt,  null);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	hashcodeMap.put(opt,  null);	  hashcodeMap.put(opt,    true);    	non-compiled	[CE]  missing  return  statement	51	None	replace
49	[BUG]  [BUGGY]  hashcodeMap.put(option,  true);  [CE]  cannot  find  symbol  option  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  hashcodeMap.put(option,  true);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	hashcodeMap.put(option,  true);	  hashcodeMap.put(opt,    true);    	non-compiled	[CE]  cannot  find  symbol  option	51	None	replace
50	[BUG]  [BUGGY]  if(opt!=  null)  {  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    If(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
51	[BUG]  [BUGGY]  if(opt!=  null)  {  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    If(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
52	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  options.containsValue(opt);  }  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsValue(opt);  options.containsValue(opt);  }	  return    options.containsValue(opt);    options.containsValue(opt);    	non-compiled	[CE]  unreachable  statement	9	None	replace
53	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  }  else  {  options.add(opt);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  }  else  {  options.add(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsValue(opt);  }  else  {  options.add(opt);  }	  return    options.containsValue(opt);    options.containsValue(opt);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
54	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  options.addValue(opt);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  options.addValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsValue(opt);  options.addValue(opt);  }	  return    options.containsValue(opt);    options.containsValue(opt);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
56	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
58	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
59	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
61	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
62	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
63	[BUG]  [BUGGY]  for(String  option  :  options.values())  {  return  false;  }  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  for(String  option  :  options.values())  {  return  false;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  option  :  options.values())  {  return  false;  }	  if(options!=    null)    {    for(String    option    :    options.values())    {    return    false;    }    	non-compiled	[CE]  incompatible  types	3	None	replace
64	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  opt);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  opt);	  Options    options    =(Options)args.get(opt,    name);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	58	None	replace
65	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  null);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  null);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  null);	  Options    options    =(Options)args.get(opt,    name);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	58	None	replace
66	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  symbol);  [CE]  cannot  find  symbol  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  symbol);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  symbol);	  Options    options    =(Options)args.get(opt,    name);    	non-compiled	[CE]  cannot  find  symbol  symbol	58	None	replace
67	[BUG]  [BUGGY]  options  ==  null  &&  options.containsKey(opt))  {  options  =  new  ArrayList  <  String>();  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  ==  null  &&  options.containsKey(opt))  {  options  =  new  ArrayList  <  String>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  ==  null  &&  options.containsKey(opt))  {  options  =  new  ArrayList  <  String>();  }	  if(options    ==    null)    {    options    =    new    LinkedList    <    String>();    }    	non-compiled	[CE]  not  a  statement	33	None	replace
68	[BUG]  [BUGGY]  options  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  =  new  ArrayList  <  String>();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  ArrayList  <  String>();	  if(options    ==    null)    {    options    =    new    LinkedList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
69	[BUG]  [BUGGY]  if(opt  ==  null)  {  if(options!=  null)  {  options  =  new  HashMap();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  if(options!=  null)  {  options  =  new  HashMap();  }	          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
70	[BUG]  [BUGGY]  options!=  null)  {  options  =  new  HashMap();  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options!=  null)  {  options  =  new  HashMap();  }	          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  not  a  statement	62	None	replace
71	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	87	None	replace
72	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  options.containsValue(opt);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	87	None	replace
73	[BUG]  [BUGGY]  if(opt  ==  null)  {  if(options  ==  null)  {  options  =  new  HashMap();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  if(options  ==  null)  {  options  =  new  HashMap();  }	          if(options!=    null)    {    options    =    new    HashMap();    }    if(options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
74	[BUG]  [BUGGY]  options  ==  null)  {  options  =  new  HashMap();  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  ==  null)  {  options  =  new  HashMap();  }	          if(options!=    null)    {    options    =    new    HashMap();    }    if(options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  not  a  statement	64	None	replace
75	[BUG]  [BUGGY]  Option  options  =  names.keySet();  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  names.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  names.keySet();	  Option    options    =    options.keySet();    	non-compiled	[CE]  incompatible  types	90	None	replace
76	[BUG]  [BUGGY]  Option  options  =  args.keySet();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  args.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  args.keySet();	  Option    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
77	[BUG]  [BUGGY]  Option  options  =  this.options.keySet();  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  this.options.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  this.options.keySet();	  Option    options    =    options.keySet();    	non-compiled	[CE]  incompatible  types	90	None	replace
78	[BUG]  [BUGGY]  return  options.containsKey(opt)||  args.containsKey(opt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  args.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  args.containsKey(opt);	  return    args.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
79	[BUG]  [BUGGY]  Return  options.containsKey(opt)||  args.containsKey(opt);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Return  options.containsKey(opt)||  args.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Return  options.containsKey(opt)||  args.containsKey(opt);	  return    args.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  ';'  expected	19	None	replace
80	[BUG]  [BUGGY]  return  options.containsKey(opt)||  args.containsKey(option);  [CE]  cannot  find  symbol  option  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  args.containsKey(option);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  args.containsKey(option);	  return    args.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol  option	19	None	replace
81	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  return  options.containsValue(opt);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt))  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt))  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)    ==    null)    {    if(options.containsValue(opt)!=    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
82	[BUG]  [BUGGY]  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)    ==    null)    {    if(options.containsValue(opt)!=    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
83	[BUG]  [BUGGY]  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)    ==    null)    {    if(options.containsValue(opt)!=    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	11	None	replace
84	[BUG]  [BUGGY]  if(opt!=  null)  {  if(options  ==  null)  {  options  =  new  HashMap();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  if(options  ==  null)  {  options  =  new  HashMap();  }	          if(options!=    null)    {    options    =    new    HashMap();    }    If(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
85	[BUG]  [BUGGY]  if(opt!=  null)  {  if(options!=  null)  {  options  =  new  HashMap();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  if(options!=  null)  {  options  =  new  HashMap();  }	          if(options!=    null)    {    options    =    new    HashMap();    }    If(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
86	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  true;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  true;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt))  {  return  true;  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	99	None	replace
87	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  return  true;  if(options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  return  true;  if(options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt))  return  true;  if(options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    }    	non-compiled	[CE]  ')'  expected	99	None	replace
88	[BUG]  [BUGGY]  if(options  ==  null)  {  options  =  new  LinkedHashSet  <  String>();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options  ==  null)  {  options  =  new  LinkedHashSet  <  String>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null)  {  options  =  new  LinkedHashSet  <  String>();  }	  if(options    ==    null)    {    options    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
89	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.size()));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.size()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.size()));	  HashCodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  ';'  expected	29	None	replace
90	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.keySet(),  options.size()));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.keySet(),  options.size()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.keySet(),  options.size()));	  HashCodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  ';'  expected	29	None	replace
91	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.values()));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.values()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.values()));	  HashCodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  ';'  expected	29	None	replace
92	[BUG]  [BUGGY]  Options  options  =(Options)names.get(opt,  opt);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)names.get(opt,  opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)names.get(opt,  opt);	  Options    options    =(Options)args.get(opt,    names);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
93	[BUG]  [BUGGY]  Options  options  =(Options)names.get(opt,  args);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)names.get(opt,  args);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)names.get(opt,  args);	  Options    options    =(Options)args.get(opt,    names);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
94	[BUG]  [BUGGY]  Option  options  =(Options)names.get(opt,  opt);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =(Options)names.get(opt,  opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =(Options)names.get(opt,  opt);	  Options    options    =(Options)args.get(opt,    names);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
95	[BUG]  [BUGGY]  Options  options  =(Options)names.get(opt,  options);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)names.get(opt,  options);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)names.get(opt,  options);	  Options    options    =(Options)args.get(opt,    names);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
96	[BUG]  [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt,  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt,  hashcode);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)hashcodeMap.get(opt,  hashcode);	  Options    options    =(Options)args.get(opt,    hashcodeMap);    	non-compiled	[CE]  cannot  find  symbol  hashcode	57	None	replace
97	[BUG]  [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt);  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)hashcodeMap.get(opt);	  Options    options    =(Options)args.get(opt,    hashcodeMap);    	non-compiled	[CE]  missing  return  statement	57	None	replace
98	[BUG]  [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt,  args);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt,  args);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)hashcodeMap.get(opt,  args);	  Options    options    =(Options)args.get(opt,    hashcodeMap);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	57	None	replace
99	[BUG]  [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt,  opt);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt,  opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)hashcodeMap.get(opt,  opt);	  Options    options    =(Options)args.get(opt,    hashcodeMap);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	57	None	replace
100	[BUG]  [BUGGY]  if(opt!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options    >=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	40	None	replace
101	[BUG]  [BUGGY]  for(String  opt  :  options.values())  {  return  true;  }  [CE]  variable  opt  is  already  defined  in  method  hasOption(String)  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  for(String  opt  :  options.values())  {  return  true;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  opt  :  options.values())  {  return  true;  }	  for(String    opt    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  variable  opt  is  already  defined  in  method  hasOption(String)	21	None	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
103	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
105	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
106	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
107	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
109	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options!=    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
110	[BUG]  [BUGGY]  Options  options  =(Options)this.options.clone();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)this.options.clone();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)this.options.clone();	  options.clear();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
111	[BUG]  [BUGGY]  Options  options  =(Options)this.names.get(opt);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)this.names.get(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)this.names.get(opt);	  options.clear();    	non-compiled	[CE]  missing  return  statement	46	None	replace
112	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt))  {  throw  new  IllegalArgumentException( " ");  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
113	[BUG]  [BUGGY]  return  options.contains(opt)&&  args.contains(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)&&  args.contains(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)&&  args.contains(opt);	  return    options.contains(opt)&&    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
114	[BUG]  [BUGGY]  return  options.contains(opt)&&  options.contains(option);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)&&  options.contains(option);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)&&  options.contains(option);	  return    options.contains(opt)&&    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
115	[BUG]  [BUGGY]  Option  option  =  options.get(opt  +  1);  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  option  =  options.get(opt  +  1);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  option  =  options.get(opt  +  1);	  Option    option    =    options.get(opt);    	non-compiled	[CE]  incompatible  types	93	None	replace
116	[BUG]  [BUGGY]  Option  option  =  options.get(opt)||  options.containsKey(opt);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  option  =  options.get(opt)||  options.containsKey(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  option  =  options.get(opt)||  options.containsKey(opt);	  Option    option    =    options.get(opt);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	93	None	replace
117	[BUG]  [BUGGY]  Option  option  =  options.get(opt)&  0xFFFF;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  option  =  options.get(opt)&  0xFFFF;  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  option  =  options.get(opt)&  0xFFFF;	  Option    option    =    options.get(opt);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	93	None	replace
118	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt)||  args.containsKey(opt);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt)||  args.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  hashcodeMap.containsKey(opt)||  args.containsKey(opt);	  return    args.containsKey(opt)||    hashcodeMap.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
119	[BUG]  [BUGGY]  return  hashCodeMap.containsKey(opt)||  args.containsKey(opt);  [CE]  cannot  find  symbol  hashCodeMap  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashCodeMap.containsKey(opt)||  args.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  hashCodeMap.containsKey(opt)||  args.containsKey(opt);	  return    args.containsKey(opt)||    hashcodeMap.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol  hashCodeMap	20	None	replace
120	[BUG]  [BUGGY]  return  options.hashCodeMap.contains(opt);  [CE]  cannot  find  symbol  hashCodeMap  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hashCodeMap.contains(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hashCodeMap.contains(opt);	  return    hashcodeMap.contains(opt);    	non-compiled	[CE]  cannot  find  symbol  hashCodeMap	60	None	replace
121	[BUG]  [BUGGY]  return  options.hashcodeMap.contains(opt);  [CE]  cannot  find  symbol  hashcodeMap  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hashcodeMap.contains(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hashcodeMap.contains(opt);	  return    hashcodeMap.contains(opt);    	non-compiled	[CE]  cannot  find  symbol  hashcodeMap	60	None	replace
122	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.hasValue(opt);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.hasValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.hasValue(opt);  }	  return    options.containsValue(opt);    if(options!=    null)    {    options.containsValue(opt);    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
123	[BUG]  [BUGGY]  options.put(opt,  null);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.put(opt,  null);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  null);	  options.put(opt,    options);    	non-compiled	[CE]  missing  return  statement	47	None	replace
124	[BUG]  [BUGGY]  options.put(opt,  new  CommandLine());  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.put(opt,  new  CommandLine());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  new  CommandLine());	  options.put(opt,    options);    	non-compiled	[CE]  missing  return  statement	47	None	replace
125	[BUG]  [BUGGY]  options.put(opt,  this);  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.put(opt,  this);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  this);	  options.put(opt,    options);    	non-compiled	[CE]  missing  return  statement	47	None	replace
126	[BUG]  [BUGGY]  options.put(opt,  args);  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.put(opt,  args);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  args);	  options.put(opt,    options);    	non-compiled	[CE]  missing  return  statement	47	None	replace
127	[BUG]  [BUGGY]  options  =  new  LinkedHashMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  LinkedHashMap  <  String,Object>();	  options    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
128	[BUG]  [BUGGY]  options  =  new  HashMap  <  String,Object>(options);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  =  new  HashMap  <  String,Object>(options);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  HashMap  <  String,Object>(options);	  options    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  missing  return  statement	22	None	replace
129	[BUG]  [BUGGY]  options  =  new  HashMap  <  String,Object>(opt);  [CE]  no  suitable  constructor  found  for  HashMap(String)  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  =  new  HashMap  <  String,Object>(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  HashMap  <  String,Object>(opt);	  options    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(String)	22	None	replace
130	[BUG]  [BUGGY]  OptionHandler.checkArgument(options,  args.containsKey(opt));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options,  args.containsKey(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options,  args.containsKey(opt));	  OptionHandler.checkArgument(args.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
131	[BUG]  [BUGGY]  OptionHandler.checkArgument(args,  options.containsKey(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(args,  options.containsKey(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(args,  options.containsKey(opt));	  OptionHandler.checkArgument(args.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	54	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
133	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
135	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
137	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
138	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options	  	non-compiled	[CE]  ')'  expected	38	None	add
139	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options	  	non-compiled	[CE]  ')'  expected	38	None	add
140	[BUG]  [BUGGY]  if(options!=  null  ||  options.containsKey(opt))  {  options  =  new  HashMap();  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null  ||  options.containsKey(opt))  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null  ||  options.containsKey(opt))  {  options  =  new  HashMap();  }	          if(options!=    null)    {    options    =    new    HashMap();    }    if(options    >=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  missing  return  statement	65	None	replace
141	[BUG]  [BUGGY]  hashcodeMap.put(option,  false);  [CE]  cannot  find  symbol  option  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  hashcodeMap.put(option,  false);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	hashcodeMap.put(option,  false);	  hashcodeMap.put(opt,    false);    	non-compiled	[CE]  cannot  find  symbol  option	48	None	replace
142	[BUG]  [BUGGY]  return  options.contains(opt)||  args.containsValue(opt);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)||  args.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  args.containsValue(opt);	  return    options.contains(opt)||    options.containsValue(opt);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
143	[BUG]  [BUGGY]  return  options.hashCodeMap().containsKey(opt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hashCodeMap().containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hashCodeMap().containsKey(opt);	  return    hashcodeMap().containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
144	[BUG]  [BUGGY]  return  options().hashCodeMap().containsKey(opt);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options().hashCodeMap().containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options().hashCodeMap().containsKey(opt);	  return    hashcodeMap().containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
145	[BUG]  [BUGGY]  return  options().containsKey(opt);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options().containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options().containsKey(opt);	  return    hashcodeMap().containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
146	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length  +  1);  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length  +  1);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt),  options.length  +  1);	  OptionHandler.checkArgument(options.containsKey(opt),    options.length);    	non-compiled	[CE]  cannot  find  symbol  length	81	None	replace
147	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length,  options.length);  [CE]  cannot  find  symbol  length  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length,  options.length);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt),  options.length,  options.length);	  OptionHandler.checkArgument(options.containsKey(opt),    options.length);    	non-compiled	[CE]  cannot  find  symbol  length	81	None	replace
148	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length  -  1);  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length  -  1);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt),  options.length  -  1);	  OptionHandler.checkArgument(options.containsKey(opt),    options.length);    	non-compiled	[CE]  cannot  find  symbol  length	81	None	replace
149	[BUG]  [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.size()));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.size()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  new  HashMap  <  String,Object>(options.size()));	  HashcodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  ';'  expected	50	None	replace
150	[BUG]  [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.values());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.values());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  new  HashMap  <  String,Object>(options.values());	  HashcodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
151	[BUG]  [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.keySet(),  options.size()));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.keySet(),  options.size()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  new  HashMap  <  String,Object>(options.keySet(),  options.size()));	  HashcodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  ';'  expected	50	None	replace
152	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  false;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt))  {  return  false;  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  missing  return  statement	14	None	replace
153	[BUG]  [BUGGY]  Options.put(opt,  new  HashMap  <  String,Object>());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options.put(opt,  new  HashMap  <  String,Object>());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options.put(opt,  new  HashMap  <  String,Object>());	  options.put(opt,    new    HashMap    <    String,Object>());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
154	[BUG]  [BUGGY]  options.put(opt,  new  HashMap  <  String,Object>()));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.put(opt,  new  HashMap  <  String,Object>()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  new  HashMap  <  String,Object>()));	  options.put(opt,    new    HashMap    <    String,Object>());    	non-compiled	[CE]  ';'  expected	25	None	replace
155	[BUG]  [BUGGY]  options  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  =  new  LinkedHashMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  LinkedHashMap();	  options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
156	[BUG]  [BUGGY]  options  =  new  HashMap(options);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  =  new  HashMap(options);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  HashMap(options);	  options    =    new    HashMap();    	non-compiled	[CE]  missing  return  statement	44	None	replace
157	[BUG]  [BUGGY]  options  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  =  new  ArrayList();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  ArrayList();	  options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
158	[BUG]  [BUGGY]  return  args.contains(opt)||  options.contains(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  args.contains(opt)||  options.contains(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.contains(opt)||  options.contains(opt);	  return    options.contains(opt)||    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
159	[BUG]  [BUGGY]  return  options.contains(opt)||  options.contains(option);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)||  options.contains(option);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  options.contains(option);	  return    options.contains(opt)||    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
160	[BUG]  [BUGGY]  return  options.contains(opt)||  args.contains(opt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)||  args.contains(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  args.contains(opt);	  return    options.contains(opt)||    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
161	[BUG]  [BUGGY]  OptionHandler.checkOption(options.get(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkOption(options.get(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkOption(options.get(opt));	  OptionHandler.checkOption(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	80	None	replace
162	[BUG]  [BUGGY]  OptionHandler.checkOption(names.containsKey(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkOption(names.containsKey(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkOption(names.containsKey(opt));	  OptionHandler.checkOption(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	80	None	replace
163	[BUG]  [BUGGY]  OptionHandler.checkOption(options.hashCode(opt));  [CE]  no  suitable  method  found  for  hashCode(String)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkOption(options.hashCode(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkOption(options.hashCode(opt));	  OptionHandler.checkOption(options.containsKey(opt));    	non-compiled	[CE]  no  suitable  method  found  for  hashCode(String)	80	None	replace
164	[BUG]  [BUGGY]  boolean  hasOption  =  options.containsKey(opt)||  options.containsKey(opt);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  boolean  hasOption  =  options.containsKey(opt)||  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	boolean  hasOption  =  options.containsKey(opt)||  options.containsKey(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    Option    option    =    options.get(opt);    	non-compiled	[CE]  missing  return  statement	84	None	replace
165	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    Option    option    =    options.get(opt);    	non-compiled	[CE]  missing  return  statement	84	None	replace
166	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  Option  option  =  options.get(opt);  }  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  Option  option  =  options.get(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  Option  option  =  options.get(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    Option    option    =    options.get(opt);    	non-compiled	[CE]  incompatible  types	84	None	replace
167	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt))  {  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt))    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	82	None	replace
168	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt))    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	82	None	replace
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt  +  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)&&  options.containsKey(opt  +  1);	  return    options.containsKey(opt)||    options.containsKey(opt    +    1);    	compilable	  [FE]  AssertionFailedError  	75	1	replace
170	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt  +  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)&&  options.containsKey(opt  +  1);	  return    options.containsKey(opt)||    options.containsKey(opt    +    1);    	compilable	  [FE]  AssertionFailedError  	75	1	replace
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  2);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)||  options.containsKey(opt  +  2);	  return    options.containsKey(opt)||    options.containsKey(opt    +    1);    	compilable	  [FE]  AssertionFailedError  	75	1	replace
172	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  2);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  2);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsKey(opt  +  2);	  return    options.containsKey(opt)||    options.containsKey(opt    +    1);    	compilable	  [FE]  AssertionFailedError  	75	1	replace
173	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)||  options.containsValue(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)||  options.containsValue(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt)||  options.containsValue(opt));	  OptionHandler.checkArgument(options.containsKey(opt)||    options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	52	None	replace
174	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.get(opt)||  options.get(opt));  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.get(opt)||  options.get(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.get(opt)||  options.get(opt));	  OptionHandler.checkArgument(options.containsKey(opt)||    options.containsKey(opt));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	52	None	replace
175	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.get(opt)||  options.containsKey(opt));  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.get(opt)||  options.containsKey(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.get(opt)||  options.containsKey(opt));	  OptionHandler.checkArgument(options.containsKey(opt)||    options.containsKey(opt));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	52	None	replace
176	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  options  =  names.keySet();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  options  =  names.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  options  =  names.keySet();	  HashcodeMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
177	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  options  =  list.keySet();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  options  =  list.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  options  =  list.keySet();	  HashcodeMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
178	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  options  =  args.keySet();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  options  =  args.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  options  =  args.keySet();	  HashcodeMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
179	[BUG]  [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt.toLowerCase());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt.toLowerCase());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  new  OptionalOption(opt.toLowerCase());	  OptionalOption    options    =    new    OptionalOption(opt);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
180	[BUG]  [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  hashcodeMap);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  hashcodeMap);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  new  OptionalOption(opt,  hashcodeMap);	  OptionalOption    options    =    new    OptionalOption(opt);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
181	[BUG]  [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  false);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  false);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  new  OptionalOption(opt,  false);	  OptionalOption    options    =    new    OptionalOption(opt);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
182	[BUG]  [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  hashcode);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  hashcode);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  new  OptionalOption(opt,  hashcode);	  OptionalOption    options    =    new    OptionalOption(opt);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
183	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap();	  HashcodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
184	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashMap();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashMap();	  HashcodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
185	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashmap();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashmap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashmap();	  HashcodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
186	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  options.containsKey(opt)&&  options.containsKey(opt);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  options.containsKey(opt)&&  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    options.containsKey(opt);    options.containsKey(opt)&&  options.containsKey(opt);	  	non-compiled	[CE]  not  a  statement	4	None	add
187	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
188	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)&&  options.containsKey(opt);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)&&  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    options.containsKey(opt);    if(options.containsKey(opt)&&  options.containsKey(opt);	  	non-compiled	[CE]  ')'  expected	4	None	add
189	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt))  {  return  options.containsKey(opt)&&  options.containsKey(opt);  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt))  {  return  options.containsKey(opt)&&  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    options.containsKey(opt);    if(options.containsKey(opt))  {  return  options.containsKey(opt)&&  options.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
190	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)&&  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)&&  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    options.containsKey(opt);    if(options.containsKey(opt)&&  options.containsKey(opt))  {  return  options.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
191	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.get(opt  +  1));  [CE]  cannot  find  symbol  OptionHandler  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.get(opt  +  1));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.get(opt  +  1));	  OptionHandler.checkArgument(options.get(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	53	None	replace
192	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.get(opt),  options.size());  [CE]  cannot  find  symbol  OptionHandler  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.get(opt),  options.size());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.get(opt),  options.size());	  OptionHandler.checkArgument(options.get(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	53	None	replace
193	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  {  return  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  {  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    else    {    return    options.containsKey(opt)||    options.containsKey(opt);    }    	non-compiled	[CE]  ')'  expected	83	None	replace
194	[BUG]  [BUGGY]  hashcodeMap  =  false;  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  hashcodeMap  =  false;  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	hashcodeMap  =  false;	  hashcodeMap    =    true;    	non-compiled	[CE]  incompatible  types	73	None	replace
195	[BUG]  [BUGGY]  hashcodeMap  =  null;  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  hashcodeMap  =  null;  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	hashcodeMap  =  null;	  hashcodeMap    =    true;    	non-compiled	[CE]  missing  return  statement	73	None	replace
196	[BUG]  [BUGGY]  hashcodeMap  &=  opt.toLowerCase();  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  hashcodeMap  &=  opt.toLowerCase();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	hashcodeMap  &=  opt.toLowerCase();	  hashcodeMap    =    true;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	73	None	replace
197	[BUG]  [BUGGY]  OptionalOption  options  =  this.options.keySet();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  this.options.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  this.options.keySet();	  OptionalOption    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
198	[BUG]  [BUGGY]  OptionalOption  options  =  args.keySet();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  args.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  args.keySet();	  OptionalOption    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
199	[BUG]  [BUGGY]  OptionalOption  options  =  names.keySet();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  names.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  names.keySet();	  OptionalOption    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
200	[BUG]  [BUGGY]  if(opt.equals( " "))  {  return  false;  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt.equals( " "))  {  return  false;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( " "))  {  return  false;  }	  if(opt.equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	114	None	replace
201	[BUG]  [BUGGY]  if(opt.equals( "_ "))  {  return  true;  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt.equals( "_ "))  {  return  true;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( "_ "))  {  return  true;  }	  if(opt.equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	114	None	replace
202	[BUG]  [BUGGY]  if(opt.equals( "/ "))  {  return  true;  }  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt.equals( "/ "))  {  return  true;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( "/ "))  {  return  true;  }	  if(opt.equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	114	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)&&  options.containsValue(opt);	  return    options.containsKey(opt)||    options.containsValue(opt);    	compilable	  [FE]  AssertionFailedError  	7	1	replace
204	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsValue(opt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)&&  options.containsValue(opt);	  return    options.containsKey(opt)||    options.containsValue(opt);    	compilable	  [FE]  AssertionFailedError  	7	1	replace
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt  +  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)||  options.containsValue(opt  +  1);	  return    options.containsKey(opt)||    options.containsValue(opt);    	compilable	  [FE]  AssertionFailedError  	7	1	replace
206	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt  +  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsValue(opt  +  1);	  return    options.containsKey(opt)||    options.containsValue(opt);    	compilable	  [FE]  AssertionFailedError  	7	1	replace
207	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt).booleanValue();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt).booleanValue();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsValue(opt).booleanValue();	  return    options.containsKey(opt)||    options.containsValue(opt);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	7	None	replace
208	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  return  this.options.containsKey(opt);  }  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  for(String  option  :  options.keySet())  {  return  this.options.containsKey(opt);  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  option  :  options.keySet())  {  return  this.options.containsKey(opt);  }	  for(String    option    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  incompatible  types	35	None	replace
209	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  return  this.options.containsOption(opt);  }  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  for(String  option  :  options.keySet())  {  return  this.options.containsOption(opt);  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  option  :  options.keySet())  {  return  this.options.containsOption(opt);  }	  for(String    option    :    options.keySet())    {    return    true;    }    	non-compiled	[CE]  incompatible  types	35	None	replace
210	[BUG]  [BUGGY]  if(options.equals( "   "))  {  return  options.hasOption(opt);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.equals( "   "))  {  return  options.hasOption(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.equals( "   "))  {  return  options.hasOption(opt);  }	  if(opt.equals(   "   "))    {    return    options.hasOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
211	[BUG]  [BUGGY]  if(opt.equals( "_ "))  {  return  options.hasOption(opt);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt.equals( "_ "))  {  return  options.hasOption(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( "_ "))  {  return  options.hasOption(opt);  }	  if(opt.equals(   "   "))    {    return    options.hasOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
212	[BUG]  [BUGGY]  if(opt.equals( "* "))  {  return  options.hasOption(opt);  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt.equals( "* "))  {  return  options.hasOption(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( "* "))  {  return  options.hasOption(opt);  }	  if(opt.equals(   "   "))    {    return    options.hasOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
213	[BUG]  [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap();	  HashCodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
214	[BUG]  [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap(opt);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap(opt);	  HashCodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
215	[BUG]  [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.values();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.values();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  <  String,Object>  hashcodeMap  =  options.values();	  HashCodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
216	[BUG]  [BUGGY]  Options  options  =(Options)options.get(opt,  opt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)options.get(opt,  opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)options.get(opt,  opt);	  Options    options    =(Options)args.get(opt,    options);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
217	[BUG]  [BUGGY]  Options  options  =(Options)options.get(opt,  options);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)options.get(opt,  options);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)options.get(opt,  options);	  Options    options    =(Options)args.get(opt,    options);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
218	[BUG]  [BUGGY]  Options  options  =(Options)this.options.get(opt,  options);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)this.options.get(opt,  options);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)this.options.get(opt,  options);	  Options    options    =(Options)args.get(opt,    options);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	71	None	replace
219	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    options.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  not  a  statement	16	None	replace
220	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt))  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt))  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    options.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  not  a  statement	16	None	replace
221	[BUG]  [BUGGY]  HashcodeMap  options  =  names.keySet();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  options  =  names.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  options  =  names.keySet();	  HashcodeMap    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
222	[BUG]  [BUGGY]  HashcodeMap  options  =  this.options.keySet();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  options  =  this.options.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  options  =  this.options.keySet();	  HashcodeMap    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
223	[BUG]  [BUGGY]  HashcodeMap  options  =  hashcodeMap.keySet();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  options  =  hashcodeMap.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  options  =  hashcodeMap.keySet();	  HashcodeMap    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
224	[BUG]  [BUGGY]  options  =  options.getValue(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  =  options.getValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  options.getValue(opt);	  return    options.containsValue(opt);    Options    options    =    options.getValue(opt);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
225	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  Options  options  =  options.getValue(opt);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  Options  options  =  options.getValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsValue(opt);  Options  options  =  options.getValue(opt);  }	  return    options.containsValue(opt);    Options    options    =    options.getValue(opt);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
226	[BUG]  [BUGGY]  Option  options  =  options.getValue(opt);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  options.getValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  options.getValue(opt);	  return    options.containsValue(opt);    Options    options    =    options.getValue(opt);    	non-compiled	[CE]  incompatible  types	85	None	replace
227	[BUG]  [BUGGY]  Options  options  =  options.getValue(opt);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =  options.getValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =  options.getValue(opt);	  return    options.containsValue(opt);    Options    options    =    options.getValue(opt);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
228	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  ||  options.containsKey(opt);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  ||  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)&&  options.containsKey(opt);  ||  options.containsKey(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    ||    options.containsKey(opt);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
229	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  ||  options.containsValue(opt);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt);  ||  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsKey(opt);  ||  options.containsValue(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    ||    options.containsKey(opt);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
230	[BUG]  [BUGGY]  HashcodeMap  names  =  this.hashcodeMap.keySet();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  this.hashcodeMap.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  this.hashcodeMap.keySet();	  HashcodeMap    names    =    hashcodeMap.keySet();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
231	[BUG]  [BUGGY]  HashcodeMap  names  =  args.keySet();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  args.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  args.keySet();	  HashcodeMap    names    =    hashcodeMap.keySet();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
232	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  options.containsKey(opt)||  options.containsKey(opt  +  1);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  options.containsKey(opt)||  options.containsKey(opt  +  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    options.containsKey(opt)||  options.containsKey(opt  +  1);	  	non-compiled	[CE]  not  a  statement	74	None	add
233	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  if(options.containsKey(opt)||  options.containsKey(opt  +  1);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  if(options.containsKey(opt)||  options.containsKey(opt  +  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    if(options.containsKey(opt)||  options.containsKey(opt  +  1);	  	non-compiled	[CE]  ')'  expected	74	None	add
234	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  ||  options.containsKey(opt  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  ||  options.containsKey(opt  +  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    ||  options.containsKey(opt  +  1);	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
235	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  if(options.containsKey(opt)||  options.containsKey(opt  +  1))  {  return  options.containsKey(opt);  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  if(options.containsKey(opt)||  options.containsKey(opt  +  1))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    if(options.containsKey(opt)||  options.containsKey(opt  +  1))  {  return  options.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	74	None	add
236	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  if(options.containsKey(opt)||  options.containsKey(opt  +  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  if(options.containsKey(opt)||  options.containsKey(opt  +  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    if(options.containsKey(opt)||  options.containsKey(opt  +  1))  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	74	None	add
237	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.hasOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.hasOption(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.hasOption(opt);  }	  if(opt    ==    null)    {    return    options.hasOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
238	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.hasOption(opt);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.hasOption(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.hasOption(opt);  }	  if(opt    ==    null)    {    return    options.hasOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
239	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.hashCode(opt);  }  [CE]  no  suitable  method  found  for  hashCode(String)  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.hashCode(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.hashCode(opt);  }	  if(opt    ==    null)    {    return    options.hasOption(opt);    }    	non-compiled	[CE]  no  suitable  method  found  for  hashCode(String)	76	None	replace
240	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    else    return    options.containsKey(opt);    }    	non-compiled	[CE]  ')'  expected	100	None	replace
241	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    else    return    options.containsKey(opt);    }    	non-compiled	[CE]  ')'  expected	100	None	replace
242	[BUG]  [BUGGY]  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(AssertionFailedError  exception  :  options.values())  {  return  false;  }	  return    options.containsValue(opt);    if(options!=    null)    {    for(AssertionFailedError    exception    :    options.values())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
243	[BUG]  [BUGGY]  HashcodeMap  names  =  options.hashCodeMap();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  options.hashCodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  options.hashCodeMap();	  HashcodeMap    names    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
244	[BUG]  [BUGGY]  HashcodeMap  names  =  arrays.keySet();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  arrays.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  arrays.keySet();	  HashcodeMap    names    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
245	[BUG]  [BUGGY]  HashcodeMap  names  =  this.options.keySet();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  this.options.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  this.options.keySet();	  HashcodeMap    names    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
246	[BUG]  [BUGGY]  return  args.hasOption(opt)||  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  args.hasOption(opt)||  options.hasOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.hasOption(opt)||  options.hasOption(opt);	  return    options.hasOption(opt)||    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
247	[BUG]  [BUGGY]  return  options.hasOption(opt)&&  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hasOption(opt)&&  options.hasOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hasOption(opt)&&  options.hasOption(opt);	  return    options.hasOption(opt)||    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
248	[BUG]  [BUGGY]  return  options.hasOption(opt)||  options.hasArg(opt);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hasOption(opt)||  options.hasArg(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hasOption(opt)||  options.hasArg(opt);	  return    options.hasOption(opt)||    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
249	[BUG]  [BUGGY]  if(options  ==  null)  {  return  options.containsValue(opt);  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options  ==  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null)  {  return  options.containsValue(opt);  }	  if(options!=    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  missing  return  statement	30	None	replace
250	[BUG]  [BUGGY]  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)    ==    null)    {    if(options.containsValue(opt)    ==    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
251	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  false;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  false;  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  false;	  HashcodeMap    <    String,Object>    hashcodeMap    =    true;    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
252	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  null;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  null;  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  null;	  HashcodeMap    <    String,Object>    hashcodeMap    =    true;    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
253	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  new  HashcodeMap  <  String,Object>();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  new  HashcodeMap  <  String,Object>();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  new  HashcodeMap  <  String,Object>();	  HashcodeMap    <    String,Object>    hashcodeMap    =    true;    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
254	[BUG]  [BUGGY]  return  args.containsKey(opt)&&  options.containsKey(opt);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  args.containsKey(opt)&&  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.containsKey(opt)&&  options.containsKey(opt);	  return    options.containsKey(opt)&&    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
255	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  options  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  options  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  options  =  Lists.newArrayList();  }	  return    options.containsValue(opt);    if(options!=    null)    {    options    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
256	[BUG]  [BUGGY]  boolean  hasOption  =  options.containsValue(opt);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  boolean  hasOption  =  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	boolean  hasOption  =  options.containsValue(opt);	  return    options.containsValue(opt);    if(options!=    null)    {    options    =    Lists.newArrayList();    }    	non-compiled	[CE]  missing  return  statement	88	None	replace
257	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  if(options  ==  null)  {  options  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  if(options  ==  null)  {  options  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsValue(opt);  if(options  ==  null)  {  options  =  Lists.newArrayList();  }	  return    options.containsValue(opt);    if(options!=    null)    {    options    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
258	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  0);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  0);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  0);	  Options    options    =(Options)args.get(opt,    hashcode);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	55	None	replace
259	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  defaultValue);  [CE]  cannot  find  symbol  defaultValue  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  defaultValue);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  defaultValue);	  Options    options    =(Options)args.get(opt,    hashcode);    	non-compiled	[CE]  cannot  find  symbol  defaultValue	55	None	replace
260	[BUG]  [BUGGY]  HashcodeMap  hashcodeMap  =  options.get(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  hashcodeMap  =  options.get(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  hashcodeMap  =  options.get(opt);	  HashcodeMap    hashcodeMap    =    hashcodeMap.get(opt);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
261	[BUG]  [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashCodeMap().get(opt);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashCodeMap().get(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  hashcodeMap  =  options.hashCodeMap().get(opt);	  HashcodeMap    hashcodeMap    =    hashcodeMap.get(opt);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
262	[BUG]  [BUGGY]  HashcodeMap  hashcodeMap  =  options.has(opt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  hashcodeMap  =  options.has(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  hashcodeMap  =  options.has(opt);	  HashcodeMap    hashcodeMap    =    hashcodeMap.get(opt);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
263	[BUG]  [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashCodeMap(opt);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashCodeMap(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  hashcodeMap  =  options.hashCodeMap(opt);	  HashcodeMap    hashcodeMap    =    hashcodeMap.get(opt);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt)&&  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  hashcodeMap.containsKey(opt)&&  options.containsKey(opt);	  return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	69	1	replace
265	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt)&&  options.containsKey(opt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt)&&  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  hashcodeMap.containsKey(opt)&&  options.containsKey(opt);	  return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	69	1	replace
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)||  hashcodeMap.containsKey(opt);	  return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	69	1	replace
267	[BUG]  [BUGGY]  return  options.containsKey(opt)||  hashcodeMap.containsKey(opt);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  hashcodeMap.containsKey(opt);	  return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	69	1	replace
268	[BUG]  [BUGGY]  return  hashCodeMap.containsKey(opt)&&  options.containsKey(opt);  [CE]  cannot  find  symbol  hashCodeMap  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashCodeMap.containsKey(opt)&&  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  hashCodeMap.containsKey(opt)&&  options.containsKey(opt);	  return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol  hashCodeMap	69	None	replace
269	[BUG]  [BUGGY]  for(String  option  :  this.options.keySet())  {  return  false;  }  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  for(String  option  :  this.options.keySet())  {  return  false;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  option  :  this.options.keySet())  {  return  false;  }	  for(String    option    :    options.keySet())    {    return    false;    }    	non-compiled	[CE]  incompatible  types	1	None	replace
270	[BUG]  [BUGGY]  HashMap  <  String,Object>  options  =  this.options.keySet();  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashMap  <  String,Object>  options  =  this.options.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashMap  <  String,Object>  options  =  this.options.keySet();	  HashMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  incompatible  types	28	None	replace
271	[BUG]  [BUGGY]  HashMap  <  String,Object>  options  =  args.keySet();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashMap  <  String,Object>  options  =  args.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashMap  <  String,Object>  options  =  args.keySet();	  HashMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
272	[BUG]  [BUGGY]  HashMap  <  String,Object>  options  =  names.keySet();  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashMap  <  String,Object>  options  =  names.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashMap  <  String,Object>  options  =  names.keySet();	  HashMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  incompatible  types	28	None	replace
273	[BUG]  [BUGGY]  if(options.hasOption(opt)  ==  false)  {  return  options.hasOption(opt)  ==  false;  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.hasOption(opt)  ==  false)  {  return  options.hasOption(opt)  ==  false;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.hasOption(opt)  ==  false)  {  return  options.hasOption(opt)  ==  false;  }	  return    options.hasOption(opt)    ==    false;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
274	[BUG]  [BUGGY]  if(options.hasOption(opt)!=  false)  {  return  options.hasOption(opt)  ==  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.hasOption(opt)!=  false)  {  return  options.hasOption(opt)  ==  false;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.hasOption(opt)!=  false)  {  return  options.hasOption(opt)  ==  false;  }	  return    options.hasOption(opt)    ==    false;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
275	[BUG]  [BUGGY]  return  args.hasOption(opt)  ==  false;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  args.hasOption(opt)  ==  false;  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.hasOption(opt)  ==  false;	  return    options.hasOption(opt)    ==    false;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  args.contains(opt)||  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  args.contains(opt)||  options.containsKey(opt);	  return    options.contains(opt)||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	111	1	replace
277	[BUG]  [BUGGY]  return  args.contains(opt)||  options.containsKey(opt);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  args.contains(opt)||  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.contains(opt)||  options.containsKey(opt);	  return    options.contains(opt)||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	111	1	replace
278	[BUG]  [BUGGY]  return  options.contains(opt)||  args.containsKey(opt);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)||  args.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  args.containsKey(opt);	  return    options.contains(opt)||    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
279	[BUG]  [BUGGY]  if(options!=  null  ||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null  ||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null  ||  options.containsKey(opt))  {  return  options.containsKey(opt);  }	  if(options!=    null    &&    options.containsKey(opt))    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	112	None	replace
280	[BUG]  [BUGGY]  if(options  ==  null  ||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options  ==  null  ||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null  ||  options.containsKey(opt))  {  return  options.containsKey(opt);  }	  if(options!=    null    &&    options.containsKey(opt))    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	112	None	replace
281	[BUG]  [BUGGY]  options.keySet())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.keySet())  {  return  false;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.keySet())  {  return  false;  }	  options.keySet())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
282	[BUG]  [BUGGY]  options.keySet()  &&  options.containsKey(opt))  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.keySet()  &&  options.containsKey(opt))  {  return  true;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.keySet()  &&  options.containsKey(opt))  {  return  true;  }	  options.keySet())    {    return    true;    }    	non-compiled	[CE]  not  a  statement	89	None	replace
283	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    options.containsKey(opt)&&  hashcodeMap.containsKey(opt);	  	non-compiled	[CE]  not  a  statement	68	None	add
284	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	68	None	add
285	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)||  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)||  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    if(options.containsKey(opt)||  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	68	None	add
286	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	68	None	add
287	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt);	  	non-compiled	[CE]  ')'  expected	68	None	add
288	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.length());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt),  options.length());	  OptionHandler.checkArgument(options.containsKey(opt),    options.hashCode());    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
289	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.size());  [CE]  cannot  find  symbol  OptionHandler  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  options.size());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt),  options.size());	  OptionHandler.checkArgument(options.containsKey(opt),    options.hashCode());    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	103	None	replace
290	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  names.hashCode());  [CE]  cannot  find  symbol  OptionHandler  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt),  names.hashCode());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt),  names.hashCode());	  OptionHandler.checkArgument(options.containsKey(opt),    options.hashCode());    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	103	None	replace
291	[BUG]  [BUGGY]  return  args.hasOption(opt);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  args.hasOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.hasOption(opt);	  return    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
292	[BUG]  [BUGGY]  return  options.hasOption(opt)&&  args.contains(opt);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hasOption(opt)&&  args.contains(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hasOption(opt)&&  args.contains(opt);	  return    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
293	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.hasOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)&&  options.hasOption(opt);	  return    options.containsKey(opt)||    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
294	[BUG]  [BUGGY]  return  args.containsKey(opt)||  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  args.containsKey(opt)||  options.hasOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  args.containsKey(opt)||  options.hasOption(opt);	  return    options.containsKey(opt)||    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
295	[BUG]  [BUGGY]  return  options.containsKey(opt)||  args.hasOption(opt);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  args.hasOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  args.hasOption(opt);	  return    options.containsKey(opt)||    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
296	[BUG]  [BUGGY]  if(opt!=  null)  {  options  =  new  HashMap();  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  options  =  new  HashMap();  }	          if(options!=    null)    {    options    =    new    HashMap();    }    If(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  missing  return  statement	66	None	replace
297	[BUG]  [BUGGY]  if(opt  ==  null)  {  options  =  new  HashMap();  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  options  =  new  HashMap();  }	          if(options!=    null)    {    options    =    new    HashMap();    }    If(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  missing  return  statement	66	None	replace
298	[BUG]  [BUGGY]  OptionHandler.checkArgument(opt!=  null);  [CE]  cannot  find  symbol  OptionHandler  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(opt!=  null);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(opt!=  null);	          if(options!=    null)    {    options    =    new    HashMap();    }    If(options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	66	None	replace
299	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    options.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  not  a  statement	16	None	replace
300	[BUG]  [BUGGY]  OptionHandler.checkArgument(optionNames.containsKey(opt));  [CE]  cannot  find  symbol  optionNames  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(optionNames.containsKey(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(optionNames.containsKey(opt));	  OptionHandler.checkArgument(args.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  optionNames	54	None	replace
301	[BUG]  [BUGGY]  HashcodeMap  names  =  new  HashcodeMap();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  new  HashcodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  new  HashcodeMap();	  hashcodeMap.put(opt,    true);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
302	[BUG]  [BUGGY]  OptionHandler.checkOption(options.containsKey(opt)||  options.containsKey(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkOption(options.containsKey(opt)||  options.containsKey(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkOption(options.containsKey(opt)||  options.containsKey(opt));	  OptionHandler.checkOption(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	80	None	replace
303	[BUG]  [BUGGY]  OptionHandler.checkOption(optionNames.containsKey(opt));  [CE]  cannot  find  symbol  optionNames  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkOption(optionNames.containsKey(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkOption(optionNames.containsKey(opt));	  OptionHandler.checkOption(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  optionNames	80	None	replace
304	[BUG]  [BUGGY]  Option  options  =  new  Option(opt,  args);  [CE]  no  suitable  constructor  found  for  Option(String,List)  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  new  Option(opt,  args);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  new  Option(opt,  args);	  Option    options    =    new    Option(opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String,List)	79	None	replace
305	[BUG]  [BUGGY]  if(options!=  null  ||  options.values()!=  null)  {  for(String  option  :  options.values())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null  ||  options.values()!=  null)  {  for(String  option  :  options.values())  {  return  false;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null  ||  options.values()!=  null)  {  for(String  option  :  options.values())  {  return  false;  }	  if(options!=    null)    {    for(String    option    :    options.values())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
306	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =(HashCodeMap)options.get(opt);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =(HashCodeMap)options.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    hashcodeMap.containsKey(opt);    HashcodeMap  hashcodeMap  =(HashCodeMap)options.get(opt);	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
307	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.hashCode()));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.hashCode()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.hashCode()));	  HashCodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  ';'  expected	29	None	replace
308	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.hashCodeMap()));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.hashCodeMap()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.hashCodeMap()));	  HashCodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  ';'  expected	29	None	replace
309	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.hashCodeMap());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.hashCodeMap());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.hashCodeMap());	  HashCodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
310	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options!=    null)    {    return    options.containsKey(opt)||    options.containsKey(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
311	[BUG]  [BUGGY]  if(options.containsKey(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)    ==    null)    {    if(options.containsValue(opt)    ==    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
312	[BUG]  [BUGGY]  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)    ==    null)    {    if(options.containsValue(opt)    ==    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
313	[BUG]  [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashcodeMap.get(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashcodeMap.get(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  hashcodeMap  =  options.hashcodeMap.get(opt);	  HashcodeMap    hashcodeMap    =    hashcodeMap.get(opt);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
314	[BUG]  [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashCodeMap.get(opt);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashCodeMap.get(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  hashcodeMap  =  options.hashCodeMap.get(opt);	  HashcodeMap    hashcodeMap    =    hashcodeMap.get(opt);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
315	[BUG]  [BUGGY]  options.hashCode())  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.hashCode())  {  return  true;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.hashCode())  {  return  true;  }	  options.keySet())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
316	[BUG]  [BUGGY]  Options  options  =(Options)options.get(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)options.get(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)options.get(opt);	  options.clear();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
317	[BUG]  [BUGGY]  Options  options  =(Options)options.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)options.clone();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)options.clone();	  options.clear();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	46	None	replace
318	[BUG]  [BUGGY]  Options  options  =(Options)this.options.get(opt);  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)this.options.get(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)this.options.get(opt);	  options.clear();    	non-compiled	[CE]  missing  return  statement	46	None	replace
319	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }	  return    options.containsValue(opt);    if(options!=    null)    {    for(AssertionFailedError    exception    :    options.values())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
320	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  }	  return    options.containsValue(opt);    if(options!=    null)    {    for(AssertionFailedError    exception    :    options.values())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
321	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }	  return    options.containsValue(opt);    if(options!=    null)    {    for(AssertionFailedError    exception    :    options.values())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
322	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  }	  return    options.containsValue(opt);    if(options!=    null)    {    for(AssertionFailedError    exception    :    options.values())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
323	[BUG]  [BUGGY]  Option  options  =  options.hashcodeMap();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  options.hashcodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  options.hashcodeMap();	  Option    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
324	[BUG]  [BUGGY]  Option  options  =  options.hashCode();  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  options.hashCode();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  options.hashCode();	  Option    options    =    options.keySet();    	non-compiled	[CE]  incompatible  types	90	None	replace
325	[BUG]  [BUGGY]  OptionHandler.handleOption(opt,  new  HashMap  <  String,Object>());  [CE]  cannot  find  symbol  OptionHandler  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.handleOption(opt,  new  HashMap  <  String,Object>());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.handleOption(opt,  new  HashMap  <  String,Object>());	  options.put(opt,    new    HashMap    <    String,Object>());    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	25	None	replace
326	[BUG]  [BUGGY]  Options  options  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =  new  ArrayList  <  String>();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =  new  ArrayList  <  String>();	  if(options    ==    null)    {    options    =    new    LinkedList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
327	[BUG]  [BUGGY]  return  options.containsKey(opt)||  opt.containsKey(option);  [CE]  cannot  find  symbol  option  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  opt.containsKey(option);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  opt.containsKey(option);	  return    args.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol  option	19	None	replace
328	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  options  =  options.hashCodeMap();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  options  =  options.hashCodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  options  =  options.hashCodeMap();	  HashcodeMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
329	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  options  =  options.hashcodeMap();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  options  =  options.hashcodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  options  =  options.hashcodeMap();	  HashcodeMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
330	[BUG]  [BUGGY]  return  options.hasKey(opt)||  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hasKey(opt)||  options.hasOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hasKey(opt)||  options.hasOption(opt);	  return    options.containsKey(opt)||    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
331	[BUG]  [BUGGY]  return  options.hashCode(opt)||  options.hasOption(opt);  [CE]  no  suitable  method  found  for  hashCode(String)  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hashCode(opt)||  options.hasOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hashCode(opt)||  options.hasOption(opt);	  return    options.containsKey(opt)||    options.hasOption(opt);    	non-compiled	[CE]  no  suitable  method  found  for  hashCode(String)	77	None	replace
332	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.getValue(opt);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.getValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.getValue(opt);	  return    options.containsKey(opt)||    options.containsValue(opt);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
333	[BUG]  [BUGGY]  for(String  option  :  options.hashCode())  {  return  false;  }  [CE]  for-each  not  applicable  to  expression  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  for(String  option  :  options.hashCode())  {  return  false;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	for(String  option  :  options.hashCode())  {  return  false;  }	  for(String    option    :    options.keySet())    {    return    false;    }    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	1	None	replace
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  names.containsKey(opt)||  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  names.containsKey(opt)||  hashcodeMap.containsKey(opt);	  return    args.containsKey(opt)||    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	20	1	replace
335	[BUG]  [BUGGY]  return  names.containsKey(opt)||  hashcodeMap.containsKey(opt);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  names.containsKey(opt)||  hashcodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  names.containsKey(opt)||  hashcodeMap.containsKey(opt);	  return    args.containsKey(opt)||    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	20	1	replace
336	[BUG]  [BUGGY]  if(opt.equals( "* "))  {  return  true;  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt.equals( "* "))  {  return  true;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( "* "))  {  return  true;  }	  if(opt.equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	114	None	replace
337	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)&&  options.containsKey(opt));  [CE]  cannot  find  symbol  OptionHandler  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)&&  options.containsKey(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt)&&  options.containsKey(opt));	  OptionHandler.checkArgument(options.containsKey(opt)||    options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	52	None	replace
338	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)||  options.indexOf(opt));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)||  options.indexOf(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt)||  options.indexOf(opt));	  OptionHandler.checkArgument(options.containsKey(opt)||    options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
339	[BUG]  [BUGGY]  options.put(opt,  new  HashMap  <  String,  String>());  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.put(opt,  new  HashMap  <  String,  String>());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  new  HashMap  <  String,  String>());	  options.put(opt,    new    HashMap());    	non-compiled	[CE]  missing  return  statement	94	None	replace
340	[BUG]  [BUGGY]  Option  options  =  new  Options();  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  new  Options();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  new  Options();	  if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  incompatible  types	104	None	replace
341	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  value);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  value);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  value);	  Options    options    =(Options)args.get(opt,    hashcode);    	non-compiled	[CE]  cannot  find  symbol  value	55	None	replace
342	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  options.containsValue(opt);  }  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsValue(opt);  options.containsValue(opt);  }	  return    options.containsValue(opt);    options.containsValue(opt);    	non-compiled	[CE]  unreachable  statement	9	None	replace
343	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  options.addValue(opt);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsValue(opt);  options.addValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsValue(opt);  options.addValue(opt);  }	  return    options.containsValue(opt);    options.containsValue(opt);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
344	[BUG]  [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.hashCode()));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.hashCode()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  new  HashMap  <  String,Object>(options.hashCode()));	  HashcodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  ';'  expected	50	None	replace
345	[BUG]  [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.keySet());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.keySet());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  new  HashMap  <  String,Object>(options.keySet());	  HashcodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
346	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  HashcodeMap  options  =(HashCodeMap)options.get(opt);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  HashcodeMap  options  =(HashCodeMap)options.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    HashcodeMap  options  =(HashCodeMap)options.get(opt);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
347	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  HashcodeMap  <  String,Object>  options  =  hashcodeMap.get(opt);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  HashcodeMap  <  String,Object>  options  =  hashcodeMap.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    HashcodeMap  <  String,Object>  options  =  hashcodeMap.get(opt);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
348	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  Option  options  =  options.get(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  Option  options  =  options.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    Option  options  =  options.get(opt);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
349	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  HashcodeMap  options  =(HashCodeMap)options.clone();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  HashcodeMap  options  =(HashCodeMap)options.clone();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    HashcodeMap  options  =(HashCodeMap)options.clone();	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
350	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  HashcodeMap  options  =  new  HashMap();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  HashcodeMap  options  =  new  HashMap();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    HashcodeMap  options  =  new  HashMap();	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
351	[BUG]  [BUGGY]  HashcodeMap  names  =  options.hashcodeMap();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  options.hashcodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  options.hashcodeMap();	  HashcodeMap    names    =    hashcodeMap.keySet();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
352	[BUG]  [BUGGY]  return  options.hasValue(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hasValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hasValue(opt);	  return    options.containsValue(opt);    if(options!=    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
353	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  option  =  options.getOption(opt);	          if(options!=    null)    {    options    =    new    HashMap();    }    if(options    >=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
354	[BUG]  [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  args);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  args);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  new  OptionalOption(opt,  args);	  OptionalOption    options    =    new    OptionalOption(opt);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
355	[BUG]  [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  true);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  new  OptionalOption(opt,  true);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  new  OptionalOption(opt,  true);	  OptionalOption    options    =    new    OptionalOption(opt);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  names.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)&&  names.containsKey(opt);	  return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	69	1	replace
357	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  names.containsKey(opt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  names.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)&&  names.containsKey(opt);	  return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	69	1	replace
358	[BUG]  [BUGGY]  options  =  new  LinkedList  <  String>();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options  =  new  LinkedList  <  String>();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options  =  new  LinkedList  <  String>();	  if(options!=    null)    {    options    =    new    LinkedList    <    String>();    }    	non-compiled	[CE]  incompatible  types	34	None	replace
359	[BUG]  [BUGGY]  return  options.contains(opt)||  options.add(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)||  options.add(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  options.add(opt);	  return    options.contains(opt)||    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
360	[BUG]  [BUGGY]  return  options.contains(opt)||  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)||  options.hasOption(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  options.hasOption(opt);	  return    options.contains(opt)||    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
361	[BUG]  [BUGGY]  HashMap  <  String,Object>  options  =  options.hashMap();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashMap  <  String,Object>  options  =  options.hashMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashMap  <  String,Object>  options  =  options.hashMap();	  HashMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
362	[BUG]  [BUGGY]  OptionalOption  options  =  options.hashcodeMap();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  options.hashcodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  options.hashcodeMap();	  OptionalOption    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
363	[BUG]  [BUGGY]  OptionalOption  options  =  options.hashCode();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  options.hashCode();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  options.hashCode();	  OptionalOption    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
364	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    else    {    return    options.containsKey(opt)||    options.containsKey(opt);    }    	non-compiled	[CE]  ')'  expected	83	None	replace
365	[BUG]  [BUGGY]  if(options!=  null)  {  options  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  Lists  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  options  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  options  =  Lists.newArrayList();  }	  return    options.containsValue(opt);    if(options!=    null)    {    options    =    Lists.newArrayList();    }    	non-compiled	[CE]  cannot  find  symbol  Lists	88	None	replace
366	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  options  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  options  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsValue(opt);  if(options!=  null)  {  options  =  Lists.newArrayList();  }	  return    options.containsValue(opt);    if(options!=    null)    {    options    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
367	[BUG]  [BUGGY]  HashcodeMap  options  =  options.hashCodeMap();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  options  =  options.hashCodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  options  =  options.hashCodeMap();	  HashcodeMap    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
368	[BUG]  [BUGGY]  HashcodeMap  options  =  options.hashcodeMap();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  options  =  options.hashcodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  options  =  options.hashcodeMap();	  HashcodeMap    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
369	[BUG]  [BUGGY]  Options  options  =(Options)options.get(opt,  hashcodeMap);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)options.get(opt,  hashcodeMap);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)options.get(opt,  hashcodeMap);	  Options    options    =(Options)args.get(opt,    hashcodeMap);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
370	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  names,  hashcodeMap);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  names,  hashcodeMap);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  names,  hashcodeMap);	  Options    options    =(Options)args.get(opt,    hashcodeMap);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	57	None	replace
371	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  opt,  names);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  opt,  names);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  opt,  names);	  Options    options    =(Options)args.get(opt,    names);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	56	None	replace
372	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  opt,  hashcode);  [CE]  cannot  find  symbol  hashcode  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  opt,  hashcode);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  opt,  hashcode);	  Options    options    =(Options)args.get(opt,    names);    	non-compiled	[CE]  cannot  find  symbol  hashcode	56	None	replace
373	[BUG]  [BUGGY]  if(options!=  null)  {  options.addValue(opt);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  options.addValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  options.addValue(opt);  }	  return    options.containsValue(opt);    if(options!=    null)    {    options.containsValue(opt);    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
374	[BUG]  [BUGGY]  if(options!=  null)  {  options.add(opt);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  options.add(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  options.add(opt);  }	  return    options.containsValue(opt);    if(options!=    null)    {    options.containsValue(opt);    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
375	[BUG]  [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMaps();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMaps();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMaps();	  HashCodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
376	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  Option  option  =  options.get(opt);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  Option  option  =  options.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    Option  option  =  options.get(opt);	  	non-compiled	[CE]  incompatible  types	74	None	add
377	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  Option  options  =  options.get(opt);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  Option  options  =  options.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    Option  options  =  options.get(opt);	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
378	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  String  opt  =  options.get(opt);  [CE]  variable  opt  is  already  defined  in  method  hasOption(String)  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  String  opt  =  options.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    String  opt  =  options.get(opt);	  	non-compiled	[CE]  variable  opt  is  already  defined  in  method  hasOption(String)	74	None	add
379	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.get(opt),  options.hashCode);  [CE]  cannot  find  symbol  hashCode  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.get(opt),  options.hashCode);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.get(opt),  options.hashCode);	  OptionHandler.checkArgument(options.get(opt));    	non-compiled	[CE]  cannot  find  symbol  hashCode	53	None	replace
380	[BUG]  [BUGGY]  Option  option  =  options.get(opt  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  option  =  options.get(opt  -  1);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  option  =  options.get(opt  -  1);	  Option    option    =    options.get(opt);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	93	None	replace
381	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  Option  option  =  options.get(opt);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  Option  option  =  options.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    Option  option  =  options.get(opt);	  	non-compiled	[CE]  incompatible  types	6	None	add
382	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  Option  options  =  options.get(opt);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  Option  options  =  options.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    Option  options  =  options.get(opt);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
383	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  Options  options  =  options.get(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  Options  options  =  options.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    Options  options  =  options.get(opt);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
384	[BUG]  [BUGGY]  if(opt.equals( ". "))  {  return  options.hasOption(opt);  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt.equals( ". "))  {  return  options.hasOption(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( ". "))  {  return  options.hasOption(opt);  }	  if(opt.equals(   "   "))    {    return    options.hasOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
385	[BUG]  [BUGGY]  return  options.contains(opt)&&  options.add(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)&&  options.add(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)&&  options.add(opt);	  return    options.contains(opt)&&    options.contains(opt);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
386	[BUG]  [BUGGY]  HashCodeMap  names  =  options.hashcodeMap();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  options.hashcodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  options.hashcodeMap();	  HashCodeMap    names    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
387	[BUG]  [BUGGY]  HashCodeMap  options  =  options.hashCodeMap();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  options  =  options.hashCodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  options  =  options.hashCodeMap();	  HashCodeMap    names    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
388	[BUG]  [BUGGY]  return  options.contains(opt)&&  options.containsValue(opt);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)&&  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)&&  options.containsValue(opt);	  return    options.contains(opt)||    options.containsValue(opt);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsValue(opt)||  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsValue(opt)||  options.containsValue(opt);	  return    options.contains(opt)||    options.containsValue(opt);    	compilable	  [FE]  AssertionFailedError  	31	1	replace
390	[BUG]  [BUGGY]  return  options.containsValue(opt)||  options.containsValue(opt);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsValue(opt)||  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsValue(opt)||  options.containsValue(opt);	  return    options.contains(opt)||    options.containsValue(opt);    	compilable	  [FE]  AssertionFailedError  	31	1	replace
391	[BUG]  [BUGGY]  return  options.contains(opt)&&  options.containsKey(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)&&  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)&&  options.containsKey(opt);	  return    options.contains(opt)||    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
392	[BUG]  [BUGGY]  return  options.contains(opt)||  options.keySet().containsKey(opt);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)||  options.keySet().containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  options.keySet().containsKey(opt);	  return    options.contains(opt)||    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
393	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashcodeMap();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashcodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashcodeMap();	  HashcodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
394	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap(opt);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  options.hashCodeMap(opt);	  HashcodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
395	[BUG]  [BUGGY]  if(options.containsKey(opt)  ==  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)  ==  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)  ==  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)    ==    null)    {    if(options.containsValue(opt)!=    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
396	[BUG]  [BUGGY]  if(options.containsValue(opt)!=  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsValue(opt)!=  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsValue(opt)!=  null)  {  if(options.containsValue(opt)!=  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)    ==    null)    {    if(options.containsValue(opt)!=    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
397	[BUG]  [BUGGY]  return  options.hasOption(opt)!=  false;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hasOption(opt)!=  false;  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hasOption(opt)!=  false;	  return    options.hasOption(opt)    ==    false;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
398	[BUG]  [BUGGY]  args.hasOption(opt)  ==  false;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  args.hasOption(opt)  ==  false;  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	args.hasOption(opt)  ==  false;	  return    options.hasOption(opt)    ==    false;    	non-compiled	[CE]  not  a  statement	70	None	replace
399	[BUG]  [BUGGY]  return  options.hashCode(opt)  ==  false;  [CE]  no  suitable  method  found  for  hashCode(String)  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hashCode(opt)  ==  false;  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hashCode(opt)  ==  false;	  return    options.hasOption(opt)    ==    false;    	non-compiled	[CE]  no  suitable  method  found  for  hashCode(String)	70	None	replace
400	[BUG]  [BUGGY]  if(options!=  null  &&  options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null  &&  options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null  &&  options.containsKey(opt)||  options.containsKey(opt))  {  return  options.containsKey(opt);  }	  if(options!=    null    &&    options.containsKey(opt))    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	112	None	replace
401	[BUG]  [BUGGY]  if(options!=  null  &&  options.containsKey(opt))  {  return  options.get(opt);  }  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null  &&  options.containsKey(opt))  {  return  options.get(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null  &&  options.containsKey(opt))  {  return  options.get(opt);  }	  if(options!=    null    &&    options.containsKey(opt))    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  incompatible  types	112	None	replace
402	[BUG]  [BUGGY]  if(options!=  null  &&  options.containsKey(opt))  {  return  options.containsValue(opt);  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null  &&  options.containsKey(opt))  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null  &&  options.containsKey(opt))  {  return  options.containsValue(opt);  }	  if(options!=    null    &&    options.containsKey(opt))    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	112	None	replace
403	[BUG]  [BUGGY]  return  options.hashCode(opt);  [CE]  no  suitable  method  found  for  hashCode(String)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hashCode(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hashCode(opt);	  return    options.hasOption(opt);    	non-compiled	[CE]  no  suitable  method  found  for  hashCode(String)	67	None	replace
404	[BUG]  [BUGGY]  Option  options  =(Options)args.get(opt  +  1);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =(Options)args.get(opt  +  1);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =(Options)args.get(opt  +  1);	  Options    options    =(Options)args.get(opt    +    1);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	92	None	replace
405	[BUG]  [BUGGY]  if(opt!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  else  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  else  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  else  {  options  =  new  HashMap  <  String,Object>();  }	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options    >=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	40	None	replace
406	[BUG]  [BUGGY]  if(opt!=  null)  {  options.put(opt,  new  HashMap  <  String,Object>());  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  options.put(opt,  new  HashMap  <  String,Object>());  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  options.put(opt,  new  HashMap  <  String,Object>());  }	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options    >=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	40	None	replace
407	[BUG]  [BUGGY]  if(opt  ==  null)  {  options  =  new  ArrayList  <  String>();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  options  =  new  ArrayList  <  String>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  options  =  new  ArrayList  <  String>();  }	  if(options    ==    null)    {    options    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
409	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap();    }    if(options  ==  null)  {  options  =  new  HashMap();  }  if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap();        }        if(options    ==    null)    {    options    =    new    HashMap();    }    if(options!=  null)  {  options  =  new  HashMap();  }  if(options  ==  null)  {  options  =  new  HashMap();  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
410	[BUG]  [BUGGY]  Option  options  =  options.values();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  options.values();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  options.values();	  if(options!=    null)    {    for(String    opt    :    options.values())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
411	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
412	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
414	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
415	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  >=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  >=  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  >=  null)  {  options  =  new  HashMap  <  String,Object>();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	36	None	add
416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	return  options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    ||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	17	1	replace
417	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.containsKey(opt)||  options.containsKey(opt);	  return    options.containsKey(opt)||    options.containsKey(opt);    ||    options.containsKey(opt);    	compilable	  [FE]  AssertionFailedError  	17	1	replace
418	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt))  {  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt))  {  return  options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  throw  new  IllegalArgumentException( " ");  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
419	[BUG]  [BUGGY]  return  options().hashKey(opt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options().hashKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options().hashKey(opt);	  return    hashcodeMap().containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
420	[BUG]  [BUGGY]  return  options.hashCodeMap.containsKey(opt);  [CE]  cannot  find  symbol  hashCodeMap  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hashCodeMap.containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hashCodeMap.containsKey(opt);	  return    hashcodeMap.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol  hashCodeMap	107	None	replace
421	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  true;  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  true;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt))  {  return  true;  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
422	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  false;  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt))  {  return  false;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    options.containsKey(opt);    if(options.containsKey(opt)||  options.containsKey(opt))  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
423	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)&&  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)&&  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsKey(opt)&&  options.containsKey(opt);  }	  return    options.containsKey(opt)&&    options.containsKey(opt);    	non-compiled	[CE]  missing  return  statement	5	None	replace
424	[BUG]  [BUGGY]  if(opt!=  null)  {  if(options!=  new  HashMap  <  String,Object>())  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  if(options!=  new  HashMap  <  String,Object>())  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  if(options!=  new  HashMap  <  String,Object>())  {  options  =  new  HashMap  <  String,Object>();  }	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    If(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
425	[BUG]  [BUGGY]  Option  options  =(Options)args.get(opt,  opt  +  1);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =(Options)args.get(opt,  opt  +  1);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =(Options)args.get(opt,  opt  +  1);	  Options    options    =(Options)args.get(opt    +    1);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	92	None	replace
426	[BUG]  [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.handleOption(opt);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  <  String,Object>  hashcodeMap  =  options.handleOption(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  <  String,Object>  hashcodeMap  =  options.handleOption(opt);	  HashCodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
427	[BUG]  [BUGGY]  if(opt  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  missing  return  statement	37	None	replace
428	[BUG]  [BUGGY]  if(options!=  null  &&  options.containsValue(opt))  {  return  options.containsValue(opt);  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null  &&  options.containsValue(opt))  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null  &&  options.containsValue(opt))  {  return  options.containsValue(opt);  }	  if(options!=    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  missing  return  statement	30	None	replace
429	[BUG]  [BUGGY]  OptionalOption  options  =  new  OptionalOptions();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  new  OptionalOptions();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  new  OptionalOptions();	  if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
430	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)||  options.get(opt));  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.containsKey(opt)||  options.get(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.containsKey(opt)||  options.get(opt));	  OptionHandler.checkArgument(options.containsKey(opt)||    options.containsKey(opt));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	52	None	replace
431	[BUG]  [BUGGY]  OptionalOption  options  =  options.values();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionalOption  options  =  options.values();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionalOption  options  =  options.values();	  if(options!=    null)    {    for(String    option    :    options.values())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
432	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.hasKey(opt);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.hasKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.hasKey(opt);  }	  if(opt!=    null)    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
433	[BUG]  [BUGGY]  if(opt!=  null  &&  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null  &&  options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null  &&  options.containsKey(opt))  {  return  options.containsKey(opt);  }	  if(options!=    null    &&    options.containsKey(opt))    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	112	None	replace
434	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  if(options.containsKey(opt)||  options.containsKey(opt  +  1))  {  return  options.containsKey(opt  +  1);  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  if(options.containsKey(opt)||  options.containsKey(opt  +  1))  {  return  options.containsKey(opt  +  1);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    if(options.containsKey(opt)||  options.containsKey(opt  +  1))  {  return  options.containsKey(opt  +  1);  }	  	non-compiled	[CE]  unreachable  statement	74	None	add
435	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  OptionHandler.checkArgument(options.containsKey(opt)||  options.containsKey(opt  +  1);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsKey(opt  +  1);  OptionHandler.checkArgument(options.containsKey(opt)||  options.containsKey(opt  +  1);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsKey(opt    +    1);    OptionHandler.checkArgument(options.containsKey(opt)||  options.containsKey(opt  +  1);	  	non-compiled	[CE]  ')'  expected	74	None	add
436	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    options.containsKey(opt)||    options.containsKey(opt);    	non-compiled	[CE]  not  a  statement	16	None	replace
437	[BUG]  [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	                if(options!=        null)        {        options        =        new        HashMap        <        String,Object>();        }        if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options!=  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {  options  =  new  HashMap  <  String,Object>();  }  if(options  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
438	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  hashcodeMap.get(opt);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  hashcodeMap.get(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    hashcodeMap.containsKey(opt);    HashcodeMap  hashcodeMap  =  hashcodeMap.get(opt);	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
439	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  new  HashcodeMap();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  new  HashcodeMap();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    hashcodeMap.containsKey(opt);    HashcodeMap  hashcodeMap  =  new  HashcodeMap();	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
440	[BUG]  [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  hashcodeMap();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  hashcodeMap.containsKey(opt);  HashcodeMap  hashcodeMap  =  hashcodeMap();  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    hashcodeMap.containsKey(opt);    HashcodeMap  hashcodeMap  =  hashcodeMap();	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
441	[BUG]  [BUGGY]  if(opt.equals( " ")||  opt.equals( "- "))  {  return  true;  }  [CE]  missing  return  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt.equals( " ")||  opt.equals( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt.equals( " ")||  opt.equals( "- "))  {  return  true;  }	  if(opt.equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	114	None	replace
442	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options!=  null)  {  return  options.containsKey(opt)&&  options.containsKey(opt);  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options!=  null)  {  return  options.containsKey(opt)&&  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    options.containsKey(opt);    if(options!=  null)  {  return  options.containsKey(opt)&&  options.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
443	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)&&  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  options.containsKey(opt);  if(options.containsKey(opt)&&  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    options.containsKey(opt);    if(options.containsKey(opt)&&  options.containsKey(opt);  }	  	non-compiled	[CE]  ')'  expected	4	None	add
444	[BUG]  [BUGGY]  HashMap  <  String,Object>  options  =  options.values();  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashMap  <  String,Object>  options  =  options.values();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashMap  <  String,Object>  options  =  options.values();	  HashMap    <    String,Object>    options    =    options.keySet();    	non-compiled	[CE]  incompatible  types	28	None	replace
445	[BUG]  [BUGGY]  if(options.containsValue(opt)!=  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsValue(opt)!=  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsValue(opt)!=  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.containsValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)!=    null)    {    if(options.containsValue(opt)    ==    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
446	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  opt,  hashcodeMap);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  opt,  hashcodeMap);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  opt,  hashcodeMap);	  Options    options    =(Options)args.get(opt,    names);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	56	None	replace
447	[BUG]  [BUGGY]  return  options.contains(opt)||  options.hasKey(opt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.contains(opt)||  options.hasKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.contains(opt)||  options.hasKey(opt);	  return    options.contains(opt)||    options.containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
448	[BUG]  [BUGGY]  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  for(AssertionFailedError  exception  :  options.values())  {  return  false;  }	  return    options.containsValue(opt);    if(options!=    null)    {    for(AssertionFailedError    exception    :    options.values())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
449	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.values());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.values());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.values());	  HashCodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
450	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.get(opt));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.get(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.get(opt));	  HashCodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
451	[BUG]  [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.keySet());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  names  =  new  HashMap  <  String,Object>(options.keySet());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  names  =  new  HashMap  <  String,Object>(options.keySet());	  HashCodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
452	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.hashCode().hasOption(opt);  }  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.hashCode().hasOption(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.hashCode().hasOption(opt);  }	  if(opt    ==    null)    {    return    options.hasOption(opt);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	76	None	replace
453	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    }    	non-compiled	[CE]  ')'  expected	99	None	replace
454	[BUG]  [BUGGY]  if(options  ==  null  ||  options.containsKey(opt))  {  options  =  new  ArrayList  <  String>();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options  ==  null  ||  options.containsKey(opt))  {  options  =  new  ArrayList  <  String>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null  ||  options.containsKey(opt))  {  options  =  new  ArrayList  <  String>();  }	  if(options    ==    null)    {    options    =    new    LinkedList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
455	[BUG]  [BUGGY]  if(options  ==  null  ||  options.containsKey(opt))  {  options  =  new  LinkedList  <  String>();  }  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options  ==  null  ||  options.containsKey(opt))  {  options  =  new  LinkedList  <  String>();  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null  ||  options.containsKey(opt))  {  options  =  new  LinkedList  <  String>();  }	  if(options    ==    null)    {    options    =    new    LinkedList    <    String>();    }    	non-compiled	[CE]  incompatible  types	33	None	replace
456	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options!=    null)    {    return    options.containsKey(opt)||    options.containsKey(opt);    }    	non-compiled	[CE]  missing  return  statement	98	None	replace
457	[BUG]  [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.handleOption(opt);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  <  String,Object>  hashcodeMap  =  options.handleOption(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  <  String,Object>  hashcodeMap  =  options.handleOption(opt);	  HashcodeMap    <    String,Object>    hashcodeMap    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
458	[BUG]  [BUGGY]  HashcodeMap  options  =  hashcodeMap();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  options  =  hashcodeMap();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  options  =  hashcodeMap();	  HashcodeMap    options    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
459	[BUG]  [BUGGY]  options.get(opt))  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.get(opt))  {  return  true;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.get(opt))  {  return  true;  }	  options.keySet())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
460	[BUG]  [BUGGY]  if(opt!=  null)  {  for(String  opt  :  options.values())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(opt!=  null)  {  for(String  opt  :  options.values())  {  return  true;  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(opt!=  null)  {  for(String  opt  :  options.values())  {  return  true;  }	  if(options!=    null)    {    for(String    opt    :    options.values())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
461	[BUG]  [BUGGY]  Option  options  =  new  Option(opt.toLowerCase());  [CE]  no  suitable  constructor  found  for  Option(String)  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Option  options  =  new  Option(opt.toLowerCase());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Option  options  =  new  Option(opt.toLowerCase());	  Option    options    =    new    Option(opt);    	non-compiled	[CE]  no  suitable  constructor  found  for  Option(String)	79	None	replace
462	[BUG]  [BUGGY]  Options  options  =(Options)args.get(opt,  option);  [CE]  cannot  find  symbol  option  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)args.get(opt,  option);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)args.get(opt,  option);	  Options    options    =(Options)args.get(opt,    name);    	non-compiled	[CE]  cannot  find  symbol  option	58	None	replace
463	[BUG]  [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.get(opt));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  names  =  new  HashMap  <  String,Object>(options.get(opt));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  names  =  new  HashMap  <  String,Object>(options.get(opt));	  HashcodeMap    names    =    new    HashMap    <    String,Object>(options.keySet()));    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
464	[BUG]  [BUGGY]  return  options.hashcodeMap().containsKey(opt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hashcodeMap().containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hashcodeMap().containsKey(opt);	  return    hashcodeMap().containsKey(opt);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
465	[BUG]  [BUGGY]  return  options.hashCode().containsKey(opt);  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.hashCode().containsKey(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.hashCode().containsKey(opt);	  return    hashcodeMap().containsKey(opt);    	non-compiled	[CE]  int  cannot  be  dereferenced	105	None	replace
466	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt);  else  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    else    return    options.containsKey(opt);    }    	non-compiled	[CE]  ')'  expected	100	None	replace
467	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  else  {  return  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  else  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt);  else  {  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    else    {    return    options.containsKey(opt)||    options.containsKey(opt);    }    	non-compiled	[CE]  ')'  expected	83	None	replace
468	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  else  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	add	if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  else  {  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    else    {    return    options.containsKey(opt)||    options.containsKey(opt);    }    	compilable	  [FE]  AssertionFailedError  	83	1	replace
469	[BUG]  [BUGGY]  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  else  {  return  options.containsKey(opt);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  else  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  else  {  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    else    {    return    options.containsKey(opt)||    options.containsKey(opt);    }    	compilable	  [FE]  AssertionFailedError  	83	1	replace
470	[BUG]  [BUGGY]  OptionHandler.checkArgument(options.get(opt),  options.hashCode());  [CE]  cannot  find  symbol  OptionHandler  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(options.get(opt),  options.hashCode());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(options.get(opt),  options.hashCode());	  OptionHandler.checkArgument(options.get(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	53	None	replace
471	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  else  {  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  else  {  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  else  {  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }	  	non-compiled	[CE]  ')'  expected	68	None	add
472	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    if(options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  }	  	non-compiled	[CE]  ')'  expected	68	None	add
473	[BUG]  [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)||  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)&&  hashcodeMap.containsKey(opt);  if(options.containsKey(opt)||  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)&&    hashcodeMap.containsKey(opt);    if(options.containsKey(opt)||  hashcodeMap.containsKey(opt))  {  return  options.containsKey(opt);  }	  	non-compiled	[CE]  unreachable  statement	68	None	add
474	[BUG]  [BUGGY]  if(options  ==  null)  {  options.add(opt);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options  ==  null)  {  options.add(opt);  }  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options  ==  null)  {  options.add(opt);  }	  if(options    ==    null)    {    options    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
475	[BUG]  [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsKey(opt)||  options.containsKey(opt);  if(options.containsKey(opt))  {  return  options.containsKey(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt)||    options.containsKey(opt);    if(options.containsKey(opt))    {    return    options.containsKey(opt);    }    	non-compiled	[CE]  ')'  expected	82	None	replace
476	[BUG]  [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt,  hashcodeMap);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  Options  options  =(Options)hashcodeMap.get(opt,  hashcodeMap);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	Options  options  =(Options)hashcodeMap.get(opt,  hashcodeMap);	  Options    options    =(Options)args.get(opt,    hashcodeMap);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	57	None	replace
477	[BUG]  [BUGGY]  HashCodeMap  options  =  options.keySet();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashCodeMap  options  =  options.keySet();  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashCodeMap  options  =  options.keySet();	  HashCodeMap    names    =    options.keySet();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
478	[BUG]  [BUGGY]  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.getValue(opt);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.getValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options.containsValue(opt)  ==  null)  {  if(options.containsValue(opt)  ==  null)  {  return  options.getValue(opt);  }	  return    options.containsValue(opt);    if(options.containsValue(opt)    ==    null)    {    if(options.containsValue(opt)    ==    null)    {    return    options.containsValue(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
479	[BUG]  [BUGGY]  OptionHandler.handleOption(opt);  [CE]  cannot  find  symbol  OptionHandler  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.handleOption(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.handleOption(opt);	  options.clear();    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	46	None	replace
480	[BUG]  [BUGGY]  OptionHandler.handleOption(opt,  new  HashMap());  [CE]  cannot  find  symbol  OptionHandler  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.handleOption(opt,  new  HashMap());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.handleOption(opt,  new  HashMap());	  options.put(opt,    new    HashMap());    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	94	None	replace
481	[BUG]  [BUGGY]  options.put(opt,  new  HashMap()));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  options.put(opt,  new  HashMap()));  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	options.put(opt,  new  HashMap()));	  options.put(opt,    new    HashMap());    	non-compiled	[CE]  ';'  expected	94	None	replace
482	[BUG]  [BUGGY]  OptionHandler.checkOption(options.containsKey(opt),  options.hashCode());  [CE]  cannot  find  symbol  OptionHandler  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkOption(options.containsKey(opt),  options.hashCode());  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkOption(options.containsKey(opt),  options.hashCode());	  OptionHandler.checkOption(options.containsKey(opt));    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	80	None	replace
483	[BUG]  [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  options  =  options.get(opt);  }  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  options  =  options.get(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	if(options!=  null)  {  return  options.containsKey(opt)||  options.containsKey(opt);  }  else  {  options  =  options.get(opt);  }	  return    options.containsKey(opt)||    options.containsKey(opt);    Option    option    =    options.get(opt);    	non-compiled	[CE]  incompatible  types	84	None	replace
484	[BUG]  [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashcodeMap().get(opt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  HashcodeMap  hashcodeMap  =  options.hashcodeMap().get(opt);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	HashcodeMap  hashcodeMap  =  options.hashcodeMap().get(opt);	  HashcodeMap    hashcodeMap    =    hashcodeMap.get(opt);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
485	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  OptionHandler.checkArgument(options.containsKey(opt)||  options.containsValue(opt);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  OptionHandler.checkArgument(options.containsKey(opt)||  options.containsValue(opt);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    OptionHandler.checkArgument(options.containsKey(opt)||  options.containsValue(opt);	  	non-compiled	[CE]  ')'  expected	6	None	add
486	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  if(options.containsKey(opt)||  options.containsValue(opt);  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.containsValue(opt);  if(options.containsKey(opt)||  options.containsValue(opt);  }  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return    options.containsKey(opt)||    options.containsValue(opt);    if(options.containsKey(opt)||  options.containsValue(opt);  }	  	non-compiled	[CE]  ')'  expected	6	None	add
487	[BUG]  [BUGGY]  return  options.containsKey(opt)||  options.hasOption(option);  [CE]  cannot  find  symbol  option  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  return  options.containsKey(opt)||  options.hasOption(option);  [BUGGY]      }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	return  options.containsKey(opt)||  options.hasOption(option);	  return    options.containsKey(opt)||    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol  option	77	None	replace
488	[BUG]  [BUGGY]  OptionHandler.checkArgument(opt  ==  null);  [CE]  cannot  find  symbol  OptionHandler  [FE]    AssertionFailedError    [CONTEXT]      public  boolean  hasOption(String  opt)  {      [BUGGY]  OptionHandler.checkArgument(opt  ==  null);  [BUGGY]      return  options.containsKey(opt);  }  [CLASS]  CommandLine  [METHOD]  hasOption  [RETURN_TYPE]  boolean  String  opt  [VARIABLES]  List  args  String  opt  boolean  Map  hashcodeMap  names  options  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	69	69	1	replace	OptionHandler.checkArgument(opt  ==  null);	          if(options!=    null)    {    options    =    new    HashMap    <    String,Object>();    }    if(options    ==    null)    {    options    =    new    HashMap    <    String,Object>();    }    	non-compiled	[CE]  cannot  find  symbol  OptionHandler	39	None	replace
