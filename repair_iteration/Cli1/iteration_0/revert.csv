projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47if(options==null){mapoptions=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47if(options==null){map=newHashMap();options.putAll(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47if(options==null){Map<options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt).toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains("-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()==0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137Preconditions.checkArgument(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137opt=String.valueOf(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.getAll();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.get();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47options.put(",",newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnMaps.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnMaps.newHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashcodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Arrays.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);
