projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47if(options==null){mapoptions=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47if(options==null){map=newHashMap();options.putAll(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47if(options==null){Map<options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt).toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains("-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()==0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137Preconditions.checkArgument(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137opt=String.valueOf(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.getAll();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.get();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47options.put(",",newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnMaps.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnMaps.newHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashcodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Arrays.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode",hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode=");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?null:opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Collections.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains(".-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(args.contains("-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("")){args|=options.containsKey(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.isEmpty()){if(!args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.isEmpty()){if(!args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("")){args|=options.containsKey(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnargs.toArray(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=optionNames.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)||options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.hasOption(options)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.getValues();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=opt){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=null){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){if(opt.length()>0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){if(opt.length()>0){return(args==null)?null:args[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]args=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnoldLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){args=options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.equals(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(option.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(args.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoldHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashSet<Map>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String,opt.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0],opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1],opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.getKey()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.chompTo(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsFromLocalName(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String,opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,CommandLine.COMMAND_LINE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,arguments,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){Stringopt=newHashcodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains(."-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.length.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.toLowerCase()){if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.toLowerCase()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.values()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.getKey()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.size()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatenewHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values!=null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null):values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt!=null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&opt!=null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.removeHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.removeHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(opt)){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("vs")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.iterate();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.get("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalLinkedMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(opt.length()==0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()>0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoldHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return0HashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==opt){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.equals(options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("-")){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returnargs.valueOf(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options!=null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.hasOption(options)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!values.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+".:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.Entry>>K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.EntryPrezentK,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkAnswer(!Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatefinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatefinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatestaticListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatefinalArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatestaticfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(text);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(topt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashcodeMap=newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashcodeMap.put("/"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option==null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,CommandLine.DEFAULT_LOAD_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoldHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return0HashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(args.valueOf(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||args==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));}else{options.setOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.size()>1){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(opt)){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(args==null){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)&&options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(string)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.hasOption(opt)||options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(true,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatestaticHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privateHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43finalprotectedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhaveOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOption(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.notEmpty(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validator.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validates.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,options.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,optionNames.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.args.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnargs.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnargs.containsKey(opt)||alternatives.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newArrayList<String>(values.toLowerCase());}else{options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newArrayList<String>(values.toLowerCase());}else{names.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){thrownewIllegalArgumentException("");}else{options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnoptions.getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(StringUtils.safeToInt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatesuper.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnargs.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoption.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privateMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privateMapfinal=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(1))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){if(options.containsValue(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(optinstanceofString){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-->")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){opt=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options,opt.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!"Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0],1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){StringgetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnoldArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewDefaultList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.length()!=0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterate();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||options.hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains("--")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(opt);if(values==null){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){return(values<<null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals("")){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null){if(values[0]==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.isEmpty()){if(values==null){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.isEmpty()){if(values==null){return(values==null)?null:values[1];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(optinstanceofString){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)||!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatesuper.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(charopt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+8));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedstaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51safefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap>>String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(options.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt.length()!=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];Arrays.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values)){String[]args=getArguments(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap>>String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,private);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),butOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),defaultOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.class)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.report(JSError.make(HashCodeMap.HashCodeMap(),hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(options.keyword));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43return(List)args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnargs.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)||opt.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnif(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty()),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),"opt.length");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnLists.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returntoArray(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatestaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapOption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(args.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt)?null:args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){return(values==null)?null:values[0].;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getValue())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getString())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt.equals(options.getKey())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.keyword);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt,hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatestaticfinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))==if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasArgs()){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap()==null)?null:newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap()==null)?newHashCodeMap():newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.length==0){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.size()==1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,private);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getValue())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getString())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getName())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(opt,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.hasOption(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.length==0){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.startsWith("-")){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Arrays.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.isTrue(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt.length==0){if(opt.length>0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt.length==0){if(opt.length==0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(HashCodeMap==K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(HashCodeMap==K,V>)hashcodeMap.peek();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(HashCodeMap==K,V>)hashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],10;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values.length,1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatenewListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)!=null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt))&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=hashcodeMap.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getValue())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt.equals(options.getKey())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.length==0){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=HashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=hashcodeMap.getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values.length.equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values.length).equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap>>String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(opt,String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");returngetOptionValue(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map>>String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map>>String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.hasOption(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[values.size()]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[values.length]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.getOptionValue(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(options.getKey()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty()),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),"Optionsareempty");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"||"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||opt==null&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||opt==0)&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.hasKey(String.valueOf(opt))){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==null){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringoption:getOptions()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,defaultArgs);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalList.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){opt=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.isTrue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();return(HashCodeMap==K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();return(HashCodeMap==?>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalHashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.getAlternatives()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){string[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode"+getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(option.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(option,opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(opt!=null){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");hasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||opt.length()==0){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt)?null:getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,HashcodeMap.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap>>String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))thrownewIllegalArgumentException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){for(Map.Entry<String,V>opt:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(opt)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map}String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(opt.equals(this.options.getKey())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(opt.equals(this.options.getOptions())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(opt.equals(this.options.getKey())){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.valueOf(string));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(FALSE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null)?null:newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null)?newHashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),hashcodeMap.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137[Delete]if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setSelectedOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.isTrue(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(option));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137<<
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?opt:newString[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Arrays.asList(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.size()==1?options.get(0):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.size()==1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicHashMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(StringUtils.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);returnhasOption(StringUtil.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(options.containsKey(opt)){returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(options.containsKey(opt)){Stringopt=this.options.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newHashMap(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newHashMap("Illegalstartoftype");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newHashMap(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(key)||options.containsValue(value);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(key)||options.containsValue(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(opt,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.containsKey(opt)){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)).charAt(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(value)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,getOptionNames(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,optionNames.get(opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnargs==null?newArrayList():Arrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.equals(opt.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false,"Unknowntype");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalLinkedListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt.getKey(),opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.notNull(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Values.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(char)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(charopt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(char)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(char)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69return!options.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMap=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt)))}if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode",HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){if(!hasOption(opt))}returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnArrays.asList(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("||")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=hashcodeMap.get(opt);if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashcodeMap=(Hashed)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(values)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"||"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.Entry}K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,privateList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt))[Delete]returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt))}returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+".:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Lists.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.size()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.contains(resolveOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),which.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);returngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);returngetOptionValue(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,baseUri);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,defaultOptions);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,options.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetValue(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values.toArray(newString[0]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)){for(Map.Entry<String,V>opt:options.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArguments();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(),opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap(0,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt==null){if(values==null){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null){if(values==null){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt==null){if(values==null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null){if(values==null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];Arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(args.valueOf(opt)||opt==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)))!=thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),Option.None.class));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(eopt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(ch));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Lists.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?options.getOptionValue(opt):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?values:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],0;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],-1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],true;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(value)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.keySet(),options.values()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(16);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.toMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt))}thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt))!=thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,Names.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=this.options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.keyOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.keyOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey())){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey()))returntrue;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(opt);if(values==null)}returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(True);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Map.Entry<String,HashcodeMap.Entry<K,V>option:options.entrySet()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Map.Entry<String,HashcodeMap.Entry<K,V>option:hashcodeMap.entrySet()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty()),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("HashCode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateArrayList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey()))}if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry<K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry<K,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt))[Delete]returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);returnhasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],opt+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],opt+"]";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(Arrays.asList(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty()),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.construct("hashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(opt.length()==0){returngetOptionValue(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)||opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==null&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key))[Delete]if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");hasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");returnhasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=optionList.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsArg("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,options,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,options.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binaryNames,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.hashCodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.charAt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havetostartwith:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binaryNames,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(args.contains(".-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=newHashcodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":",charopt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":",char);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnnull;Afterward
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(16);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(opt==null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values.length().equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(this);
