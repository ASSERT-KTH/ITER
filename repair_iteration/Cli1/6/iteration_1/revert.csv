projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=="null"){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnoptions.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=args.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=option.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt)||options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Iterator<String>it=options.iterator().next().hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=args.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnargs.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(key);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)||options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnoptions.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){returnoptions.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnthis.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(option==null)&&options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(option==null)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80try{[Delete]catch(Throwablet){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>names.length){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}If(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.equals("")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt==null?null:opt.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);Stringopt=getOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashCode.checkArgument(hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashCode.checkArgument(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashCode.checkArgument(hasOption(String.valueOf(opt)+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80try{[Delete]catch(Throwablet){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||!parent.hasOption(opt)){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgumentName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));hasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));if(opt==null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringopt=getOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringopt=getOption(String.valueOf(opt+1));if(opt==null){returnhasOption(opt+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringopt=getOption(String.valueOf(opt+1));if(opt!=null){returnhasOption(opt+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getQualifiedName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName()+"_"+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt)!=false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler.handleMissingException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=names.containsValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler.handleOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler.handleMissing("msg.no.options");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtil.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hashCode(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)&&options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName().toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt)&&options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));if(opt!=null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringstr=getOptionValue(opt);if(str!=null){returnhasOption(String.valueOf(str+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringstr=getOptionValue(opt);if(str!=null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringstr=getOptionValue(opt);if(str==null){returnhasOption(String.valueOf(str+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashCodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80charopt=opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=this.options.getOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler(hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler<String>hashcodeMap(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));if(opt!=opt){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));HashcodeMap<String,String>options=hasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));if(opt!=opt){returnhasOption(String.valueOf(opt+1));}else{List<String>options=newArrayList<String>();for(Stringoption:options.keySet()){returnoptions.add(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableMap.put(opt,hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>parent.getType()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>parent.getType()){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,String>options=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=getOption(opt);if(options!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=getOptions();returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase(Locale.ENGLISH);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase()&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnoptions.hasOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()!=0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null||opt.length()==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){booleanopt=options.containsValue(String.valueOf(opt));}
