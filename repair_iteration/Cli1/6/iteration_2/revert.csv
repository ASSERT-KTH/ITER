projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=="null"){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnoptions.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=args.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=option.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt)||options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Iterator<String>it=options.iterator().next().hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=args.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnargs.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(key);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)||options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnoptions.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){returnoptions.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnthis.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(option==null)&&options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(option==null)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80try{[Delete]catch(Throwablet){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>names.length){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}If(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.equals("")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt==null?null:opt.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);Stringopt=getOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashCode.checkArgument(hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashCode.checkArgument(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashCode.checkArgument(hasOption(String.valueOf(opt)+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80try{[Delete]catch(Throwablet){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||!parent.hasOption(opt)){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgumentName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));hasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));if(opt==null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringopt=getOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringopt=getOption(String.valueOf(opt+1));if(opt==null){returnhasOption(opt+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringopt=getOption(String.valueOf(opt+1));if(opt!=null){returnhasOption(opt+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getQualifiedName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName()+"_"+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt)!=false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler.handleMissingException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=names.containsValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler.handleOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler.handleMissing("msg.no.options");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtil.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hashCode(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)&&options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName().toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt)&&options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));if(opt!=null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringstr=getOptionValue(opt);if(str!=null){returnhasOption(String.valueOf(str+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringstr=getOptionValue(opt);if(str!=null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));Stringstr=getOptionValue(opt);if(str==null){returnhasOption(String.valueOf(str+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashCodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80charopt=opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=this.options.getOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler(hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80aughtExceptionHandler<String>hashcodeMap(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));if(opt!=opt){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));HashcodeMap<String,String>options=hasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1));if(opt!=opt){returnhasOption(String.valueOf(opt+1));}else{List<String>options=newArrayList<String>();for(Stringoption:options.keySet()){returnoptions.add(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableMap.put(opt,hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>parent.getType()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>parent.getType()){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,String>options=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=getOption(opt);if(options!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=getOptions();returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase(Locale.ENGLISH);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase()&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnoptions.hasOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()!=0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null||opt.length()==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){booleanopt=options.containsValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(String.valueOf(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashCode.handleOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args.handleOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80GunnelExceptionHandler.handleOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=this.options.getOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=this.options.getOption(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=this.options.getOption(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashCodeExceptionHandler(hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanhasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanhasOption=hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toUpperCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase()/1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||!parent.equals(opt)){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||!parent.equals(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||!parent.isEmpty()){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||!parent.isEmpty()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(opt==null)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(option!=null)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(opt!=null)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt+1),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName(),opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName(),opt,hashcode);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName(),opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,String>options=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=hasOption(String.valueOf(opt)+1);HashcodeMap<String,String>options=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);hasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);Stringopt=getOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);booleanopt=hasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);HashCode.checkArgument(hasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);Stringopt=getOption(String.valueOf(opt+1)+1);returnhasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasValue(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args,hashcode);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt>=0){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0||opt==String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0||opt>args.length){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}if(opt>0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt);}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt);}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80try{[Delete]catch(NumberFormatExceptionnfe){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80try{[Delete]catch(NoClassDefFoundErrore){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt)+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/2.0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/4);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtils.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnargs.hasOption(StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtils.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(option)&&options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(option)||options.contains(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=args.toLowerCase()&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=string.toLowerCase()&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.toLowerCase()&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(args,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(option,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(key)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(option)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnargs.hasOption(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt)||args.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnargs.hasOption(String.valueOf(opt),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt),args,hashcode);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt),args,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt),false,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=locale.toLowerCase(Locale.ENGLISH);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=Locale.toLowerCase(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=Locale.toLowerCase(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null&&opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(args,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(args,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80vice(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80try{[Delete]catch(Throwablet){returnhasValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanhasOption(String.valueOf(opt)+1);Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(key)&&options.containsKey(key);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(option)||options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOption(opt);if(options!=null){returnhasOption(options.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOption(opt);if(options!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null||opt.length()==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()>=0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().toLowerCase(Locale.ENGLISH);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().toLowerCase()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().toLowerCase(Locale.getDefault());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableMap.put(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableMap.put(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80cast(names.get(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){try{}catch(Throwablet){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){try{}catch(Throwablet){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){try{}catch(Throwablet){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnargs.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hashCode(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){returnoptions.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null||options.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);hasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);Stringopt=getOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);HashCode.checkArgument(hasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);Stringopt=getOptionValue(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);HashCode.checkArgument(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args.handleMissing("msg.no.options");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80handleMissing("msg.no.options");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){aughtExceptionHandler.handleMissing("msg.no.options");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Handler.handleMissing("msg.no.options");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=this.names.containsValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){returnhasOption(String.valueOf(opt)+1);}else{hasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt)+1);}else{hasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt),false,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.equals("null")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.equals("_")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()!=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=null||opt.length()==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=hasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().substring(0,opt.length()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnoptions.hasOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null||options.hasOption(opt)){returnoptions.hasOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){returnoptions.hasOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOption(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOption(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt+1));hasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt+1));}else{hasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt!=null||opt.length()==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtil.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtil.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnargs.hasOption(StringUtil.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOptions();returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOptions();returnhasOption(options.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt-1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(String.valueOf(opt)).booleanValue();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashCode.checkArgument(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=hasOption(String.valueOf(opt)+1);HashCode.checkArgument(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)+1);HashcodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getQualifiedName(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getQualifiedName()+"_"+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getQualifiedName()+"args";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.equals("")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(opt==null)&&options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(option!=null)&&options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(option==null)&&options.contains(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null&&opt<0||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt>=0||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgument();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArg();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getName()+":"+getMessage();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));hasOption(String.valueOf(opt+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));HashCode.checkArgument(hasOption(String.valueOf(opt+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));HashCode.checkArgument(String.valueOf(opt+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));HashCode.checkArgument(String.valueOf(opt+3));hasOption(String.valueOf(opt+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));HashCode.checkArgument(String.valueOf(opt+3));returnhasOption(String.valueOf(opt+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=args.trim().toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80charopt=args.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(key)||options.containsKey(key);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)||options.containsKey(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(key)||options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(key).booleanValue();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.toLowerCase(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.toLowerCase(true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnopt.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnopt.hasOption(String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgumentName()+":"+getMessage();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgumentName()+"args";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgumentName()+"_options";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt>0){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.toHexString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getShortName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt+1));Stringopt=getOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt+1));Stringopt=getOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt+1));}else{Stringopt=getOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null&&!parent.hasOption(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||!parent.hasOption(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt)==false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)!=false){returnoptions.hasOption(opt)!=false;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)!=false)returntrue;if(options.hasOption(opt)!=false){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt+1));}else{List<String>options=newArrayList<String>();for(Stringoption:options.keySet()){returnoptions.add(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){returnhasOption(String.valueOf(opt+1));}else{List<String>options=newArrayList<String>();for(Stringoption:options.keySet()){returnoptions.add(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80try{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80while((opt==null)&&(opt<0)){try{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80while((opt==null)&&(opt!=null)){try{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80handleMissingException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args.handleMissingException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>=parent.getType()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt!=parent.getType()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80charopt=option.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtils.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtils.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtils.valueOf(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));hasOption(String.valueOf(opt+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));HashCode.checkArgument(hasOption(String.valueOf(opt+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));Stringopt=getOption(String.valueOf(opt+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));HashCode.checkArgument(String.valueOf(opt+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));Stringopt=getOption(String.valueOf(opt+2));hasOption(opt+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null||opt==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80map.put(opt,hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Map.put(opt,hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap.put(opt,hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>parent.getType()){returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnargs.hasOption(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt),false,hashcode);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1)==0;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgValue();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgName()+":"+getMessage();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgName()+"args";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(opt)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnargs.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(opt)||args.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Iterator<String>it=options.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName(),opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName().toLowerCase(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName().hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnthis.options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,String>options=hasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=hasOption(String.valueOf(opt+1));HashcodeMap<String,String>options=hasOption(String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=hasOption(String.valueOf(opt+1));HashcodeMap<String,String>options=hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=getOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase();if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt.toLowerCase();if(opt==null){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(option)||options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Iterator<String>it=names.iterator().next().hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Iterator<String>it=options.iterator().next().hasOption(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0){returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=option.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Characteropt=opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80vices.put(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80vices.put(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashCodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)+1);HashCodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){aughtExceptionHandler<String>hashcodeMap(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){aughtExceptionHandler<String>hashcodeMap(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashCodeExceptionHandler<String>hashcodeMap(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.contains(opt)){aughtExceptionHandler<String>hashcodeMap(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null||opt.length()!=0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashCode.checkArgument(hasOption(String.valueOf(opt)+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashCode.checkArgument(hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>=names.length){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null&&opt<0||opt>names.length){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt!=names.length){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(option)&&options.contains(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);hasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashCode.checkArgument(hasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);Stringopt=getOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashCode.checkArgument(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashCode.checkArgument(hasOption(String.valueOf(opt)+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80cast(hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||!parent.equals(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80cast(hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=opt!=null?null:opt.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName()+",_"+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Optionoption=options.containsValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Optionoption=options.getOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=hasOption(String.valueOf(opt)+1);HashCode.checkArgument(hasOption(String.valueOf(opt)+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hashCode(String.valueOf(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hashCode(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getOptionName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(opt,args,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtil.stringValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtil.toHexString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){booleanopt=options.containsValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Optionoption=options.get(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=null?null:opt.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/10);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0){returnhasOption(String.valueOf(parent));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName(),opt+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName(),null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.equals(".")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null||opt.equals("")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt+1));hasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.toLowerCase(Locale.ENGLISH);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){aughtExceptionHandler<String>hashcodeMap(String.valueOf(opt));}else{thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==';'){aughtExceptionHandler<String>hashcodeMap(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)||options.containsKey(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(option)&&options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80charopt=options.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Charopt=opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOption(opt);if(options!=null){returnhasOption(options.get(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hashCode(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getQualifiedName().trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getQualifiedName(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableMap.put(opt,hasOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80safeMultiply(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableMap.put(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>parent.getType()){returnhasValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=args.substring(0,opt.length()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt)&&options.contains(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt)&&options.contains(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)+1)||options.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.stringValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.escapeHtml(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.restrictByNotNullOrUndefined(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgName().toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgName().trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);HashcodeMap<String,Object>options=hasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);HashcodeMap<String,Object>hasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);HashcodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt!=0||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=names.contains(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName()+"._"+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt)||options.contains(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));if(opt==null){returnhasOption(String.valueOf(opt+2));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));if(opt==null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));Stringstr=getOptionString(opt+1).trim().toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Handler.handleMissingException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(opt)||options.hasOption(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt)+1);}else{hasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Iterator<String>it=options.iterator(),opt.next().hasOption(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Iterator<String>it=options.entrySet().iterator().next().hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null&&parent!=null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args.add(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args.put(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)||true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));HashcodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));Stringstr=getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));HashcodeMap<String,String>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgumentName().toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgumentName().trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgumentName().toLowerCase(Locale.ENGLISH);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnopt.hasOption(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1)!=0;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=this.options.getOption(opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.getOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);HashCode.checkArgument(hasOption(String.valueOf(opt)+0));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOption(String.valueOf(opt));if(opt!=null){returnhasOption(opt+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOption(String.valueOf(opt+1));if(opt!=null){returnhasOption(opt+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtils.stringValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtils.indexOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null&&opt.length()==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||parent!=0||opt>parent.getType()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=option.toLowerCase()&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt>=0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(options==null)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(options!=null)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=names.containsValue(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtils.valueOf(opt)+1);Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.valueOf(opt)+1);Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().toLowerCase(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().toLowerCase().trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>0){returnhasOption(String.valueOf(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(args,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtils.valueOf(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null&&parent==null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){returnoptions.hashCode(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){try{}catch(Throwablet){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){try{}catch(Throwablet){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnarguments.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)&&options.containsKey(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt)+1)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashcodeMap<String,Object>options=hasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashcodeMap<String,Object>options=hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashcodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashCodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);HashcodeMap<String,Object>hasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);HashcodeMap<String,Object>options=hasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);HashcodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);Stringstr=getOptionString(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Operator.handleOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80GunningExceptionHandler.handleOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnoptions.hashCode(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(options==null)&&options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(options!=null)&&options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)==false){returnoptions.hasOption(opt)!=false;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(opt+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(opt+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){returnhasOption(String.valueOf(opt+1));}else{List<String>options=newArrayList<String>();for(Stringoption:options.keySet()){returnoptions.add(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt>='.'){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.toLowerCase(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt+1));opt=getOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=names.containsValue(String.valueOf(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Operator.handleMissing("msg.no.options");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){try{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){try{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){try{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt>=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableMap.put(opt,hasOption(String.valueOf(opt)));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableMap.put(opt,hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Operator.handleMissingException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt)
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(option)!=false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hashCode(opt)!=false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt));}if(opt>0){returnhasOption(String.valueOf(opt)
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt)+1);HashCode.checkArgument(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.equals("")){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(opt)||options.hasOption(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){booleanopt=options.contains(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(String.valueOf(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)||false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Hashcode.handleOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){aughtExceptionHandler.handleOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null||opt.length()==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||parent<0||opt>parent.getType()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||parent.getType()!=parent.getType()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName()&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=option.toLowerCase()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=this.options.getOption(opt).toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=this.options.getOption(opt,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.equals("*")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt*2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoption.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}if(opt>=0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!='.'){returnhasOption(String.valueOf(opt+1));HashcodeMap<String,String>options=hasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsValue(String.valueOf(opt)&&true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<args.size()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<args.size()){returnoptions.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null&&options.hasOption(opt)){returnoptions.hasOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionName().toLowerCase(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()!=0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(StringUtil.valueOf(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null&&options.containsValue(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null&&options.hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<=0||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!='.'){returnhasOption(String.valueOf(opt+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));HashcodeMap<String,String>options=hasOption(String.valueOf(opt+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));HashcodeMap<String,Object>options=hasOption(String.valueOf(opt+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+3));HashcodeMap<String,Object>options=getOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()<=0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){try{returnhasOption(String.valueOf(opt));}catch(Throwablet){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){try{returnhasOption(String.valueOf(opt));}catch(NumberFormatExceptionnfe){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){try{returnhasOption(String.valueOf(opt));}catch(NumberFormatExceptione){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getArgName()+"="+getValue();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getName()+"_"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);returnhasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);HashcodeMap<String,String>options=hasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)+1);HashcodeMap<String,String>options=getOptions();returnhasOption(String.valueOf(opt+1)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableValues(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);returnhasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);if(String.valueOf(opt)+0){returnhasOption(String.valueOf(opt)+0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);if(String.valueOf(opt)+0){hasOption(String.valueOf(opt)+0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);if(String.valueOf(opt)+0)<options.size()){returnhasOption(String.valueOf(opt)+0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt)+1);}else{returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){returnhasOption(String.valueOf(opt)+1);}else{returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)&&true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);returnhasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashcodeMap<String,String>options=hasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashcodeMap<String,Object>options=getOption(opt);if(options!=null){returnhasOption(String.valueOf(opt)+2);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);HashcodeMap<String,String>options=hasOption(String.valueOf(opt)+2);returnhasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=getOptionValue(opt,args,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.hasOption(String.valueOf(opt)+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+4));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+1);Stringopt=getOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.length()>=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||opt<0||opt>options.length){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='n'||opt=='r'){try{}catch(Throwablet){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){try{returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+1)*1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)&&hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}if(opt<0){returnhasOption(String.valueOf(opt));}else{options.put(opt,false);}if(opt<0){returnhasOption(String.valueOf(opt);}else{options.put(opt,false);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnthis.options.hasOption(opt)||this.args.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnthis.options.hasOption(opt)&&this.args.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80charopt=getOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.contains(opt)&&options.contains(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);Stringstr=getOptionString(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOptions();returnhasOption(opt.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80parent==null||parent.hasOption(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableMap.put(opt,hasOption(String.valueOf(opt),hashcode);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=options.toUpperCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80charopt=getOptionValue(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));if(opt!=opt){returnhasOption(String.valueOf(opt+2));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));HashcodeMap<String,Object>options=hasOption(String.valueOf(opt+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));HashcodeMap<String,String>options=hasOption(String.valueOf(opt+2));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt+2));HashcodeMap<String,Object>options=getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)&&options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80booleanopt=options.containsKey(opt)&&options.containsKey(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(StringUtil.decode(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringopt=args.substring(0,args.length()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt=='.'){returnhasOption(String.valueOf(opt)+1);}else{hasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){aughtExceptionHandler<String>hashcodeMap(String.valueOf(opt));}else{returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Stringname=getHtmlName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80charopt=getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(option)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOption(opt);if(options!=null){returnhasOption(options.hashCode()+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80HashcodeMap<String,Object>options=getOption(opt);if(options!=null){returnhasOption(options.hasOption(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80mutableValues.put(opt,true);
