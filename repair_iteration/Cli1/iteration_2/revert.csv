projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47if(options==null){mapoptions=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47if(options==null){map=newHashMap();options.putAll(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47if(options==null){Map<options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt).toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains("-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()==0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137Preconditions.checkArgument(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137opt=String.valueOf(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.getAll();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.get();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47options.put(",",newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnMaps.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java47returnMaps.newHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashcodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Arrays.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode",hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode=");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?null:opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Collections.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains(".-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(args.contains("-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("")){args|=options.containsKey(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.isEmpty()){if(!args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.isEmpty()){if(!args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("")){args|=options.containsKey(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnargs.toArray(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=optionNames.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)||options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.hasOption(options)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.getValues();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=opt){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=null){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){if(opt.length()>0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){if(opt.length()>0){return(args==null)?null:args[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]args=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnoldLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){args=options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.equals(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(option.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(args.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoldHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashSet<Map>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String,opt.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0],opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1],opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.getKey()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.chompTo(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsFromLocalName(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String,opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,CommandLine.COMMAND_LINE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Args=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,arguments,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){Stringopt=newHashcodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains(."-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.length.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.toLowerCase()){if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.toLowerCase()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.values()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.getKey()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.size()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatenewHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values!=null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null):values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt!=null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&opt!=null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.removeHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.removeHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(opt)){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("vs")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.iterate();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.get("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalLinkedMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(opt.length()==0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()>0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoldHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return0HashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==opt){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.equals(options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("-")){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returnargs.valueOf(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options!=null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.hasOption(options)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!values.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+".:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.Entry>>K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.EntryPrezentK,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkAnswer(!Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatefinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatefinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatestaticListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatefinalArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatestaticfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(text);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(topt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashcodeMap=newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashcodeMap.put("/"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option==null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,CommandLine.DEFAULT_LOAD_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoldHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return0HashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(args.valueOf(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||args==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));}else{options.setOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.size()>1){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(opt)){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(args==null){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)&&options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(string)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.hasOption(opt)||options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(true,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatestaticHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privateHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43finalprotectedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhaveOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOption(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.notEmpty(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validator.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validates.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,options.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,optionNames.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.args.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnargs.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnargs.containsKey(opt)||alternatives.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newArrayList<String>(values.toLowerCase());}else{options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newArrayList<String>(values.toLowerCase());}else{names.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){thrownewIllegalArgumentException("");}else{options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnoptions.getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(StringUtils.safeToInt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatesuper.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnargs.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoption.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privateMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privateMapfinal=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(1))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){if(options.containsValue(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(optinstanceofString){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("-->")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){opt=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options,opt.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!"Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0],1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){StringgetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnoldArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewDefaultList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.length()!=0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterate();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||options.hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains("--")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(opt);if(values==null){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){return(values<<null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals("")){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null){if(values[0]==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.isEmpty()){if(values==null){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.isEmpty()){if(values==null){return(values==null)?null:values[1];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(optinstanceofString){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)||!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatesuper.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(charopt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+8));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedstaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51safefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap>>String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(options.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt.length()!=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];Arrays.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values)){String[]args=getArguments(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap>>String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,private);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),butOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),defaultOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.class)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.report(JSError.make(HashCodeMap.HashCodeMap(),hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(options.keyword));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43return(List)args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnargs.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)||opt.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnif(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty()),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),"opt.length");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnLists.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returntoArray(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatestaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapOption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(args.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt)?null:args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){return(values==null)?null:values[0].;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getValue())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getString())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt.equals(options.getKey())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.keyword);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt,hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatestaticfinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))==if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasArgs()){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap()==null)?null:newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap()==null)?newHashCodeMap():newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.length==0){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.size()==1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,private);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getValue())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getString())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getName())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(opt,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.hasOption(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.length==0){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.startsWith("-")){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Arrays.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.isTrue(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt.length==0){if(opt.length>0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt.length==0){if(opt.length==0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(HashCodeMap==K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(HashCodeMap==K,V>)hashcodeMap.peek();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(HashCodeMap==K,V>)hashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],10;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values.length,1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatenewListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)!=null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt))&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=hashcodeMap.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getValue())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt.equals(options.getKey())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.length==0){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=HashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=hashcodeMap.getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values.length.equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values.length).equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap>>String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(opt,String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");returngetOptionValue(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map>>String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map>>String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.hasOption(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[values.size()]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[values.length]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.getOptionValue(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(options.getKey()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty()),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),"Optionsareempty");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"||"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||opt==null&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||opt==0)&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.hasKey(String.valueOf(opt))){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==null){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringoption:getOptions()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,defaultArgs);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalList.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){opt=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.isTrue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();return(HashCodeMap==K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();return(HashCodeMap==?>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalHashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.getAlternatives()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){string[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode"+getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(option.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(option,opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(opt!=null){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");hasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||opt.length()==0){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt)?null:getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,HashcodeMap.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap>>String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))thrownewIllegalArgumentException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){for(Map.Entry<String,V>opt:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(opt)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map}String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(opt.equals(this.options.getKey())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(opt.equals(this.options.getOptions())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(opt.equals(this.options.getKey())){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.valueOf(string));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(FALSE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null)?null:newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null)?newHashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),hashcodeMap.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137[Delete]if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setSelectedOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.isTrue(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(option));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137<<
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?opt:newString[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Arrays.asList(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.size()==1?options.get(0):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.size()==1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicHashMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(StringUtils.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);returnhasOption(StringUtil.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(options.containsKey(opt)){returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(options.containsKey(opt)){Stringopt=this.options.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newHashMap(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newHashMap("Illegalstartoftype");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46newHashMap(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(key)||options.containsValue(value);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(key)||options.containsValue(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(opt,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.containsKey(opt)){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)).charAt(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(value)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,getOptionNames(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,optionNames.get(opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnargs==null?newArrayList():Arrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newLinkedList();returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.equals(opt.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false,"Unknowntype");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalLinkedListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt.getKey(),opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.notNull(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Values.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(char)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(charopt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(char)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(char)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69return!options.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMap=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt)))}if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode",HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null){if(!hasOption(opt))}returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnArrays.asList(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("||")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=hashcodeMap.get(opt);if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashcodeMap=(Hashed)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(values)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"||"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.Entry}K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,privateList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt))[Delete]returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt))}returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+".:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Lists.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.size()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.contains(resolveOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),which.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);returngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);returngetOptionValue(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,baseUri);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,defaultOptions);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,options.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetValue(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values.toArray(newString[0]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)){for(Map.Entry<String,V>opt:options.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArguments();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(),opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap(0,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt==null){if(values==null){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null){if(values==null){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt==null){if(values==null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null){if(values==null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];Arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(args.valueOf(opt)||opt==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)))!=thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),Option.None.class));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(eopt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(ch));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Lists.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?options.getOptionValue(opt):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?values:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],0;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],-1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],true;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(value)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.keySet(),options.values()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(16);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.toMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt))}thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt))!=thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,Names.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=this.options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.keyOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.keyOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey())){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey()))returntrue;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(opt);if(values==null)}returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(True);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Map.Entry<String,HashcodeMap.Entry<K,V>option:options.entrySet()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Map.Entry<String,HashcodeMap.Entry<K,V>option:hashcodeMap.entrySet()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty()),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("HashCode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateArrayList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey()))}if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry<K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry<K,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt))[Delete]returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);returnhasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],opt+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],opt+"]";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(Arrays.asList(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty()),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.construct("hashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(opt.length()==0){returngetOptionValue(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)||opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==null&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key))[Delete]if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");hasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");returnhasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=optionList.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsArg("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,options,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,options.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binaryNames,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.hashCodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.charAt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havetostartwith:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binaryNames,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(args.contains(".-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=newHashcodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":",charopt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":",char);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnnull;Afterward
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(16);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(opt==null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values.length().equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51thrownewIllegalArgumentException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51rehashCodeMap(newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51reset(newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoption=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notNull(opt,Options.NOT_NULL);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notNull(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=this.options.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=this.opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=(opt.toLowerCase()==null)?opt:opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){opt=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){opt=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){opt=options.get(opt);if(args.contains("-->")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.sort(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Option.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Optional.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.hasKey(String.valueOf(opt))){if(options.containsKey(String.
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.hasKey(String.valueOf(opt))){if(options.containsKey(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.hasKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOption=newHashMap();privatestaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privatestaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();privatestaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListoptions=newHashMap();privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?null:values;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?null:values.values;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoptions.containsKey(opt);returnhasOption(StringUtil.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt);returnhasOption(this.options.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoptions.containsKey(opt);returnhasOption(this.options.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt);returnhasOption(StringUtil.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values!=null)?null:values.length().equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(opt==null)?null:values.length().equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||options.haveOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||alternatives.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||option.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(args.valueOf(opt)||args==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(args.valueOf(opt)||strings.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(args.valueOf(opt)||string==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.isEmpty()){thrownewIllegalStateException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newHashMap<String,String>();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publiclyHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46openHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(values,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(values,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap<K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap<<K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options),opt+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.args.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.hasOption(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicstaticfinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap.hashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedstaticfinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey())){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==opt){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=opt){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+"vs");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+".vs");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals("")){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals("")){if(values==null){values=newString[opt.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals("value")){if(values==null){values=newString[opt.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals("value")){if(values==null){values[0]=newString[opt.toString()];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals("value")){if(values==null){values[0]=newString[opt.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){args=options.get(opt);if(args.contains(".+")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.hasOption(opt))}returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.Entry>>K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.EntryWIther<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.Entry}K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();hashcodeMap.put("/"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();hashcodeMap.put("/"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt>=0){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":",opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":",String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){args=newHashCodeMap<String,Option>();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){args=newHashCodeMap<String,Option>();if(args.contains(opt)){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){args=newHashcodeMap<String,Option>();if(args.contains(opt)){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){args=newHashcodeMap<String,Option>();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals("")){args=options.get(opt);if(args.contains("",opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals("")){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals("")){args=options.get(opt);if(args.contains("",opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals("")){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Listsorted(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Listlists.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":",this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":",this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt))){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(options.hasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(values==null)?null:values.length.equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(values!=null)?null:values.length.equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(values==null):values.length.equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[1];if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[0];if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[0];if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[0];if(opt==null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(opt);if(values==null){return(values==null)?null:values[0].;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values.length)||opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(options));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(),opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValues(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains("-")){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(args)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){Map<String>options=getOptionArgs();if(values==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(0,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(0,3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.isEmpty()){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()||!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.isEmpty()){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnpreviousHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnthisoldHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.contains(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.contains(args)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(values==null){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(values!=null){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+",-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalHashMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalpublicHashMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))}hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!='+'){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1,"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1?"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+".:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+",:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null||options.hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(opt!=null){args=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123hashcodeMap=getOptionArgs(opt,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,hashcodeMap),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=args.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args,privateList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(options.containsKey(opt)){Stringopt=this.options.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.containsKey(opt)){Stringopt=this.options.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.containsKey(opt)){Stringopt=this.options.get(opt);if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(charopt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=newString(String.valueOf(opt));if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(key)||options.containsValue(value);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt.toString());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=this.options.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=this.opt.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){if(!hasOption(opt)){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(!args.isEmpty()){args.add(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(!args.isEmpty()){args.add(String.valueOf(opt));}else{options.put(opt,newOptionName("getOption"));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(!args.isEmpty()){args.add(String.valueOf(opt),String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(!args.isEmpty()){args.add(String.valueOf(opt));}else{options.put(opt,newOptionName("-"));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(!args.isEmpty()){args.add(String.valueOf(opt));}else{options.put(opt,newOption(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.size()!=1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapOptions=newHashMap();returnoptions.size()==1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticnewHashMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetValue(String.valueOf(opt),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetValue(String.valueOf(opt),options.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetValue(StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticHashMaphashcodeMap=newHashMap();hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=getOptionValue(opt);options.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=getOptionValue(opt);Options.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=getOptionValue(opt);args.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=getOptionValue(opt);Lists.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+".:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.size()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(getOptionValue(opt),values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(getOptionValue(opt),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(String.valueOf(options.keyword));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(String.valueOf(options.keyword),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(String.valueOf(options.substring(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newInstance(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newInstance(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(this.options==null)?null:values[1];Arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];options.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(opt==null)?null:options[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(opt!=null)?null:values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"&&"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.contains(resolveOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnargs.contains(resolveOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoption.contains(resolveOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnLists.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();returnLists.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newArrayList();returnLists.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(args,opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(arguments.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)&&this.options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(string)||this.options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalstaticMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!option.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(options,opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(args,options.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(variables,opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalHashMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticHashMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashMaphashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.equals(options.getString())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!opt.equals(options.getString())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.getString().equals(opt)){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnalternatives.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||alternatives.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(options)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.equals(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args.size()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+":");if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+":");if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(opt)+
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnthis.options.toMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoption.toMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.toMap("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!values.equals(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!option.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.notNull(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Option.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.notNull(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalArrayListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.hasOption()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.getKey()!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returngetOptionValue(String.valueOf(options.getKey()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey()||opt!=null){returngetOptionValue(String.valueOf(options.getKey()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap("Illegalstartoftype");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap("Illegalstartoftype"),
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privatefinalMapOption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();privatefinalMapOption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapOption=newHashMap(",");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+"vs");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?"null:values[0],1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewCombinedList(newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewObjectList(newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,false,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(values.equals(opt)){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt.equals(values)){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!opt.equals(values)){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(option.equals(values)){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt.equals("")){args=this.options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt.equals("+")){args=this.options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt.equals(".")){args=this.options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt,havehcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newTreeSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43publicstaticfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.sort(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Option.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt!=null&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&opt==null&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&opt!=null&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(values.equals(opt)){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(values)){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(values)){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.toLowerCase()){if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.toLowerCase()){if(args.contains(opt)){returntrue;>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.containsKey(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(values!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(1)+1);returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",options:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasArg()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.hasArg()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasArg()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=optionMap.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newBashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newVariant();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicArrayListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(true,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap(true));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!opt.equals(options.getOption(opt))){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!opt.equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,optionNames.get(opt.getValue(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,optionNames.get(opt.getValue(),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,options.get(opt.getValue(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,optionNames.get(opt.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhashcodeMap.saveCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnishcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhashcodeMap.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt);hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoptions.containsKey(opt);hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.hasKey(opt);hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newUseMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newHashMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains("-")){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(values.length.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(values.length.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(values.length.equals(opt)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+".-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.size()==1?options.get(1):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(!hasOption(opt)){args=options.get(opt);if(args.contains(".")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(!hasOption(opt)){args=options.get(opt);if(args.contains(".opt")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(!hasOption(opt)){args=options.get(opt);if(args.contains(".")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(!hasOption(opt)){args=options.get(opt);if(args.contains(".opt")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(opt.equals(".")){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedMapoptions=newHashMap();privatestaticfinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedfinalMapoptions=newHashMap();privatestaticfinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedListoptions=newHashMap();privatestaticfinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(24);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();privatefinalArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();privatefinalList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();privatefinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();privatefinalTreeSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();privatestaticArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(".")){args|=options.containsKey(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option.equals("")){opt|=options.containsKey(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashCodeMap=newHashMap();privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashCodeMap=newHashMap();privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!options.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.containsKey(opt)){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnishcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.remove();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.construct();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,commandLine.DEFAULT_LOAD_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,CommandLine.DEFAULT_LOCATION_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,CommanderLine.DEFAULT_LOAD_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.hashcodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.hashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.hashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.hashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privateMap=newHashMap(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privateMap=newHashMapWithOptions(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(options)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hashCodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode=",hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.detachFromHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addHashCodeMap("n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey())){if(opt.equals(options.getValue()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||options.equals(opt)){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){args=options.get(opt);if(args!=null){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnoldTreeList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=newHashcodeMap<String,Option>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=newHashCodeMap<String,Option>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!option.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){Map>>String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137}elseif(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137}if(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137[Delete]elseif(opt!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.equals("+")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals("+")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Ops=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedListhashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalstaticMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(options)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,opt,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,args,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt),)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt),)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getName())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!opt.equals(options.getName())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.getName())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.getName()!=null){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.isTrue(opt.length()!=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(option);Validate.isTrue(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.isTrue(opt.length()>=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(args,true,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,args,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,args,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,args,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args,private);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,public);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,this.commandLine);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionOptions.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionList.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options.hasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasKey(opt)||hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(!hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(opt)+"isnotsupported");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(opt)+".isnotsupported");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!opt.isEmpty()){if(!args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args.isEmpty()){if(!args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.isEmpty()||!args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkAnswer(!options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticLinkedMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalLinkedMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),this,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),this,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),args,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),null,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(option)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){thrownewIllegalArgumentException("");}else{options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){thrownewIllegalArgumentException("");}else[Delete]options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatenewArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);privatenewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);privatenewListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+",vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returntoArray(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newArrayList();returntoArray(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();returntoArray(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.hashCodeMap=HashCodeUtils.hashCodeMap(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null):values[0];if(opt.equals("")){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];if(opt.equals("")){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];if(opt.equals("")){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains(".+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)&&options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){StringgetOptionValue=newString(String.valueOf(opt));if(getOptionValue()==null){returngetOptionValue(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringopt:getOptions()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137super.hashcodeMap=(Hash)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137super.hashcodeMap=(HashCode)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137super.hashcodeMap=(Hashed)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137super.hashCodeMap=(Hash)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==opt){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==opt){if(opt.equals(options.getValue())){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.args,this.options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.opt,this.options,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0],values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null):values[0],values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(args.size()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(args.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(args.size(),null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicfinalMapoption=newHashMap();publicfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicfinalMapoption=newHashMap();publicfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicfinalMapoption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicfinalMapoption=newHashMap();publicstaticfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicfinalMapoption=newHashMap();publicfinalMapoption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+this,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt,null,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt,null,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt,null,optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt,options,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),true;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,opt,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args.size(),privateList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("/.")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("-")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+":");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.iterate();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.get("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.select(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){if(values==null){return(values==null)?null:values[1];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){return(values==null)?null:values[1];if(opt.isEmpty()){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null)?null:values[1];if(opt.isEmpty()){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){if(values==null){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+3;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMap.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticMap.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicstaticfinalMap.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapOptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+"/");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");if(opt!=null){StringgetOptionValue=newString(String.valueOf(opt));if(getOptionValue()==null){returngetOptionValue(String.valueOf(opt)+"/");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+"/");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnLists.asList(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnarrays.asList(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalLinkedMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(Stringopt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(Stringopt)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values==null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125newList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125newTreeSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(charopt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!isOption(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(values==null){if(!args.contains(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt==null){if(!args.contains(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt!=null){if(!args.contains(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){if(!args.contains(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43finalprotectedListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43staticfinalprotectedListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43staticfinalprotectedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()==0){returngetOptionValue(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(opt.length()>0){returngetOptionValue(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnargs.toArray(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();return(List)args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(opt+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.contains("+")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.contains("-1")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt)||hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),which.removeLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),which.isLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),which.hasLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(option)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt,options.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt,this.options.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt,option.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Map.Entry<String,HashcodeMap.Entry<K,V>option:hashcodeMap.entrySet()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Map.Entry<String,HashcodeMap.Entry>>K,V>option:hashcodeMap.entrySet()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Map.Entry<String,HashcodeMap.Entry<K,V>option:hashcodeMap.entrySet()){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,true,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,true,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+options;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+args.length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+this.args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedstaticListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedstaticListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();returnSystem.identityHashCode("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returnget
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newArrayList();returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap(;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticHashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalHashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticHashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(true;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnall.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions.get("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("hashcode=");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalsuper.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatenewsuper.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateSuper.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatestaticMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatestaticfinalMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMaphashCodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=opt){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==opt){if(opt.equals(options.getValue())){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==key){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(options.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(option.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(args.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||hashcodeMap.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)&&hashcodeMap.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String,options.valueOf(opt.getKey()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options,options.getKey()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.getKey()),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(null,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalLinkedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==0)&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt>=0)&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==0)&&isOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!option.equals(options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!option.equals(opt)){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(options,hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();privatestaticHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();privatestaticHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(opt));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=null&&opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null&&opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions.iterate();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.get(options.iterate());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();returnoptions.iterate();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125protectedMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125protectedfinalMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125protectedListoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125finalprotectedMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!option.equals(values)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)&&opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)&&opt!=null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalnewMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticnewMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicnewMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.valueOf(opt))==returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.valueOf(opt))!=returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(optip)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=HashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=HashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=HashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashCodeMap=newHashMap();privatefinalMap.hashCodeMap=HashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalnewMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.hashCodeMap=HashCodeUtils.hashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectednewMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(1)+1);hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(0)+1);hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalprotectedMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedHashMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(24);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(16);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51reset(newHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(key)){if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnvalues;Afterward
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(values))returnnull;Afterward
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnvalues[0];Afterward
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnvalues;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(args,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!options.containsKey(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!options.containsKey(opt)){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[1];Arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[1];arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[1];Collections.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(args)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArguments(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=createOptionArguments();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=toOptionArguments();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("/.")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("-")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,optionsMap.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionsNames.put(opt,options.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnSystem.identityHashCodeMap(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticListargs=newLinkedList();returnargs==null?newArrayList():Arrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListargs=newLinkedList();returnargs==null?newArrayList():Arrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalListargs=newLinkedList();returnargs==null?newArrayList():Arrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticListargs=newLinkedList();returnargs!=null?newArrayList():Arrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnargs.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnargs!=null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returntype.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();hashcodeMap=newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();hashcodeMap=newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticHashMaphashcodeMap=newHashMap();hashcodeMap=newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnoldDefaultList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(),opt+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getArgumentArgs(),opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(opt.length()>0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){if(opt.length()>0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),this));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),this,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!options.containsKey(opt)){StringgetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(values==null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(values!=null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options!=null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":",opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(hashcodeMap.valueOf(opt),String.valueOf(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(hashcodeMap.valueOf(opt),String);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(HashcodeMap.valueOf(opt),String.valueOf(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(hashcodeMap.valueOf(opt),String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.asList(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Options.asList(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Lists.asList(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.asList(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(option.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt)){returnvalues;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt)){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(key)||options.containsValue(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(string)||options.containsValue(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(">");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args!=null){thrownewIllegalArgumentException("
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+"
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=0){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt<0){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=0){returngetOptionValue(String.valueOf(opt)+".:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(options.valueOf(String.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(options.keySet().valueOf(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String,options.valueOf(opt.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(args,hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");if(opt!=null){if(!args.contains(".opt")){returngetOptionValue(String.valueOf(opt)+".opt");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+".opt");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+".");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedstaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?opt.toLowerCase():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(args,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(args,newArrays());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnLists.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(opt!=null){String[]args=getOptionValues(opt);if(args!=null){return(args==null)?null:options[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(options!=null){String[]args=getOptionValues(opt);if(args!=null){return(args==null)?null:options[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){return(options==null)?null:options[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt)))!=if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(opt,values,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){StringgetOptionValue(String.valueOf(opt)+"-"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!args.isEmpty()){args.add(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){StringgetOptionValue(String.valueOf(opt)+"-"+opt);}else{options.addOption(getOptionValue(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];if(opt!=null){if(values[0]==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsFromLocalName(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsFromLocalName(opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsFromLocalName(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.hashcodeMap,this.options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.opt,this.options,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Validate.notNull(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Validator.notNull(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Validate.isTrue(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Validates.notNull(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(1)+1);returngetOptionValue(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt)-1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt),values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry>>K,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry&K,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.EntryMITK,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.hasOption(opt)){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.class)){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.keyOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(option,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null)?null:values[1];if(opt.isEmpty()){return(values==null)?null:values[1];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedListhashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashCodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(opt==null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(opt!=null){String[]values=getOptionValues(opt);if(values>=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(opt!=null){String[]values=getOptionValues(opt);if(values<=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"isnotsupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=this.options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=option.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=Options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?values[0]:values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashCodeMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashCodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatestaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatestaticMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69protectedfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,private);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,public);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,newLinkedList<Private>());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,newLinkedList<List>());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(1)+1);returnhasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(options.hasOption(String.class));if(options.hasOption(String.class)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(options.getOption(String.class));if(options.hasOption(String.class)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(String.valueOf(opt));if(options.hasOption(String.class)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(options.hasOption(String.class))if(options.hasOption(String.class)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&args==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values!=null):values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(opt==null):values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(option==null):values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.hashCodeMap=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.hashCodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.hashCodeMap=newHashMap(64,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatefinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatestaticMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatefinalMapOptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatestaticfinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry&K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry>>K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap>>Map.Entry&K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.newUseMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.newHashMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.newHashMap(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))!=if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();protectedfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();if(options==null){protectedfinalMapoptions=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();if(options!=null){protectedfinalMapoptions=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();protectedfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();if(options==null){protectedfinalMapoption=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoptions!=null?options.hashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoptions!=null?newHashMap():options.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoptions==null?newHashMap():options.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.startsWith("-")){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.startsWith("--")){if(!args.contains("--")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.startsWith(".-")){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),opt,"Optionsareempty");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),",Optionsareempty");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&hasOption(String.valueOf(string));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnargs==null?null:args.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnnewLinkedList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnargs==null?null:newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnnewLinkedList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option!=null){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option==null){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnthis.hashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.hashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnishCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option==null){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<null){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();returnnewHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashSet>>String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnnewHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(options.hasOption(String.valueOf(opt)));if(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(options.hasOption(String.valueOf(opt))if(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),options.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),args.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),values.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.contains(opt)){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(Arrays.asList(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(Arrays.asList(args,privateList));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(Arrays.asList(args,CommandLine.COMMAND_LINE));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");protectedMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");protectedfinalMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");protectedListoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");protectedMapOptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");privatefinalMapoptions=newHashMap();protectedstaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalOptions.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalSets.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedstaticfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()))returntrue;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==opt.equals(options.getKey()))returntrue;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=opt;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=newHashcodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(options==null){String[]options=newHashcodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,hashcodeMap,default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt)+options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedstaticMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safefinalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(options==null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(options==null){String[]values=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)hashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)this.hashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)hazcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap<<K,V>)hashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionOptionNames.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Map.Entry<String,HashcodeMap.Entry>>K,V>option:options.entrySet()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Map.Entry<String,HashcodeMap.Entry<K,V>option:options.getKey()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Map.Entry<String,HashcodeMap.Entry>>K,V>option:options.getKey()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!values.equals(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),args,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),options,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),args,options.values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(optinstanceofString){hasOption(String.valueOf(opt));hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(hasOption(String.valueOf(opt))){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.valueOf(opt))){returnoptions.containsKey(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.valueOf(opt))){args.add(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.valueOf(opt))){args.put(opt,options.get(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.equals(opt.getOptions())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt);if(opt.equals(this.options.getOptions())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);ReturngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.containsKey(opt)){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.containsKey(opt)){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(opt!=null){if(this.options.containsKey(opt)){return(String)this.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsKey(opt)){return(String)this.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(this.options.containsKey(opt)){Stringargs=this.options.get(opt);if(args.containsKey(opt)){return(String)this.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(opt!=null){if(this.options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(this.options.containsKey(opt)){Stringargs=this.options.get(opt);if(args.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+"
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options==null){finalprotectedMapoptions=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options!=null){finalprotectedMapoptions=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options==null){protectedMapoptions=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options==null){finalprotectedMapoptions=newHashMap();}else{options.putAll(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.construct("HashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.construct("hashcodeMap=");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(1);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newLinkedList<String>(values.toLowerCase());}else{names.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newLinkedList<String>(values.toLowerCase());}else{options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,opt.length()!=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(option.length()!=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticListargs=newLinkedList();returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListargs=newLinkedList();returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticListargs=newArrayList();returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalListargs=newLinkedList();returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(args==null||!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt<1){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt<1){if(!hasArgs()){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=1){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!hasArgs()){if(opt==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.haveOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.getKey()!=null){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(opt.equals(this.options.getValue())){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,null,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,null,options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,null,options.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.sort(options,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(optip);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(op);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode="+getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode+"+getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=string.valueOf(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(option+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){args=options.get(opt);if(args.contains(.".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(0,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(0,3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalHashCodeMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalArrayListhashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)||(opt!=null&&!opt.equals(""))){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)||(opt!=null&&opt.charAt(0)=='-')){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args!=null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/10);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.equals(")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.equals(opt)){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)||options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125<<
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap.HashCodeMap(),hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap,HashCodeMap.HashCodeMap(),hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap.hashCodeMap(),hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap.HashCodeMap,hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||this.options.containsArg("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);args=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);args=getOptionArgs(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);args=getOptionArgs(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123ArrayListargs=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs=getOptionArgs(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs=findOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(string);if(opt!=null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]values=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.hasOption(options)||options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)||alternatives.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)||options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"vs"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.size()>1){returngetOptionValue(String.valueOf(opt)+"vs"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.size()>0){returngetOptionValue(String.valueOf(opt)+"vs"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt)-1,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),false,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){args=newHashCodeMap<String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(options.size()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46thrownewIllegalArgumentException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46thrownewIllegalStateException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46reset(newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();returnnewHashSet<Map>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnnewHashSet<Map>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashSet>>Map>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap()?newHashMap():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String,options.valueOf(options.getAlternatives()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options,options.getAlternatives()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.hasAlternatives()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newArrayList();returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returnargs.valueOf(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returnargs.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalMap.Entry>>K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatestaticMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatestaticfinalMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.>>K,V>(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(16);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.substring(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.keyOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(string)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasArgs()){returnhaveOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasArg()){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.hashCodeMap=HashCodeUtils.hashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(32,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey()))}if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasOption(opt)){returngetOptionValue(String,opt.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.delete();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.init();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.immediate();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)||options.getOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)||options.isOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt.length==0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt.length==1){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){opt=getOptionValue(opt);if(opt.length==0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safestaticMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safefinalMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safefinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.length==1){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.length==0){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.length==2){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalHashCodeMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateListhashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(chomp));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(this.options.keySet(),String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(options.keySet(),String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(Character.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null||options.hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values==null){if(!args.contains(values)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!args.contains(values)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!args.contains(values)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();privatefinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privatefinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(args)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){Map>>String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.contains(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,options.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,HashCodeMap.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,Maps.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,Options.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.isEmpty()){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.isEmpty()){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()||!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions==null?options.toHashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions==null?newHashMap():options.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions==null?options.get():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions==null?options.hashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalLinkedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMap=newHashMap(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,opt.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),opt.toUpperCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),opt.toLowerCase()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(option,opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt)||args.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt)||hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+8));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+8));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+8));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedArrayListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedHashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(hashcodeMap,opt.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(option,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionOptions.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionOptionNames.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.class)){returnhasOption(String.
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.class)){returnhasOption(String
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalLinkedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Collections.sort(this.values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Collections.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Collections.sort(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOption(true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOption(false,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addOption(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options==null){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.hasOption(opt)){if(opt.equals(options.getKey())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.hasOption(opt)||options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.hasOption(opt)||opt.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(opt.hasOption(opt)||options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.hasOption(opt)||optionNames.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43return(values==null)?null:values.toArray(newString[0]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43return(values==null)?null:options.toArray(newString[0]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.ISSUE,opt.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!args,opt.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!options,opt.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+":");returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.remove();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.set(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setItemCount(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty()),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newArrayList();returnargs.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returnargs.toArray(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51safestaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51safestaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51safefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(args.contains(".--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(args.contains(".--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedMapoptions=newHashMap();privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedfinalMapoptions=newHashMap();privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedListoptions=newHashMap();privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedArrayListoptions=newHashMap();privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.hasOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.values()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)&&!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,false,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123super.hashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123super.hashcodeMap=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123super.hashcodeMap=newHashMap(16);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123super.hashcodeMap=newHashMap(24);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0,3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,true,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,true,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+"-"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+"-"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.containsKey("-")){returngetOptionValue(String.valueOf(opt)+"-"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnHashCodeMap.enter();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnnewHashCodeMap(HashCodeMap.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnnewHashCodeMap(HashcodeMap.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashCodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,Map.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(hashCodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(args.contains(opt)){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!options.contains(opt)){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(opt)||args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnargs.containsKey(opt)||hashcodeMap.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){for(Map.Entry<String,V>opt:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){for(Map.Entry>>String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(charopt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(args)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(values==null)?null:values.length).equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(opt==null)?null:values.length).equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+2);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(String.valueOf(opt),)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.getValue()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.getKey()){if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(options.getKey()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(options.map()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(options.hasKey()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){if(args.contains(".")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||options.equals(options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticListargs=newArrayList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticListargs=newLinkedList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListargs=newArrayList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalListargs=newLinkedList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){if(opt!=null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){if(opt==null||opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){if(opt==null){Stringopt=newHashcodeMap();if(opt.equals(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt,option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnisHashcodeMap.hasOption(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newArrayList();returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatestaticHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80publicfinalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatelastHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(String.valueOf(opt))thrownewIllegalArgumentException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))thrownewIllegalArgumentException(""));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt))thrownewIllegalArgumentException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(17);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Sort(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Sort(values,OpcodeMap.DEFAULT_LOAD_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Sort(values,OpcodeMap.DEFAULT_VOLATILE):values;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashCodeMap=newHashMap();return(HashCodeMap==K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();return(HashCodeMap==K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.getValues();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=this.options.getValues();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=option.getValues();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(opt.equals(options.getKey())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(opt.equals(options.getKey())){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.keyOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.keyOf(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains(".-->")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.equals(opt.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.get(opt,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.getOptions(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.add(args,newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMap=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=0){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt<0){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(opt,hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!hashcodeMap.hasOption(opt,opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!hasOption(opt,hashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnvalues.getOptionValue(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.getOptionValue(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnthis.options.getOptionValue(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+",vs");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privatefinalMapoption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap("",0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap("",args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=newString(String.valueOf(opt));if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoptions.size()==1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoptions.size()>1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.getKey())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(string);if(opt==null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(1))){returnhasOption(String.valueOf(1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Values.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51values.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Values.notNull(values):values;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Values.notNull(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(hashcodeMap==null)?null:hashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(hashcodeMap==null)?hashcodeMap.keySet():hashcodeMap;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(hashcodeMap==null)?hashcodeMap.keySet():newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,true,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,true,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,true,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalstaticMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticMap=newHashMap(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.add(args,CommandLine.COMMAND_LINE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,CommandLine.COMMAND_LINE)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.removeAll(args,CommandLine.COMMAND_LINE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privateHashMap(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(true,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatefinalListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatefinalListoption=newHashList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatefinalCommandLineoption=newCommandLine();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatefinalHashMap()=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.valueOf(opt))){returnhasOption(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.valueOf(opt))){returnhasOption
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.valueOf(opt))){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.valueOf(opt)+":");if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],8;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalHashMapoption=newHashMap();privatefinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalHashMapoption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalHashMapoption=newHashMap();privatefinalHashInfooption=newHashInfo();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalHashMapoption=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalHashMapoption=newHashMap();privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();publicfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();publicfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicstaticMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.options.values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(this.options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt);if(this.options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),",opt.length");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,this.options,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(values)){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(values.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(key)){if(values.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsValue(String.valueOf(opt))){returnhasOption(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsValue(String.valueOf(opt))){returnhasOption(String.
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsValue(String.valueOf(opt))){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewLinkedList(this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewArrayList(this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewArrayList(this.args,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewArrayList(this.args,newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.hasOption(opt)){thrownewIllegalArgumentException("");>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.hasOption(opt)){thrownewIllegalArgumentException("".);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(options.hasOption(String.valueOf(opt)));if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(options.hasOption(String.valueOf(opt))if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.add(newOption(String.valueOf(opt),Option.None.class));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.add(newOption(Option.valueOf(opt),Option.None.class));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.add(newOption(Option.None.class,String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.add(newOption(Option.String.valueOf(opt),Option.None.class));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,option.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,opt.getKey(),option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(String.valueOf(opt));if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(String.valueOf(opt));if(opt==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(String.valueOf(option));if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.get(options.iterator().next());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticLinkedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalLinkedList.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalList.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(hashCodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(hashCodeMap,opt.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(hash,opt,HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedListhashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options.containsKey(String.valueOf(opt))){returnoptions.containsKey(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options.containsKey(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options.containsKey(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options.containsKey(String.valueOf(opt))){args.put(opt,options.get(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(!hasOption(opt)){args.put(opt,options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));delt
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));&
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(".")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMapoptions=newHashMap(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(opt!=null){if(!args.contains(opt)){return(String)this.options.getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(opt!=null){if(!args.containsKey(opt)){return(String)this.options.getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(opt!=null){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(opt!=null){if(!args.contains(opt)){return(String)getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(opt!=null){if(!args.contains(opt)){returnoptions.getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOptions=newHashMap();returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.removeChild(super.hashcodeMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.removeHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];if(opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null):values[0];if(opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",hasconflictingarguments.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0],1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+2);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMap=newHashMap(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMap=newHashMap(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatestaticfinalMap=newHashMap(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMap=newHashMap(Strings.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),opt),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getString())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!opt.equals(options.getString())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.getString().equals(opt)){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getString()))}if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.args.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){returnthis.options.containsKey(opt);if(this.args.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values==null)?null:values[1];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values!=null)?null:values[1];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(values==null)?null:values[0];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);privatefinalArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);privatefinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt).toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(args,this.options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,args,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,args,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=hashcodeMap.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=HashcodeMap.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=this.hashcodeMap.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty()),args,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"||"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"|"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!values.equals(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);returnoptions.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);returnoptions.containsKey(opt)||options.map.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);returnoptions.containsKey(opt)||options.hashCodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);returnoptions.containsKey(opt)||options.shortCodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);returnoptions.containsKey(opt)||options.isOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values==null){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnpreviousHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.getOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.getOption(opt))!=thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=null||if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(opt!=null){Stringoption=getOptionValue(String.valueOf(opt));if(options.hasOption(options)){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(opt!=null){Stringoption=getOptionValue(String.valueOf(opt));if(options.hasOption(options)){returnoptions.getOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(opt!=null){Stringoption=getOptionValue(String.valueOf(opt));if(options.hasOption(options)){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(opt!=null){Stringoption=getOptionValue(String.valueOf(opt)+":");if(options.hasOption(options)){returnoptions.getOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(opt!=null){Stringoption=getOptionValue(String.valueOf(opt)+":");if(options.hasOption(options)){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofCharacter){hasOption(String.valueOf(opt));}else{options.setOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOption=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,options.getKey(),this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(option,options.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,options.getKey(),default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.removeCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.resetCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.reportCodeChange();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.setCode("n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args,privateArrayList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewList(args,privateArrayList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privatelist);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],2];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0],1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[1];if(opt==null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(".")){args|=options.containsKey(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("/")){args|=options.containsKey(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){hasOption(String.valueOf(opt));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){hasOption(String.valueOf(opt));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,hashCodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!opt.isEmpty()){if(!args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args.isEmpty()){if(!args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!args.isEmpty()){if(!args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46lastHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options.getLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=this.options.getOptionValues(opt),this.options.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt).toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();super.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashCodeMap=newHashMap();super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalAnswers.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(args,options.valueOf(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt.valueOf(args)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havetostartwith:",commandLine);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havetostartwith:",type);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.get(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.get(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.get(opt,default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(0))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(2))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(5))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<null));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt<1){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt==1){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){if(opt==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt!=1){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt<1){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return1HashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return2HashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args!=null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("/.")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("-")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(opt!=null){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return1HashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return2HashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.contains(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.keySet(),options.values()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatestaticfinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.keySet(),options.values()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatestaticMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.keySet(),options.values()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.>>K,V>(options.keySet(),options.values()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option==null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMaphashcodeMap=newHashMap();returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatestaticMaphashcodeMap=newHashMap();returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatestaticfinalMaphashcodeMap=newHashMap();returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.equals(options.getName())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.equals(options.getValue())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)||opt!=null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)&&opt==null&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.length()!=0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",vs");if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".vs");if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.containsKey(String.valueOf(opt))&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.containsKey(String.valueOf(opt))||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.containsKey(String.valueOf(opt))&&isSupported(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.containsKey(String.valueOf(opt))&&isOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,true,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(hashcodeMap,opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,true,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returnfalse
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()==null)?newHashCodeMap():newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()!=null)?newHashCodeMap():newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()==null):newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(opt)?null:args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(opt)?null:args.length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(opt),?null:args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(option)?null:args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(0,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(1,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnthis.options.getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnhashcodeMap.getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnoption.getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashCodeMap=newHashMap();privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashMap=newHashMap();privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.equals(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(0,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(1,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".+")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);privatestaticfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);privatestaticfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();privatenewHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();privatenewHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatelastMapoptions=newHashMap();privatenewHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.toLowerCase()){if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.toLowerCase()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.get(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.iterate();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.get(options.size()-1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))==thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(String.valueOf(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))!=thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments.");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(args.contains("-")){returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments.");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(args.contains("-")){returngetOptionValue(String.valueOf(opt)+".hasconflictingarguments.");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+".hasconflictingarguments.");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalHashMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap().get(hashCodeMap.trim()).next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!options.hasOption(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsOption(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notEmpty(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(optip);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.hasOption(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null)?null:values[1];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null)?null:values[1];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null)?null:values[1];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null)?null:values[0];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("||")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("|")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("+")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();if(opt==null){if(args.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();if(opt!=null){if(args.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();if(opt==null){if(args.contains(".--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();if(opt!=null){if(args.contains(".--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();if(opt==null){if(args.contains(".-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.containsKey(opt)!=null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.containsKey(opt)==null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.containsKey(opt),opt!=null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.containsKey(opt),null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.addAll(args,privateList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.addAll(args,privateLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.addAll(args,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.addAll(privateListargs,privateList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.containsKey(opt)){args=options.get(opt);if(args.contains(args.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.identityHashCode(hashcodeMap,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.identityHashCode(hashcodeMap,newHashCode());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.identityHashCode(hashcodeMap,type);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOption
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(optinstanceofString){if(!hasOption(opt)){return(String.valueOf(opt)+":"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(optinstanceofString){if(!hasOption(opt)){return(String.valueOf(opt)+":"+(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(optinstanceofString){if(!hasOption(opt)){return(String.valueOf(opt)+":"+opt;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(!hasOption(opt)){args=newHashCodeMap<String.valueOf(opt)+":"+opt;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoption.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnalternatives.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!hasOption(String)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,args,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(this.charinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=this.char){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){Stringopt=newString(String.valueOf(opt));if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null||!values.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashCodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,options,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicfinalHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicstaticHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicstaticfinalHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicfinalHashCodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(!hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(!hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+2);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+7);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt))){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options.hasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(opt)){for(Map.Entry<String,V>opt:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(values)){for(Map.Entry<String,V>opt:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returnargs.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null):newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()!=null)?newHashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options==null){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.get(options.iterator().next());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.hasOption(opt))}returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":"+this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnisOption(String.valueOf(opt)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&hasOption(String.charAt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.charAt(0));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.charAt(1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!opt.equals("-")){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("+")){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.equals("-")){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(optinstanceofString){if(!hasOption(opt)){returnfalse;bodied
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(optinstanceofString){if(!hasOption(opt))}returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(optinstanceofString){if(!hasOption(opt)){returnfalse;>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnhashcodeMap.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnsuper.hashcodeMap;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt);returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedListhashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashCodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhaveOption(String,opt.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),alternatives.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionalValues(opt),options.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validator.notEmpty(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125validate.notEmpty(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt,options.chompTo(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt.chompTo(options)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String,options.valueOf(opt.chompTo(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnoldTreeSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeSet(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option!=null){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticMaphashcodeMap=newHashMap();returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(values.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(values.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.length==values.length){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(opt)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)||!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.size()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.size(),options.alternatives);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.size(),options.commandLine);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoldHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return0HashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);privatefinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);privatefinalListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.contains("--")){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkAnswer(!Options.isEmpty(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkAnswer(!"Options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkAnswer(!Options,opt.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),opt),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.isTrue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(options,hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(hashcodeMap,opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,hashcodeMap,options,hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt,hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt,havehcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode="+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCodeMap"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();privatefinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOption=newHashMap();privatefinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashcodeMap.DEFAULT_LOAD_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(option,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(op));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(hashcodeMap,opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(hash,opt,HashcodeMap.class)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,opt.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(charopt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.EntryPrezentK,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.EntryPrezentK,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMap.EntryPrezentK,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedListhashcodeMap=newHashMap();returnSystem.identityHashCode(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123finalprotectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(hashcodeMap,opt.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(opt,HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(opt,Map.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));if(args!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.keySet()),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.keySet(),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.keySet()),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("HashCode",newHashCode());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("HashCode",hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()!=null)?null:newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt.equals("-")){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt),String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt.equals("-")){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt.equals("-")){if(options.hasOption(opt)){returnoptions.getOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt.equals("-")){if(options.hasOption(opt)){returnoptions.getOptionValue(String.valueOf(opt),String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==null){if(options.containsKey(String.class)){returnhasOption(String.
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalListOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,select.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.equals(values)){for(Map.Entry<String,V>opt:options.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!option.equals(values)){for(Map.Entry<String,V>opt:options.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){for(Map.Entry<String,V>opt:options.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt!=null){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null||options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(string)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalprotectedMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedHashMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.isEmpty()){if(values==null){values[0]=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.isEmpty()){if(values==null){values=newString[opt.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.equals("")){if(values==null){values=newString[opt.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.isEmpty()){if(values==null){values[0]=opt;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.equals("value")){if(values==null){values=newString[opt.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains(args)){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){thrownewIllegalArgumentException("
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){thrownewIllegalArgumentException(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){if(opt.length()>0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getOption(opt))!=thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnisOption(String,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnisOption(opt,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnisOption(char,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnisOption(args,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.options,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(args.contains(opt)){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!options.contains(opt)){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(opt)||args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(haveOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,getOptionNames(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,getOptionNames(),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,getOptionNames(),this.optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,getOptionNames(),this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(opt)+":"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(optinstanceofString){if(!hasOption(opt)){return(String.valueOf(opt)+":"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatehashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt!=null){args=options.get(opt);if(args.contains(".+")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);privatestaticListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);privatestaticListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(StringUtils.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(stringUtils.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(String.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(StringUtils.StripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":",hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",hashcodeMap:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.getKeySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.getKey());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.hashCodeMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(List)args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(List)this.args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(List)arguments.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(List)args.toArray(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),this.args,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),this.args,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),this.args,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.values()){if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.keySet()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(value)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(string)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notEmpty(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtils.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null||opt.length()==0){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null||opt.length()==0){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||opt.length()==0){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(charopt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(optip.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,option.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);returnoptions.get(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);returnoptions.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);returnoptions.get(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));if(opt!=null){if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));if(options.containsKey(opt)){StringgetOptionValue=newString(String.valueOf(opt)+"-"+Integer.toHexString(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null||options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null&&options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(args.containsKey(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!options.containsKey(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){if(args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,options.defaultOptions);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashCodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=hashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1".opt");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,args,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,options,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,args,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap,args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap,names));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap,default));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()==null)?null:newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()!=null)?null:newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=getOptionArgs(opt,HashCodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=getOptionArgs(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=getOptionArgs(opt,Map.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=getOptionArgs(opt,HashMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticMaphashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(options.keySet()));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(args!=null){String[]args=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(args!=null){String[]values=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(args!=null){String[]args=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(args!=null){String[]options=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){hasOption(String.valueOf(opt));if(opt>=0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicHashCodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicHashcodeMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);privatefinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(opt)){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(string)){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashCodeMap=newHashMap();returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();returnsuper.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));if(args!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(opt.size()>1){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(opt)){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicArrayListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicListoptions=newHashMap().removeListener("HashMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicListoptions=newHashMap().removeList("HashMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOption=newHashMap();privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatefinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatestaticMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatefinalMapOptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatefinalMapoptions=newHashMap(32);privatefinalHashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!hasOption(Stringopt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!hasOption(Stringopt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!hasOption(charopt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(opt.isEmpty()){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!opt.isEmpty()){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(opt.isEmpty()||!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(values.isEmpty()){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(opt.equals("")){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.put(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){if(opt==0){options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(opt)+".:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=0){returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,opt,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(names,hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];if(opt!=null){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null):values[0];if(opt!=null){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option==null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)||options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+",vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+",");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringvs:options.keySet()){if(!args.contains(opt)){returnvs.valueOf(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringvs:options.keySet()){if(!args.isEmpty()){returnvs.getOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(HashCodeMap==0)?null:hashcodeMap;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(HashCodeMap==0)?hashcodeMap:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",vs"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)%2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newArrayList();returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterator().alternatives();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterator().remove();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterator().attribute();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(1)+1);hasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<1){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<1){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<1){if(!hasArgs()){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<1){if(!hasArgs()){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt)||args.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt.valueOf(args)||opt==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validator.notNull(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.contains(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.equals(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.equals(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[values.size()],opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String]values.toArray(newString[values.size()]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[values.length()]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapOptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",charopt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.length==1){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.length==2){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatestaticMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatestaticfinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69publicstaticMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",isnotsupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".isnotsupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.options.containsKey(opt)){if(!this.options.containsValue(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.options.containsKey(opt)){args|=this.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.options.containsKey(opt)){if(!this.options.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.options.containsKey(opt)){if(!this.options.containsValue(opt)){this.options.addOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedLinkedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(options,opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option,opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=0){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=0){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt<0){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args,privateArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewList(args,privateArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatenewsuper.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalsuper.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicsuper.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(optinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}else{options.addOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(!options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(null,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofCharacter){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofchar){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString||optinstanceofCharacter){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+"vs");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(options.hasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(options.hasOption(String.valueOf(opt)+"vs");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newUseOfCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newBashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(hashCodeMap,opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap)+1,options;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(1,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(2,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(char,opt.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(charopt,opt.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String,opt.valueOf(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");for(Stringargs:options.keySet()){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+")";}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");for(Stringargs:options.keySet()){if(args.size()>0){returngetOptionValue(String.valueOf(opt)+")";}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");for(Stringargs:options.keySet()){if(args.size()>1){returngetOptionValue(String.valueOf(opt)+")";}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");for(Stringargs:options.keySet()){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+")");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values)?opt:newString[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option)?opt:newString[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args,opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),args,||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt)?null:opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(option)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt),opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=newString(String.valueOf(opt));if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.codeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(hashcodeMap==null){finalstaticHashCodeMap=newHashCodeMap();hashcodeMap=newHashCodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(hashcodeMap==null){hashcodeMap=newHashCodeMap();hashcodeMap=newHashCodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(hashcodeMap!=null){hashcodeMap=newHashCodeMap();hashcodeMap=newHashCodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotpossible");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.hasKey(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.get(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(hashcodeMap==null){protectedHashCodeMap=newHashCodeMap();hashcodeMap=newHashCodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(hashcodeMap!=null){protectedHashCodeMap=newHashCodeMap();hashcodeMap=newHashCodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(hashcodeMap!=null){hashcodeMap=newHashCodeMap();hashcodeMap=newHashCodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(hashcodeMap==null){hashcodeMap=newHashCodeMap();hashcodeMap=newHashCodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt),hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!hashcodeMap.hasOption(opt),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt),hashcodeMap,options.values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt),hashcodeMap,options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returnget
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOption
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null||!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null||!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(String.valueOf(opt),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(String.valueOf(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(String.valueOf(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt==null||opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt!=null||opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null||opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt==null||options.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(False);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(Null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasKey(opt)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoption.hasKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options.hasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/"+Integer.toHexString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("/.")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("-")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=hashcodeMap.getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=options.getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=HashcodeMap.getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=hashCodeMap.getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.equals(opt.getKey())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(key)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewList(args,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(args,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap()?null:hashcodeMap;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||values.length==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+"vs");if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");for(Stringvs:options.keySet()){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs");for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty()&&opt!=null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args!=null){hasOption(String.valueOf(opt));if(opt!=null){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));if(args!=null){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)/2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)/0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){returnthis.options.containsKey(opt);if(options.containsKey(opt)){returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.equals(this.options)){returnthis.options.containsKey(opt);if(options.containsKey(opt)){returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(this.options.containsKey(opt)){returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(stringUtils.safeToInt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(TextUtils.safeToInt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(StringUtils.safeToInt(opt),options.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");if(opt!=null){returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");if(opt!=null){returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");}else{options.setOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");if(opt!=null){returnhasOption(String.valueOf(opt)+".mayhavesideeffectsandcan'tberemoved");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Option.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Options.getOptionValue(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Options.GETOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||this.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||args.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateList)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,publicList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap("null");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap("n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap("HaveSideEffects");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap("'n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(options.hasOption(String.valueOf(opt)));if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.equals("+")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals("+")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnoptions.get(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnnewHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnnewHashMap(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.names,this.options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.names,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.add(args,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.removeAll(args,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HashCodeMap.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(option,options,Names.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,Maps.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.identityHashCodeMap(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt)?null:opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt)||args.contains("opt");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.add(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.sort(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.sort(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(option);Validate.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);OptionMap.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(!args.contains(opt)){StringgetOptionValue=newString(String.valueOf(opt));if(getOptionValue()==null){returngetOptionValue(String.valueOf(opt)+":"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(opt!=null){StringgetOptionValue=newString(String.valueOf(opt));if(!args.contains("-")){returngetOptionValue(String.valueOf(opt)+":"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(options.containsKey(opt)){StringgetOptionValue(String.valueOf(opt)+":"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)hashcodeMap.peek();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)hashcodeMap.pop();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)this.hashcodeMap.peek();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)hashcodeMap.clone();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnnewArrayList(args.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?"null:values[0],opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values,opt.toArray(newString[values.length]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values,options.toArray(newString[values.length]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String]values.toArray(newString[values.length]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validate.isTrue(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validator.isTrue(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setAllOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setSelectedOptions(options,newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+1);if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+1);if(opt!=null){returnhaveOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhaveOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+2);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnpreviousHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnOLDHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();privateHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();privateHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt.getValue(),opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewHashCodeMap("HashCode",HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewHashCodeMap("HashCode=",HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getName())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.equals("+")){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=opt.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=this.opt.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=opt.trim(),opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.add(args,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,CommandLine.COMMAND)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.removeAll(args,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,optionsMap,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null||opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null||opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+".:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));if(opt!=null&&!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newInstance(0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newInstance(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newInstance(0,3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.constainsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt),|args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){Stringopt=newHashCodeMap();if(opt.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0],opt+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null):values[0],opt+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){Stringopt=newHashcodeMap();if(opt.equals(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashcodeMap();if(opt.equals(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();super.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashCodeMap=newHashMap();super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options)+1,this.args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options),this.options+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(1);if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt)).charAt(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt)).charAt(1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt)).toCharArray();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt)).toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notNull(opt),butOptions.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),butOptions.notEmpty(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(String.valueOf(opt))==if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(String.valueOf(opt))!=if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){Stringopt=newHashcodeMap();if(opt.equals(".")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.length==0){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.length==1){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.length==2){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notNull(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notNull(option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.isNotNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(hashcodeMap,opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,false,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1"/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.hashCodeMap=HashCodeUtils.hashCodeMapFor(">");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(this.options)){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(opt!=null){String[]args=getOptionValues(opt);if(args==null){return(args==null)?null:options[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(options==null){String[]args=getOptionValues(opt);if(args!=null){return(args==null)?null:options[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){return(options==null)?null:options[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(24);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null||!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==null&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt!=null&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)&&opt==null&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||opt!=null&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){args=options.get(opt);if(args.contains(args.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!option.equals(opt)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(option)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)||!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values==null)?null:values[1];if(opt.equals(values)){String[]args=getArguments(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values!=null)?null:values[1];if(opt.equals(values)){String[]args=getArguments(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(values==null)?null:values[0];if(opt.equals(values)){String[]args=getArguments(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values==null)?null:values[0];if(opt.equals(values)){String[]args=getArguments(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.map.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.shortCodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalCommandLine<?>commandLine=newCommandLine();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("-")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("/.")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.equals("")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!opt.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1,opt);if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1),opt);if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnHashCodeMap.enter();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnHashCodeMap.enter(HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnHashCodeMap.enter("/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(optinstanceofString){if(options.containsKey(String.valueOf(opt))){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(optinstanceofString){if(options.containsKey(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(optinstanceofString){if(options.containsKey(String.valueOf(opt))){returnhasOption
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(optinstanceofString){if(options.containsKey(String.valueOf(opt))){returnhasOption(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap=newHashMap(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap=newHashMap(opt.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap=newHashMapWithOptions(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hashcodeMap.containsKey(opt)){Stringopt=hashcodeMap.get(opt);if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(string)){Stringopt=hashcodeMap.get(opt);if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125privatestaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125privatestaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125privatefinalstaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125publicstaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option==null){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,alternatives.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,opt.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.get(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.get(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+"vs");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"vs");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"vs
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMapfinal=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privateMapfinal=newHashMap(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicMapfinal=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(values))returnnull;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnvalues[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(values))returnnull;Possibly
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){args=newLinkedList<String>(values.toLowerCase());}else{options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null){args=newArrayList<String>(values.toLowerCase());}else{options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){opt=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){opt=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedstaticMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=toLowerCase(opt),toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.keyOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[1];if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HashCodeMap.DEFAULT_LOAD_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,Maps.UNKNOWN);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return!options.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return!options.containsKey(opt)&&args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return!options.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!"Options.isEmpty()");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!"Options.isEmpty()",opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!"Options.isEmpty():");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!"Options.isEmpty()+"=>");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String,String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String,Opt.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String,ValueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String,opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String,opt)||options.hasOption(String,opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(String,opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap(),CommandLine.DEFAULT_LOAD_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOption(options,newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap(),CommandLine.DEFAULT_OPTIONS);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.contains(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){if(values==null||values.length==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(option,opt)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options)+1,args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){string[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option!=null){string[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(option==null){string[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedArrayListoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap().ArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedstaticfinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedstaticfinalMaphashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedstaticfinalListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69super.setOptions(false,"Unknowntype");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69super.setOptions(true,"Unknowntype");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69super.setOptions(false,'Unknowntype");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.keyOf(opt))){returnhasOption(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.keyOf(opt))){returnhasOption
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.keyOf(opt))){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.keyOf(opt))){returnhas
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap();super.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashCodeMap=newHashMap();super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.keySet()!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.keySet()==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(!options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode=",hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125ValidatingFunctions.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.construct();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValue(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValue(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValue(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();return(HashCodeMap==?>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashCodeMap=newHashMap();return(HashCodeMap==?>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.contains("--")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains("--")){thrownewIllegalArgumentException(".");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.separate(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.select(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.sorted(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapOptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.getLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.toLowerCase()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),hashcodeMap.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),hashcodeMap.hasLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),hashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,values.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(option,opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,args,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,OptionsMap.YEAR,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(option.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.keyword);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.booleanValue());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.booleanValue);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(hashcodeMap,options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashcodeMap,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(values==null)?null:values.length,1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(values==null)?null:values.length,0;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapOptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.set(options,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.set(options,newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.synthetic();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(options!=null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(options!=null){String[]values=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(opt!=null){String[]values=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.haveOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);if(options.containsKey(opt)){if(hashcodeMap.containsValue(opt)){returnoptions.containsKey(opt)&&hashcodeMap.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);if(opt.equals("")){args|=hashcodeMap.containsKey(opt)||hashcodeMap.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);if(options.containsKey(opt)){if(hashcodeMap.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);if(options.containsKey(opt)){if(hashcodeMap.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);if(options.containsKey(opt)){if(hashcodeMap.containsValue(opt)){hashcodeMap.put(opt,newHashCode());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!values.equals(opt)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values!=null||!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.isEmpty()){returngetOptionValue(opt);>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(symbolinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(symbol!=0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(symbol!=null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashCodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.valueOf(opt))){returnhasOption
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.valueOf(opt))){returnhasOption(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.valueOf(opt))){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){if(options.containsKey(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(opt.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasArg()){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(opt,options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMapoptions=NEWHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,options,defaultArgs);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,opt,defaultArgs);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,defaultArgs,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(0,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(0,3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnnewHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newHashMap();returnnewHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapOptions=newHashMap();returnnewHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1)"");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionArgsMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionArgumentsMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionArgsMap(),options;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionAsMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option)?options.getOptionValue(opt):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values)?options.getOptionValue(opt):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.size()>0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.size()>1){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringargs:options.keySet()){if(args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){return(args==null)?null:args[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){if(opt.length()==0){return(args==null)?null:args[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt)?null:getOptionArgs(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Args=getOptionArgs(opt)?null:getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(option)?null:getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notNull(opt,OptionNames.NO_OBJECT_TYPE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notNull(optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap&Map.Entry<K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry}K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap){Map.Entry<K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringopt:options.keySet()){if(args.size()>1){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),hashcodeMap);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+1);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt,defaultOptions);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(options)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(newLinkedHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){Map<String>values=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(char)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=opt.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=opt.getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!values.length()==0){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapentry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(optinstanceofString){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains(".*")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.volatile();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.split("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.size()==1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnnewHashMap(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.size()==1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(0):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.hashcodeMap,this.options,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.hashcodeMap,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.trim().toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.split(opt.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return!opt.isEmpty()){if(!args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap(),null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap(),private);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOption=newHashMap();privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":",hashcodeMap);returnoptions.containsKey(opt)||options.containsValue(opt,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":",hashcodeMap);returnoptions.containsKey(opt)||options.containsValue(this,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80<<
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt))returntrue;if(opt.equals(options.getKey())){returntrue;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey().equals(opt))returntrue;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey()))returntrue;if(opt.equals(options.getValue())){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(string)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notNull(opt),butOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),butOptions.notEmpty(opt,options.getKey());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicStreamhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap,hashCodeNames));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap,hashNames));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),hashcodeMap,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validates.notEmpty(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getKey())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getOptionName())){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt.equals(options.getName())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();returnnewLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(args==null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);privatefinalMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);privatefinalMapoption=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);privatefinalMap.Entry<K,V>options=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);privatefinalMapoption=newHashMap(32);options.putAll(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);privatefinalMap.Entry<K,V>options=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(args.valueOf(opt)&&opt==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null)??null:newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null)?false:newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateListargs=newArrayList(args,privateList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateList.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)==null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){haveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getValue()==null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.size()==1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.size()==1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(0):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.remove(options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterator();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.remove(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.<K,V>(options.values(),options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhaveOption(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.getKey().equals(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?options:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasOption(opt)||this.options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasOption(opt)||this.options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt.equals("")){args|=options.containsKey(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("")){args|=options.getKey(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnif(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt))&&opt==0){returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.length==0){if(!args.contains("--")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains("--")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.startsWith("-")){if(!args.contains("--")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap>>String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap}String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalHashCodeMap=hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);if(args.size()>1){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnoptions.getOptionValue(String.valueOf(opt),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(char)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(String)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(eopt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+")||"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(opt.length()==0){returngetOptionValue(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.hasKey(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt!=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)options.toArray(newString[values.size()]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[values.size()+1]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(opt!=null){args=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43finalprotectedArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43finalprotectedListargs=newTreeSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt))){if(hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!opt.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!options.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)"mayhavesideeffectsandcan'tberemoved");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)"mayhavesideeffectsandcan'tberemoved");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoption=newHashMap();returnoptions.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getOption(opt)){if(opt.equals(options.getKey())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt.equals(options.getString())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(String.valueOf(options.keyword,opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(opt)?null:args,opt.length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs=getOptionArgs(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs=getOptionArgs(opt)?null:opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs=getOptionArgs(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.get(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.get(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.get(opt,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalArrayListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalLinkedListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.keyword,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.keyword),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.trim());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt)),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");protectedfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");publicMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");protectedfinalMapoption=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");finalprotectedMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.hasOption(opt)!=null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.getKey(opt)!=null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32,64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalstaticMap.hashCodeMap=HashCodeUtils.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");if(opt!=null){returngetOptionValue(String.valueOf(opt)+".vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.isEmpty()){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125for(Stringopt:getOptions()){if(opt.equals(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125for(Stringopt:getOptions()){if(opt.equals(getOptions())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125for(Stringopt:getOptions()){if(opt.equals(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=HashcodeMap.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Opt.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(opt!=null){args=options.get(opt);if(args.contains("-->")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-->")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-->")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notNull(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notNull(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publichashMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,CommandLine.COMMAND,privateList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,CommandLine.COMMAND,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),this.opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+":");if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(opt)+"
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+":");if(opt!=null){args=options.get(opt);if(args.size()>0){returnhasOption(String.valueOf(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.keyOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();super.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(args==null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(this.options));returngetOptionValue(String.valueOf(opt)+this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt),returngetOptionValue(String.valueOf(opt)+this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasArgs()){returnhasOption(String.valueOf(option)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.hashcodeMap,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(this.options)){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(this.options)){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(String.valueOf(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(String.valueOf(opt))}if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.containsKey(opt)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt==null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(string)){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(opt)){if(!hashcodeMap.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.hasKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.hasKey(option)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt)||hasOption(StringUtil.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)&&hasOption(String.valueOf(string));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetDefaultOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0,1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(key)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setHashCodeMap(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setHashcodeMap(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setHashCode(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(String.valueOf(opt),if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoptions.size()==0?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoptions.size()!=0?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.setCode(newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.setCode(newHashCode());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(NULL_COMMAND_LINE_SIZE));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(NULL_OBJECT_TYPE));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returngetOptionValue(String.valueOf(opt)+"-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returngetOptionValue(String.valueOf(opt)+".-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]values=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"||"isEmptyValue());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnoptions.size()==1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnoptions.size()==1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnoptions.size()==1?options.get(0):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options)){Map<String>values=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.equals(opt.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.length!=(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.length==(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(args==null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){if(opt.length()>0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(opt!=null){returnhasOption(String.valueOf(opt)+".opt");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(!hasArgs()){returnhasOption(String.valueOf(opt)+".opt");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(!hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String,opt.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(value,opt.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(True);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];Arrays.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap().create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt<null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt.equals(values)){if(!args.contains(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatestaticfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatefinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatefinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatefinalMapoption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMapFor(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options),this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options)+1,hashcodeMap;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),"");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),"",true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"vs"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.hasOption(options.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(opt)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.startsWith("-")){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(option);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(option));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(char)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(String)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(eopt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicstaticfinalHashCodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(options.hasOption(opt)){return(String)getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(options.hasOption(opt)){return(String)this.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(options.hasOption(opt)){Stringopt=getOptionValue(opt);if(opt!=null){returnopt;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnif(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43return(options.hasOption(opt))&returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43return(opt==null)&&options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt.length()!=1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.isTrue(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt,hashcodeMap);Validate.isTrue(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt,Validate.isTrue(opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),opt.charAt(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),charAt(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+1);if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.containsKey(key)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,args,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();privatenewHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privatenewHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains("-)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(1,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnnewHashSet>>Map>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnnewHashSet}Map>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){if(!hasOption(opt)){returnfalse;>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){returngetOptionValue(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(String)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(char)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(charopt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashCodeMap();if(opt.equals("")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+".opt");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");returngetOptionValue(String.valueOf(opt)+".opt");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");if(opt!=null){returngetOptionValue(String.valueOf(opt)+".opt");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values))returnnull;if(!args.contains(values))returnnull;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.length==0){if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=hashcodeMap.get(opt);if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){Stringopt=hashcodeMap.get(opt);if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){Stringopt=hashcodeMap.get(opt);if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(optinstanceofString){if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(optinstanceofString){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt)+"-";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.options.default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalstaticMap.hashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnLists.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,optionNames.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,false,opt.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,options.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.containsKey(hashcodeMap)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],11;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,privateargs);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,privatevars);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.keyOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null){opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();hashcodeMap.putAll(HashCodeMap.hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashcodeMap,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.values()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.keywords()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/7);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,String.valueOf(opt)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMap=newHashMapWithOptions(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.size()==1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.size()!=1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.size()==0?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,options,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,args,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(hasOption(String.valueOf(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(hasOption(String.valueOf(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.get("->");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValue(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValue(opt,HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicfinalMapoption=newHashMap();publicfinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicfinalMapoption=newHashMap();publicfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();return(List)args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnLists.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnargs.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateArrayList.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.entrySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.startsWith("-")){if(!args.contains("+")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.startsWith("+")){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMap.put(opt,newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){return(values==null)?null:values[0];if(opt.isEmpty()){return(values==null)?null:values[1];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){return(values==null)?null:values[1];if(opt.isEmpty()){return(values==null)?null:values[1];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isRequired()){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(opt.equals(this.options)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(opt.equals(this.options.getOptions())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.options.hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(opt==null)?null:opt.values().equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(opt==null)?null:opt.values[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt==0){if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt==0){if(options.containsKey(String.keyOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhashcodeMap.configureHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhashcodeMap.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+":"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returngetOptionValue(String.valueOf(opt)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(opt!=null){returngetOptionValue(String.valueOf(opt)+":"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1-"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.hashcodeMap=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(options)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returngetOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasArgs()){returnhasOption(String.valueOf(opt)+",vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+",vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatenewHashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.hasOption(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125newTreeList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.original();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(opt)+",":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(opt)+":",opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),opt+args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap)+args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+hashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+hashcodeMap,args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.sort(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(options.length()==0),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();privatefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt==null){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhaveOption(String.valueOf(opt));if(opt==null){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));if(options.containsValue(String.valueOf(opt))){returnhasOption(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnthis.oldHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnullHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(Arrays.asList(args+1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(Arrays.asList(args,private));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(Defined);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashcodeMap,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80elseif(options.hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(String.valueOf(opt))){if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(String.valueOf(opt))){if(opt==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(String.class)){if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(String.class)){if(opt==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.toString());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null)?Arrays.asList(newHashMap()):newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions.size()==1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions.size()==0?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){Map<String>values=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(arg)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap<=K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap().report(JSError.make(NULL_OBJECT_ERROR));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap().report(JSError.make(Util.stripLeadingHyphens.BASED_EXPECTED_ERROR));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap().report(JSError.make(Util.stripLeadingHyphens.BASED_ARRAY));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt),options.chompTo(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt.getKey(),option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnthis.oldHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnprivateHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)||hashcodeMap.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),args.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=hashcodeMap.com.getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);if(opt!=null){returngetOptionValue(String.valueOf(opt)+2);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(opt!=null){returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(opt)){for(Map.Entry<String,V>opt:options.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode="+this.hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.getKey();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.getDescription();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.getArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options.getKey());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnthis;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnnull;Arrays.sort(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnnull;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoption=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsValue(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasOption(opt);if(this.options.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"-"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();return(HashCodeMap==K,V>)hashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();return(HashCodeMap==K,V>)hashcodeMap.peek();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("*")){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt.valueOf(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options.valueOf(opt)||opt==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options.getOption(opt)||opt==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.sort(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.sort(opt,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(opt)){Map<String>values=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));options.hasOption(String.valueOf(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];if(opt.equals(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0];if(opt.equals(values)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt))){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options.containsKey(opt)){if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.hasOption(opt)){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.hasArg()){if(opt.equals(options.getKey())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+"is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is...");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))}returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(0):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(1):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.size()!=1?options.get(0):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMap=newHashMap(64,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+"vs");if(options.hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+".vs");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt!=null&&hasOption(String.valueOf(string));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedstaticMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(option==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(Arrays.asList(this));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.report(JSError.make(NULL_OBJECT_TYPE));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.report(JSError.make(NULL_COMMENT_LINE_SECTION_ERROR));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.report(JSError.make(NULL_COMMAND_LINE_SECTION_OBJECT_TYPE));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap().withHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap().iterator().hasNext();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedLinkedListhashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhasOption(String.valueOf(opt));if(options.containsKey(String.valueOf(opt)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(opt!=null){if(opt.length==0){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){returnoptions[0].getOption();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){returnoptions[0].getOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,keys);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){if(!hasOption(char)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOption=newHashMap();PrivatestaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMapOption=newHashMap();privatestaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewArrayList(this.args,newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalstaticListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.getOptionValue(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values.length,opt+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1],opt+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,hashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(hashcodeMap.class,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(1,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(1,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(options.hasOption(String.valueOf(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!options.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){return(values==null)?null:values[1];if(opt.isEmpty()){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){return(values==null)?null:values[1];if(opt.isEmpty()){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap.class,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.getOption(options)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.containsKey(args)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.args,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt)+":");if(options.containsKey(opt)){returnhasOption(String.valueOf(opt)+":"
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("vs")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("vs")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap&Map.Entry<K,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry}K,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+",hashcodeMap:");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMaphashcodeMap=newHashMap();returnHashCodeMap.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(values==null)?null:values[0];if(opt.equals(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(values==null)?null:values[0];if(opt.equals(values)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(args.containsKey(opt)){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedstaticfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newTreeSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCodefor"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode'"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.optionNames.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),toRawClass();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()==null)??null:newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()==null)?null:newHashCodeMap().length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notNull(options.getOptionName(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notNull(opt,OptionalNames.NO_OBJECT_TYPE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);if(args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returnget
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);if(args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOption
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValue(String.
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(opt,String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(options.charAt(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt,options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(options.keySet()),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashCodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){Stringopt=newHashCodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)options.toArray(newString[values.length]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)opt.toArray(newString[values.length]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[values.length],opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)||hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.add(newOption(String.valueOf(opt),Option.None.class,Option.SYNTHETIC_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPT
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.add(newOption(String.valueOf(opt),Option.None.class,Option.SYNTHETIC_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPT
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.add(newOption(String.valueOf(opt),Option.None.class,Option.SYNTHETIC_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,options.getKey(),this.opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,options.getKey(),option);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt.length()>=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),"",opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.keyOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(option)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals(values)){String[]args=getArguments(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args!=null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt.equals(values)){String[]args=getOptionValues(opt);if(args!=null){returnvalues;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.getAlternatives()),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(this.options)){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args!=null){thrownewIllegalArgumentException("
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.length()==0){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args!=null){thrownewIllegalArgumentException("
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(1,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(1,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.text(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Collections.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsFromLocalName(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsFromLocalName(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhashcodeMap.containsKey(opt)){if(!args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,hashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){if(opt!=null){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt)){if(opt!=null){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();privatefinalLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();privatestaticList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+":");if(opt!=null){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+":");if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("hashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt!=null){if(!hasOption(char)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap.hashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(options,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticHashMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publichashMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.length!=0){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(newCommandLine()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArraysList(newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1".charValue());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.names,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Sort(values),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Sort(values.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+this.options;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)returnnull:values[0];if(opt!=null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null){returnnull:values[0];if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options.getKey();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options.getKey());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options.getDeclaringClass();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notEmpty(opt),defaultOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notEmpty(opt),butOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notEmpty(opt),butOptions.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(option));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.containsKey(opt)||hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+1)){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[0];Arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt)+":",hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(option)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[0];if(opt!=null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null){returnnull:values[0];if(opt==null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=options.get(opt);if(args.contains("-)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)||opt!=null&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+1)){args=newHashCodeMap<String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()==null)?Arrays.asList(newHashCodeMap()):newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.get(options.size()-1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.get(options.size()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.contains(resolveOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(String.valueOf(opt));options.hasOption(String.class)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.hasOption(String.valueOf(opt));if(options.hasOption(String.class)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]options=getOptionValues(opt)?options.getOptionValue(opt):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?types.getOptionValue(opt):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){returnthis.options.containsKey(opt);if(options.containsKey(opt)){Stringopt=this.options.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){Stringopt=this.options.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.sort(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+"vs");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){returnoptions[0].getOption();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){returnoptions[0].getOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){returnoptions.getOption();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(opt!=null){if(options==null){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),opt,"opt.length");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(String.isEmpty(opt)){if(opt==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);privatenewListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,true,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains(."-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt)){args=options.get(opt);if(args.contains(."-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(this.options)){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.hasOption(opt)){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){thrownewIllegalArgumentException("
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null){returnnull:values[1];if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[0],if(opt!=null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.charAt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.getPropertyHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.getPropertyName(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkAnswer(!Options.isEmpty()),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkAnswer(!Options.isEmpty(),"Options:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();return(List)args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returnLists.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returntoArray(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedlistargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(HashCodeMap==K,V>)hashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.hasArg()){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.length==0){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),"Optionsareempty",opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.hasOption(options)||options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+":");returnoptions.hasOption(opt)||options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!options.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||opt.isEmpty()){returngetOptionValue(values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notEmpty(opt,OptionalNames.NO_OBJECT_TYPE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notEmpty(opt,OptionalNames.NO_OBJECT_LIST);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notEmpty(opt,OptionalNames.NOT_EMPTY_LIST);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(ArrayList)args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(string)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+"vs");if(options.hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalstaticMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notEmpty(opt,OptionNames.NO_OBJECT_TYPE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notEmpty(opt,OptionNames.NO_OBJECT_LIST);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notEmpty(opt,OptionNames.NO_OBJECT_NAME);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(this.args.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values).opt){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);HashcodeMap.put(opt,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);hashcodeMap.remove(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);hashcodeMap.put(opt,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);opt=hashcodeMap.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);if(opt.equals(options.getKey())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=option.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":",hashcodeMap);returnoptions.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnedoptions.containsKey(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("||")){args=newHashCodeMap>>String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.addAll(args,privateArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.addAll(privateListargs,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(opt==null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap().create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoption=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(opt!=null){returnhasOption(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0,opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.isTrue(opt),defaultOptions.isTrue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.isTrue(opt,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.isTrue(opt,options.isTrue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){opt=this.options.get(opt);if(!args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(")){opt=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("")){opt=this.options.get(opt);if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(!hasOption(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(!hasOption(opt)){haveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalTreeSetargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalTreeListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalstaticHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){Map}String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt)?null:getOptionArgs(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt)?null:getOptionArgs(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt)?null:getOptionArgs(opt,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(opt);if(values==null){return[values==null)?null:values[0].;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(opt.length==0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.length==0){if(opt.length>0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(opt!=null){returngetOptionValue(String.valueOf(options)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(opt!=null){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(Null.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+2);if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(false,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(True);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMap().removeAll(getEmptyMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMap().putAll(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.hasOption(opt)||option.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt,hashcodeMap.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(hashcodeMap.class,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(opt,hashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!hasArgs()){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!hasArgs()){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(opt.equals(options.getString())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.equals(options.getOption(opt)){if(opt.equals(options.getKey())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.trim().getValues();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Stringoption:getOptions()){if(options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.hashCodeMap=HashCodeUtils.hashCodeMapFor(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(options.containsKey(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(!options.containsKey(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(values==null)?null:values.length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.class)){if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))){if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.class)){if(opt==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt),hashcodeMap,options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt),hashcodeMap,options.default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionMap();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashCodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(StringUtils.safeToInt(opt),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(StringUtils.safeToInt(opt),StringUtils.safeToInt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(StringUtils.safeToInt(opt),this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalstaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?opt:newString[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]options=getOptionValues(opt)?opt:newString[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));returngetOptionValue(String.valueOf(opt),String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt),String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap("Illegalstartoftype"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap("Illegalstartoftype"+getClass().getName()+")");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,options+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,values+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetValue(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetValue(String.valueOf(opt),this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,hashcodeMap,names,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,options,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,hashcodeMap,options,hashCodeNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(string)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137==
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)/3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options.get(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".options");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,Names.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashCodeMap.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){args=options.get(opt);if(args.contains("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(hashcodeMap,opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!opt.hasOption(hashcodeMap,options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(args==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options.valueOf(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options.hasOption(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options.getOption(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(char)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)hashcodeMap.start();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)hashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();return(HashCodeMap==K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashCodeMap=newHashMap();return(HashCodeMap==K,V>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.commandLine();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.commentLine();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt!=null){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhaveOption(String.valueOf(opt));if(opt!=null){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(opt)){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt.startsWith("-")){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){if(opt==null){Stringopt=newHashCodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]defaultArgs=getOptionValues(opt,hashcodeMap,defaultArgs);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+7);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+17);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=hashcodeMap.getOptionArguments();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=haveOptionArguments();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicHashcodeMaphashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.hasArg()){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(options==null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+7);if(opt!=null){returnhasOption(String.valueOf(opt)+7);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+2);if(opt!=null){returnhasOption(String.valueOf(opt)+2);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+18);if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(options.hasKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(options.hasKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(String.valueOf(opt)){if(options.hasKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.sort(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.sort(options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.sort(options.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.containsKey(opt);if(this.options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=0){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==0){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();hashcodeMap.put("<"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashcodeMap.put("<"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();hashcodeMap.put("</"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();hashcodeMap.put("}"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap>>String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap}String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0,hashcodeMap.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0,hashcodeMap,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)&&opt!=null&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options.hasOption(opt)){if(opt==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(args==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))}if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==null||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatefinalMapoptions=newHashMap();privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedfinalMapoption=newHashMap();privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedfinalMapoptions=newHashMap();privatefinalMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(this.options)){returnthis.options.containsKey(opt);if(this.args.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){return
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.containsKey(opt)){if(this.args.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(this.options)){returnthis.options.containsKey(opt);if(this.args.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=newHashCodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){opt=getOptionValue(opt);if(opt==null){String[]options=newHashcodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.execute();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,private+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){returnhasOption(String.valueOf(opt)+".vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap>>String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap}String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)||opt==null&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(opt.valueOf(StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(opt,StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(options.containsKey(opt)){args=options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){if(options.containsKey(opt)){args=options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(opt.hasArg()){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(opt.empty()){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".hasconflictingarguments.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Map.Entry<String,HashcodeMap.Entry<K,V>option:hashcodeMap.entrySet()){if(!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Map.Entry<String,HashcodeMap.Entry<K,V>option:hashcodeMap.entrySet()){if(hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Map.Entry<String,HashcodeMap.Entry<K,V>opt:hashcodeMap.entrySet()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)||!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(vehicleMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedstaticMaphashcodeMap=newHashMap();returnSystem.identityHashCode(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!opt.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!"Options.isEmpty(),");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateHashMap().reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),"",opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),"");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Listoptions.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,HashCodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))==returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80If(options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]values=getOptionValues(option);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137protectedfinalMapoptions=newHashMap();privatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137publicMapoptions=newHashMap();privatestaticfinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapOption=newHashMap();privatefinalMapOption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(opt,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null||!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(optim);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMapFor(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.isNotEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.isTrue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Opt=getOptionValue(opt);Validate.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewHashCodeMap("HashCodeMap",HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewHashCodeMap("HashCode,",HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.toLowerCase()){if(args.contains("-opt")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.toLowerCase()){if(args.contains("--")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137super.hashcodeMap=(Hash)this.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137super.hashcodeMap=(Hash)extra.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.hasOption(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt)||opt.equals(hashcodeMap.get(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],10);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values.length,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);hasOption(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+3);hasOption(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);hasOption(String.valueOf(opt)+7);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.startsWith("-")){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashMap()==null)?null:newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashMap()==null)?newHashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.start();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(opt!=null){returnhasOption(String.valueOf(opt)+":"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(!hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt,null,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");returngetOptionValue(String.valueOf(opt)+")");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+")");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");if(opt!=null){returngetOptionValue(String.valueOf(opt)+")");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");for(Stringoption:getOptions()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+")");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashcodeMap=newHashMap().withHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(opt==null){String[]values=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null){returnnull:values[1];if(opt==null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(values==null)?null:values[0],if(opt==null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(key)){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsValue(opt)){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notNull(opt,OptionalUtilities.createOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.mayHaveSideEffects(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notNull(opt,OptionalUtilities.MERGE_OPTIONAL_VALUE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(!args.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsValue(opt)){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,getOptionNames(),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,getOptionNames(),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,getOptionNames(),Optus.NONE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap.put(opt,newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(String.valueOf(opt),optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoption=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+":");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.containsKey(String.valueOf(opt))&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.containsKey(String.valueOf(opt)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newHashMap<String>();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionArgs();for(Map.Entry<String,V>option:opt.getKey()){values[0]=opt;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){Map<String>options=getOptionArgs();if(args!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],10];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],11];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+7);if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt);if(options.containsKey(opt)){returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){returnthis.options.containsKey(opt);if(options.containsKey(opt)){returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(option)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(string)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125OptionNames.isTrue(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setSelectedOptions(options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setSelectedVariables(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setSelected(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(opt==null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:options[0],values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1],values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt.equals(options.getOption(opt))){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt))){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt)?opt:getOptionKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt),hashcodeMap.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,isEnabled(Feature.QUOTE_NON_NULL_VALUE));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(64,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Options.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Validate.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+",is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"is",opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalLinkedListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt,this.options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(newString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getOption(opt)!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getOption(opt)==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(opt==null)?null:values.length.equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap.EntryPrezentK,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.keyOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=null){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=0){if(options.containsKey(String.keyOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt!=0){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.class)){if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.size()==1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.size()==1?options.getLength():0;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125for(Map<String>args:opt.getKey()){if(opt.equals(values)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateListargs=newLinkedList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalstaticMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.hasOption(opt);hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt.getOptions();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){if(options.hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(options.hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringoption:getOptions()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringoption:getOptions()){if(opt.length()==0){returnopt;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringoption:getOptions()){if(options.hasOption(opt)){returnopt;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap)+2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)/2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options)+2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),opt+2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap(",");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){if(opt.length()>0){return(args==null)?null:args[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){if(opt.length()>0){return(args==null)?null:args[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,true,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(hasOption(String.valueOf(opt)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsValue(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoptions.hashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(HashCodeMap==K,V>)hashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(HashCodeMap==K,V>)hashcodeMap.peek();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnhashcodeMap.hashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringoption:getOptions()){if(opt.startsWith("-")){returnopt;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.length()==0){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey()))returntrue;if(opt.equals(options.getValue()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap.get(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51<<
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51{
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.hasArg()){returngetOptionValue(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalListhashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalArrayListhashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();privatestaticHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(vars,CommandLine.COMMAND_LINE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(commandLine.COMMAND_LINE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/"+this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51hashcodeMap=HashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51hashcodeMap.putAll(HashCodeMap.hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticHashCodeMap.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,CommandLine.DEFAULT_LOAD_FACTOR,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,CommandLine.DEFAULT_LOAD_FACTOR,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,CommandLine.DEFAULT_LOAD_FACTOR,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"vs");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalHashMapoption=newHashMap();privatestaticfinalHashMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalHashMapoption=newHashMap();privatestaticfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnHashCodeMap.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();return(HashCodeMap==K,V>)hashcodeMap.peek();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();return(HashCodeMap==K,V>)hashcodeMap.reset();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnHashcodeMap.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"/");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");if(opt!=null){returngetOptionValue(String.valueOf(opt)+"/");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");for(Stringoption:getOptions()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"/");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,private);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),this,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();if(args.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();if(opt==null){if(args.contains("-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.length==0){opt=getOptionValue(opt);args=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,String.valueOf(opt)||args==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options,String.valueOf(opt)||args==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt)||args==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.getOptions().equals(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnopt.getOptionValue(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnoptions.toArray(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69publicstaticfinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(1,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(1,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){if(opt.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){if(opt.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.equals(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];Arrays.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.equals(values)){String[]args=getArguments(opt);if(args!=null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.equals(values)){if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.equals(values)){if(values==null){returnnewString[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.hashcodeMap,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap)+3;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt)?null:getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"of");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",true,vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){returnhasOption(String.valueOf(options)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnnewHashSet>>String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoption=newHashMap();returnnewHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhaveOption(String.valueOf(opt));if(opt==0){if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeSet(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.sort(opt.getOptions());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions=options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.remove(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.put(opt,newOptionName(String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.getOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.getOption(opt)).equals(options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getString())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt.equals(options.getString())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,this.defaultOptions);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=HashCodeMap.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69publicstaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(opt,values,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(opt,values,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterator().start();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.iterator().attempted();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectednewHashCodeMap=newHashMap();super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)/")");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(option)+")");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)/3)+"");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewArrays.asList(Arrays.asList(this));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashCodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null||opt.equals("-")){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"-"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringoption:getOptions()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringoption:getOptions()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(newArrays());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(args+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnarrays.asList(newArrays());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(64,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.size()==1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.size()==1?options.getAll():null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(0):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnHashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return!options.containsKey(opt)||hashcodeMap.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return!options.containsKey(opt)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return!options.containsKey(opt)||options.hasValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,null,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,null,optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap>>String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap}String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havetostartwith:"+getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havetostartwith:"+this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havetostartwith:"+type+"");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));meanwhile
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));slated
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));bodied
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnthis.oldHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);returnoptions.containsKey(opt)||options.hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);returnoptions.containsKey(opt)||options.split(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+"isnotsupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"issupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhaveOption(String.valueOf(option));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.sort(opt,OptionNames.SOURCENAME_OPT);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.sort(opt,OptionNames.NO_OBJECT_TYPE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.sort(opt,OptionNames.OTHER);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs"+this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"vs"+type);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt==null||opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashcodeMap,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(")){args=newHashCodeMap>>String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.args,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(),(opt==null)?null:opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(),(opt==null?null:opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.toLowerCase()){if(!args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.toLowerCase()){if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.toUpperCase()){if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":",hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringopt:options.keySet()){if(args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){if(opt!=null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listlists.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions=opt.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binaryList,false,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binaryKeySetting,false,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binaryNames,false,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(newHashMap<String,JavaType>());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.get(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();protectedfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.get(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.names.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.contains(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.containsKey(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args==null||args.size()==1){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMaphashcodeMap=newHashMap();returnHashcodeMap.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==0)&&hasOption(String.valueOf(options).
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)&&opt==0)&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||opt==0)&&hasOption(String.valueOf(options).);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashcodeMap=newHashMap();hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashCodeMap=newHashMap();hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.length==0){if(opt.length==0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&hasOption(String.valueOf(Char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(key)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Arrays=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.hasOption(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.isEmpty()){if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+"-"+Integer.toHexString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments.");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments.");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){Stringopt=String.valueOf(opt);if(opt.length()==0){returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments.");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?null:options;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==String.valueOf(opt)){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){hasOption(String.valueOf(opt));if(opt>=0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!options.hasOption(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!options.containsKey(key)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);returnoptions.containsKey(opt)!=returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);returnoptions.containsKey(opt)==returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt.equals(")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(StringUtils.stripLeadingHyphens(opt),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(StringUtils.stripLeadingHyphens(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(StringUtils.stripLeadingHyphens(opt),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(key)){for(Map.Entry<String,V>opt:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.startsWith("-")){for(Map.Entry<String,V>opt:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+":");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt)+":");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(1,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashMap(1,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();hashcodeMap=HashCodeUtils.hashCodeMap(getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();hashcodeMap=HashCodeUtil.hashCodeMap(getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();hashcodeMap=HashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();hashcodeMap=HashCodeUtils.hashCodeMap(getText());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!opt.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.isEmpty()){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();privateHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.hasArg("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticHashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(this.options.getKey())){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.containsKey(opt)){if(opt.equals(this.options.getKey())){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasOption(opt);if(opt.equals(this.options.getKey())){if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.construct("hashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,options.jsOutputFile);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,options.split("-"));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,options.jsOutputPath);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("")){args|=options.getKey(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt.equals("")){args|=options.containsKey(opt);if(args.containsValue(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectednewHashCodeMap=newHashMap();returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.byteAt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String)){if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String)){if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.length.equals(opt.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(values.length.equals(opt.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(values.length!=(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectednewMaphashcodeMap=newHashMap();super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedstaticArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalTreeListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateArrayListhashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateHashCodeMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.get(options.size()-1));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt!=0){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt<0){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt!=0){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt<0){if(options.containsKey(String.class)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(opt,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(opt),"isRequired");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Validate.isOptional(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Validate.isTrue(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137[Delete]if(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoption=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(hasOption(String.valueOf(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(hasOption(String.valueOf(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashCodeMap.class)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class),+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(hashcodeMap,opt.class)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.length==0){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.}K,V>(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69<<
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Options.notEmpty(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.notEmpty(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null||options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){if(options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionArgsMap().split(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionArgsMap().trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,args,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,hashcodeMap),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+1)){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.hasOption(opt)){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsValue(opt)||this.options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=0){hasOption(String.valueOf(opt));if(opt==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnargs.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(value);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(option)||options.containsValue(value);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(key)){if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt!=null){if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||opt.hasOption(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasKey(opt)||this.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.containsKey(this.options)||this.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.containsKey(opt)||alternatives.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!Options.isEmpty()){returnhaveOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+",vs");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnthis.options.containsKey(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));if(opt!=null){returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+1);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),hashcodeMap);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,privatenewLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(options.keyword));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();privatefinalMap.hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,optionNames.get(opt.getKey(),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashCode.construct();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,selector.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,this.options.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,getOptionNames.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();PrivatestaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicListoptions=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicListoptions=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashcodeMap=newHashMap();hashcodeMap=newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashCodeMap=newHashMap();hashcodeMap=newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+getKey());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+"mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)+"mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,all-values,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt)){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,hashcodeMap.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatenewMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashCode.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+String.valueOf(char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),HashCodeMap.this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){Stringopt=newHashCodeMap();if(opt.equals("")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.dataSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.valueSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnhashcodeMap.valueSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.hashcodeMap=newHashCodeMap(64,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.remove(options.toHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.getKey()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.getFirstChild()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.getFirstChild()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+",isBlock:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt,hashcodeMap,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returngetOptionValue(String.valueOf(option));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HashCodeMap.this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap("[]");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap("[null]");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(!Options.isEmpty()){returnhaveOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashcodeMap=newHashMap();privatestaticMap.hashCodeMap=HashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(HashCodeMap==?>)hashcodeMap.peek();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".options");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".char");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option)+".opt");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap(0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(options)+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),opt.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(option)+"/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();returntoArray(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(hashcodeMap.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(HashcodeMap.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,options)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options),hashcodeMap,hashcodeMap+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(options.getOptionValue(opt))&&options.containsKey(key)){StringgetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(options.getOptionValue(opt))&&options.containsKey(key))==StringgetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(opt==null)?null:options.getOptionValue(opt))+StringgetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalTreeSetoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.hasArg()){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(option)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returnhasOption(String.valueOf(opt)+":"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){returnhasOption(String.valueOf(opt)+":"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(opt))returnoptions.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=HashCodeMap.asList(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(getOptionValue(opt),options.stripLeadingHyphens());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(getOptionValue(opt),options.stripLeadingAndTrailingQuotes());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(getOptionValue(opt),options.split("-"));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",option:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||hashcodeMap.hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125hasOption(Character.toUpperCase(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125hasOption(String.keyOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),||opt!=String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),|opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.containsKey(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt),){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt),){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]args=getOptionValues(opt,hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]args=getOptionValues(opt,hashcodeMap,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(commandLine.COMMAND,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(vars,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListargs=newArrayList();returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalListargs=newArrayList();returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(options.keySet(opt)||options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatestaticfinalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newArrayList<String>(values.toLowerCase());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newArrayList>>String>(values.toLowerCase());}else{options.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+",vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringoption:getOptions()){if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+",vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.containsKey(hashcodeMap)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||isHashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+",-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();returnLists.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();returnLists.newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();returnLists.newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt))<thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notNull(opt),defaultOptions.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notNull(opt),defaultOptions.notNull(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),defaultOptions.notEmpty(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){if(values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(args!=null){String[]values=getOptionArgs(args);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]opt=getOptionValue(opt);if(opt!=null){String[]args=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Map.Entry<String,HashcodeMap.Entry<K,V>option:options.keySet()){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt.equals(")){args=this.options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt.equals("")){args=this.options.get(opt);if(args.contains(args)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt.hasOption(options)||opt.hasOption(options)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?null:values.length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?null:values,opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?null:values,opt.length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,HashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){Stringopt=newHashcodeMap();if(opt.equals("")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(this.options,this.hashcodeMap,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.ISSEXPECTED,opt.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(args.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(options.getKey()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateListargs=newLinkedList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43newArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(privateListargs);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options,args+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(option)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(opt!=null){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");If(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=0){hasOption(String.valueOf(opt));}else{options.put(opt.getKey(),opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String,opt)){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getValue()==null){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()&&options!=null)?newHashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()&&options.size()==0)?options:newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt)&&options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){opt=options.get(opt);if(options.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){opt=options.get(opt);if(hasArgs.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){opt=options.get(opt);if(hasOption(String.valueOf(opt)){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125protectedfinalMapoptions=newHashMap();returnoptions.valueSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125protectedMapoptions=newHashMap();returnoptions.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnnewArrayList(args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnnewArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnargs.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),char.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(false,true;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(!hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){continue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap()*(hashcodeMap==null)?null:newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap()*(hashcodeMap==null?null:hashcodeMap()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1],opt+"]";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(opt!=null){returnhasOption(String.valueOf(opt)+"isnotsupported");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(options.hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"isnotsupported");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(opt==null){returnhasOption(String.valueOf(opt)+"isnotsupported");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(!hasArgs()){returnhasOption(String.valueOf(opt)+"isnotsupported");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+7);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalHashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalstaticHashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalstaticHashCodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasKey(String.valueOf(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasKey(String.valueOf(opt))==if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125publicfinalstaticMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125publicstaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return!options.containsKey(String.valueOf(opt))&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,newArrayList()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt,options.getKey()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options,this.options.getKey()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(opt)||options.containsValue(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+":");returnoptions.containsKey(options.keySet())||options.containsValue(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashcodeMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String)){if(!hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.getOptionKey(opt)){if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,hashcodeMap,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,hashcodeMap,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,hashcodeMap.hasOption(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,true,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null||opt.length()==0){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null||opt.charAt(0)=='+'){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80args=getOptionArgs(opt,HashCode.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhasOption(String.valueOf(opt)+1);if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashCodeMap=newHashMap();returnhashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalListargs=newArrayList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options.hasArg()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options.hasArg()){returngetOptionValue(String.valueOf(opt),String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt!=null){returngetOptionValue(String.valueOf(opt),String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null||opt.length()==0){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt.length,opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(this.options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnthis.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(this.options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnthis.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(options.hasOption(opt)){return(String)this.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(options.hasOption(opt)){Stringopt=getOptionValue(opt);if(opt!=null){returnthis.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(options.hasOption(opt)){Stringopt=getOptionValue();if(opt!=null){returnthis.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnarrays.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnargs.toArray(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(opt)){if(opt==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(String)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(string)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51safefinalMaphashcodeMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?"null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=getOptionValue(opt);OptionMap.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=getOptionValue(opt);Arrays.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapOptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoption=newHashMap();privatefinalHashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateTreeListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newTreeSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notEmpty(opt),defaultOptions.mayHaveSideEffects(opt)?opt:OptionalUtilities.getDefaultOptions(opt):OptionalUtilities.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notEmpty(opt),defaultOptions.mayHaveSideEffects(opt)?null:OptionalUtilities.mayHaveSideEffects(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notEmpty(opt),defaultOptions.mayHaveSideEffects(opt)?null:OptionalUtilities.mayHaveSideEffects(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt)){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.keyOf(opt))){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getOption(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getOption(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){if(opt==null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(string)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnisOption(options,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnisOption(opt,hashcodeMap.valueOf(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnisOption(opt,hashcodeMap.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setLength(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setIgnoreCaja(false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setType(type);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCodefor"+getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatestaticfinalMapoption=newHashMap();privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(option==null):options[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.class.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.oldName.newInstance();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(options.length,opt.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.class.newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],3;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt),){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.map.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedstaticfinalMaphashcodeMap=newHashMap().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedstaticfinalMaphashcodeMap=newHashMap(512);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();returnargs.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatefinalListargs=newArrayList();returnargs.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList();returnargs.toArray(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(option)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":"+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":"+getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap.HashCodeMap(),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap.HashCodeMap(),hashcodeMap,null));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap.HashCodeMap(),hashcodeMap,errors));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnnewHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoption=newHashMap();returnnewHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(et));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(optip));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnthis.options.toHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey()))returntrue;if(opt.equals(options.getValue()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey().equals(opt))returntrue;if(opt.equals(options.getValue()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey())){if(opt.equals(options.getValue()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("HashCode",hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("HashCode"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatestaticfinalMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatestaticfinalMapoption=newHashMap();privatefinalHashCodeMap=newHashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();return(HashCodeMap==?>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap();return(HashCodeMap==Object>)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)||options.hasOption(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)||hashcodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnopt.hasOption(options)||options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashCodeMap.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String.valueOf(opt)){if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(String)){if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(options.getOption())){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(options),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.split(",");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,opt,true,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getValue()!=null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt!=null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapOptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1],true;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(options.size()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":",hashcodeMap);returnoptions.containsKey(opt)&&options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListargs=newArrayList();returnargs==null?newArrayList():Arrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalListargs=newArrayList();returnargs==null?newArrayList():Arrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+8));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt)){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+8));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+8));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoption=newHashMap();super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapOptions=newHashMap();super.setOptions(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasKey(opt)||options.hasOption(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasKey(opt)||options.hasOption(opt,isRequiredOptions());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasKey(opt)||alternatives.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==opt){if(opt.equals(options.getValue()))returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null){if(opt.equals(options.getValue()))returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));&&
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));Afterward
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null||!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt,this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123List.sort(opt,newOption[]{String>()});
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options==null){if(opt.length()==0){returngetOptionValue(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returnfalse
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(64,32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){thrownewIllegalArgumentException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,values,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();if(opt==null){if(!args.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();if(opt==null){if(options.contains("--")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedHashcodeMap=newHashMap();returnnewHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(values,getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(values,defaultOptions());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125List.sort(values,defaultOptionValue());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==Character.STRING){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalLinkedListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(values,opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,hashcodeMap,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetValue(String.valueOf(opt),options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetValue(String.valueOf(opt),options.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashSet%String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnnewHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);privatenewArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);privatenewArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.valueOf(char)==opt){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+symbol));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();publicfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(key)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);hasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(opt)+7);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);hasOption(String.valueOf(opt)+0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicfinalHashcodeMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.mapToHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnif(options.hasOption(opt)||options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.keySet()){if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){returngetOptionValue(String.valueOf(opt)+"-"+this);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43return(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notNull(opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notNull(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(char));if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt)))}if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(String.valueOf(opt))){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);hasOption(String.valueOf(opt)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+opt);if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+":"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.get(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.get(opt.length()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.getDeclaringClass();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);privatestaticArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,hashcodeMap,defaultArgs);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,opt,hashcodeMap,defaultArgs);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newLinkedHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(option==null)?null:options.equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(values==null)?null:values.length).equals(getOptionValue(optional));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt)+",vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+",vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options,this.options.getAlternatives()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.add(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.sort(opt.toString());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listoptions.put(opt,newOption("getOption"));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43publicLinkedListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returnhasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!args.contains(values))returnnull;&&!values.contains(opt))returnnull;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null)returnnull;if(!args.contains(opt))returnnull;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(String.valueOf(options.keyword),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+'mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnHashcodeMap.copyOf(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnHashCodeMap.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap();returnnewHashCodeMap("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(string.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(opt,String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringopt:options.keySet()){if(opt.equals("-")){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringopt:options.keySet()){if(!isOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){if(!args.isEmpty()){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){returnhaveOption(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatelastMapoptions=newHashMap();privatestaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();publicstaticHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(options.getLongOpt()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(options.getLocale()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(config);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(0,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(Enum.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.values();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!hasOption(String)){args=options.get(opt);if(args.contains(.".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notNull(opt,OptionalUtilities.UNLIMITED_VALUES);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notNull(opt,OptionalUtilities.NOT_NULL);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notNull(opt),OptionalUtilities.unwrapAndThrowAsIAE(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt),String.valueOf(clsName));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt),String.valueOf(string));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt),String.valueOf(char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),String.valueOf(opt));if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt),String.valueOf(list));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt==null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt==null){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[1];if(opt==null){if(values==null){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[1];if(opt==null){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){Stringopt=this.options.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(this.options.containsKey(opt)||this.options.containsKey(opt)){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(this.options)){returnthis.options.containsKey(opt);if(this.args.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(options,this.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(options.hashCodeMap.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[0];if(opt!=null){if(values==null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[1];if(opt!=null){if(values==null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publichashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(options!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(options.get(opt)!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return!options.containsKey(opt),|args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return!options.containsKey(opt)||urls.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null||opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashCodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,options.getKey(),optionNames.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,options.getKey(),Opcodes.None.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,options.getKey(),Opcodes.NAME_VALUE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(options!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap(0,0,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMaphashcodeMap=newHashMap();return(HashCodeMap.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.get(options.size()).next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);privatefinalArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+7);privatefinalArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");returnhasOption(String.valueOf(opt)+".");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");hasOption(String.valueOf(opt)+".");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+".");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+".opt");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".opt");hasOption(String.valueOf(opt)+"."));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(charopt)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125OptionalNames.notNull(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options==null){returnoptions.containsKey(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));returnoptions.containsKey(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options==null){returnoptions.containsKey(String.valueOf(opt)!=0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));options.put(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt));if(options==null){returnoptions.containsKey(String.valueOf(opt)<0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashcodeMap,hashcodeNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,hashcodeMap,hashcodeName);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.EntryPrezentK,V>options=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMapishcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();privatefinalMapwithhcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),Opcodes.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(getOptionValue(opt),options.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(getOptionValue(opt),options.stripLeadingHyphens);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.select(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)||options.hasOption(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)||options.hasOption(opt,hasHashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options,opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[0];if(opt==null){if(values==null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[1];if(opt==null){if(values==null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[0];if(opt==null){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(options));returngetOptionValue(String.valueOf(opt)+this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkAnswer(!Options.isEmpty(),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.get(options.iterator().next());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String,opt,options.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(charopt,options.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(opt,options.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null||!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(""))}if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values==null){if(!args.contains(values))[Delete]thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap&String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap%String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap&String,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap,String>();if(args.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options.get(this.options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options.getRawClass();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsValue(opt)||this.options.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgs(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey()))if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey()))returnif(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(options.getKey()))if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null||opt.length()==0){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),||opt==Character.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(option),||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,baseUri,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(opt,null,options.hashCode());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0],values[1]:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap("",Long.MAX_VALUE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(".-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?Null:values[0],1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,HashCodeMap.class),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.equals(opt)){if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(option.equals(opt))if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey()))}if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+char);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+charopt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.size()-1):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.size()-1):newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.keySet()):newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedfinalArrayListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){Stringopt=hashcodeMap.get(opt);if(opt!=null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt))[Delete]thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalMap.Entry}K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofCharacter){hasOption(String.valueOf(opt));if(options.setOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(Compiler)args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(Comment)args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("-"))}returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)?null:options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(opt)?option.getOption(opt):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null||options.size()==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashMap();returnHashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||options.hasOption(opt))}returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||options.hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalstaticMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=this.options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.equals("+")){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey()))returnif(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey())){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(charopt)+":",charopt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Integer.toHexString(opt));returngetOptionValue(String.valueOf(opt)+"-="+Integer.toHexString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(options.size(),options.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(options.size(),options.orientation);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(options.size(),options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)||if(opt.equals(options.getKey())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(!options.hasOption(opt)){if(opt.equals(options.getKey())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt))}if(opt.equals(options.getKey())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);privatefinalMapoptions=newHashMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);privatefinalMapoptions=newHashMap(32,64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32);privatefinalMapoptions=newHashMap(32,32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)||if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.contains(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null?newHashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()}null?newHashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.names,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==String.class){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt,values.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returngetValue(values,opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null||options.containsKey(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null||opt.equals("-1)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binaryNames,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,false,options.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binaryKeys,true,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(charopt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)||hasOption(String.valueOf(string));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");hasOption(String.valueOf(opt)+"is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"is");if(options.containsKey(opt)){returnhasOption(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.containsKey(opt)){if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.containsKey(opt)){if(opt==null){returnnewHashcodeMap();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.contains(resolveOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.hasOption(resolveOption(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.copyOf(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.construct(HashCodeMap.UTF_8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!hasOption(String)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!hasOption(char)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.hashcodeMap=newHashCodeMap(64,CommandLine.UTF_8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnoptions.select(options==null?options.iterator().next():options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(options.containsKey(char)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(options.containsKey(String.valueOf(opt))&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values))if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt.equals(values))}if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1,":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();privatestaticfinalArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnMaps.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticMapoptions=newHashMap();returnoptions.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnullArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null){if(!hasOption(opt))}returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"|=");if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"|=");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(opt.equals(this.options.getKey()))if(opt.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137finalprotectedMapoptions=newHashMap();privatestaticfinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69return!hashcodeMap.containsKey(opt)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalpublicHashMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(char)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalsafefinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privateHashcodeMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(opt));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalLinkedListoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(options.length+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(t+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values[0].equals(getOptionValue(optional));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values[0].equals(getOptionValue(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?options.getOptionValue(opt),null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(options)?options.getOptionValue(opt):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null||opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null){Stringopt=newHashcodeMap();if(opt.equals(".+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":"+char);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":"+String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":"+charopt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);returnhasOption(String.valueOf(opt)+":"+Character.toUpperCase(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(16);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(32,48);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions,which.getOptionValue(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=newHashCodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]options=newHashcodeMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(char)){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt))[Delete]if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.hashCode());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.newInstance("hashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137[Delete]elseif(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){if(!hasOption(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt!=null){if(!hasOption(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt))}returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(options.keySet()));[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(optinstanceofCharacter){if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}}elseif(options.containsKey(String.keyOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.class)){if(options.containsKey(String.keyOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(arguments.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt.valueOf(opt)||opt==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,options.valueOf(opt)||opt==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,args.valueOf(opt)||opt==String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMapIdentityHashMap&Map.Entry<K,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMapIntegratedMap.Entry>>K,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMapIntegratedMap.Entry<K,V>>));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,this.options,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,this.options,this.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,args,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,this.options,this.values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getName())){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getName()))returntrue;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getName()))}if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32,64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOption(true,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnoptions.get(opt)!=null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"||vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)||options.hasOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.getOption(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setCode(code);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.start();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setCode(writeStartObject());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedstaticfinalMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+"vs=");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt))returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validates.notNull(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt);returnhasOption(StringUtil.tripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt);returnhasOption(StringUtils.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey()))}if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null||opt.equals(options.getKey())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey()))[Delete]if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)||hasOption(String.charAt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(charopt)||hasOption(String.charAt(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+3);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMaphashcodeMap=newHashMap(64);returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(values)||for(Map.Entry<String,V>opt:options.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnargs==null?newArrayList():Arrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnargs==null?null:args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalListargs=newLinkedList();returnArrays.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(values==null){if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt==null){if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMapoptions=newHashMap();privatenewHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt))}thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.containsKey(opt))[Delete]thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap&String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==')'){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap(),CommandLine.MUTATOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap(),CommandLine.ERROR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt)?null:options;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashCode.delete();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.equals(options.getKey()))}if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.equals(options.getOptions())){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(!args.contains(opt)){args=newHashMap<String,Option>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);if(!args.contains(opt)){args=newHashMap<String,Option>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValue(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String.valueOf(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt==0){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(char)){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(true,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.getName()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.getValues()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.getArgs()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("hashcode",hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("hashcode",HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt),options.keySet());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newInstance(0,CommandLine.MUTATOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newInstance("hashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+this,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(Character.toLowerCase(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:value[0].equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(options.containsValue(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap.HashCodeMap(),hashcodeMap,DEFAULT_CODING));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap.HashCodeMap(),hashcodeMap,DEFAULT_CAPACITY,DEFAULT_LOAD_FACTOR));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.report(JSError.make(HashCodeMap.HashCodeMap(),hashcodeMap,DEFAULT_COMMAND_ERROR));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137HashcodeMap.class=getOptionArgs(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0,4);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(key)||hashcodeMap.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))[Delete]if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values)?opt:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option)?values:null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option)?null:values;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(option)?options.get(opt):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69return!args.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=this.options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havetostartwith:"+map);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125hashcodeMap.put(opt,hashcodeMap.getOptionArgs());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=hashcodeMap.getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125hashcodeMap=hashcodeMap.getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null||opt.length==0){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"||"=vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"||"options.get(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)/4);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(STRING)values.toArray(newString[values.length]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[values.length]),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+7);if(opt!=null){returngetOptionValue(String.valueOf(opt)+7);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);if(opt!=null){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.names.containsKey(opt)){Stringopt=this.names.get(opt);if(opt==null){returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(options.containsKey(opt)){Stringopt=this.options.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.names.containsKey(opt)){Stringopt=this.options.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.names.containsKey(opt)){Stringopt=this.names.get(opt);if(opt==null){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);if(this.names.containsKey(opt)){Stringopt=this.names.get(opt);if(opt==null){returnthis.options.containsKey(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notNull(opt,OptionalNames.OTHER_NULL);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notNull(opt,OptionalNames.OTHER);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notNull(opt,OptionalNames.NO_NAME);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticArrayListargs=newArrayList();returntoArray(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(String.valueOf(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.size(),options.iterator());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.size(),options.mant());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(options.size(),options.leftKey);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123publicfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateHashMap(System.identityHashCode(type));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateHashMap(System.identityHashCode(method));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.contains(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.err.println("IdentityHashCode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasArgs()){returnhasOption(String.valueOf(options)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)+1);if(!hasArgs()){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80super.addAll(args,newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options,opt,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap&String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMap=newHashMapWithExpectedSize(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(values==null)?null:values.length,2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,HashcodeMap.class),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,CommandLine.COMMAND+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(arguments,CommandLine.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,Commander.COMMAND);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);hasOption(String.valueOf(char)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(key)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){if(values==null||values.length==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));options.hasOption(String.valueOf(opt))){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.keyword(opt));if(options.hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options),this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options)+1,this.names;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt));if(opt!=null){returnhaveOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt),hashcodeMap,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt),hashcodeMap,options.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();checkArgument(!options.hasOption(opt),hashcodeMap,options.valueToJavaTime(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options==null){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),false,options.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),false,options.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");hasOption(String.valueOf(char)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("||")){args=newHashCodeMap&String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]args=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,null,Names.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(hashMap==null)?0HashMap():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(hashMap==null)?null:0HashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){args=options.get(opt);if(args.contains("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,hashCode,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,hashCodeNames,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)+"is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"doesnotexist:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalHashMap(DEFAULT_CAPACITY,DEFAULT_LOAD_FACTOR,DEFAULT_THRESHOLD);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalHashMap(DEFAULT_LOAD_FACTOR,DEFAULT_CAPACITY,DEFAULT_LOAD_FACTOR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalHashMap(DEFAULT_LOAD_FACTOR,DEFAULT_CAPACITY,DEFAULT_THRESHOLD);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80Arrays.sort(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,hashcodeMap,options,hashCode);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=getOptionValues(opt,HashcodeMap.class,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);Validate.isTrue(opt,args.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80return(values==null)?null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(values==null||opt.length==0){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(opt)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(args)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.equals(options.getString()))}if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt.equals(options.getString()))[Delete]if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notNull(opt,OptionNames.NO_OBJECT_TYPES);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notNull(opt,Options.OR_OPTIONAL_NOT_NULL);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey().equals(opt))returnif(opt.equals(options.getValue()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey().equals(opt))if(opt.equals(options.getValue()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey().equals(opt))if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,null,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,false,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(options)+"is");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"is"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"hastobepositive");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(char)){args=options.get(opt);if(args.contains(."-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(charopt)){args=options.get(opt);if(args.contains(."-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Values.notEmpty(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(char)){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(key)){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43finalprotectedfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),"opt.length",opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap=newHashMapWithExpectedSize(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.construct("HashCodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+",isSupported(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedLinkedListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Sort(values,options.hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Sort(values,options.hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(charopt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.key()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(key)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt,this.options.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty()),opt+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(options.length.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(values.length.equals(opt.getName())){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){opt=getOptionValue(opt);args=getOptionArgs(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null):values[0].equals(getOptionValue(option));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123protectedHashcodeMap=newHashMap();returnSystem.identityHashCode(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt),String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options.hasArg()){returngetOptionValue(String.valueOf(opt),String.valueOf(options.getKey()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(key.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt)))}returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(key)){if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)||if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key))}if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!values.equals(opt)){for(Map.Entry<String,V>opt:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){for(Map.Entry<String,V>opt:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap("hashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(options.containsKey(key)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(options.containsKey(char)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(key))[Delete]if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty()),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs=getOptionArgs(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Listargs=getOptionArgs(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalArrayList.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMap.Entry<K,V>options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectednewMaphashcodeMap=newHashMap();super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),which.values.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),which.hasNext();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),which.hasCase(true)?null:values[0].toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,args)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,DEFAULT_LOAD_FACTOR)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HASH_DEFAULT_LOAD_FACTOR)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+0);if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt)+2);if(opt!=null){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Lists.sort(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Lists.sort(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.stripLeadingHyphens.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||options.stripLeadingHashCodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(!options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(!options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();if(options.hasOption(arg)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"|=");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(commandLine,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(commandLine);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnArrays.asList(this,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.containsKey(key)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,this.options,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,null,this.options,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(options.containsKey(String.class)){if(opt==0){returnhasOption(String.class);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(opt<0){if(options.containsKey(String.keyOf(opt))){returnhasOption(String.keyOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt));}if(opt==0){returnhasOption(String.valueOf(opt));}if(String.isEmpty(opt)){if(opt==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(char)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.hashCodeMap=HashCodeUtils.hashCodeMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatenewMap.hashCodeMap=HashCodeUtils.hashCodeMap(getClass());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(newCommandLine().head());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap(options);returnnewHashMap(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==String.class){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==this){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(clsName)){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+this.char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewArrays.asList(Arrays.asList(newArrayListType()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewArrays.asList(Arrays.asList(newArrayList()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+this.names.containsKey(opt)||options.containsValue(opt,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnhasOption(String.valueOf(opt)+this.names.containsKey(opt)||options.containsValue(this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)==null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()!=null||opt.equals(options.getKey()))}if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMap=newHashMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMap=newHashMap(80);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains(".")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(args)){if(opt!=null){args=options.get(opt);if(args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options==null){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.put(opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.select(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.sort(values,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newTreeList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);returnhasOption(String.valueOf(opt)+7);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);returnhasOption(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){if(opt!=null){args=options.get(opt);if(args.contains("-->")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options!=null){args=options.get(opt);if(args.contains("-->")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,HashCodeMap.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,Names.None.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnHashcodeMap.copyOf("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewHashCodeMap("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)&&opt==null&&hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(opt)&&options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.startCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.startsWith("_");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);returngetOptionValue(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+1);returngetOptionValue(String.valueOf(options)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+"/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap().itserator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+".vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),+args.length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),+args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=this.options.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80String[]values=options.trim();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeList(args==null?null:args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)options.getKey(opt))&&StringgetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)options.getKey(opt))&&String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnoptions.getOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.hasOption(opt))}thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!options.hasOption(opt))!=thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(options),options.size();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,opt,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,hashcodeMap,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args==null?null:args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,options.size()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,options.getKey()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatestaticHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":");if(options.containsKey(opt))&=hasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)/.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)SUPER.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+this.name);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+char);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(values==null){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(values==null){String[]names=newHashcodeMap();if(names!=null){returnnames.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(values==null){if(opt.equals(values.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(values==null){if(!values.isEmpty()){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values!=null)?null:values[0];if(opt!=null){if(values==null){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,null,this.options,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,args,names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(key)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80elseif(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(arg)){Map<String>options=getOptionArgs();if(args==null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safefinalMapoptions=newHashMap(Arrays.asList(values));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safefinalMapoptions=newHashMap(Arrays.asList(hashCode));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.contains(opt)){returngetOptionValu
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt!=null){String[]opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("hashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.data();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(opt==0){returnoptions.containsKey(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.class)){returnoptions.containsKey(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!hasArgs()){returnoptions.containsKey(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap(true,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+'');if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+"|=");if(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+char);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+Character.toLowerCase(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getString())){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getString()))if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(options.getString()))if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(64);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binary,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,options,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,false,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.get(options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectednewMaphashcodeMap=newHashMap();returnsuper.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){return(values==null)?null:values[1];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){return(values==null)?null:values[1];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values)?null:values;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values)?null:values.length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalMaphashcodeMap=newHashMap(255);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)hashcodeMap.get();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(HashCodeMap==K,V>)hashcodeMap.copy();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(opt)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values.length!=(opt.equals(opt)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,baseUri,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,key,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.hasOption(charopt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashcodeMap();if(opt.equals("args+")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+3);if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,getOptionNames(),optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionArgsFromLocalName(ctxt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasOption(opt)){returngetOptionValue(String.valueOf(opt),options.keySet());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasOption(opt))}returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasOption(opt))[Delete]returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.contains("-1)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(clsName)){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.isEmpty()){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.isEmpty()){hasOption(String.valueOf(opt));if(opt>=0){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||opt.equals(".args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)||false;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt!=null){if(!args.contains(opt))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains(opt))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(!args.contains(opt))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasOption(opt)||this.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasOption(opt)&&!this.options.containsOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(options)+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){returnhasOption(String.valueOf(options)+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasArgs()){returnhasOption(String.valueOf(options)+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+2);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(values==null||opt.isEmpty()){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null&&!Options.isEmpty()){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null&&!Options.contains(String.valueOf(opt))){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null&&!Options.isEmpty(opt)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);returngetOptionValue(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);returngetOptionValue(String.valueOf(opt)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);returngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String)){if(!hasOption(String)){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedMaphashcodeMap=newHashMap(64);returnSystem.identityHashCode(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey()))}if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getKey()))[Delete]if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey()))if(opt.equals(options.getValue()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||options.getValue().equals(opt))if(opt.equals(options.getValue()))returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.containsKey(char)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.containsKey(key)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(options.containsKey(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){hasOption(String.valueOf(opt));[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(optinstanceofString){if(!hasOption(opt))returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnisOption(hashcodeMap,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnisOption(charopt,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(values.equals(opt.getName())){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(values.equals(opt.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null){if(values.equals(opt.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();privatefinalMapoption=newHashMap();privatefinalMapobject=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringopt:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],-1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],7];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],opt+2;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(options.hasOption(String.valueOf(opt)))}returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalstaticHashCodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode="+hashcodeMap.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode=",HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),char)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),chars.length)/1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newArrayList<String>(values.toLowerCase());}elseifoptions.put(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){args=newArrayList<String>(values.toLowerCase());}elseifoptions.get(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains("-")){returnthis;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatenewHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(decorated());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnnewHashMap(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicfinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,optionNames.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),hashcodeMap,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addHashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(option)||args.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||ans.containsValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null)if(opt.length()>0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null)}if(opt.length()>0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null)if(opt.length()>0)thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedfinalHashCodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedHashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null)[Delete]if(opt.length()>0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(opt)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(args)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(value)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!hasOption(String)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap("HavehcodeMap:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap("HavehcodeMapfor");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt))&&hasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+":");if(!hasOption(String.valueOf(opt))&&returnhasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validator.notNull(values),options.mayHaveSideEffects(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Validator.notNull(values),butisEnabled(Feature.AUTO_CLOSE_SOURCE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt,options.split("[]"));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=String.valueOf(opt+options.split("[]"));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashCodeMap();if(option.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.length!=0){if(!args.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"is"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments."+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){String[]values=getOptionValues(option);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",isVerticalArgument");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",isVerticalValue());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+",isVerticalShouldBeStripped");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");hasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");options.put(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");options.put(String.valueOf(opt)+"thisoptionmayhavesideeffectsandcan'tberemoved");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"mayhavesideeffectsandcan'tberemoved");options.put(opt,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(charopt)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.get(opt,baseUri);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.get(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.get(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".*");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(text.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){args=options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(char)){args=options.get(opt);if(args.contains(args)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(opt)){args=options.get(opt);if(args.contains(args))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnArrays.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticListargs=newLinkedList();returnnewArrayList(args.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.sort(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123options.sort(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(0,4);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(1,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1"||"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1"|=");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.contains("-")){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.valueOf(char)==opt){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+'issupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)+"isnotsupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,null,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.values,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(values==null)?null:values[1];if(opt!=null){if(values==null){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(char)){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains(key)){if(!args.contains(opt)){returngetOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==null||opt.length==0){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){opt=getOptionValue(opt);if(opt.length>0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt),hasOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt),hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(Map.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(Map.Utils.EMPTY_OBJECT);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(map);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashcodeMap(Maps.newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicstaticfinalMaphashcodeMap=newHashMap("hashcodeMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"-"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!opt.equals(values)){for(Map.Entry<String,V>opt:options.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.isEmpty()){thrownewIllegalArgumentException(""));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.get(opt)){if(opt==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.get(opt)){if(opt==0){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.get(opt)==null){if(opt==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.get(opt)==null){if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.add(newOption(Option.None.class,String.valueOf(opt),Option.None.class));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69options.add(newOption(Option.None.class),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options==null||options.hasOption(opt)){Stringopt=newHashcodeMap();if(opt.equals("+")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(string));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(cls));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(hashcodeMap.valueOf(opt),hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnisOption(hashcodeMap.valueOf(opt),string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],values[1]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?Null:values[0],values[1];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt)+options.length;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,hashcodeMap,default);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);returnoptions.containsKey(opt)||options.stripLeadingHyphens.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt)||this.options.containsValue(opt);returnoptions.containsKey(opt)||options.stripLeadingHashCodeMap.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalArrayoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(true,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals(".")){args|=options.getKey(opt);if(args.containsValue(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137super.hashcodeMap=(HashCodeMap)super.hashcodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137super.hashcodeMap=isHashCodeMap()?(Hash)super.hashcodeMap():HashMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)||options.hasOption(opt)){returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.hasOption(opt)||options.hasOption(opt))}returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){Stringopt=newHashcodeMap();if(option.equals("args")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.hasOption(opt))returngetOptionValue(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.valueList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap&String,String>();if(args.containsKey(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,baseUri,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,HashcodeMap.Entry<K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(arguments,newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(newLinkedList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashMap(1,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(!options.contains(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||!hasOption(opt)){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(String.valueOf(opt)+",':');
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnthis.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(options.containsKey(opt)){Stringopt=getOptionValue(StringUtils.stripLeadingAndTrailingQuotes(opt));if(opt==null){returnthis.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(opt);if(options.containsKey(opt)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnthis.options.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(opt)?values:newString[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(string)?opt:newString[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap)?opt:newString[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaps.values=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaps=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(key)){if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123If(options.containsKey(opt)){if(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(opt.equals(values.length)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Args=getOptionArgs(opt,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");returngetOptionValue(String.valueOf(opt)+"/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"/");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"/");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(StringUtil.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(StringUtils.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returnhasOption(StringUtil.stripLeadingHyphens(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+3);if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringopt:options.keySet()){if(opt.startsWith("-")){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=hashcodeMap.getOptionValue(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80opt=hashcodeMap.getOptionValue(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnoptions.get("--");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(String)values.toArray(newString[options.size()]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),baseUri);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt),CharTypes.US_ASCII);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}elseif(options.put(opt.getKey(),opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}elseifoptions.put(opt.getKey(),opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,null,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,options,opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,hashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.args,this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.unmodifiable("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.unmodifiable();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+4);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+".vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMapoptions=newHashMap();privateHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!opt.equals(values)){if(!args.contains(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.contains(opt)){if(!args.contains(opt)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notEmpty(opt),OptionNames.NOT_Empty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.notEmpty(opt),OptionNames.NOT_EMPTY_LIST);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getValue()!=null){if(opt.equals(options.getValue())){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(opt,HashcodeMap));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46checkArgument(!options.hasOption(opt,hashcodeMap),hashCodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,binarySearch,options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!hasOption(key)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(opt)){if(!hasOption(opt)){returnfalse;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havebeencompiled:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashMap("Havebeenmapped:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null||!hasOption(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options,opt.toString());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options,this.options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137String[]args=getOptionArgs(opt),null:args;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.equals(getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.equals(this.options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.equals(opt,options.getOption(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(values==null)?null:values.length.equals(getOptionValue(optional));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!options.containsKey(key)){if(!hasOption(key)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(!options.containsKey(char)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(Options.hasKey(String.valueOf(opt))){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+":"+OptionNames.KEY_ARRAY);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnoptions.containsKey(String.valueOf(opt)||options.isEmpty());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,false,args,options.length);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+":",hasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){String[]values=getOptionValues(opt);if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()==null)?Null:newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalMapfinal=newHashMap(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap(32,Options.UTF_8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap(32,Options.UTF-8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap(32,Options.XPath);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashcodeMap.put("}"+getClass().getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)||opt==null&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(string)||opt==null&&hasOption(String.valueOf(char));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privatefinalMapishCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(StringUtils.safeToInt(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(StringUtils.safeToInt(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(String.valueOf(opt))if(opt!=null){args=options.get(opt);if(args.size()>0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123args=getOptionArgs(opt,HashMap.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticfinalMap.hashCodeMap=newHashCodeMap(255);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt==0){hasOption(String.valueOf(opt));hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains("-")){hasOption(String.valueOf(opt));hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains("-")){hasOption(String.valueOf(opt));hasOption(String.valueOf(opt));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(FALSE,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"|=");if(!hasOption(opt)){args=options.get(opt);if(args.contains("vs")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"|=");if(!hasOption(opt)){args=options.get(opt);if(args.contains("
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(values==null)?null:values.length().equals(getOptionValue(optional));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(option==null)?null:values.length().equals(getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.MuzeulK,V>(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.%K,V>(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Map.Entry<String,HashcodeMap.Entry<K,V>option:hashcodeMap.entrySet()){if(!hasOption(option)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newArrayList(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80for(Map.Entry<String,HashcodeMap.Entry<K,V>option:options.get(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options,this.options.chompTo(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(options.toHexString(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(options!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,hashCodeMap,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,hashcodeMap.keySet(),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,hasHaveSideEffects(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(options.keySet));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(arguments,CommandLine.COMMAND_LINE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,Commander.COMMAND_LINE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(args,commandLine.COMMAND_LINE);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(StringUtils.valueOf(opt),StringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(StringUtils.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnisOption(keyStringUtils.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".*");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".stripLeading.charAt(0)");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".com.google.gson.reflect.Option");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();privateHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.contains(opt)){opt=getOptionValue(opt);if(opt.length==0){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notEmpty(opt)?OptionalUtilities.stripLeadingHyphens(opt):OptionalUtilities.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notEmpty(opt)?OptionalUtilities.getOptionValue(opt):OptionalUtilities.notEmpty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalUtilities.notEmpty(opt),OptionalUtilities.stripLeadingHyphens(opt,OptionalUtilities.stripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCodeMap.copyOf("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapOption=newHashMap();publicstaticfinalMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null||opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionArgs();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionArgs(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.getOptionValue(opt)?options.getKey(opt):Options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.getOptionValue(opt)?options.getString(opt):options.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137for(Stringopt:options.keySet()){if(opt.size()>1){returngetOptionValue(String.valueOf(opt)+"-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap.Entry<K,V>options=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicstaticfinalLinkedMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();returnnewHashMap(Arrays.asList(commandLine));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.contains("/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.select();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.getKey().equals(opt.getKey())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(args!=null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.optionsList.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.optionList.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==key){if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==String.valueOf(opt))if(opt.equals(options.getValue()))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!opt.isEmpty()){if(!args.contains(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.isEmpty()){if(!args.contains(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.isEmpty()){if(!args.contains(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){hasOption(String.valueOf(opt));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options,which.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=options.getOptionValue(opt,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1],0;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"hasconflictingarguments.");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){Stringopt=newString(String.valueOf(opt)+"hasconflictingarguments.");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("-")){Stringopt=getArguments();if(opt.equals("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("-")){Stringopt=getArguments();if(opt.equals("-")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:options.keySet()){if(!args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:options.keySet()){if(!args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137publicMapoptions=newHashMap();privatefinalMaphashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],-1,-1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"|=");if(!hasOption(opt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValue(opt,HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnHashcodeMap.copyOf(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey()))if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey()))}if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey()==null||opt.equals(options.getKey()))[Delete]if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(char,String.valueOf(opt)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],opt+".]";
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt.equals(options.getKey()))!=thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.hasOption(opt)){if(opt.equals(options.getKey()))}thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,CommandLine.DEFAULT_LOAD_FACTOR,newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.equals(opt)){Map>>String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51ArrayListhashcodeMap=newHashMap();super.hashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.length!=0){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),this.options+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap(Arrays.asList("HashMap"));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap(Arrays.asList("jscompiler"));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.hasOption(opt)){returngetOptionValue(String.valueOf(opt)+".-");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashCodeMap=newHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,baseUri,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null)?newHashMap():newHashMap()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();privatefinalHashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43super.addAll(arguments,newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+'');if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"of");if(opt!=null){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(!args.contains(values))returnnull;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options==null){if(!args.contains(values))returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+"-"+char;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+"-"+opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),options.get(opt.toLowerCase());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");hasOption(String.valueOf(opt)+"isnotsupported");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"isnotsupported");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(options.containsKey(opt)){returnhasOption(String.valueOf(opt)+"isnotsupported");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"isnotsupported");if(options.containsKey(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+"doesnotsupport");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+1);if(options.hasOption(opt))returngetOptionValue(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();publicstaticfinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValues(),opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String,opt)||options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.hashCodeMap=newHashMap(64,CommandLine.UTF_8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals(values)){if(values.length.equals(opt.length)){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){if(values.length.equals(opt.getName())){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123return(newHashCodeMap()==null)?newHashCodeMap():newHashCodeMap()+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(opt,options.valueOf(opt)||opt==String.valueOf(args));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.contains(values)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(!options.containsKey(opt)){if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.get(options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.split("-"+options.toString());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(hashcodeMap,String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(HashcodeMap.valueOf(opt),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(HashCodeMap.valueOf(opt),opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125Optional.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnargs==null?newArrayList():args.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnoptions.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null){if(opt!=null){string[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,null,commandLine);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69privatefinalMap.hashCodeMap=HashCodeUtils.hashCodeMap(Map.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);hashcodeMap=HashCode.getHashCode(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);hashcodeMap.removeValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);hashcodeMap.put(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnoptions.containsKey(opt)||hashcodeMap.containsValue(opt);hashcodeMap=HashCode.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.getKey()==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey("-")){if(!args.containsKey(opt)){returngetOptionValue(String.valueOf(options.keySet()));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80elseif(options.hasOption(String.valueOf(opt))thrownewIllegalArgumentException("");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.toString();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=opt==null?values.toString():opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.MuzeulK,V>(options.keySet(),options.values()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80privatefinalMapoptions=newHashMap();returnnewHashMap(Options.class,Maps.MIT,K,V>(options.keySet(),options.values()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,baseUri());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),toLowerCase(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(key);hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnallOptions.containsKey(opt);hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(options.hasOption(opt)){returngetOptionValue(String.valueOf(options)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");returngetOptionValue(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(options)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");returngetOptionValue(String.valueOf(options)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(options)+":");}else{returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhasOption(String.valueOf(opt)+".Vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap(),Map.Entry<K,V>>?newHashMap():Maps.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap(),Map.Entry<K,V>>?newHashMap():Maps.newIdentityHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMap(),Map.Entry<K,V>>?newHashMap():Maps.entrySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnoptions.size()!=1?options.get(0):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(options.containsKey(opt)){return(String)getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(options.containsKey(opt)){return(String)getOptionValue(opt);}else{options.put(opt,newOption(String.valueOf("-"));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(options.containsKey(opt)){returnoptions.getValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)getOptionValue(opt);if(options.containsKey(opt)){return(String)getOptionValue(opt);}else{options.putAll(getOptionValue(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(!options.hasOption(String.valueOf(opt),)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhashcodeMap.entrySet().hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnhashcodeMap.split("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,private+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,newLinkedList<Array>());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.addAll(args,newLinkedList<Node>());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43protectedfinalLinkedListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(key)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt,HashcodeMap.UTF8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt,HashcodeMap.UTF-8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionKey(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(charopt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137return(String)this.options.get(string);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),false,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(options)||opt==0)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||opt==0)&&hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.isEmpty()){if(!values.isEmpty()){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!hasOption(char)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==!hasOption(opt)){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43finalstaticListargs=newLinkedList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43finalstaticArrayListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.hashcodeMap,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.options,this.hashcodeMap,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+2);if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhaveOption(String,hashcodeMap.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0.0,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnnewHashCodeMap(0,hashcodeMap,commandLine);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!opt.isEmpty()){if(!args.containsKey(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.isEmpty()){if(!args.containsKey(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null||opt.isEmpty()){if(!args.containsKey(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!values.isEmpty()){returngetOptionValue(opt,values);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46return(newHashMap()==null)?Null:newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMaphashcodeMap=newHashMap();returnhashcodeMap.keySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.isEmpty(opt)){if(opt==0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt<0){returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(clsName)){if(opt==0){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.isEmpty(opt)){if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(newHashCodeMap()[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returnArrays.asList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privatestaticfinalListargs=newLinkedList();returnArrays.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt!=null){returngetOptionValue(String.valueOf(opt)+".charAt(0));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedHashcodeMaphashcodeMap=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");returngetOptionValue(String.valueOf(opt)+".");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+".");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");returngetOptionValue(String.valueOf(opt)+"."));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+".opt");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"."));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals(".")){args=newHashCodeMap&String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(key)){Stringopt=newString(String.valueOf(opt));if(opt==null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains(".-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(char)){if(opt!=null){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(char)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(value)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(0);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+7);if(opt!=null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51ArrayListhashcodeMap=newHashMap();super.hashcodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnSystem.identityHashCode("hashcode");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,url.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137hasOption(String.valueOf(opt)+":"+options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137hasOption(String.valueOf(opt)+":"+getArguments());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137hasOption(String.valueOf(opt)+":"+null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137hasOption(String.valueOf(opt)+":"+options.get(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options==null){if(opt.length()==0){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51finalprotectedMaphashcodeMap=newHashMap();returnSystem.identityHashCode(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(optinstanceofString||optinstanceofString){hasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(true,true;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.containsKey(key)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){if(!hasOption(string)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key))}if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.hashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43opt=String.valueOf(options.get(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticArrayListOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69checkArgument(!options.hasOption(opt),null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?Null:values[0];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":",opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+":"+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setSelectedOptions(options,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.equals(")){args=newHashCodeMap<String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(key)){if(values.length.equals(opt.getName())){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(key)){if(values.equals(opt.getName())){returngetOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,U2U);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(values==null){if(!values.length()==0){thrownewIllegalArgumentException("");[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.sort(opt,options.stripLeadingHyphens);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.sort(opt,getOptionValue(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Options.sort(opt,options.stripLeadingHymns);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+")");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+")");if(opt==0){returngetOptionValue(String.valueOf(opt)+")");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){Stringopt=newHashCodeMap();if(opt.equals("args+")){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.getKey(opt)||this.options.hasOption(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.charAt(opt)==0){hasOption(String.valueOf(opt));if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.isEmpty()){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(String.isEmpty(opt)){hasOption(String.valueOf(opt));if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashcodeMap=newHashCodeMap(1,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt,hashcodeMap.values());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnhashcodeMap.hasOption(opt)||hashcodeMap.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.toLowerCase();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null)}if(values[0]==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null)[Delete]if(values[0]==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap&String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap%String,String>();if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(MOVED_ARGS);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatestaticMap=newHashMapWithExpectedSize(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(String.valueOf(opt))&returnhasOption(String.valueOf(opt)+"vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+"vs");if(!hasOption(String.keyOf(opt))){returnhasOption(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notEmpty(opt),OptionalNames.NOT_Empty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notEmpty(opt),OptionalNames.NO_RESULT);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionalNames.notEmpty(opt,OptionalNames.OTHER_NULL);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnArrays.toArray(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalArrayHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123privatefinalLinkedHashCodeMaphashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(key)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(char)){returngetOptionValue(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":"+opt);if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+":"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt.equals("+")){args=newHashCodeMap&String,String>();if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43return(values==null)?null:values.trim().toArray(newString[0]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.get(opt)!=null){args=options.get(opt);if(args.contains("+")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalArrayMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==null){hasOption(String.valueOf(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnnewHashCodeMap("HashCode"+getName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt)),String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnoptions.toMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap(32);returnnewHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51protectedArrayMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3)");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+5)");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+6)");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+10)");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(options==null){String[]args=getOptionValues(opt);if(args==null){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(opt.isEmpty()){if(options==null){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(options==null){if(opt.length==0){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(options==null){String[]args=getArguments();if(args==null){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}if(options==null){if(opt.length==0){returnoptions[0].getOptionValue();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),this,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125options.add(newOption(String.valueOf(opt),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),this.names,this.args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.add(newOption(String.valueOf(opt),this.names);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatefinalMaphashcodeMap=newHashMap();hashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(char)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(charopt)){args=options.get(opt);if(args.contains("-")){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123If(opt!=null){String[]values=getOptionValues(opt);if(values==null){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnthis.options.containsKey(opt);if(options.containsKey(opt))returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){returnthis.options.containsKey(opt);if(options.containsKey(opt))returnthis.options.containsValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnif(opt!=null){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Validate.notNull(values,opt),values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51Validate.notNull(values,opt)?null:values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.equals(opt.getKey()))returntrue;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.getKey().equals(opt.getKey()))returntrue;if(opt.equals(options.getValue())){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+17);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"is");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,this.values,false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(64,CommandLine.UTF_8);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(64,CommandLine.UNKNOWN);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?Null:values[0],opt;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123hasOption(String.valueOf(opt)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){returnhasOption(String.valueOf(opt)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123hasOption(String.valueOf(options)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(opt)){returnhasOption(String.valueOf(options)+":");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Options.stripLeadingHyphens.getOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=Options.getOptionValue(opt,options.stripLeadingHyphens);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.isTrue(opt,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt!=null){opt=options.get(opt);if(!args.contains("-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt==null)returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=this.options.get(opt,null,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt==null){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(options==null){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51if(opt==null){args=options.get(opt);if(args.contains("+")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMapOption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"vs"+opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.getOptionValues();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null||opt.isEmpty()){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.equals("")){if(!args.isEmpty()){thrownewCommandLineException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.values(),args.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args.values(),args.indexOf('n'));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(String.isEmpty(opt)){if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(String.isEmpty()){if(opt==0){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(String.isEmpty(opt)){if(opt==Opcodes.US_ASCII){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoptions.size()==3?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123returnoptions.size()!=1?options.getAll():newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.construct("HashCode",HashCode.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,newLinkedList);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,options,this.options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,null,this.options,true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(opt.isEmpty()){return(values==null)?null:values[1];if(values==null){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null){return(values==null)?null:values[1];if(opt.isEmpty()){return(values==null)?null:values[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnargs==null?null:newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43privateLinkedListargs=newLinkedList();returnargs==null?newArrayList():newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.hasLowerCase()){if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.hasLowerCase()){if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,properties,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(values==null){if(!values.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(values==null){if(!values.isEmpty()){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.equals("value")){if(values==null){values[0]=null;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];Arrays.sort(values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?values[0]:values[1];if(opt.equals("value")){if(values==null){returnvalues[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newLinkedHashCode();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashCode.newUse();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(options)||hasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)||hasOption(String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,options,hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt,baseUri);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt,HashcodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.size()-1):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.size()-1):newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.keySet()):newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.size()-1):Maps.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80options.put(opt,String.valueOf(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(Character.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.hasKey(opt)||this.options.containsArg("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.construct("hashcodeMap",hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.construct("hashcodeMap",newHashCodeMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnHashcodeMap.construct("hashcodeMap",HashCodeMap.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(char)+":");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.equals("-")){if(!args.contains("-")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt.startsWith("-_")){if(!args.contains("-_")){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewLinkedList(args,privatelist);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnallOptions.containsKey(opt);returnhasOption(String.valueOf(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(StringUtils.stripLeadingHyphens(opt),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125opt=getOptionValue(StringUtils.tripLeadingHyphens(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);returnhasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);returnhasOption(String.valueOf(opt)+3);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);hasOption(String.valueOf(opt)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!hasOption(String.valueOf(opt))){returnhasOption(String.valueOf(opt)+2);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(options)+"hasconflictingarguments.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(args)){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+7);privatestaticfinalListargs=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(Arrays.asList(args,CommandLine.NAME_ARGS));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(optionalNames.length()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(option.equals(option.getKey())){for(Map.Entry<String,V>option:opt.getOptions()){values[0]=getOptionValue(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(!opt.equals(options.getValue())){if(opt.equals(options.getValue())){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(hashCodeMap==null)?null:0HashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51return(hashCodeMap==null)?0:HashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.put(opt,Options.stripLeadingHyphens.getKey(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.codeBug();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnsuper.charAt(start,0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51privatestaticfinalMaphashcodeMap=newHashMap()*11;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51publicHashMapoptions=newHashMap("hashMap");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,opt,values);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,key);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(hashcodeMap,optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(key)){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(values)){if(!args.contains(opt)){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(char)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(char)){args=options.get(opt);if(args.contains(".-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(hasOption(charopt)){args=options.get(opt);if(args.contains("-")){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80OptionNames.put(opt,optionsNames.get(opt.getValue(),opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(char)+"-"+Integer.toHexString(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(opt==null){opt=getOptionValue(opt);if(options==null){String[]values=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options==null){opt=getOptionValue(opt);if(opt==null){String[]options=getOptionValues(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notEmpty(opt),butOptions.NOT_Empty(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validator.notEmpty(opt),butstillprovidesOptionValue(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]args=getOptionArgs(opt,HashcodeMap.create());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.contains(arg)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.equals(values)){Map<String>options=getOptionArgs();if(args!=null){values=newString[args.length];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(options.equals(opt)){args=this.options.get(opt);if(args.contains(opt)){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.toLowerCase()){if(args.contains(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringargs:opt.hasLowerCase()){if(args.contains(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69for(Stringopt:opt.toLowerCase()){if(args.contains(opt))returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.hasOption(opt)||properties.hasOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43if(options.hasOption(opt)||options.isOption(opt)){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewArrayList(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnnewArrayList(this.args,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"||"options.get(opt));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125returngetOptionValue(String.valueOf(opt)+"||"valueOf");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(value)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options==null){if(opt!=null){args=options.get(opt);if(args.contains(".-")){thrownewIllegalArgumentException(");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.size()-1):null;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.size()-1):newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();returnoptions.size()==1?options.get(options.keySet()):newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[1];if(opt!=null)[Delete]if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(createOptions(),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125String[]values=getOptionValues(values,opt,hashcodeMap,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(!options.hasOption(opt)){if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOption
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+3);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValue(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalHashMapoptions=newHashMap();privatefinalHashCodeMap=newHashCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,all,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,true,null,args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));if(options.hasOption(String.valueOf(opt))){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.valueOf(opt));options.hasOption(String.valueOf(opt))){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80hasOption(String.keyword(opt));if(options.hasOption(String.valueOf(opt))){returntrue;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(options==null){if(opt!=null){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(options==null){String[]args=getArguments();if(args!=null){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(options==null){if(opt.length==0){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123opt=getOptionValue(opt);if(opt!=null){String[]options=getOptionValues(opt);}if(options==null){if(opt.equals("-")){returnoptions[0];}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+",vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnoptions.getOptionValue(String.valueOf(opt),String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnoptions.getOptionValue(String.valueOf(opt),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returnoptions.getOptionValue(String.valueOf(opt),args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51super.hashCodeMap=newHashCodeMap(40);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){returngetOptionValue(String.valueOf(opt)+1);if(!args.contains(opt)){args=newHashMap<String,Option>();if(args.size()>1){returngetOptionValu
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,HashcodeMap.class),hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.get(opt,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=options.get(opt,baseUri);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+2);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+1);if(!hasOption(opt)){args=options.get(0);if(args.contains(opt))}returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnHashcodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnHashcodeMap.copyOf(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnHashCodeMap.copyOf(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnHashCodeMap.create();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap();returnHashcodeMap.valueOf(hashcodeMap);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();returnnewHashSet<Map>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();returnnewHashSet%Map>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(string)){if(!Options.isEmpty()){returngetOptionValue(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returngetOptionValue(String.valueOf(opt)+"options.get(opt));if(options.containsKey(opt)){returngetOptionValue(String.valueOf(opt)+"vs");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMap<Map.Entry<K,V>>),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){returnthis.options.containsKey(opt);if(this.options.containsKey(opt)){args=this.options.get(opt);if(args.containsValue(opt)){returntrue;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.sort(opt,OptionNames.SOURCENAME_OPTIONAL_KEY);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123OptionNames.sort(opt,OptionNames.SOURCENAME_OPTIONAL_LENGTH);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69returnthis.options.containsKey(opt);if(this.options.hasOption(opt))}thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,CommandLine.COMMAND,private);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),"Optionsareempty.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty(),"Optionsarenotavailable.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(!Options.isEmpty()+opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){returngetOptionValue(String.valueOf(opt)+"vs");for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){returngetOptionValue(String.valueOf(opt)+"vs");for(Stringvs:options.keySet()){if(!args.contains(opt)){returngetOptionValue(String.valueOf(
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMapIntegratedMap.Entry>>K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMapIdentityHashMap&Map.Entry<K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setOptions(options,newHashMapIntegratedMap.Entry<K,V>>);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.getOption(opt)!=null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(options.keySet()));>>
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasArg()){returngetOptionValue(String.valueOf(options.keySet()));[Delete]
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123if(options.containsKey(String.valueOf(opt))[Delete]if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java69if(opt==null){if(!hasOption(opt))}returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(options)).charAt(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returngetOptionValue(String.valueOf(opt),String.valueOf(opt)).charAt(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125for(Stringargs:options.keySet()){if(!hasArgs()){returnoptions.containsKey(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){returnhasOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){returnoptions.containsKey(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.containsKey(opt)){returnoptions.hasOption(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],100;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125return(values==null)?null:values[0],1000;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51staticfinalMaphashcodeMap=newHashMap()*11;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137privatefinalMapoptions=newHashMap(32);privatefinalHashCodeMap=newHashCodeMap(32);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80returnhasOption(String.valueOf(opt)+".:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setStartType(type);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46super.setImpl(true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,hashCodeNames)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt,hashcodeMap,hashCodeModules)+1;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.containsKey(String.valueOf(opt))&&hasOption(String.charAt(0));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.containsKey(String.valueOf(opt))&&hasOption(String.valueOf(options.keySet()));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80elseif(options.containsKey(key)){Stringopt=getOptionValue(String.valueOf(opt));if(opt!=null){returnoptions.get(opt);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(options.length()!=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Preconditions.checkArgument(opt,options.length()!=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap("Illegalstartoftype",options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap("Illegalstartoftype",illegalstartoftype});
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(options.contains(values))[Delete]if(values==null){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewTreeSet(newArrayList());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.containsKey(String.valueOf(opt)))[Delete]if(!hasOption(opt)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),butOptions.notEmpty(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123Validate.notEmpty(opt),butOptions.notEmpty(args);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.setCodeMap(null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.startCodeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.setCodeMap(newHashCode());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125super.setCodeMap("n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String)){if(!hasOption(String.valueOf(opt))){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.hasOption(String)){if(!hasOption(char)){returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==null){if(!args.contains(opt)){returngetOptionValue(String.valueOf(opt)+"..:");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null)[Delete]if(!values.length()==0){thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();publicfinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalListoptions=newHashMap();privatefinalMapoption=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java43returnnewArrayList(args,privateArrayList.class);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51returnhashcodeMap.select(hashcodeMap.keySet());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.contains("-");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions.split("/");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",||vs");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",isVerticalArgument");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+",isVerticalName(char)"));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(String.equals("-")){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(String.isEmpty(opt)){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(String.isEmpty()){hasOption(String.valueOf(opt));if(opt==0){hasOption(String.valueOf(opt));}else{options.put(opt,true);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),hashcodeMap.get(chomp);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123String[]values=getOptionValues(opt),hashcodeMap.get(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(hashCode);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80newHashMap(privateHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.keyword),options.select(opt==null?null:opt.keyword);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.keyword),options.stripLeadingHyphens(opt,options.stripLeadingHyphens);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java51opt=String.valueOf(options.keyword),options.stripLeadingHyphens(opt);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==String.class){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(options.contains("-")){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137if(opt==0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+char));}else{returnfalse;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options.containsKey(String.valueOf(opt))returnhasOption(String.valueOf(opt));&&
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java125if(values==null)?null:values[1];if(opt.equals(values)){returnnull;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java137returngetOptionValue(String.valueOf(opt)+":",Character);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(opt==0){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java80if(options.contains("-")){hasOption(String.valueOf(opt));returngetOptionValue(String.valueOf(opt)+3);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),optionNames);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java123checkArgument(!Options.isEmpty(),Opcodes.USE_DEFAULT);
