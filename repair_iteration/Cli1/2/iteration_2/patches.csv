bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safeNames.putAll(Arrays.asList(options),  options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  safeNames.putAll(Arrays.asList(options),  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNames.putAll(Arrays.asList(options),  options);	  safeNames.putAll(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
2	[BUG]  [BUGGY]  options  =  new  HashMap();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  options  =  new  HashMap();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options  =  new  HashMap();	  options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
3	[BUG]  [BUGGY]  this.options.putAll(options);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.putAll(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.putAll(options);	  options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
4	[BUG]  [BUGGY]  options.clear();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  options.clear();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options.clear();	  options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
5	[BUG]  [BUGGY]  security(options, "Failed  to  parse: "+options.size()  + "null ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  security(options, "Failed  to  parse: "+options.size()  + "null ");  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	security(options, "Failed  to  parse: "+options.size()  + "null ");	  security(   "Failed    to    parse:   "+options.size()    +   "n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
6	[BUG]  [BUGGY]  security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  null. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  null. ");  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  null. ");	  security(   "Failed    to    parse:   "+options.size()    +   "n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
7	[BUG]  [BUGGY]  security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  declared. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  declared. ");  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  declared. ");	  security(   "Failed    to    parse:   "+options.size()    +   "n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
8	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
9	[BUG]  [BUGGY]  null  options  =  new  LinkedHashMap();  AssertionFailedError  =  new  AssertionFailedError();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  LinkedHashMap();  AssertionFailedError  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  LinkedHashMap();  AssertionFailedError  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
10	[BUG]  [BUGGY]  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
11	[BUG]  [BUGGY]  null  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
12	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	add	final  Map  options  =  new  HashMap();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError();    	compilable	  [FE]  AssertionFailedError  	37	1	replace
14	[BUG]  [BUGGY]  final  Map  options  =  new  HashMap();  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  options  =  new  HashMap();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError();    	compilable	  [FE]  AssertionFailedError  	37	1	replace
15	[BUG]  [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
16	[BUG]  [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
17	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
18	[BUG]  [BUGGY]  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorBuilder().append(   "n   ");    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
19	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorBuilder().append(   "n   ");    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
20	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorBuilder().append(   "n   ");    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
21	[BUG]  [BUGGY]  this.options.put( "Error,  null ",  new  IllegalArgumentException( " "));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error,  null ",  new  IllegalArgumentException( " "));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error,  null ",  new  IllegalArgumentException( " "));	  this.options.put(   "Error,   ",    new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
22	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ",  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ",  new  Object[]  {  }  );  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "msg.no.errors ",  new  Object[]  {  }  );	  aughtExceptionHandler.handleMissingError(   "msg.no.errors   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
23	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ",  expected);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ",  expected);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "msg.no.errors ",  expected);	  aughtExceptionHandler.handleMissingError(   "msg.no.errors   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
24	[BUG]  [BUGGY]  safeNameMap.putAll(Arrays.asList(options),  options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeNameMap.putAll(Arrays.asList(options),  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNameMap.putAll(Arrays.asList(options),  options);	  safeNameMap.putAll(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
25	[BUG]  [BUGGY]  this.options.put( "Error,  null ",  new  IllegalArgumentException( "));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error,  null ",  new  IllegalArgumentException( "));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error,  null ",  new  IllegalArgumentException( "));	  this.options.put(   "Error,   ",    new    IllegalArgumentException(   "));    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
26	[BUG]  [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.entrySet();  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.entrySet();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.entrySet();	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    else    {    return    options;    }    	non-compiled	[CE]  >  expected	82	None	replace
27	[BUG]  [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.entrySet().iterator().next();  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.entrySet().iterator().next();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.entrySet().iterator().next();	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    else    {    return    options;    }    	non-compiled	[CE]  >  expected	82	None	replace
28	[BUG]  [BUGGY]  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  this.options.entrySet();  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  this.options.entrySet();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  this.options.entrySet();	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    else    {    return    options;    }    	non-compiled	[CE]  >  expected	82	None	replace
29	[BUG]  [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.getValue();  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.getValue();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.getValue();	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    else    {    return    options;    }    	non-compiled	[CE]  >  expected	82	None	replace
30	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  expected);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  expected);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  expected);	  aughtExceptionHandler.handleMissingError(   "Unexpected    error:   "    +    Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
31	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  options);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  options);	  aughtExceptionHandler.handleMissingError(   "Unexpected    error:   "    +    Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
32	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  new  CommandLine());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  new  CommandLine());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  new  CommandLine());	  aughtExceptionHandler.handleMissingError(   "Unexpected    error:   "    +    Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
33	[BUG]  [BUGGY]  options.sort(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  options.sort(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options.sort(options);	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options.addAll(options);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
34	[BUG]  [BUGGY]  AnnotationFailedErrors.sort(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedErrors.sort(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AnnotationFailedErrors.sort(options);	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options.addAll(options);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
35	[BUG]  [BUGGY]  AnnotationFailedError.class.getSimpleName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.getSimpleName());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AnnotationFailedError.class.getSimpleName());	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options.addAll(options);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
36	[BUG]  [BUGGY]  AnnotationFailedError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.getSimpleName();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AnnotationFailedError.class.getSimpleName();	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options.addAll(options);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
37	[BUG]  [BUGGY]  safeThan(Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  safeThan(Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan(Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));	  safeThan    <    Map.Entry    <    String,    AssertionFailedError    ==    false)    {    options.putAll(Arrays.asList(options));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
38	[BUG]  [BUGGY]  safeThan(map.entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeThan(map.entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan(map.entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));	  safeThan    <    Map.Entry    <    String,    AssertionFailedError    ==    false)    {    options.putAll(Arrays.asList(options));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
39	[BUG]  [BUGGY]  safeThan(map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeThan(map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan(map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));	  safeThan    <    Map.Entry    <    String,    AssertionFailedError    ==    false)    {    options.putAll(Arrays.asList(options));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
40	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(options);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
41	[BUG]  [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  }	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(options);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
42	[BUG]  [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  }	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(options);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
43	[BUG]  [BUGGY]  null  options  =  new  LinkedHashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  LinkedHashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  LinkedHashMap();  AssertionFailedError  =  new  AssertionFailedError(options);	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(options);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
44	[BUG]  [BUGGY]  Option.checkState(options  ==  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Option.checkState(options  ==  null);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Option.checkState(options  ==  null);	  Options.checkState(options    ==    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
45	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
46	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
47	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
48	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError(errors);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError(errors);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError(errors);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
49	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError().getMessage();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError().getMessage();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError().getMessage();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
50	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap(System.out,  System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  HashMap(System.out,  System.err);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap(System.out,  System.err);	  private    Map    options    =    new    HashMap(System.out,    System.err);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)	25	None	replace
51	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.out);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.out);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  System.out);	  private    Map    options    =    new    HashMap(System.out,    System.err);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)	25	None	replace
52	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.out,  System.err,  System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream,PrintStream)  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.out,  System.err,  System.err);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.out,  System.err,  System.err);	  private    Map    options    =    new    HashMap(System.out,    System.err);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream,PrintStream)	25	None	replace
53	[BUG]  [BUGGY]  private  List  options  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  List  options  =  new  ArrayList();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  List  options  =  new  ArrayList();	  private    Map    options    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
54	[BUG]  [BUGGY]  private  final  Map  options  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  ArrayList();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  ArrayList();	  private    Map    options    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
55	[BUG]  [BUGGY]  aughtExceptionHandler.handleError(options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleError(options);	  aughtExceptionHandler.handleMissingName(options);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
56	[BUG]  [BUGGY]  if(options!=  null)  {  aughtExceptionHandler.handleMissingName(options);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  aughtExceptionHandler.handleMissingName(options);  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  aughtExceptionHandler.handleMissingName(options);  }	  aughtExceptionHandler.handleMissingName(options);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
57	[BUG]  [BUGGY]  if(options!=  null)  {  aughtExceptionHandler.handleMissingName(options);  }  else  {  options  =  new  HashMap();  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  aughtExceptionHandler.handleMissingName(options);  }  else  {  options  =  new  HashMap();  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  aughtExceptionHandler.handleMissingName(options);  }  else  {  options  =  new  HashMap();  }	  aughtExceptionHandler.handleMissingName(options);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
58	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options!=  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options!=  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  if(options!=  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  if(options!=  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  if(options!=  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  if(options!=  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  Arrays.sort(options);	  protected    Map    options    =    new    HashMap();    Arrays.sort(options);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
63	[BUG]  [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  }	  protected    Map    options    =    new    HashMap();    Arrays.sort(options);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
64	[BUG]  [BUGGY]  final  Map  options  =  new  HashMap();  Arrays.sort(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  Arrays.sort(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  options  =  new  HashMap();  Arrays.sort(options);	  protected    Map    options    =    new    HashMap();    Arrays.sort(options);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
65	[BUG]  [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  }	  protected    Map    options    =    new    HashMap();    Arrays.sort(options);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
66	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
67	[BUG]  [BUGGY]  null  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
68	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
69	[BUG]  [BUGGY]  null  options  =  new  LinkedHashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  LinkedHashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  LinkedHashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
70	[BUG]  [BUGGY]  Options.checkState(options.size()  ==  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(options.size()  ==  1);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options.size()  ==  1);	  Options.checkState(options.size()    ==    0);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
71	[BUG]  [BUGGY]  Option.checkState(options.size()  ==  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Option.checkState(options.size()  ==  0);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Option.checkState(options.size()  ==  0);	  Options.checkState(options.size()    ==    0);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
72	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(this.symbols));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(this.symbols));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.toString(this.symbols));	  System.err.println(   "Missing    symbol    options:   "    +    Arrays.toString(symbols));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
73	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(name));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(name));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.toString(name));	  System.err.println(   "Missing    symbol    options:   "    +    Arrays.toString(symbols));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
74	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(values));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(values));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.toString(values));	  System.err.println(   "Missing    symbol    options:   "    +    Arrays.toString(symbols));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
75	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
76	[BUG]  [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
77	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "+getMessage(),  expected);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "+getMessage(),  expected);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "+getMessage(),  expected);	  System.err.println(   "Missing    symbol    options:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
78	[BUG]  [BUGGY]  safeMultiply(Arrays.asList(options),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(Arrays.asList(options),  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeMultiply(Arrays.asList(options),  options);	  safeMultiply(Arrays.asList(options)));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
79	[BUG]  [BUGGY]  safeMultiply(Arrays.asList(options,  options)));  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(Arrays.asList(options,  options)));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeMultiply(Arrays.asList(options,  options)));	  safeMultiply(Arrays.asList(options)));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
80	[BUG]  [BUGGY]  System.err.println( "Error: "  +  name  + "  <  identifier> ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Error: "  +  name  + "  <  identifier> ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Error: "  +  name  + "  <  identifier> ");	  System.err.println(   "Error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
81	[BUG]  [BUGGY]  System.err.println( "Error: "  +  name  + "  }   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Error: "  +  name  + "  }   ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Error: "  +  name  + "  }   ");	  System.err.println(   "Error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
82	[BUG]  [BUGGY]  System.err.println( "Error: "  +  name  + "  identifier: "  +  name);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Error: "  +  name  + "  identifier: "  +  name);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Error: "  +  name  + "  identifier: "  +  name);	  System.err.println(   "Error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
83	[BUG]  [BUGGY]  final  protected  Map  options  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  LinkedHashMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  LinkedHashMap();	  final    protected    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
84	[BUG]  [BUGGY]  final  protected  Map  options  =  new  TreeMap();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  TreeMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  TreeMap();	  final    protected    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
85	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap(System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream)  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap(System.err);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap(System.err);	  final    protected    Map    options    =    new    HashMap();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream)	7	None	replace
86	[BUG]  [BUGGY]  options.putAll(Arrays.asList(options)+  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  options.putAll(Arrays.asList(options)+  2);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options.putAll(Arrays.asList(options)+  2);	  options.putAll(Arrays.asList(options)+    1);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
87	[BUG]  [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options)+  1);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options)+  1);  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  options.putAll(Arrays.asList(options)+  1);  }	  options.putAll(Arrays.asList(options)+    1);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
88	[BUG]  [BUGGY]  final  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.getValue();  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.getValue();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.getValue();	  safeThan    <    Map.Entry    <    String,    AssertionFailedError>    options    =(AssertionFailedError)options.getValue();    	non-compiled	[CE]  >  expected	49	None	replace
89	[BUG]  [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.get(0);  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.get(0);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.get(0);	  safeThan    <    Map.Entry    <    String,    AssertionFailedError>    options    =(AssertionFailedError)options.getValue();    	non-compiled	[CE]  >  expected	49	None	replace
90	[BUG]  [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
91	[BUG]  [BUGGY]  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
92	[BUG]  [BUGGY]  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
93	[BUG]  [BUGGY]  safeAdd(options)  {  options.putAll(Arrays.asList(options));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(options)  {  options.putAll(Arrays.asList(options));  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeAdd(options)  {  options.putAll(Arrays.asList(options));  }	  safeMultiply(options)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
94	[BUG]  [BUGGY]  safeMultiply(options)  {  options.putAll(Arrays.asList(options),  null);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(options)  {  options.putAll(Arrays.asList(options),  null);  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeMultiply(options)  {  options.putAll(Arrays.asList(options),  null);  }	  safeMultiply(options)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
95	[BUG]  [BUGGY]  AssertionFailedError.this.options  =  new  HashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.options  =  new  HashMap  <  String,Object>();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError.this.options  =  new  HashMap  <  String,Object>();	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
96	[BUG]  [BUGGY]  AssertionFailedError.this.options  =  new  HashMap();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.options  =  new  HashMap();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError.this.options  =  new  HashMap();	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
97	[BUG]  [BUGGY]  answer.addAll(Arrays.asList(options),  options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  answer.addAll(Arrays.asList(options),  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	answer.addAll(Arrays.asList(options),  options);	  answer.addAll(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
98	[BUG]  [BUGGY]  answer.add(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  answer.add(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	answer.add(Arrays.asList(options));	  answer.addAll(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
99	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
100	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
101	[BUG]  [BUGGY]  null  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
102	[BUG]  [BUGGY]  null  options  =  new  HashSet();  Set  <  String>  options  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashSet();  Set  <  String>  options  =  Sets.newHashSet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashSet();  Set  <  String>  options  =  Sets.newHashSet();	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
103	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  options.put(entry.getKey(),  entry.getValue());  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  options.put(entry.getKey(),  entry.getValue());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  options.put(entry.getKey(),  entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
104	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  options.put(entry.getKey(),  entry.getValue());  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  options.put(entry.getKey(),  entry.getValue());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  options.put(entry.getKey(),  entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
105	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  options.putAll(entry.getKey(),  entry.getValue());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  options.putAll(entry.getKey(),  entry.getValue());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  options.putAll(entry.getKey(),  entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
106	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError()  {  return  options.toArray(new  AssertionFailedError());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError()  {  return  options.toArray(new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError()  {  return  options.toArray(new  AssertionFailedError());  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
107	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  options.putAll(entry.getValue());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  options.putAll(entry.getValue());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    if(options  ==  null)  {  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  options.putAll(entry.getValue());  }	  	non-compiled	[CE]  illegal  start  of  type	6	None	add
108	[BUG]  [BUGGY]  protected  final  Map  options  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  LinkedHashMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  LinkedHashMap();	  protected    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
109	[BUG]  [BUGGY]  protected  final  Map  options  =  new  TreeMap();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  TreeMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  TreeMap();	  protected    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
110	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap(System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream)  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap(System.err);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap(System.err);	  protected    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream)	9	None	replace
111	[BUG]  [BUGGY]  if(options!=  null)  {  Arrays.sort(options,  new  HashMap());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  Arrays.sort(options,  new  HashMap());  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  Arrays.sort(options,  new  HashMap());  }	  Arrays.sort(options,    new    HashMap());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
112	[BUG]  [BUGGY]  Arrays.sort(this.options,  new  HashMap());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Arrays.sort(this.options,  new  HashMap());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Arrays.sort(this.options,  new  HashMap());	  Arrays.sort(options,    new    HashMap());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
113	[BUG]  [BUGGY]  if(options!=  null)  {  Arrays.sort(options,  new  HashMap());  }  else  {  options  =  new  HashMap();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  Arrays.sort(options,  new  HashMap());  }  else  {  options  =  new  HashMap();  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  Arrays.sort(options,  new  HashMap());  }  else  {  options  =  new  HashMap();  }	  Arrays.sort(options,    new    HashMap());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
114	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap(System.err,  System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  HashMap(System.err,  System.err);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap(System.err,  System.err);	  private    Map    options    =    new    HashMap(System.err,    System.err);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)	24	None	replace
115	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.Error,  System.err);  [CE]  cannot  find  symbol  Error  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.Error,  System.err);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.Error,  System.err);	  private    Map    options    =    new    HashMap(System.err,    System.err);    	non-compiled	[CE]  cannot  find  symbol  Error	24	None	replace
116	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err,  errorCode);  [CE]  cannot  find  symbol  errorCode  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err,  errorCode);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  System.err,  errorCode);	  private    Map    options    =    new    HashMap(System.err,    System.err);    	non-compiled	[CE]  cannot  find  symbol  errorCode	24	None	replace
117	[BUG]  [BUGGY]  if(options!=  null)  {  aughtExceptionHandler.handleFailedError(options);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  aughtExceptionHandler.handleFailedError(options);  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  aughtExceptionHandler.handleFailedError(options);  }	  aughtExceptionHandler.handleFailedError(options);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
118	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError(errors);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError(errors);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleFailedError(errors);	  aughtExceptionHandler.handleFailedError(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
119	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError(options,  expected);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError(options,  expected);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleFailedError(options,  expected);	  aughtExceptionHandler.handleFailedError(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
120	[BUG]  [BUGGY]  HashSet  <  String>  options  =  new  HashSet  <  String>(size()  -  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  HashSet  <  String>  options  =  new  HashSet  <  String>(size()  -  1);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashSet  <  String>  options  =  new  HashSet  <  String>(size()  -  1);	  HashSet    <    String>    options    =    new    HashSet    <    String>(size());    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
121	[BUG]  [BUGGY]  HashSet  <  String>  options  =  new  HashSet  <  String>(size()  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  HashSet  <  String>  options  =  new  HashSet  <  String>(size()  +  1);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashSet  <  String>  options  =  new  HashSet  <  String>(size()  +  1);	  HashSet    <    String>    options    =    new    HashSet    <    String>(size());    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
122	[BUG]  [BUGGY]  Set  <  String>  options  =  new  HashSet  <  String>(size());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Set  <  String>  options  =  new  HashSet  <  String>(size());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Set  <  String>  options  =  new  HashSet  <  String>(size());	  HashSet    <    String>    options    =    new    HashSet    <    String>(size());    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
123	[BUG]  [BUGGY]  HashSet  <  String>  options  =  Lists.newHashSet();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  HashSet  <  String>  options  =  Lists.newHashSet();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashSet  <  String>  options  =  Lists.newHashSet();	  HashSet    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
124	[BUG]  [BUGGY]  HashSet  <  String>  options  =  Collections.newHashSet();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  HashSet  <  String>  options  =  Collections.newHashSet();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashSet  <  String>  options  =  Collections.newHashSet();	  HashSet    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
125	[BUG]  [BUGGY]  HashMap  <  String>  options  =  Sets.newHashMap();  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  HashMap  <  String>  options  =  Sets.newHashMap();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashMap  <  String>  options  =  Sets.newHashMap();	  HashSet    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	27	None	replace
126	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");	  protected    Map    options    =    new    HashMap();    AssertionFailedError.warning(   "Missing    error    message   ");    	non-compiled	[CE]  <identifier>  expected	92	None	replace
127	[BUG]  [BUGGY]  null  options  =  new  LinkedHashMap();  AssertionFailedError.warning( "Missing  error  message ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  LinkedHashMap();  AssertionFailedError.warning( "Missing  error  message ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  LinkedHashMap();  AssertionFailedError.warning( "Missing  error  message ");	  protected    Map    options    =    new    HashMap();    AssertionFailedError.warning(   "Missing    error    message   ");    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
128	[BUG]  [BUGGY]  AssertionFailedError.warning( "Missing  error  message ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Missing  error  message ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError.warning( "Missing  error  message ");	  protected    Map    options    =    new    HashMap();    AssertionFailedError.warning(   "Missing    error    message   ");    	non-compiled	[CE]  <identifier>  expected	92	None	replace
129	[BUG]  [BUGGY]  null  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");	  protected    Map    options    =    new    HashMap();    AssertionFailedError.warning(   "Missing    error    message   ");    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
130	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    static    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
131	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  {  return  options.toArray(new  AssertionFailedError[options.size()  ]);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  {  return  options.toArray(new  AssertionFailedError[options.size()  ]);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    static    final    Map    options    =    new    HashMap();    final  AssertionFailedError  {  return  options.toArray(new  AssertionFailedError[options.size()  ]);	  	non-compiled	[CE]  <identifier>  expected	21	None	add
132	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    static    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
133	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  {  return  options.toArray(new  AssertionFailedError());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  {  return  options.toArray(new  AssertionFailedError());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    static    final    Map    options    =    new    HashMap();    final  AssertionFailedError  {  return  options.toArray(new  AssertionFailedError());	  	non-compiled	[CE]  <identifier>  expected	21	None	add
134	[BUG]  [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options));  }  else  {  return  new  HashMap();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options));  }  else  {  return  new  HashMap();  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  options.putAll(Arrays.asList(options));  }  else  {  return  new  HashMap();  }	  options.putAll(Arrays.asList(options));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
135	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap(System.err,  1);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int)  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  HashMap(System.err,  1);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap(System.err,  1);	  private    Map    options    =    new    HashMap(System.err,    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int)	94	None	replace
136	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  0,  1);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int,int)  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.err,  0,  1);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  0,  1);	  private    Map    options    =    new    HashMap(System.err,    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int,int)	94	None	replace
137	[BUG]  [BUGGY]  Options.checkState(options.size()  >  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(options.size()  >  1);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options.size()  >  1);	  Options.checkState(options.size()    >    0);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
138	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
139	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
140	[BUG]  [BUGGY]  null  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
141	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(optionals);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(optionals);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(optionals);	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
142	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError(options);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
143	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError(options);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
144	[BUG]  [BUGGY]  options!=  null  &&  options.size()  >  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  options!=  null  &&  options.size()  >  0;  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options!=  null  &&  options.size()  >  0;	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
145	[BUG]  [BUGGY]  options!=  null  &&  options.sort(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  options!=  null  &&  options.sort(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options!=  null  &&  options.sort(options);	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
146	[BUG]  [BUGGY]  Options.sort(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Options.sort(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.sort(options);	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
147	[BUG]  [BUGGY]  AssertionFailedError[]  warnings  =  getAssertionFailedErrors();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError[]  warnings  =  getAssertionFailedErrors();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError[]  warnings  =  getAssertionFailedErrors();	  safeAssertionFailedErrors();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
148	[BUG]  [BUGGY]  AssertionFailedError[]  warnings  =  new  AssertionFailedError[size()  ];  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError[]  warnings  =  new  AssertionFailedError[size()  ];  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError[]  warnings  =  new  AssertionFailedError[size()  ];	  safeAssertionFailedErrors();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
149	[BUG]  [BUGGY]  AssertionFailedError[]  errors  =  new  AssertionFailedError[size()  ];  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError[]  errors  =  new  AssertionFailedError[size()  ];  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError[]  errors  =  new  AssertionFailedError[size()  ];	  safeAssertionFailedErrors();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
150	[BUG]  [BUGGY]  AssertionFailedError[]  warnings  =  this.safeAssertionFailedErrors();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError[]  warnings  =  this.safeAssertionFailedErrors();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError[]  warnings  =  this.safeAssertionFailedErrors();	  safeAssertionFailedErrors();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
151	[BUG]  [BUGGY]  this.options.put( "Error, ",  new  IllegalStateException());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error, ",  new  IllegalStateException());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error, ",  new  IllegalStateException());	  this.options.put(   "Error   ",    new    IllegalStateException());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
152	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorHandler();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
153	[BUG]  [BUGGY]  null  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorHandler();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
154	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorHandler();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
155	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  LinkedHashMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  LinkedHashMap();	  private    static    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
156	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap(System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream)  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap(System.err);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap(System.err);	  private    static    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream)	22	None	replace
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap(System.getProperties());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	add	private  static  final  Map  options  =  new  HashMap(System.getProperties());	  private    static    final    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
158	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap(System.getProperties());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap(System.getProperties());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap(System.getProperties());	  private    static    final    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
159	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.asList(identifiers));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.asList(identifiers));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.asList(identifiers));	  System.err.println(   "Missing    symbol    options:   "    +    Arrays.asList(symbols));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
160	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.asList(this.symbols));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.asList(this.symbols));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.asList(this.symbols));	  System.err.println(   "Missing    symbol    options:   "    +    Arrays.asList(symbols));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
161	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.asList(names));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.asList(names));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.asList(names));	  System.err.println(   "Missing    symbol    options:   "    +    Arrays.asList(symbols));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
162	[BUG]  [BUGGY]  safeNameMap.putAll(Arrays.asList(options),  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeNameMap.putAll(Arrays.asList(options),  true);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNameMap.putAll(Arrays.asList(options),  true);	  safeNameMap.putAll(Arrays.asList(options),    false);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
163	[BUG]  [BUGGY]  OptionFailedError.checkState(options.size()  ==  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(options.size()  ==  1);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(options.size()  ==  1);	  OptionFailedError.checkState(options.size()    ==    0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
164	[BUG]  [BUGGY]  OptionFailedError.checkState(options.size()  ==  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(options.size()  ==  2);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(options.size()  ==  2);	  OptionFailedError.checkState(options.size()    ==    0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
165	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name  + "  -> ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name  + "  -> ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  name  + "  -> ");	  System.err.println(   "Missing    symbol    options:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
166	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name  + "  error  message);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name  + "  error  message);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  name  + "  error  message);	  System.err.println(   "Missing    symbol    options:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
167	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name  + "  identifier> ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name  + "  identifier> ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  name  + "  identifier> ");	  System.err.println(   "Missing    symbol    options:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
168	[BUG]  [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedErrorImpl();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
169	[BUG]  [BUGGY]  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedErrorImpl();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
170	[BUG]  [BUGGY]  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedErrorImpl();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
171	[BUG]  [BUGGY]  OptionFailedError.checkState(Arrays.asList(options),  options.size());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(Arrays.asList(options),  options.size());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(Arrays.asList(options),  options.size());	  OptionFailedError.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
172	[BUG]  [BUGGY]  OptionFailedError.checkState(Arrays.asList(options,  options));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(Arrays.asList(options,  options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(Arrays.asList(options,  options));	  OptionFailedError.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
173	[BUG]  [BUGGY]  OptionFailedError.checkState(Arrays.asList(options),  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(Arrays.asList(options),  null);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(Arrays.asList(options),  null);	  OptionFailedError.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
174	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);	  protected    Map    options    =    new    HashMap();    Arrays.sort(this.options);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
175	[BUG]  [BUGGY]  if(this.options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  if(this.options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }	  protected    Map    options    =    new    HashMap();    Arrays.sort(this.options);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
176	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  Arrays.sort(this.options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  Arrays.sort(this.options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  Arrays.sort(this.options);	  protected    Map    options    =    new    HashMap();    Arrays.sort(this.options);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
177	[BUG]  [BUGGY]  if(this.options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(this.options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  protected    Map    options    =    new    HashMap();    Arrays.sort(this.options);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
178	[BUG]  [BUGGY]  safeMultiply(Arrays.asList(options,  options));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(Arrays.asList(options,  options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeMultiply(Arrays.asList(options,  options));	  safeMultiply(Arrays.asList(options));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
179	[BUG]  [BUGGY]  protected  Map  options  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  protected  Map  options  =  new  ArrayList();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  Map  options  =  new  ArrayList();	  protected    Map    options    =    new    LinkedHashMap();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
180	[BUG]  [BUGGY]  protected  Map  options  =  new  ArrayMap();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  protected  Map  options  =  new  ArrayMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  Map  options  =  new  ArrayMap();	  protected    Map    options    =    new    LinkedHashMap();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
181	[BUG]  [BUGGY]  private  final  Map  options  =  new  ArrayMap();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  ArrayMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  ArrayMap();	  private    final    Map    options    =    new    LinkedHashMap();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
182	[BUG]  [BUGGY]  System.err.println( "Missing  error: "  +  identifier);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  error: "  +  identifier);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  error: "  +  identifier);	  System.err.println(   "Missing    error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
183	[BUG]  [BUGGY]  System.err.println( "Missing  error: "  +  name  + "  }   ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  error: "  +  name  + "  }   ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  error: "  +  name  + "  }   ");	  System.err.println(   "Missing    error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
184	[BUG]  [BUGGY]  System.err.println( "Missing  error: "  +  name  + "  => ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  error: "  +  name  + "  => ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  error: "  +  name  + "  => ");	  System.err.println(   "Missing    error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
185	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(this,    options);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
186	[BUG]  [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  }	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(this,    options);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
187	[BUG]  [BUGGY]  nullParameters  =  new  LinkedHashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  nullParameters  =  new  LinkedHashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	nullParameters  =  new  LinkedHashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(this,    options);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
188	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this);	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(this,    options);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
189	[BUG]  [BUGGY]  Arrays.sort(this.options,  this.options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Arrays.sort(this.options,  this.options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Arrays.sort(this.options,  this.options);	  Arrays.sort(this.options,    options);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
190	[BUG]  [BUGGY]  this.options.put( "Error ",  new  IllegalStateException( "));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error ",  new  IllegalStateException( "));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error ",  new  IllegalStateException( "));	  this.options.put(   "Error   ",    new    IllegalArgumentException(   "));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
191	[BUG]  [BUGGY]  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  options  =  new  HashMap();  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet().iterator().next();    	non-compiled	[CE]  >  expected	38	None	replace
192	[BUG]  [BUGGY]  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet().iterator().next();    	non-compiled	[CE]  >  expected	38	None	replace
193	[BUG]  [BUGGY]  final  HashMap  options  =  new  HashMap();  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  HashMap  options  =  new  HashMap();  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  HashMap  options  =  new  HashMap();  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet().iterator().next();    	non-compiled	[CE]  >  expected	38	None	replace
194	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    else    {    options.put(   "[AssertionFailedError:   "    +    getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
195	[BUG]  [BUGGY]  Collections.newArrayList();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Collections.newArrayList();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Collections.newArrayList();	  Collections.newHashSet();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
196	[BUG]  [BUGGY]  Collections.sort(options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Collections.sort(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Collections.sort(options);	  Collections.newHashSet();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
197	[BUG]  [BUGGY]  Collections.newHashMap();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Collections.newHashMap();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Collections.newHashMap();	  Collections.newHashSet();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
198	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());	  protected    Map    options    =    new    HashMap();    this.options.put(   "AssertionFailedError   ",    new    AssertionFailedError());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
199	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());	  protected    Map    options    =    new    HashMap();    this.options.put(   "AssertionFailedError   ",    new    AssertionFailedError());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
200	[BUG]  [BUGGY]  System.err.println( "Error: "  +  getMessage(),  expected);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Error: "  +  getMessage(),  expected);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Error: "  +  getMessage(),  expected);	  System.err.println(   "Error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
201	[BUG]  [BUGGY]  System.err.println( "Warning: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Warning: "  +  getMessage());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Warning: "  +  getMessage());	  System.err.println(   "Error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
202	[BUG]  [BUGGY]  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError(   "Unexpected    exception:   "+error.getMessage());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
203	[BUG]  [BUGGY]  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError(   "Unexpected    exception:   "+error.getMessage());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
204	[BUG]  [BUGGY]  final  HashMap  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  final  HashMap  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  HashMap  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError(   "Unexpected    exception:   "+error.getMessage());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
205	[BUG]  [BUGGY]  public  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    else    {    options.put(   "[AssertionFailedError:   "    +    System.identityHashCode    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
206	[BUG]  [BUGGY]  options.put( "identifier ",  new  AssertionFailedError());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  options.put( "identifier ",  new  AssertionFailedError());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options.put( "identifier ",  new  AssertionFailedError());	  options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
207	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  asString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  asString());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  asString());	  System.err.println(   "Missing    symbol    options:   "    +    asPath());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
208	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  asPath(),  asPath());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  asPath(),  asPath());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  asPath(),  asPath());	  System.err.println(   "Missing    symbol    options:   "    +    asPath());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
209	[BUG]  [BUGGY]  this.options.put( "Error,  new  IllegalArgumentException());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error,  new  IllegalArgumentException());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error,  new  IllegalArgumentException());	  this.options.put(   "Error,   ",    new    IllegalArgumentException());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
210	[BUG]  [BUGGY]  this.options.put( "Error,  null ",  new  IllegalArgumentException());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error,  null ",  new  IllegalArgumentException());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error,  null ",  new  IllegalArgumentException());	  this.options.put(   "Error,   ",    new    IllegalArgumentException());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
211	[BUG]  [BUGGY]  safeNames.addAll(Arrays.asList(options),  options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeNames.addAll(Arrays.asList(options),  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNames.addAll(Arrays.asList(options),  options);	  safeNames.addAll(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	68	None	replace
212	[BUG]  [BUGGY]  safeNames.add(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  safeNames.add(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNames.add(Arrays.asList(options));	  safeNames.addAll(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	68	None	replace
213	[BUG]  [BUGGY]  Options.checkState(options.size()  ==  options.size()  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(options.size()  ==  options.size()  -  1);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options.size()  ==  options.size()  -  1);	  Options.checkState(options.size()    ==    options.size());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
214	[BUG]  [BUGGY]  Options.checkState(options.size()!=  options.size());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(options.size()!=  options.size());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options.size()!=  options.size());	  Options.checkState(options.size()    ==    options.size());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
215	[BUG]  [BUGGY]  OptionFailedError.checkState(options.size()  >  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(options.size()  >  1);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(options.size()  >  1);	  OptionFailedError.checkState(options.size()    >    0);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
216	[BUG]  [BUGGY]  OptionFailedError.checkState(options.size()!=  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(options.size()!=  0);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(options.size()!=  0);	  OptionFailedError.checkState(options.size()    >    0);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
217	[BUG]  [BUGGY]  Arrays.sort(options,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Arrays.sort(options,  null);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Arrays.sort(options,  null);	  Arrays.sort(options,    options);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
218	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    options    =    new    AssertionFailedError(options);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
219	[BUG]  [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	null  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    options    =    new    AssertionFailedError(options);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
220	[BUG]  [BUGGY]  if(options!=  null)  {  Options.checkState(Arrays.asList(options));  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  Options.checkState(Arrays.asList(options));  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  Options.checkState(Arrays.asList(options));  }	  Options.checkState(Arrays.asList(options));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
221	[BUG]  [BUGGY]  AssertionFailedError.checkState(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError.checkState(Arrays.asList(options));	  Options.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
222	[BUG]  [BUGGY]  if(options!=  null)  {  Options.checkState(Arrays.asList(options));  }  else  {  options  =  new  HashMap();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  Options.checkState(Arrays.asList(options));  }  else  {  options  =  new  HashMap();  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  Options.checkState(Arrays.asList(options));  }  else  {  options  =  new  HashMap();  }	  Options.checkState(Arrays.asList(options));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
223	[BUG]  [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options),  options);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options),  options);  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  options.putAll(Arrays.asList(options),  options);  }	  options.putAll(Arrays.asList(options),    options);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
224	[BUG]  [BUGGY]  options.putAll(Arrays.asList(options),  new  HashMap());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  options.putAll(Arrays.asList(options),  new  HashMap());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options.putAll(Arrays.asList(options),  new  HashMap());	  options.putAll(Arrays.asList(options),    options);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
225	[BUG]  [BUGGY]  final  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.clone();  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.clone();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.clone();	  safeThan    <    Map.Entry    <    String,    AssertionFailedError>    options    =(AssertionFailedError)options.clone();    	non-compiled	[CE]  >  expected	48	None	replace
226	[BUG]  [BUGGY]  HashMap  <  String>  options  =  new  HashMap  <  String>();  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  HashMap  <  String>  options  =  new  HashMap  <  String>();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashMap  <  String>  options  =  new  HashMap  <  String>();	  HashSet    <    String>    options    =    new    HashSet    <    String>();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	26	None	replace
227	[BUG]  [BUGGY]  HashSet  <  String>  options  =  new  LinkedHashSet  <  String>();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  HashSet  <  String>  options  =  new  LinkedHashSet  <  String>();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashSet  <  String>  options  =  new  LinkedHashSet  <  String>();	  HashSet    <    String>    options    =    new    HashSet    <    String>();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
228	[BUG]  [BUGGY]  Set  <  String>  options  =  new  HashSet  <  String>();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Set  <  String>  options  =  new  HashSet  <  String>();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Set  <  String>  options  =  new  HashSet  <  String>();	  HashSet    <    String>    options    =    new    HashSet    <    String>();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
229	[BUG]  [BUGGY]  if(options!=  null)  {  options.sort(options);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  options.sort(options);  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  options.sort(options);  }	  if(options!=    null)    {    Arrays.sort(options);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
230	[BUG]  [BUGGY]  if(options!=  null)  {  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  }	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
231	[BUG]  [BUGGY]  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet();    	non-compiled	[CE]  >  expected	40	None	replace
232	[BUG]  [BUGGY]  if(options!=  null)  {  private  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  private  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  private  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  }	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
233	[BUG]  [BUGGY]  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  options  =  new  HashMap();  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet();    	non-compiled	[CE]  >  expected	40	None	replace
234	[BUG]  [BUGGY]  Sets.newHashSet(options,  options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Sets.newHashSet(options,  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Sets.newHashSet(options,  options);	  Sets.newHashSet(options);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
235	[BUG]  [BUGGY]  Sets.newHashSet(options).clear();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Sets.newHashSet(options).clear();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Sets.newHashSet(options).clear();	  Sets.newHashSet(options);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
236	[BUG]  [BUGGY]  safeThan(array,  Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  safeThan(array,  Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan(array,  Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));	  safeThan    <    Map.Entry    <    String,    AssertionFailedError    ==    false)    {    options.putAll(Arrays.asList(options));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
237	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(options);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
238	[BUG]  [BUGGY]  final  protected  Map  options  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  ArrayList();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  ArrayList();	  final    protected    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
239	[BUG]  [BUGGY]  public  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
240	[BUG]  [BUGGY]  aughtExceptionHandler.handleError( "msg.sort.options ",  options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError( "msg.sort.options ",  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleError( "msg.sort.options ",  options);	  if(options!=    null)    {    Arrays.sort(options);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
241	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.sort.options ",  options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.sort.options ",  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "msg.sort.options ",  options);	  if(options!=    null)    {    Arrays.sort(options);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
242	[BUG]  [BUGGY]  Options.checkState(options.size()  ==  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(options.size()  ==  2);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options.size()  ==  2);	  Options.checkState(options.size()    ==    0);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
243	[BUG]  [BUGGY]  public  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
244	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
245	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
246	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
247	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
248	[BUG]  [BUGGY]  safeNames.putAll(options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  safeNames.putAll(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNames.putAll(options);	  safeNames.putAll(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
249	[BUG]  [BUGGY]  return  options  ==  null?  null  :  options.toArray(new  String[]  {  }  );  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  return  options  ==  null?  null  :  options.toArray(new  String[]  {  }  );  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	return  options  ==  null?  null  :  options.toArray(new  String[]  {  }  );	  options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
250	[BUG]  [BUGGY]  return  options  ==  null?  null  :  options.toArray(new  AssertionFailedError[]  {  }  );  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  return  options  ==  null?  null  :  options.toArray(new  AssertionFailedError[]  {  }  );  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	return  options  ==  null?  null  :  options.toArray(new  AssertionFailedError[]  {  }  );	  options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
251	[BUG]  [BUGGY]  return  options  ==  null?  null  :  options.toArray(new  AssertionFailedError[options.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  return  options  ==  null?  null  :  options.toArray(new  AssertionFailedError[options.size()  ]);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	return  options  ==  null?  null  :  options.toArray(new  AssertionFailedError[options.size()  ]);	  options!=    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
252	[BUG]  [BUGGY]  safeAdd(Arrays.asList(options));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeAdd(Arrays.asList(options));	  safeMultiply(Arrays.asList(options));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
253	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  this);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  this);	  aughtExceptionHandler.handleMissingError(   "Unexpected    error:   "    +    Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
254	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  identifier);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  identifier);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  identifier);	  aughtExceptionHandler.handleMissingError(   "Unexpected    error:   "    +    Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
255	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(this,  options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(this,  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingName(this,  options);	  aughtExceptionHandler.handleMissingName(options);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
256	[BUG]  [BUGGY]  HashMap  <  String>  options  =  new  HashMap  <  String>(size());  [CE]  wrong  number  of  type  arguments;  required  2  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  HashMap  <  String>  options  =  new  HashMap  <  String>(size());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashMap  <  String>  options  =  new  HashMap  <  String>(size());	  HashSet    <    String>    options    =    new    HashSet    <    String>(size());    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  2	95	None	replace
257	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError(options);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
258	[BUG]  [BUGGY]  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError(options);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
259	[BUG]  [BUGGY]  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  Map  options  =  new  HashMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	add	public  Map  options  =  new  HashMap();	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    else    {    options.put(   "[AssertionFailedError:   "    +    System.identityHashCode    	compilable	  [FE]  AssertionFailedError  	3	1	replace
261	[BUG]  [BUGGY]  public  Map  options  =  new  HashMap();  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  Map  options  =  new  HashMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  Map  options  =  new  HashMap();	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    else    {    options.put(   "[AssertionFailedError:   "    +    System.identityHashCode    	compilable	  [FE]  AssertionFailedError  	3	1	replace
262	[BUG]  [BUGGY]  this.options.put( "Error,   ",  new  IllegalArgumentException( ", "));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error,   ",  new  IllegalArgumentException( ", "));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error,   ",  new  IllegalArgumentException( ", "));	  this.options.put(   "Error,   ",    new    IllegalArgumentException(   "));    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
263	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(identifiers));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(identifiers));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.toString(identifiers));	  System.err.println(   "Missing    symbol    options:   "    +    Arrays.toString(symbols));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
264	[BUG]  [BUGGY]  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
265	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
266	[BUG]  [BUGGY]  Sets.newEmptySet();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Sets.newEmptySet();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Sets.newEmptySet();	  Sets.newLinkedHashSet();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
267	[BUG]  [BUGGY]  Sets.newLinkedHashSet(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Sets.newLinkedHashSet(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Sets.newLinkedHashSet(options);	  Sets.newLinkedHashSet();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
268	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name  + "  => ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name  + "  => ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  name  + "  => ");	  System.err.println(   "Missing    symbol    options:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
269	[BUG]  [BUGGY]  protected  final  Map  options  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  ArrayList();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  ArrayList();	  protected    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
270	[BUG]  [BUGGY]  Option.checkState(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Option.checkState(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Option.checkState(Arrays.asList(options));	  Options.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
271	[BUG]  [BUGGY]  public  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorHandler();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
272	[BUG]  [BUGGY]  private  HashSet  <  String>  options  =  new  HashSet  <  String>();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  HashSet  <  String>  options  =  new  HashSet  <  String>();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  HashSet  <  String>  options  =  new  HashSet  <  String>();	  HashSet    <    String>    options    =    new    HashSet    <    String>();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
273	[BUG]  [BUGGY]  final  HashSet  <  String>  options  =  new  HashSet  <  String>();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  final  HashSet  <  String>  options  =  new  HashSet  <  String>();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  HashSet  <  String>  options  =  new  HashSet  <  String>();	  HashSet    <    String>    options    =    new    HashSet    <    String>();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
274	[BUG]  [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  }	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
275	[BUG]  [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  }	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
276	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
277	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options,  options);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options,  options);  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options!=  null)  {  Arrays.sort(this.options,  options);  }	  Arrays.sort(this.options,    options);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
278	[BUG]  [BUGGY]  safely(options)  {  options.putAll(Arrays.asList(options));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safely(options)  {  options.putAll(Arrays.asList(options));  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safely(options)  {  options.putAll(Arrays.asList(options));  }	  safeMultiply(options)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
279	[BUG]  [BUGGY]  safeMultiply(options)  {  options.putAll(Arrays.asList(options)+  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(options)  {  options.putAll(Arrays.asList(options)+  1);  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeMultiply(options)  {  options.putAll(Arrays.asList(options)+  1);  }	  safeMultiply(options)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
280	[BUG]  [BUGGY]  System.err.println( "Missing  error: "  +  name,  expected);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  error: "  +  name,  expected);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  error: "  +  name,  expected);	  System.err.println(   "Missing    error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
281	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.putAll(options);  }  else  {  options.putAll(options);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.putAll(options);  }  else  {  options.putAll(options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    static    final    Map    options    =    new    HashMap();    if(options  ==  null)  {  options.putAll(options);  }  else  {  options.putAll(options);  }	  	non-compiled	[CE]  illegal  start  of  type	21	None	add
282	[BUG]  [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.getEntry();  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.getEntry();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.getEntry();	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    	non-compiled	[CE]  >  expected	29	None	replace
283	[BUG]  [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.entrySet().iterator();  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.entrySet().iterator();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  <  Map.Entry  <  String,Object>  entry  =  this.options.entrySet().iterator();	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    	non-compiled	[CE]  >  expected	29	None	replace
284	[BUG]  [BUGGY]  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
285	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
286	[BUG]  [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  iterator  =  this.options.entrySet().iterator();  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  <  Map.Entry  <  String,Object>  iterator  =  this.options.entrySet().iterator();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  <  Map.Entry  <  String,Object>  iterator  =  this.options.entrySet().iterator();	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    else    {    return    options;    }    	non-compiled	[CE]  >  expected	82	None	replace
287	[BUG]  [BUGGY]  options.putAll(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  options.putAll(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options.putAll(options);	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
288	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError(   "Unexpected    exception:   "+error.getMessage());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
289	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError(   "Unexpected    exception:   "+error.getMessage());    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
290	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "n   ");  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "n   ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "n   ");	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorBuilder().append(   "n   ");    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
291	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "n   ");  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "n   ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "n   ");	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorBuilder().append(   "n   ");    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
292	[BUG]  [BUGGY]  Option.checkState(options.size()  ==  options.size());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Option.checkState(options.size()  ==  options.size());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Option.checkState(options.size()  ==  options.size());	  Options.checkState(options.size()    ==    options.size());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
293	[BUG]  [BUGGY]  if(options!=  null)  {  Arrays.sort(options,  options);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  Arrays.sort(options,  options);  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  Arrays.sort(options,  options);  }	  Arrays.sort(options,    options);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
294	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ",  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ",  null);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "msg.no.errors ",  null);	  aughtExceptionHandler.handleMissingError(   "msg.no.errors   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
295	[BUG]  [BUGGY]  aughtExceptionHandler.handleError( "msg.no.errors ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError( "msg.no.errors ");  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleError( "msg.no.errors ");	  aughtExceptionHandler.handleMissingError(   "msg.no.errors   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
296	[BUG]  [BUGGY]  if(options!=  null)  {  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  }	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
297	[BUG]  [BUGGY]  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet();    	non-compiled	[CE]  >  expected	40	None	replace
298	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap(System.identityHashCode(this));  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap(System.identityHashCode(this));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap(System.identityHashCode(this));	  private    static    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	22	None	replace
299	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  ==  AssertionFailedError.error(options);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  ==  AssertionFailedError.error(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError  ==  AssertionFailedError.error(options);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
300	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  ==  AssertionFailedError;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  ==  AssertionFailedError;  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError  ==  AssertionFailedError;	  	non-compiled	[CE]  <identifier>  expected	6	None	add
301	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError.error(options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError.error(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    AssertionFailedError.error(options);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
302	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  ==  AssertionFailedError.class;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  ==  AssertionFailedError.class;  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError  ==  AssertionFailedError.class;	  	non-compiled	[CE]  <identifier>  expected	6	None	add
303	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  ==  AssertionFailedError.warning( "msg.invalid.errors ",  options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  ==  AssertionFailedError.warning( "msg.invalid.errors ",  options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError  ==  AssertionFailedError.warning( "msg.invalid.errors ",  options);	  	non-compiled	[CE]  <identifier>  expected	6	None	add
304	[BUG]  [BUGGY]  safeMultiply(Arrays.asList(options)),  options);  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(Arrays.asList(options)),  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeMultiply(Arrays.asList(options)),  options);	  safeMultiply(Arrays.asList(options)));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
305	[BUG]  [BUGGY]  safeNames.addAll(Arrays.asList(options)+  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeNames.addAll(Arrays.asList(options)+  1);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNames.addAll(Arrays.asList(options)+  1);	  safeNames.addAll(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	68	None	replace
306	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  asPath()  + "n ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  asPath()  + "n ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  asPath()  + "n ");	  System.err.println(   "Missing    symbol    options:   "    +    asPath());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
307	[BUG]  [BUGGY]  System.err.println( "Error: "  +  name  + "  {  0  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Error: "  +  name  + "  {  0  }   ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Error: "  +  name  + "  {  0  }   ");	  System.err.println(   "Error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
308	[BUG]  [BUGGY]  OptionFailedError.class.getSimpleName())  {  options  =  new  HashMap();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.class.getSimpleName())  {  options  =  new  HashMap();  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.class.getSimpleName())  {  options  =  new  HashMap();  }	  options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
309	[BUG]  [BUGGY]  OptionFailedError.class.getSimpleName())  {  options  =  new  HashMap();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.class.getSimpleName())  {  options  =  new  HashMap();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.class.getSimpleName())  {  options  =  new  HashMap();	  options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
310	[BUG]  [BUGGY]  this.options  =  new  HashMap();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  this.options  =  new  HashMap();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options  =  new  HashMap();	  options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
311	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    options    =    new    AssertionFailedError(options);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
312	[BUG]  [BUGGY]  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    options    =    new    AssertionFailedError(options);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
313	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");	  protected    Map    options    =    new    HashMap();    AssertionFailedError.warning(   "Missing    error    message   ");    	non-compiled	[CE]  <identifier>  expected	92	None	replace
314	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(this,    options);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
315	[BUG]  [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  }	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(this,    options);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
316	[BUG]  [BUGGY]  public  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  public  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
317	[BUG]  [BUGGY]  protected  List  options  =  new  ArrayList();  Set  <  String>  options  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  List  options  =  new  ArrayList();  Set  <  String>  options  =  Sets.newHashSet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  List  options  =  new  ArrayList();  Set  <  String>  options  =  Sets.newHashSet();	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
318	[BUG]  [BUGGY]  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedErrorImpl();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
319	[BUG]  [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	public  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedErrorImpl();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
320	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedErrorImpl();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
321	[BUG]  [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.getKey();  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.getKey();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.getKey();	  safeThan    <    Map.Entry    <    String,    AssertionFailedError>    options    =(AssertionFailedError)options.getValue();    	non-compiled	[CE]  >  expected	49	None	replace
322	[BUG]  [BUGGY]  security(options, "Failed  to  parse: "+options.size()  + ",null ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  security(options, "Failed  to  parse: "+options.size()  + ",null ");  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	security(options, "Failed  to  parse: "+options.size()  + ",null ");	  security(   "Failed    to    parse:   "+options.size()    +   "n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
323	[BUG]  [BUGGY]  this.options.put( "Error: "  +  getMessage(),  new  IllegalStateException());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error: "  +  getMessage(),  new  IllegalStateException());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error: "  +  getMessage(),  new  IllegalStateException());	  this.options.put(   "Error   ",    new    IllegalStateException());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
324	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  2);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int)  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.err,  2);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  2);	  private    Map    options    =    new    HashMap(System.err,    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int)	94	None	replace
325	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  1L);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,long)  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.err,  1L);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  1L);	  private    Map    options    =    new    HashMap(System.err,    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,long)	94	None	replace
326	[BUG]  [BUGGY]  OptionFailedError.checkState(options!=  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(options!=  null);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(options!=  null);	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options.addAll(options);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
327	[BUG]  [BUGGY]  OptionFailedError.checkNotNull(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkNotNull(options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkNotNull(options);	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options.addAll(options);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
328	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError(this,  options);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError(this,  options);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleFailedError(this,  options);	  aughtExceptionHandler.handleFailedError(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
329	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError(this);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError(this);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleFailedError(this);	  aughtExceptionHandler.handleFailedError(options);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
330	[BUG]  [BUGGY]  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet().iterator().next();    	non-compiled	[CE]  >  expected	38	None	replace
331	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet().iterator().next();    	non-compiled	[CE]  >  expected	38	None	replace
332	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet().iterator().next();    	non-compiled	[CE]  >  expected	38	None	replace
333	[BUG]  [BUGGY]  OptionFailedError.checkState(Arrays.asList(options)+  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(Arrays.asList(options)+  1);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(Arrays.asList(options)+  1);	  OptionFailedError.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
334	[BUG]  [BUGGY]  OptionFailedError.checkState(Arrays.asList(options)||  options.size()  ==  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(Arrays.asList(options)||  options.size()  ==  0);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(Arrays.asList(options)||  options.size()  ==  0);	  OptionFailedError.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
335	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err,  null);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream,<null>)  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err,  null);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  System.err,  null);	  private    Map    options    =    new    HashMap(System.err,    System.err);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream,<null>)	24	None	replace
336	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err,  logger);  [CE]  cannot  find  symbol  logger  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err,  logger);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  System.err,  logger);	  private    Map    options    =    new    HashMap(System.err,    System.err);    	non-compiled	[CE]  cannot  find  symbol  logger	24	None	replace
337	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  Arrays.sort(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  Arrays.sort(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  Arrays.sort(options);	  protected    Map    options    =    new    HashMap();    Arrays.sort(options);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
338	[BUG]  [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  protected    Map    options    =    new    HashMap();    Arrays.sort(options);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
339	[BUG]  [BUGGY]  nullParser()  {  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  nullParser()  {  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	nullParser()  {  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
340	[BUG]  [BUGGY]  if(options  ==  null)  {  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(options  ==  null)  {  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options  ==  null)  {  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
341	[BUG]  [BUGGY]  if(options!=  null)  {  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  protected  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
342	[BUG]  [BUGGY]  AssertionFailedError.checkState(this.options!=  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.checkState(this.options!=  null);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError.checkState(this.options!=  null);	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    else    {    return    options;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
343	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options);  return  options;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options);  return  options;  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options!=  null)  {  Arrays.sort(this.options);  return  options;  }	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    else    {    return    options;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
344	[BUG]  [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  options.putAll(Arrays.asList(options));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  options.putAll(Arrays.asList(options));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
345	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
346	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  TreeMap();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  TreeMap();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  TreeMap();	  private    static    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
347	[BUG]  [BUGGY]  Options.checkState(options.size()  >  options.size());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(options.size()  >  options.size());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options.size()  >  options.size());	  Options.checkState(options.size()    ==    options.size());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
348	[BUG]  [BUGGY]  if(options!=  null)  {  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  protected  final  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  }	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError(this,    options);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
349	[BUG]  [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  }	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorHandler();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
350	[BUG]  [BUGGY]  AssertionFailedError  error  =  safeAssertionFailedError();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  error  =  safeAssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  error  =  safeAssertionFailedError();	  safeAssertionFailedErrors();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
351	[BUG]  [BUGGY]  assertionFailedError();  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  assertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	assertionFailedError();	  safeAssertionFailedErrors();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
352	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedErrorImpl();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
353	[BUG]  [BUGGY]  Options.checkState(Arrays.sort(options));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(Arrays.sort(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(Arrays.sort(options));	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options.addAll(options);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
354	[BUG]  [BUGGY]  Options.checkState(Arrays.sort(options),  options.size());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(Arrays.sort(options),  options.size());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(Arrays.sort(options),  options.size());	  if(options!=    null)    {    Arrays.sort(options);    }    else    {    options.addAll(options);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
355	[BUG]  [BUGGY]  Options.checkState(this.options!=  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(this.options!=  null);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(this.options!=  null);	  if(this.options!=    null)    {    Arrays.sort(this.options);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
356	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(symbols),  sourceName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(symbols),  sourceName);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.toString(symbols),  sourceName);	  System.err.println(   "Missing    symbol    options:   "    +    Arrays.toString(symbols));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
357	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(names));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(names));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.toString(names));	  System.err.println(   "Missing    symbol    options:   "    +    Arrays.toString(symbols));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
358	[BUG]  [BUGGY]  private  final  Map  <  String,  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  <  String,  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  <  String,  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  >  expected	36	None	replace
359	[BUG]  [BUGGY]  private  final  Map  <  String,  AssertionFailedError  <  String>  options  =  new  HashMap  <  String,  AssertionFailedError>();  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  <  String,  AssertionFailedError  <  String>  options  =  new  HashMap  <  String,  AssertionFailedError>();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  <  String,  AssertionFailedError  <  String>  options  =  new  HashMap  <  String,  AssertionFailedError>();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  >  expected	36	None	replace
360	[BUG]  [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options  ==  null)  {  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  }	  protected    Map    options    =    new    HashMap();    AssertionFailedError    <    String>    options    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
361	[BUG]  [BUGGY]  this.options.put( "Error,  null ", "null ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error,  null ", "null ");  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error,  null ", "null ");	  this.options.put(   "Error,   ",    new    IllegalArgumentException());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
362	[BUG]  [BUGGY]  private  final  Map  <  Object,  Object>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  <  Object,  Object>  options  =  new  AssertionFailedError(options);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  <  Object,  Object>  options  =  new  AssertionFailedError(options);	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Object>    options    =    new    AssertionFailedError(options);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
363	[BUG]  [BUGGY]  if(options!=  null)  {  answer.addAll(Arrays.asList(options));  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  answer.addAll(Arrays.asList(options));  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  answer.addAll(Arrays.asList(options));  }	  answer.addAll(Arrays.asList(options));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
364	[BUG]  [BUGGY]  if(options!=  null)  {  answer.addAll(Arrays.asList(options));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  answer.addAll(Arrays.asList(options));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  answer.addAll(Arrays.asList(options));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  answer.addAll(Arrays.asList(options));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
365	[BUG]  [BUGGY]  this.options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  this.options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();	  protected    Map    options    =    new    HashMap();    AssertionFailedError    =    new    AssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
366	[BUG]  [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  }	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
367	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options,  options);  }  else  {  return  new  HashMap();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options,  options);  }  else  {  return  new  HashMap();  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options!=  null)  {  Arrays.sort(this.options,  options);  }  else  {  return  new  HashMap();  }	  Arrays.sort(this.options,    options);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
368	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  ObjectUtilities.EMPTY);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  ObjectUtilities.EMPTY);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options),  ObjectUtilities.EMPTY);	  aughtExceptionHandler.handleMissingError(   "Unexpected    error:   "    +    Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
369	[BUG]  [BUGGY]  return  options  ==  null?  new  HashMap()  :  Collections.emptyMap();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  return  options  ==  null?  new  HashMap()  :  Collections.emptyMap();  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	return  options  ==  null?  new  HashMap()  :  Collections.emptyMap();	  options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
370	[BUG]  [BUGGY]  return  options  ==  null?  new  HashMap()  :  Collections.EMPTY_MAP;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  return  options  ==  null?  new  HashMap()  :  Collections.EMPTY_MAP;  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	return  options  ==  null?  new  HashMap()  :  Collections.EMPTY_MAP;	  options    ==    null)    {    options    =    new    HashMap();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
371	[BUG]  [BUGGY]  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet().iterator().next();    	non-compiled	[CE]  >  expected	38	None	replace
372	[BUG]  [BUGGY]  final  Map  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  Map  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  Map  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    Map.Entry    <    K,    V>    entry    =    options.entrySet().iterator().next();    	non-compiled	[CE]  >  expected	38	None	replace
373	[BUG]  [BUGGY]  if(this.options  ==  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  if(this.options  ==  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options  ==  null)  {  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }	  protected    Map    options    =    new    HashMap();    Arrays.sort(this.options);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
374	[BUG]  [BUGGY]  if(this.options!=  null)  {  protected  final  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  if(this.options!=  null)  {  protected  final  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options!=  null)  {  protected  final  Map  options  =  new  HashMap();  Arrays.sort(this.options);  }	  protected    Map    options    =    new    HashMap();    Arrays.sort(this.options);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
375	[BUG]  [BUGGY]  if(this.options!=  null)  {  protected  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  if(this.options!=  null)  {  protected  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options!=  null)  {  protected  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    this.options.put(   "AssertionFailedError   ",    new    AssertionFailedError());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
376	[BUG]  [BUGGY]  OptionHandler.checkState(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionHandler.checkState(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionHandler.checkState(Arrays.asList(options));	  Options.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
377	[BUG]  [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  protected    Map    options    =    new    HashMap();    if(options    ==    null)    {    options.put(   "[AssertionFailedError]   ",    new    AssertionFailedError());    }    else    {    options.put(   "[AssertionFailedError:   "    +    getMessage());    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
378	[BUG]  [BUGGY]  safeThan(map.keySet(),  Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  safeThan(map.keySet(),  Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan(map.keySet(),  Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));	  safeThan    <    Map.Entry    <    String,    AssertionFailedError    ==    false)    {    options.putAll(Arrays.asList(options));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
379	[BUG]  [BUGGY]  safeThan(map.entrySet(),  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeThan(map.entrySet(),  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan(map.entrySet(),  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));	  safeThan    <    Map.Entry    <    String,    AssertionFailedError    ==    false)    {    options.putAll(Arrays.asList(options));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
380	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ",  Objects.ERROR);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ",  Objects.ERROR);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "msg.no.errors ",  Objects.ERROR);	  aughtExceptionHandler.handleMissingError(   "msg.no.errors   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
381	[BUG]  [BUGGY]  ArrayList  <  String>  options  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  ArrayList  <  String>  options  =  new  ArrayList  <  String>();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	ArrayList  <  String>  options  =  new  ArrayList  <  String>();	  protected    Map    options    =    new    HashMap();    Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap(System.identityHashCode(this));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	add	final  protected  Map  options  =  new  HashMap(System.identityHashCode(this));	  final    protected    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	7	1	replace
383	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap(System.identityHashCode(this));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap(System.identityHashCode(this));  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap(System.identityHashCode(this));	  final    protected    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	7	1	replace
384	[BUG]  [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.toArray(new  AssertionFailedError[options.size()  ]);  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.toArray(new  AssertionFailedError[options.size()  ]);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.toArray(new  AssertionFailedError[options.size()  ]);	  safeThan    <    Map.Entry    <    String,    AssertionFailedError>    options    =(AssertionFailedError)options.clone();    	non-compiled	[CE]  >  expected	48	None	replace
385	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message. ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message. ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message. ");	  protected    Map    options    =    new    HashMap();    AssertionFailedError.warning(   "Missing    error    message   ");    	non-compiled	[CE]  <identifier>  expected	92	None	replace
386	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorBuilder().append(   "n   ");    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
387	[BUG]  [BUGGY]  private  final  Map  <  String,  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  <  String,  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  <  String,  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "null ");	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    String>    options    =    new    AssertionFailedErrorBuilder().append(   "n   ");    	non-compiled	[CE]  >  expected	87	None	replace
388	[BUG]  [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options),  options);  }  else  {  return  new  HashMap();  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  options.putAll(Arrays.asList(options),  options);  }  else  {  return  new  HashMap();  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  options.putAll(Arrays.asList(options),  options);  }  else  {  return  new  HashMap();  }	  options.putAll(Arrays.asList(options),    options);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
389	[BUG]  [BUGGY]  security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  deprecated. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  deprecated. ");  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  deprecated. ");	  security(   "Failed    to    parse:   "+options.size()    +   "n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
390	[BUG]  [BUGGY]  security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  delegated. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  delegated. ");  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	security( "Failed  to  parse: "+options.size()  + ",  options  cannot  be  delegated. ");	  security(   "Failed    to    parse:   "+options.size()    +   "n   ");    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
391	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  sourceName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  sourceName);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  sourceName);	  System.err.println(   "Missing    symbol    options:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
392	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name,  expected);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name,  expected);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  name,  expected);	  System.err.println(   "Missing    symbol    options:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
393	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap();  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();	  private    final    Map    options    =    new    HashMap();    final    AssertionFailedError    <    K,    V>    error    =    new    AssertionFailedError();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
394	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
395	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
396	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  <  K,  V>  this  =  new  AssertionFailedError();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  <  K,  V>  this  =  new  AssertionFailedError();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError  <  K,  V>  this  =  new  AssertionFailedError();	  	non-compiled	[CE]  <identifier>  expected	6	None	add
397	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError()  {  return  options;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError()  {  return  options;  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError()  {  return  options;  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	add
398	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: ");  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  final  protected  Map  options  =  new  HashMap();  final  protected  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final    protected    Map    options    =    new    HashMap();    final  protected  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: ");	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
399	[BUG]  [BUGGY]  OptionFailedError.checkState(Arrays.asList(options)||  Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(Arrays.asList(options)||  Arrays.asList(options));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(Arrays.asList(options)||  Arrays.asList(options));	  OptionFailedError.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
400	[BUG]  [BUGGY]  OptionFailedError.checkState(Arrays.asList(options),  options.size()  >  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  OptionFailedError.checkState(Arrays.asList(options),  options.size()  >  0);  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(Arrays.asList(options),  options.size()  >  0);	  OptionFailedError.checkState(Arrays.asList(options));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
401	[BUG]  [BUGGY]  if(options!=  null)  {  Arrays.sort(options,  new  HashMap());  }  else  {  return  options;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  if(options!=  null)  {  Arrays.sort(options,  new  HashMap());  }  else  {  return  options;  }  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  Arrays.sort(options,  new  HashMap());  }  else  {  return  options;  }	  Arrays.sort(options,    new    HashMap());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
402	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  String,  Object>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  String,  Object>  entry  =  options.entrySet().iterator().next();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    static    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Map.Entry  <  String,  Object>  entry  =  options.entrySet().iterator().next();	  	non-compiled	[CE]  >  expected	21	None	add
403	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  String,  Object>  entry  =  options.entrySet();  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  String,  Object>  entry  =  options.entrySet();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    static    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Map.Entry  <  String,  Object>  entry  =  options.entrySet();	  	non-compiled	[CE]  >  expected	21	None	add
404	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  String,  Object>  entry  =  options.entrySet().iterator();  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  String,  Object>  entry  =  options.entrySet().iterator();  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    static    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Map.Entry  <  String,  Object>  entry  =  options.entrySet().iterator();	  	non-compiled	[CE]  >  expected	21	None	add
405	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.putAll(options);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  private  static  final  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.putAll(options);  }  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    static    final    Map    options    =    new    HashMap();    if(options  ==  null)  {  options.putAll(options);  }	  	non-compiled	[CE]  illegal  start  of  type	21	None	add
406	[BUG]  [BUGGY]  this.options.put( "Error: ",  new  IllegalStateException());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  this.options.put( "Error: ",  new  IllegalStateException());  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error: ",  new  IllegalStateException());	  this.options.put(   "Error   ",    new    IllegalStateException());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
407	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  1,  System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int,PrintStream)  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.err,  1,  System.err);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  1,  System.err);	  private    Map    options    =    new    HashMap(System.err,    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int,PrintStream)	94	None	replace
408	[BUG]  [BUGGY]  System.err.println( "Missing  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  error: "  +  getMessage());  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  error: "  +  getMessage());	  System.err.println(   "Missing    error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
409	[BUG]  [BUGGY]  System.err.println( "Missing  error: "  +  sourceName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Missing  error: "  +  sourceName);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  error: "  +  sourceName);	  System.err.println(   "Missing    error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
410	[BUG]  [BUGGY]  System.err.println( "Error: "  +  name,  expected);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Error: "  +  name,  expected);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Error: "  +  name,  expected);	  System.err.println(   "Error:   "    +    name);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
411	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: ");  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  protected  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: ");  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: ");	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
412	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err,  System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream,PrintStream)  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err,  System.err);  [BUGGY]        [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  System.err,  System.err);	  private    Map    options    =    new    HashMap(System.err,    System.err);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream,PrintStream)	24	None	replace
413	[BUG]  [BUGGY]  Options.checkState(Arrays.sort(options,  options.size()  -  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Options.checkState(Arrays.sort(options,  options.size()  -  1));  [BUGGY]      private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(Arrays.sort(options,  options.size()  -  1));	  if(options!=    null)    {    Arrays.sort(options);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
