bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  this.options.put( "AssertionFailedError ",  new  AssertionFailedError());  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    this.options.put( "AssertionFailedError ",  new  AssertionFailedError());	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
2	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
3	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  else  {  options.put( "[AssertionFailedError: "  +  System.identityHashCode  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  else  {  options.put( "[AssertionFailedError: "  +  System.identityHashCode  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  else  {  options.put( "[AssertionFailedError: "  +  System.identityHashCode	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
4	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  else  {  options.put( "[AssertionFailedError: "  +  System.getProperty( "  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  else  {  options.put( "[AssertionFailedError: "  +  System.getProperty( "  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  else  {  options.put( "[AssertionFailedError: "  +  System.getProperty( "	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
5	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  else  {  options.put( "[AssertionFailedError: "  +  getMessage());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  else  {  options.put( "[AssertionFailedError: "  +  getMessage());  }  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    if(options  ==  null)  {  options.put( "[AssertionFailedError] ",  new  AssertionFailedError());  }  else  {  options.put( "[AssertionFailedError: "  +  getMessage());  }	  	non-compiled	[CE]  illegal  start  of  type	12	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  final  protected  Map  options  =  new  HashMap();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	add	final  protected  Map  options  =  new  HashMap();	  protected    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	13	1	replace
7	[BUG]  [BUGGY]  final  protected  Map  options  =  new  HashMap();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  final  protected  Map  options  =  new  HashMap();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	final  protected  Map  options  =  new  HashMap();	  protected    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	13	1	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  protected  final  Map  options  =  new  HashMap();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	add	protected  final  Map  options  =  new  HashMap();	  protected    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	13	1	replace
9	[BUG]  [BUGGY]  protected  final  Map  options  =  new  HashMap();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  protected  final  Map  options  =  new  HashMap();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  final  Map  options  =  new  HashMap();	  protected    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	13	1	replace
10	[BUG]  [BUGGY]  protected  Map  options  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  LinkedHashMap();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected  Map  options  =  new  LinkedHashMap();	  protected    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
11	[BUG]  [BUGGY]  options.putAll(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  options.putAll(Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options.putAll(Arrays.asList(options));	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
12	[BUG]  [BUGGY]  answer.addAll(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  answer.addAll(Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	answer.addAll(Arrays.asList(options));	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
13	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "Unexpected  error: "  +  Arrays.asList(options));	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  options.putAll(Arrays.asList(options),  options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  options.putAll(Arrays.asList(options),  options);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options.putAll(Arrays.asList(options),  options);	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  this.options.put( "Error ",  new  IllegalStateException());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this.options.put( "Error ",  new  IllegalStateException());  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error ",  new  IllegalStateException());	      this.options.put(   "Error   ",    new    IllegalArgumentException());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
16	[BUG]  [BUGGY]  this.options.put( "Error, ",  new  IllegalArgumentException());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.options.put( "Error, ",  new  IllegalArgumentException());  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error, ",  new  IllegalArgumentException());	      this.options.put(   "Error   ",    new    IllegalArgumentException());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
17	[BUG]  [BUGGY]  Arrays.sort(options,  options);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  Arrays.sort(options,  options);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Arrays.sort(options,  options);	      Arrays.sort(options);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
18	[BUG]  [BUGGY]  Arrays.sort(options,  new  HashMap());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  Arrays.sort(options,  new  HashMap());  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Arrays.sort(options,  new  HashMap());	      Arrays.sort(options);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  if(options!=  null)  {  Arrays.sort(options);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  if(options!=  null)  {  Arrays.sort(options);  }  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  Arrays.sort(options);  }	      Arrays.sort(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  private  final  Map  options  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  LinkedHashMap();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  LinkedHashMap();	  private    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  private  static  final  Map  options  =  new  HashMap();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	add	private  static  final  Map  options  =  new  HashMap();	  private    final    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	2	1	replace
22	[BUG]  [BUGGY]  private  static  final  Map  options  =  new  HashMap();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  private  static  final  Map  options  =  new  HashMap();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  static  final  Map  options  =  new  HashMap();	  private    final    Map    options    =    new    HashMap();    	compilable	  [FE]  AssertionFailedError  	2	1	replace
23	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap(System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream)  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap(System.err);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  final  Map  options  =  new  HashMap(System.err);	  private    final    Map    options    =    new    HashMap();    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream)	2	None	replace
24	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  private  Map  options  =  new  HashMap(System.err,  System.err);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  System.err);	  private    Map    options    =    new    HashMap(System.err);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)	4	None	replace
25	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.out,  System.err);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  private  Map  options  =  new  HashMap(System.out,  System.err);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.out,  System.err);	  private    Map    options    =    new    HashMap(System.err);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,PrintStream)	4	None	replace
26	[BUG]  [BUGGY]  HashSet  <  String>  options  =  new  HashSet  <  String>();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  HashSet  <  String>  options  =  new  HashSet  <  String>();  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashSet  <  String>  options  =  new  HashSet  <  String>();	      Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
27	[BUG]  [BUGGY]  HashSet  <  String>  options  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  HashSet  <  String>  options  =  Sets.newHashSet();  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashSet  <  String>  options  =  Sets.newHashSet();	      Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
28	[BUG]  [BUGGY]  Arrays.sort(this.options,  options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  Arrays.sort(this.options,  options);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Arrays.sort(this.options,  options);	      Arrays.sort(this.options);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
29	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options);  }  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options!=  null)  {  Arrays.sort(this.options);  }	      Arrays.sort(this.options);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  private  Map  options  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  private  Map  options  =  new  ArrayList();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  ArrayList();	  private    Map    options    =    new    LinkedHashMap();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
31	[BUG]  [BUGGY]  private  Map  options  =  new  ArrayMap();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  private  Map  options  =  new  ArrayMap();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  ArrayMap();	  private    Map    options    =    new    LinkedHashMap();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
32	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.asList(symbols));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.asList(symbols));  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.asList(symbols));	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "+getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.err.println( "Missing  symbol  options: "+getMessage());  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "+getMessage());	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(symbols));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.err.println( "Missing  symbol  options: "  +  Arrays.toString(symbols));  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  Arrays.toString(symbols));	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  System.err.println( "Missing  symbol  options: "  +  name);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  name);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
37	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
38	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet().iterator().next();	  	non-compiled	[CE]  >  expected	1	None	add
39	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
40	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Map.Entry  <  K,  V>  entry  =  options.entrySet();	  	non-compiled	[CE]  >  expected	1	None	add
41	[BUG]  [BUGGY]  options  ==  null)  {  options  =  new  HashMap();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  options  ==  null)  {  options  =  new  HashMap();  }  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options  ==  null)  {  options  =  new  HashMap();  }	      if(options    ==    null)    {    options    =    new    HashMap();    }    else    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  options!=  null)  {  options  =  new  HashMap();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  options!=  null)  {  options  =  new  HashMap();  }  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options!=  null)  {  options  =  new  HashMap();  }	      if(options    ==    null)    {    options    =    new    HashMap();    }    else    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  Options.checkState(options!=  null);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  Options.checkState(options!=  null);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options!=  null);	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  Options.checkState(options  ==  null);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  Options.checkState(options  ==  null);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options  ==  null);	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  this.options.put( "Error ",  new  IllegalArgumentException( "));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.options.put( "Error ",  new  IllegalArgumentException( "));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error ",  new  IllegalArgumentException( "));	      this.options.put(   "Error   ",    new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
46	[BUG]  [BUGGY]  options.putAll(Arrays.asList(options)+  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  options.putAll(Arrays.asList(options)+  1);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	options.putAll(Arrays.asList(options)+  1);	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options    =    new    HashMap();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
47	[BUG]  [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan  <  Map.Entry  <  String,  AssertionFailedError  ==  false)  {  options.putAll(Arrays.asList(options));	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options    =    new    HashMap();    }    	non-compiled	[CE]  >  expected	11	None	replace
48	[BUG]  [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.clone();  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.clone();  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.clone();	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options    =    new    HashMap();    }    	non-compiled	[CE]  >  expected	11	None	replace
49	[BUG]  [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.getValue();  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.getValue();  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeThan  <  Map.Entry  <  String,  AssertionFailedError>  options  =(AssertionFailedError)options.getValue();	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options    =    new    HashMap();    }    	non-compiled	[CE]  >  expected	11	None	replace
50	[BUG]  [BUGGY]  Options.checkState(options.size()  ==  options.size());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  Options.checkState(options.size()  ==  options.size());  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options.size()  ==  options.size());	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  Options.checkState(options.size()  ==  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  Options.checkState(options.size()  ==  0);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options.size()  ==  0);	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
52	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedError();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    AssertionFailedError  <  String>  options  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
53	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    AssertionFailedError  =  new  AssertionFailedError();	  	non-compiled	[CE]  <identifier>  expected	12	None	add
54	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorHandler();	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
55	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(this,  options);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    AssertionFailedError  =  new  AssertionFailedError(this,  options);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
56	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError  =  new  AssertionFailedError(options);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    AssertionFailedError  =  new  AssertionFailedError(options);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
57	[BUG]  [BUGGY]  Sets.newHashSet(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  Sets.newHashSet(options);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Sets.newHashSet(options);	      Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
58	[BUG]  [BUGGY]  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  Sets.newLinkedHashSet();  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Sets.newLinkedHashSet();	      Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
59	[BUG]  [BUGGY]  Collections.newHashSet();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  Collections.newHashSet();  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Collections.newHashSet();	      Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
60	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.errors ");  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingError( "msg.no.errors ");	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMissingName(options);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleMissingName(options);	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleFailedError(options);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	aughtExceptionHandler.handleFailedError(options);	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  safeNameMap.putAll(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  safeNameMap.putAll(Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNameMap.putAll(Arrays.asList(options));	      if(options    ==    null)    {    options    =    new    HashMap();    }    else    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  safeNameMap.putAll(Arrays.asList(options),  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  safeNameMap.putAll(Arrays.asList(options),  false);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNameMap.putAll(Arrays.asList(options),  false);	      if(options    ==    null)    {    options    =    new    HashMap();    }    else    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  security( "Failed  to  parse: "+options.size()  + "n ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  security( "Failed  to  parse: "+options.size()  + "n ");  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	security( "Failed  to  parse: "+options.size()  + "n ");	      if(options    ==    null)    {    options    =    new    HashMap();    }    else    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
66	[BUG]  [BUGGY]  safeMultiply(options)  {  options.putAll(Arrays.asList(options));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(options)  {  options.putAll(Arrays.asList(options));  }  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeMultiply(options)  {  options.putAll(Arrays.asList(options));  }	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
67	[BUG]  [BUGGY]  safeMultiply(Arrays.asList(options));  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeMultiply(Arrays.asList(options));	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
68	[BUG]  [BUGGY]  safeNames.addAll(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  safeNames.addAll(Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNames.addAll(Arrays.asList(options));	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  safeNames.putAll(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  safeNames.putAll(Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeNames.putAll(Arrays.asList(options));	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
70	[BUG]  [BUGGY]  if(options!=  null)  {  Arrays.sort(options);  }  else  {  options  =  new  HashMap();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  if(options!=  null)  {  Arrays.sort(options);  }  else  {  options  =  new  HashMap();  }  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  Arrays.sort(options);  }  else  {  options  =  new  HashMap();  }	      Arrays.sort(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  options  =  new  AssertionFailedError(options);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
72	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  Object>  options  =  new  AssertionFailedError(options);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
73	[BUG]  [BUGGY]  System.err.println( "Missing  symbol  options: "  +  asPath());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.err.println( "Missing  symbol  options: "  +  asPath());  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  symbol  options: "  +  asPath());	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
74	[BUG]  [BUGGY]  System.err.println( "Error: "  +  name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  System.err.println( "Error: "  +  name);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Error: "  +  name);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
75	[BUG]  [BUGGY]  System.err.println( "Missing  error: "  +  name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  System.err.println( "Missing  error: "  +  name);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Missing  error: "  +  name);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
76	[BUG]  [BUGGY]  OptionFailedError.checkState(options.size()  >  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  OptionFailedError.checkState(options.size()  >  0);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(options.size()  >  0);	      if(options    ==    null)    {    options    =    new    HashMap();    }    else    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
77	[BUG]  [BUGGY]  OptionFailedError.checkState(options.size()  ==  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  OptionFailedError.checkState(options.size()  ==  0);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(options.size()  ==  0);	      if(options    ==    null)    {    options    =    new    HashMap();    }    else    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
78	[BUG]  [BUGGY]  safeAssertionFailedErrors();  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  safeAssertionFailedErrors();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeAssertionFailedErrors();	  protected    Map    options    =    new    HashMap();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
79	[BUG]  [BUGGY]  Options.checkState(options.size()  >  0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  Options.checkState(options.size()  >  0);  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(options.size()  >  0);	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
80	[BUG]  [BUGGY]  Options.checkState(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  Options.checkState(Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	Options.checkState(Arrays.asList(options));	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
81	[BUG]  [BUGGY]  OptionFailedError.checkState(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  OptionFailedError.checkState(Arrays.asList(options));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	OptionFailedError.checkState(Arrays.asList(options));	      if(options!=    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options.putAll(options);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
82	[BUG]  [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options);  }  else  {  return  options;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  if(this.options!=  null)  {  Arrays.sort(this.options);  }  else  {  return  options;  }  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(this.options!=  null)  {  Arrays.sort(this.options);  }  else  {  return  options;  }	      Arrays.sort(this.options);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
83	[BUG]  [BUGGY]  if(options!=  null)  {  Arrays.sort(options);  }  else  {  options.addAll(options);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  if(options!=  null)  {  Arrays.sort(options);  }  else  {  options.addAll(options);  }  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	if(options!=  null)  {  Arrays.sort(options);  }  else  {  options.addAll(options);  }	      Arrays.sort(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
84	[BUG]  [BUGGY]  safeMultiply(Arrays.asList(options)));  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(Arrays.asList(options)));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	safeMultiply(Arrays.asList(options)));	      if(options    ==    null)    {    options.putAll(Arrays.asList(options));    }    else    {    options    =    new    HashMap();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
85	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
86	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedErrorImpl();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
87	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "n ");  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "n ");  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  String>  options  =  new  AssertionFailedErrorBuilder().append( "n ");	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
88	[BUG]  [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  Map  options  =  new  HashMap();  final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private    final    Map    options    =    new    HashMap();    final  AssertionFailedError  <  K,  V>  error  =  new  AssertionFailedError( "Unexpected  exception: "+error.getMessage());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
89	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet();  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    Set  <  String>  options  =  Sets.newHashSet();	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
90	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  Set  <  String>  options  =  Sets.newHashSet(options);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    Set  <  String>  options  =  Sets.newHashSet(options);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
91	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  Arrays.sort(this.options);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    Arrays.sort(this.options);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
92	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  AssertionFailedError.warning( "Missing  error  message ");  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    AssertionFailedError.warning( "Missing  error  message ");	  	non-compiled	[CE]  <identifier>  expected	12	None	add
93	[BUG]  [BUGGY]  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  protected  Map  options  =  new  HashMap();  Arrays.sort(options);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	protected    Map    options    =    new    HashMap();    Arrays.sort(options);	  	non-compiled	[CE]  <identifier>  expected	12	None	add
94	[BUG]  [BUGGY]  private  Map  options  =  new  HashMap(System.err,  1);  [CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int)  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  private  Map  options  =  new  HashMap(System.err,  1);  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	private  Map  options  =  new  HashMap(System.err,  1);	  private    Map    options    =    new    HashMap(System.err);    	non-compiled	[CE]  no  suitable  constructor  found  for  HashMap(PrintStream,int)	4	None	replace
95	[BUG]  [BUGGY]  HashSet  <  String>  options  =  new  HashSet  <  String>(size());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  HashSet  <  String>  options  =  new  HashSet  <  String>(size());  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	HashSet  <  String>  options  =  new  HashSet  <  String>(size());	      Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
96	[BUG]  [BUGGY]  this.options.put( "Error, ",  new  IllegalArgumentException( " "));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  this.options.put( "Error, ",  new  IllegalArgumentException( " "));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error, ",  new  IllegalArgumentException( " "));	      this.options.put(   "Error   ",    new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
97	[BUG]  [BUGGY]  this.options.put( "Error, ",  new  IllegalArgumentException( "));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this.options.put( "Error, ",  new  IllegalArgumentException( "));  [BUGGY]    private  Map  options  =  new  HashMap();  [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	this.options.put( "Error, ",  new  IllegalArgumentException( "));	      this.options.put(   "Error   ",    new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
98	[BUG]  [BUGGY]  System.err.println( "Error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.err.println( "Error: "  +  getMessage());  [BUGGY]      [CLASS]  CommandLine  [VARIABLES]  	projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java	1.0	46	46	1	replace	System.err.println( "Error: "  +  getMessage());	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
