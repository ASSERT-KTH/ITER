projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){options.putAll(Arrays.asList(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){options.putAll(Arrays.asList(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){options=newHashMap();}else{options.putAll(Arrays.asList(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){options.putAll(Arrays.asList(options));}else{options.putAll(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){options.putAll(Arrays.asList(options));}else{options.putAll(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){options.putAll(Arrays.asList(options));}else{options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Arrays.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Arrays.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Sets.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error",newIllegalArgumentException());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error",newIllegalArgumentException(""));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();this.options.put("AssertionFailedError",newAssertionFailedError());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}else{options.put("[AssertionFailedError:"+System.identityHashCode
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}else{options.put("[AssertionFailedError:"+System.getProperty("
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}else{options.put("[AssertionFailedError:"+getMessage());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46answer.addAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("Unexpectederror:"+Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options.putAll(Arrays.asList(options),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error",newIllegalStateException());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,",newIllegalArgumentException());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Arrays.sort(options,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Arrays.sort(options,newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){Arrays.sort(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.out,System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashSet<String>options=newHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashSet<String>options=Sets.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Arrays.sort(this.options,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options!=null){Arrays.sort(this.options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newArrayMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.asList(symbols));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.toString(symbols));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+name);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<K,V>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options==null){options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options!=null){options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options!=null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options==null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error",newIllegalArgumentException("));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options.putAll(Arrays.asList(options)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan<Map.Entry<String,AssertionFailedError==false){options.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan<Map.Entry<String,AssertionFailedError>options=(AssertionFailedError)options.clone();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan<Map.Entry<String,AssertionFailedError>options=(AssertionFailedError)options.getValue();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options.size()==options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options.size()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedErrorHandler();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(this,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Sets.newHashSet(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Sets.newLinkedHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Collections.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("msg.no.errors");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingName(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNameMap.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNameMap.putAll(Arrays.asList(options),false);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46security("Failedtoparse:"+options.size()+"n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeMultiply(options){options.putAll(Arrays.asList(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeMultiply(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNames.addAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNames.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){Arrays.sort(options);}else{options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<K,V>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+asPath());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Error:"+name);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingerror:"+name);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(options.size()>0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(options.size()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeAssertionFailedErrors();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options.size()>0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options!=null){Arrays.sort(this.options);}else{returnoptions;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){Arrays.sort(options);}else{options.addAll(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeMultiply(Arrays.asList(options)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedErrorImpl();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedErrorBuilder().append("n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError("Unexpectedexception:"+error.getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();Set<String>options=Sets.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();Set<String>options=Sets.newHashSet(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();Arrays.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();AssertionFailedError.warning("Missingerrormessage");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newHashMap();Arrays.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashSet<String>options=newHashSet<String>(size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,",newIllegalArgumentException(""));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,",newIllegalArgumentException("));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Error:"+getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNames.putAll(Arrays.asList(options),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.putAll(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options.clear();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46security(options,"Failedtoparse:"+options.size()+"null");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46security("Failedtoparse:"+options.size()+",optionscannotbenull.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46security("Failedtoparse:"+options.size()+",optionscannotbedeclared.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newLinkedHashMap();AssertionFailedError=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();AssertionFailedError=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();finalAssertionFailedError<K,V>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();AssertionFailedError<K,V>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<String>options=newAssertionFailedErrorBuilder().append("null");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedErrorBuilder().append("null");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedErrorBuilder().append("null");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,null",newIllegalArgumentException(""));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("msg.no.errors",newObject[]{});
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("msg.no.errors",expected);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNameMap.putAll(Arrays.asList(options),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,null",newIllegalArgumentException("));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError<Map.Entry<String,Object>entry=this.options.entrySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError<Map.Entry<String,Object>entry=this.options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError<Map.Entry<K,V>entry=this.options.entrySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError<Map.Entry<String,Object>entry=this.options.getValue();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("Unexpectederror:"+Arrays.asList(options),expected);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("Unexpectederror:"+Arrays.asList(options),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("Unexpectederror:"+Arrays.asList(options),newCommandLine());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AnnotationFailedErrors.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AnnotationFailedError.class.getSimpleName());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AnnotationFailedError.class.getSimpleName();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan(Map.Entry<String,AssertionFailedError==false){options.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan(map.entry<String,AssertionFailedError==false){options.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan(map.Entry<String,AssertionFailedError==false){options.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){protectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){protectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newLinkedHashMap();AssertionFailedError=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Option.checkState(options==null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError(errors);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError().getMessage();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(System.out,System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,System.out);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.out,System.err,System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateListoptions=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){aughtExceptionHandler.handleMissingName(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){aughtExceptionHandler.handleMissingName(options);}else{options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options!=null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();if(options!=null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();Arrays.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){protectedMapoptions=newHashMap();Arrays.sort(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMapoptions=newHashMap();Arrays.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){protectedMapoptions=newHashMap();Arrays.sort(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newLinkedHashMap();AssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options.size()==1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Option.checkState(options.size()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.toString(this.symbols));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.toString(name));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.toString(values));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+getMessage(),expected);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeMultiply(Arrays.asList(options),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeMultiply(Arrays.asList(options,options)));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Error:"+name+"<identifier>");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Error:"+name+"}");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Error:"+name+"identifier:"+name);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newTreeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap(System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options.putAll(Arrays.asList(options)+2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){options.putAll(Arrays.asList(options)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalsafeThan<Map.Entry<String,AssertionFailedError>options=(AssertionFailedError)options.getValue();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan<Map.Entry<String,AssertionFailedError>options=(AssertionFailedError)options.get(0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeAdd(options){options.putAll(Arrays.asList(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeMultiply(options){options.putAll(Arrays.asList(options),null);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError.this.options=newHashMap<String,Object>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError.this.options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46answer.addAll(Arrays.asList(options),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46answer.add(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();Set<String>options=Sets.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();Set<String>options=Sets.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();Set<String>options=Sets.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashSet();Set<String>options=Sets.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options==null){finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();options.put(entry.getKey(),entry.getValue());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options==null){finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet();options.put(entry.getKey(),entry.getValue());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options==null){finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();options.putAll(entry.getKey(),entry.getValue());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError(){returnoptions.toArray(newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();if(options==null){finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();options.putAll(entry.getValue());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newTreeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap(System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){Arrays.sort(options,newHashMap());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Arrays.sort(this.options,newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){Arrays.sort(options,newHashMap());}else{options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(System.err,System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.Error,System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,System.err,errorCode);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){aughtExceptionHandler.handleFailedError(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleFailedError(errors);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleFailedError(options,expected);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashSet<String>options=newHashSet<String>(size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashSet<String>options=newHashSet<String>(size()+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Set<String>options=newHashSet<String>(size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashSet<String>options=Lists.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashSet<String>options=Collections.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashMap<String>options=Sets.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();AssertionFailedError.warning("Missingerrormessage");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newLinkedHashMap();AssertionFailedError.warning("Missingerrormessage");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError.warning("Missingerrormessage");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();AssertionFailedError.warning("Missingerrormessage");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError{returnoptions.toArray(newAssertionFailedError[options.size()]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError{returnoptions.toArray(newAssertionFailedError());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){options.putAll(Arrays.asList(options));}else{returnnewHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap(System.err,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,0,1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options.size()>1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();Set<String>options=Sets.newHashSet(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();Set<String>options=Sets.newHashSet(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();Set<String>options=Sets.newHashSet(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();Set<String>options=Sets.newHashSet(optionals);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();AssertionFailedError<Object>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options!=null&&options.size()>0;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options!=null&&options.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError[]warnings=getAssertionFailedErrors();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError[]warnings=newAssertionFailedError[size()];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError[]errors=newAssertionFailedError[size()];
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError[]warnings=this.safeAssertionFailedErrors();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,",newIllegalStateException());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedErrorHandler();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedErrorHandler();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedErrorHandler();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newLinkedHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap(System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap(System.getProperties());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.asList(identifiers));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.asList(this.symbols));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.asList(names));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNameMap.putAll(Arrays.asList(options),true);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(options.size()==1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(options.size()==2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+name+"->");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+name+"errormessage);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+name+"identifier>");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedErrorImpl();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedErrorImpl();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46staticfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedErrorImpl();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(Arrays.asList(options),options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(Arrays.asList(options,options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(Arrays.asList(options),null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();Arrays.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options!=null){protectedMapoptions=newHashMap();Arrays.sort(this.options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();Arrays.sort(this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options!=null){protectedMapoptions=newHashMap();Arrays.sort(this.options);}else{thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeMultiply(Arrays.asList(options,options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedMapoptions=newArrayMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newArrayMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingerror:"+identifier);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingerror:"+name+"}");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingerror:"+name+"=>");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(this,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){protectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(this,options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nullParameters=newLinkedHashMap();AssertionFailedError=newAssertionFailedError(this,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Arrays.sort(this.options,this.options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error",newIllegalStateException("));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMapoptions=newHashMap();AssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalHashMapoptions=newHashMap();AssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Collections.newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Collections.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Collections.newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();this.options.put("AssertionFailedError",newAssertionFailedError());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();this.options.put("AssertionFailedError",newAssertionFailedError());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Error:"+getMessage(),expected);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Warning:"+getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<K,V>error=newAssertionFailedError("Unexpectedexception:"+error.getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError("Unexpectedexception:"+error.getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalHashMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError("Unexpectedexception:"+error.getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options.put("identifier",newAssertionFailedError());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+asString());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+asPath(),asPath());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,newIllegalArgumentException());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,null",newIllegalArgumentException());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNames.addAll(Arrays.asList(options),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNames.add(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options.size()==options.size()-1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options.size()!=options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(options.size()>1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(options.size()!=0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Arrays.sort(options,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nulloptions=newHashMap();finalAssertionFailedError<K,V>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){Options.checkState(Arrays.asList(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError.checkState(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){Options.checkState(Arrays.asList(options));}else{options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){options.putAll(Arrays.asList(options),options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options.putAll(Arrays.asList(options),newHashMap());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalsafeThan<Map.Entry<String,AssertionFailedError>options=(AssertionFailedError)options.clone();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashMap<String>options=newHashMap<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashSet<String>options=newLinkedHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Set<String>options=newHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){options.sort(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){privatefinalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError<Map.Entry<K,V>entry=options.entrySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){privateMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMapoptions=newHashMap();AssertionFailedError<Map.Entry<K,V>entry=options.entrySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Sets.newHashSet(options,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Sets.newHashSet(options).clear();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan(array,Map.Entry<String,AssertionFailedError==false){options.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleError("msg.sort.options",options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("msg.sort.options",options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options.size()==2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();Set<String>options=Sets.newHashSet(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap();Set<String>options=Sets.newHashSet(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNames.putAll(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions==null?null:options.toArray(newString[]{});
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions==null?null:options.toArray(newAssertionFailedError[]{});
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions==null?null:options.toArray(newAssertionFailedError[options.size()]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeAdd(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("Unexpectederror:"+Arrays.asList(options),this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("Unexpectederror:"+Arrays.asList(options),identifier);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingName(this,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46HashMap<String>options=newHashMap<String>(size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<Object>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<Object>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<Object>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,",newIllegalArgumentException(","));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.toString(identifiers));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<K,V>error=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Sets.newEmptySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Sets.newLinkedHashSet(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+name+"=>");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newArrayList();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Option.checkState(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedErrorHandler();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateHashSet<String>options=newHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalHashSet<String>options=newHashSet<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){protectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){protectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options!=null){Arrays.sort(this.options,options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safely(options){options.putAll(Arrays.asList(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeMultiply(options){options.putAll(Arrays.asList(options)+1);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingerror:"+name,expected);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();if(options==null){options.putAll(options);}else{options.putAll(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError<Map.Entry<String,Object>entry=this.options.getEntry();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError<Map.Entry<String,Object>entry=this.options.entrySet().iterator();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<K,V>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError<Map.Entry<String,Object>iterator=this.options.entrySet().iterator();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46options.putAll(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError("Unexpectedexception:"+error.getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError("Unexpectedexception:"+error.getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedErrorBuilder().append("n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedErrorBuilder().append("n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Option.checkState(options.size()==options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){Arrays.sort(options,options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("msg.no.errors",null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleError("msg.no.errors");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap(System.identityHashCode(this));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError==AssertionFailedError.error(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError==AssertionFailedError;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();AssertionFailedError.error(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError==AssertionFailedError.class;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError==AssertionFailedError.warning("msg.invalid.errors",options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeMultiply(Arrays.asList(options)),options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeNames.addAll(Arrays.asList(options)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+asPath()+"n");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Error:"+name+"{0}");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.class.getSimpleName()){options=newHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.class.getSimpleName()){options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options=newHashMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<K,V>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();AssertionFailedError.warning("Missingerrormessage");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(this,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){protectedMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(this,options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicMapoptions=newHashMap();Set<String>options=Sets.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedListoptions=newArrayList();Set<String>options=Sets.newHashSet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<K,V>error=newAssertionFailedErrorImpl();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46publicfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedErrorImpl();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedErrorImpl();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan<Map.Entry<String,AssertionFailedError>options=(AssertionFailedError)options.getKey();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46security(options,"Failedtoparse:"+options.size()+",null");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error:"+getMessage(),newIllegalStateException());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,2);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,1L);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(options!=null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkNotNull(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleFailedError(this,options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleFailedError(this);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(Arrays.asList(options)+1);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(Arrays.asList(options)||options.size()==0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,System.err,null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,System.err,logger);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();Arrays.sort(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){protectedMapoptions=newHashMap();Arrays.sort(options);}else{thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46nullParser(){protectedfinalMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){protectedfinalMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){protectedfinalMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError.checkState(this.options!=null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options!=null){Arrays.sort(this.options);returnoptions;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){options.putAll(Arrays.asList(options));}else{thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();AssertionFailedError<Object>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newTreeMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(options.size()>options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){protectedfinalMapoptions=newHashMap();AssertionFailedError=newAssertionFailedError(this,options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){protectedMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedErrorHandler();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedErrorerror=safeAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46assertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedErrorImpl();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(Arrays.sort(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(Arrays.sort(options),options.size());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(this.options!=null);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.toString(symbols),sourceName);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+Arrays.toString(names));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap<String,AssertionFailedError<String>options=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap<String,AssertionFailedError<String>options=newHashMap<String,AssertionFailedError>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options==null){protectedMapoptions=newHashMap();AssertionFailedError<String>options=newAssertionFailedError();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error,null","null");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap<Object,Object>options=newAssertionFailedError(options);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){answer.addAll(Arrays.asList(options));}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){answer.addAll(Arrays.asList(options));}else{thrownewIllegalArgumentException("");}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options=newHashMap();AssertionFailedError=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){protectedMapoptions=newHashMap();Set<String>options=Sets.newHashSet(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options!=null){Arrays.sort(this.options,options);}else{returnnewHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("Unexpectederror:"+Arrays.asList(options),ObjectUtilities.EMPTY);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions==null?newHashMap():Collections.emptyMap();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46returnoptions==null?newHashMap():Collections.EMPTY_MAP;
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46AssertionFailedError<Map.Entry<K,V>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalMap<Map.Entry<K,V>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options==null){protectedMapoptions=newHashMap();Arrays.sort(this.options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options!=null){protectedfinalMapoptions=newHashMap();Arrays.sort(this.options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(this.options!=null){protectedMapoptions=newHashMap();this.options.put("AssertionFailedError",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionHandler.checkState(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){protectedMapoptions=newHashMap();if(options==null){options.put("[AssertionFailedError]",newAssertionFailedError());}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan(map.keySet(),Map.Entry<String,AssertionFailedError==false){options.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan(map.entrySet(),AssertionFailedError==false){options.putAll(Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46aughtExceptionHandler.handleMissingError("msg.no.errors",Objects.ERROR);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46ArrayList<String>options=newArrayList<String>();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap(System.identityHashCode(this));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46safeThan<Map.Entry<String,AssertionFailedError>options=(AssertionFailedError)options.toArray(newAssertionFailedError[options.size()]);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();AssertionFailedError.warning("Missingerrormessage.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<String>options=newAssertionFailedErrorBuilder().append("null");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMap<String,AssertionFailedError<String>options=newAssertionFailedErrorBuilder().append("null");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){options.putAll(Arrays.asList(options),options);}else{returnnewHashMap();}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46security("Failedtoparse:"+options.size()+",optionscannotbedeprecated.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46security("Failedtoparse:"+options.size()+",optionscannotbedelegated.");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+sourceName);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingsymboloptions:"+name,expected);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatefinalMapoptions=newHashMap();AssertionFailedError<K,V>error=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError<K,V>error=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError<K,V>error=newAssertionFailedErrorImpl();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError<K,V>this=newAssertionFailedError();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError(){returnoptions;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46finalprotectedMapoptions=newHashMap();finalprotectedAssertionFailedError<K,V>error=newAssertionFailedError("Unexpectedexception:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(Arrays.asList(options)||Arrays.asList(options));
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46OptionFailedError.checkState(Arrays.asList(options),options.size()>0);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46if(options!=null){Arrays.sort(options,newHashMap());}else{returnoptions;}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<String,Object>entry=options.entrySet().iterator().next();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<String,Object>entry=options.entrySet();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();finalAssertionFailedError<Map.Entry<String,Object>entry=options.entrySet().iterator();
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privatestaticfinalMapoptions=newHashMap();if(options==null){options.putAll(options);}
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46this.options.put("Error:",newIllegalStateException());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,1,System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingerror:"+getMessage());
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Missingerror:"+sourceName);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46System.err.println("Error:"+name,expected);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46protectedfinalMapoptions=newHashMap();finalAssertionFailedError<K,V>error=newAssertionFailedError("Unexpectedexception:");
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46privateMapoptions=newHashMap(System.err,System.err,System.err);
projects/Cli1/src/java/org/apache/commons/cli/CommandLine.java46Options.checkState(Arrays.sort(options,options.size()-1));
