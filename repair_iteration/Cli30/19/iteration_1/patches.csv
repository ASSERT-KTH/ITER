bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Enumeration  e  =  options.getEnumeration(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  e  =  options.getEnumeration(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  e  =  options.getEnumeration(value);	      Enumeration    e    =    options.getEnumeration(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
2	[BUG]  [BUGGY]  Enumeration  e  =  options.getEnumeration(option,  value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  e  =  options.getEnumeration(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  e  =  options.getEnumeration(option,  value);	      Enumeration    e    =    options.getEnumeration(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
3	[BUG]  [BUGGY]  Enumeration  e  =  cmd.getEnumeration(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  e  =  cmd.getEnumeration(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  e  =  cmd.getEnumeration(option);	      Enumeration    e    =    options.getEnumeration(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
4	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(value);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
5	[BUG]  [BUGGY]  Option  cmd  =  properties.getOption(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  properties.getOption(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  properties.getOption(option);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
6	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(opt);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(opt);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
7	[BUG]  [BUGGY]  String  value  =  properties.getProperty(option).toString();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  properties.getProperty(option).toString();  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	String  value  =  properties.getProperty(option).toString();	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option).toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
8	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option);  String  value  =  properties.getProperty(value).toString();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(option);  String  value  =  properties.getProperty(value).toString();  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(option);  String  value  =  properties.getProperty(value).toString();	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option).toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  properties.getProperty(option).toString();  [CE]  <identifier>  expected  [FE]                    AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  properties.getProperty(option).toString();  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(option);  String  value  =  properties.getProperty(option).toString();	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  String  value  =  properties.getProperty(option).toString();  [CE]  <identifier>  expected  [FE]                      AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(opt);  String  value  =  properties.getProperty(option).toString();  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(opt);  String  value  =  properties.getProperty(option).toString();	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option).toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd);  String  value  =  properties.getProperty(option);  [CE]  <identifier>  expected  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(cmd);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(cmd);  String  value  =  properties.getProperty(option);	      Option    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  properties.getProperty(option);  [CE]  <identifier>  expected  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(option);  String  value  =  properties.getProperty(option);	      Option    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
13	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option);  String  value  =  properties.getValue(option);  [CE]  <identifier>  expected  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  options.getOption(option);  String  value  =  properties.getValue(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  opt  =  options.getOption(option);  String  value  =  properties.getValue(option);	      Option    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
14	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(value!=  null  ||  value.length()  ==  0)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(value  ==  null  ||  value.length()  ==  0)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	replace
16	[BUG]  [BUGGY]  if(value!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(value!=  null)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	replace
17	[BUG]  [BUGGY]  if(value  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value  ==  null)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(value  ==  null)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	replace
18	[BUG]  [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration();  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <?>  e  =  options.getEnumeration();	      Enumeration    e    =    options.getEnumeration();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
19	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  properties.getOption(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  properties.getOption(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  properties.getOption(option);	      Enumeration    <    Option>    opt    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
20	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  options.getOption(value);	      Enumeration    <    Option>    opt    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
21	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  cmd.getOption(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  cmd.getOption(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  cmd.getOption(option);	      Enumeration    <    Option>    opt    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
22	[BUG]  [BUGGY]  if(value.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(value.length()  ==  0)  {	  if(opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	11	None	replace
23	[BUG]  [BUGGY]  if(option.hasArg()  ||  value.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(option.hasArg()  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(option.hasArg()  ||  value.length()  ==  0)  {	  if(opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	11	None	replace
24	[BUG]  [BUGGY]  if(opt.hasValues()  ||  value.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValues()  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasValues()  ||  value.length()  ==  0)  {	  if(opt.hasValues())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
25	[BUG]  [BUGGY]  if(option.hasValues())  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(option.hasValues())  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(option.hasValues())  {	  if(opt.hasValues())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
26	[BUG]  [BUGGY]  if(cmd.hasOption(opt))  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(cmd.hasOption(opt))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(cmd.hasOption(opt))  {	  if(opt.hasValues())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
27	[BUG]  [BUGGY]  if(opt.hasValues()  ||  value.length()!=  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValues()  ||  value.length()!=  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasValues()  ||  value.length()!=  0)  {	  if(opt.hasValues())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
28	[BUG]  [BUGGY]  if(value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {	  if(opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	4	None	replace
29	[BUG]  [BUGGY]  if(opt.hasValue()  ||  value.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValue()  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasValue()  ||  value.length()  ==  0)  {	  if(opt.hasValue())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
30	[BUG]  [BUGGY]  if(option.hasValue())  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(option.hasValue())  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(option.hasValue())  {	  if(opt.hasValue())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
31	[BUG]  [BUGGY]  if(opt.hasValue()  ||  value.length()!=  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValue()  ||  value.length()!=  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasValue()  ||  value.length()!=  0)  {	  if(opt.hasValue())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
32	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  currentOption  =  options.getOption(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  currentOption  =  options.getOption(value);	      Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
33	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  currentOption  =  options.getOption(opt);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  currentOption  =  options.getOption(opt);	      Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
34	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  currentOption  =  options.getOption(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  currentOption  =  options.getOption(option,  value);	      Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
35	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  String  value  =  properties.getProperty(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(opt);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(opt);  String  value  =  properties.getProperty(option);	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
36	[BUG]  [BUGGY]  e.printStackTrace();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  e.printStackTrace();  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	e.printStackTrace();	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
37	[BUG]  [BUGGY]  if(cmd.hasProperty(value))  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(cmd.hasProperty(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(cmd.hasProperty(value))  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
38	[BUG]  [BUGGY]  if(opt.hasProperty(value)||  value.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasProperty(value)||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasProperty(value)||  value.length()  ==  0)  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
39	[BUG]  [BUGGY]  if(opt.hasValueForProcessing(value))  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValueForProcessing(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasValueForProcessing(value))  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
40	[BUG]  [BUGGY]  if(opt.hasProperty(value)||  value.equals( "true "))  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasProperty(value)||  value.equals( "true "))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasProperty(value)||  value.equals( "true "))  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
41	[BUG]  [BUGGY]  String  value  =  options.getProperty(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  options.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	String  value  =  options.getProperty(option);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
42	[BUG]  [BUGGY]  String  value  =  cmd.getProperty(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  cmd.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	String  value  =  cmd.getProperty(option);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
43	[BUG]  [BUGGY]  String  value  =  properties.getValue(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  properties.getValue(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	String  value  =  properties.getValue(option);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
44	[BUG]  [BUGGY]  String  value  =  options.getProperty(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  options.getProperty(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	String  value  =  options.getProperty(value);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
45	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  options.getOption(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  opt  =  options.getOption(value);	      Option    opt    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	19	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(value);	      Option    opt    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	19	None	replace
47	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(option);  String  value  =  properties.getValue(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(option);  String  value  =  properties.getValue(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  options.getOption(option);  String  value  =  properties.getValue(option);	      Enumeration    <    Option>    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
48	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  properties.getOption(option);  String  value  =  options.getProperty(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  properties.getOption(option);  String  value  =  options.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  properties.getOption(option);  String  value  =  options.getProperty(option);	      Enumeration    <    Option>    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
49	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(value);	      Enumeration    <    Option>    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(opt);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(option,  value);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
52	[BUG]  [BUGGY]  if(option.hasArg()  &&  value.length()  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(option.hasArg()  &&  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(option.hasArg()  &&  value.length()  ==  0)  {	  if(opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	11	None	replace
53	[BUG]  [BUGGY]  if(opt.hasArg()  &&  value.length()!=  0)  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasArg()  &&  value.length()!=  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasArg()  &&  value.length()!=  0)  {	  if(opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	11	None	replace
54	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(value);  String  value  =  properties.getProperty(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(value);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  options.getOption(value);  String  value  =  properties.getProperty(option);	      Enumeration    <    Option>    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
55	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(option,  value);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
56	[BUG]  [BUGGY]  Option  cmd  =  options.getCmd(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getCmd(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getCmd(option);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
57	[BUG]  [BUGGY]  if(opt.getValues()  ==  null)  {  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.getValues()  ==  null)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.getValues()  ==  null)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  	3	None	replace
58	[BUG]  [BUGGY]  if(opt!=  null)  {  [CE]  ';'  expected  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt!=  null)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt!=  null)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
59	[BUG]  [BUGGY]  if(opt.hasProperty(value)||  opt.hasValueForProcessing(value))  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasProperty(value)||  opt.hasValueForProcessing(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasProperty(value)||  opt.hasValueForProcessing(value))  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
60	[BUG]  [BUGGY]  String  value  =  options.getValue(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  options.getValue(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	String  value  =  options.getValue(option);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
61	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  options.getValueForProcessing(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	String  value  =  options.getValueForProcessing(option);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
62	[BUG]  [BUGGY]  if(opt.getValues()  ==  null  ||  opt.hasValues())  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.getValues()  ==  null  ||  opt.hasValues())  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.getValues()  ==  null  ||  opt.hasValues())  {	  if(opt.hasValues())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
63	[BUG]  [BUGGY]  Enumeration  e  =  options.getEnumeration(option,  expectedOpts);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  e  =  options.getEnumeration(option,  expectedOpts);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  e  =  options.getEnumeration(option,  expectedOpts);	      Enumeration    e    =    options.getEnumeration(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
64	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  return;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  return;  }  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(option);  if(cmd!=  null)  {  return;  }	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
65	[BUG]  [BUGGY]  Enumeration  e  =  options.getOptions();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  e  =  options.getOptions();  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  e  =  options.getOptions();	      Enumeration    e    =    options.getEnumeration();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
66	[BUG]  [BUGGY]  if(opt.getValues()  ==  null  ||  opt.hasValue())  {  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.getValues()  ==  null  ||  opt.hasValue())  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.getValues()  ==  null  ||  opt.hasValue())  {	  if(opt.hasValue())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
67	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(option,  value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  options.getOption(option,  value);	      Enumeration    <    Option>    opt    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
68	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(value);  String  value  =  properties.getProperty(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(value);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(value);  String  value  =  properties.getProperty(option);	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
69	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option);  String  value  =  properties.getProperty(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(option);  String  value  =  properties.getProperty(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(option);  String  value  =  properties.getProperty(value);	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  options.getProperty(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  options.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(option);  String  value  =  options.getProperty(option);	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
71	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(value);  String  value  =  properties.getProperty(option).toString();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(value);  String  value  =  properties.getProperty(option).toString();  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(value);  String  value  =  properties.getProperty(option).toString();	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option).toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
72	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  options.getProperty(value).toString();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  options.getProperty(value).toString();  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(option);  String  value  =  options.getProperty(value).toString();	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option).toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  options.getValueForProcessing(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(option);  String  value  =  options.getValueForProcessing(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(option);  String  value  =  options.getValueForProcessing(option);	      Option    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
74	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(value);	      Option    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
75	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option)+  value;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(option)+  value;  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(option)+  value;	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
76	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  options.getStringValue(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	String  value  =  options.getStringValue(option);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
77	[BUG]  [BUGGY]  if(opt.getValues()  ==  null  ||  value.length()  ==  0)  {  [CE]  ')'  expected  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.getValues()  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.getValues()  ==  null  ||  value.length()  ==  0)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
78	[BUG]  [BUGGY]  if(opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CE]  ')'  expected  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
79	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option)+  value;  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  currentOption  =  options.getOption(option)+  value;  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  currentOption  =  options.getOption(option)+  value;	      Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  	14	None	replace
80	[BUG]  [BUGGY]  Option  option  =  properties.getOption(option);  [CE]  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  properties.getOption(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  properties.getOption(option);	      Option    cmd    =    options.getOption(option);    String    value    =    properties.getProperty(option).toString();    	non-compiled	[CE]  	10	None	replace
81	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  ==  0)  {  [CE]  ')'  expected  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(value!=  null  &&  value.length()  ==  0)  {	  if(opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
82	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasProperty(value))  {  [CE]  ')'  expected  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  opt.hasProperty(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(value!=  null  &&  opt.hasProperty(value))  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  ')'  expected	16	None	replace
83	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(option);  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(option);	      Enumeration    <    Option>    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  	7	None	replace
84	[BUG]  [BUGGY]  Enumeration  <  Option>  opt  =  properties.getOption(option);  String  value  =  properties.getProperty(option);  [CE]  ')'  expected  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <  Option>  opt  =  properties.getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <  Option>  opt  =  properties.getOption(option);  String  value  =  properties.getProperty(option);	      Enumeration    <    Option>    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  ')'  expected	7	None	replace
85	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option);  if(!cmd.hasOption(value))  {  return;  }  [CE]  ')'  expected  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  options.getOption(option);  if(!cmd.hasOption(value))  {  return;  }  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  cmd  =  options.getOption(option);  if(!cmd.hasOption(value))  {  return;  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
86	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  value);  [CE]  ')'  expected  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  options.getOption(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  opt  =  options.getOption(option,  value);	      Option    opt    =    options.getOption(option);    	non-compiled	[CE]  ')'  expected	19	None	replace
87	[BUG]  [BUGGY]  if(opt.hasValue()  ||  value.trim().length()  ==  0)  {  [CE]  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValue()  ||  value.trim().length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasValue()  ||  value.trim().length()  ==  0)  {	  if(opt.hasValue())    {    	non-compiled	[CE]  	1	None	replace
88	[BUG]  [BUGGY]  if(opt.hasValue()  ||  value.startsWith( "- "))  {  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValue()  ||  value.startsWith( "- "))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	if(opt.hasValue()  ||  value.startsWith( "- "))  {	  if(opt.hasValue())    {    	non-compiled	[CE]  	1	None	replace
89	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(option);  [CE]  ')'  expected  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  opt  =  options.getOption(option);  String  value  =  properties.getValueForProcessing(option);	      Option    opt    =    options.getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  ')'  expected	18	None	replace
90	[BUG]  [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration(option);  [CE]  ')'  expected  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Enumeration  <?>  e  =  options.getEnumeration(option);	      Enumeration    e    =    options.getEnumeration(option);    	non-compiled	[CE]  ')'  expected	15	None	replace
91	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)+  value;  [CE]  ')'  expected  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  options.getOption(option)+  value;  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	159	160	9	replace	Option  option  =  options.getOption(option)+  value;	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  ')'  expected	17	None	replace
