bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(option);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  if(opt!=  null)  {  addRequiredOptions(opt);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  addRequiredOptions(opt);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  addRequiredOptions(opt);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt);  }  else  {  throw  new  RuntimeException( " ".equalsIgnoreCase(value));  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt);  }  else  {  throw  new  RuntimeException( " ".equalsIgnoreCase(value));  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(opt);  }  else  {  throw  new  RuntimeException( " ".equalsIgnoreCase(value));  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(option);  }  else  {  throw  new  RuntimeException( " ");  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option);  }  else  {  cmd.addOption(option);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option);  }  else  {  cmd.addOption(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(option);  }  else  {  cmd.addOption(option);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption(cmd);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =(Option)opt.getOption(cmd);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)opt.getOption(cmd);	      Option    option    =(Option)cmd.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =(Option)options.getOption(opt);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)options.getOption(opt);	      Option    option    =(Option)cmd.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  options.addOption(value);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  options.addOption(value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	options.addOption(value);	      options.addOption(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  options.addOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  options.addOption(option);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	options.addOption(option);	      options.addOption(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  options.getOption(options,  value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(options,  value);	      Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(value);  }  else  {  cmd.addOption(value);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(value);  }  else  {  cmd.addOption(value);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(value);  }  else  {  cmd.addOption(value);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    cmd.addOption(value);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option);  }  else  {  cmd.addOption(value);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option);  }  else  {  cmd.addOption(value);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(option);  }  else  {  cmd.addOption(value);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    cmd.addOption(value);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  if(properties!=  null)  {  updateRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(properties!=  null)  {  updateRequiredOptions(properties);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(properties!=  null)  {  updateRequiredOptions(properties);  }	  updateRequiredOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  updateRequiredOptions(properties,  exp);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  updateRequiredOptions(properties,  exp);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  exp);	  updateRequiredOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  if(properties!=  null)  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(properties!=  null)  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(properties!=  null)  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }	  updateRequiredOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  options.getOption(opt,  value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(opt,  value);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(option);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  Option  option  =  opts.getOption(option);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  opts.getOption(option);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  opts.getOption(option);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =  cmd.getOption(opt);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  cmd.getOption(opt);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  Option  opt  =  getOption(options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =  getOption(options);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  getOption(options);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  Option  option  =(Option)cmd.getOption(options);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =(Option)cmd.getOption(options);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)cmd.getOption(options);	      Option    option    =(Option)cmd.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  Option  option  =  properties.get(option);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  properties.get(option);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.get(option);	      Option    option    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
25	[BUG]  [BUGGY]  Option  option  =  options.get(value);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  options.get(value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.get(value);	      Option    option    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
26	[BUG]  [BUGGY]  Option  option  =  properties.get(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  properties.get(opt);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.get(opt);	      Option    option    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
27	[BUG]  [BUGGY]  Option  option  =  properties.getOption(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  properties.getOption(option);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.getOption(option);	      Option    option    =    properties.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  Option  option  =  properties.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  properties.getOption(opt);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.getOption(opt);	      Option    option    =    properties.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  Option  option  =  properties.getOption(options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  properties.getOption(options);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.getOption(options);	      Option    option    =    properties.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =(Option)options.getOption(option);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)options.getOption(option);	      Option    option    =(Option)cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  value);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =  options.getOption(value,  value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value,  value);	      Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  cmd);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =  options.getOption(value,  cmd);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value,  cmd);	      Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  forceRequiredOptions(opt);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  forceRequiredOptions(opt);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	forceRequiredOptions(opt);	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  null  :  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =(options!=  null)?  null  :  options.getOption(opt);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options!=  null)?  null  :  options.getOption(opt);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
35	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(opt):  options.getOption(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(opt):  options.getOption(value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options!=  null)?  options.getOption(opt):  options.getOption(value);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  updateRequiredOptions(properties,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  updateRequiredOptions(properties,  value);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  value);	  updateRequiredOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  updateRequiredOptions(properties,  options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  updateRequiredOptions(properties,  options);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  options);	  updateRequiredOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(value);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(value);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(value);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(value);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =(Option)options.getOption(value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)options.getOption(value);	      Option    option    =(Option)cmd.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  value);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  options.getOption(value,  value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value,  value);	      Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(value)+  1;  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  options.getOption(value)+  1;  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value)+  1;	      Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =(Option)opt.getOption(option);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)opt.getOption(option);	      Option    option    =(Option)cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(key);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =  options.getOption(key);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(key);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  true);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =  options.getOption(value,  true);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value,  true);	      Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  option  =  options.getOption(value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option  =  options.getOption(value);	      options.addOption(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ");  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  Option  exp  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  exp  =  options.getOption(value);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  exp  =  options.getOption(value);	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  option  option  =  options.getOption(value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option  option  =  options.getOption(value);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  Option  option  =(Option)cmd.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  option  =(Option)cmd.getOption(option,  value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)cmd.getOption(option,  value);	      Option    option    =(Option)cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value)+  1;  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =  options.getOption(value)+  1;  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value)+  1;	      Option    opt    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  if(properties!=  null)  {  updateRequiredOptions(properties);  }  else  {  options.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  if(properties!=  null)  {  updateRequiredOptions(properties);  }  else  {  options.addOption(opt);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(properties!=  null)  {  updateRequiredOptions(properties);  }  else  {  options.addOption(opt);  }	  updateRequiredOptions(properties);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  forceRequired();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  forceRequired();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	forceRequired();	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
54	[BUG]  [BUGGY]  Option  opt  =  properties.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =  properties.getOption(opt);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  properties.getOption(opt);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  Option  opt  =  options.getOptions(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  ||     "1   ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);    [BUGGY]  Option  opt  =  options.getOptions(value);  [BUGGY]    updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOptions(value);	      Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
