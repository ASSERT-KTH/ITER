bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  option.addOption(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  option.addOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option.addOption(value);	  options.addOption(value);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  option  =  options.getOption(opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option  =  options.getOption(opt);	  option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
3	[BUG]  [BUGGY]  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  option  =  options.getOption(options);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option  =  options.getOption(options);	  option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
4	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ");  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
5	[BUG]  [BUGGY]  if(value!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(value!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(value!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ");  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
6	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt,  value);  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt,  value);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt,  value);  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
7	[BUG]  [BUGGY]  if(value!=  null)  {  updateRequiredOptions(opt,  value);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(value!=  null)  {  updateRequiredOptions(opt,  value);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(value!=  null)  {  updateRequiredOptions(opt,  value);  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
8	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(opt);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
9	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(opt);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
10	[BUG]  [BUGGY]  Option  option  =(options!=  null)?  options.getOption(value):  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(options!=  null)?  options.getOption(value):  options.getOption(opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(options!=  null)?  options.getOption(value):  options.getOption(opt);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value,  options);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value,  options);	  Option    option    =    options.getOption(options,    value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value,  cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(options,  value,  cmd);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(options,  value,  cmd);	  Option    option    =    options.getOption(options,    value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(options,  value,  requiredOptions);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(options,  value,  requiredOptions);	  Option    option    =    options.getOption(options,    value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value,  exp);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(options,  value,  exp);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(options,  value,  exp);	  Option    option    =    options.getOption(options,    value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)this.options.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)this.options.getOption(value);	  Option    option    =(Option)options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
16	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)options.getOption(cmd);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)options.getOption(cmd);	  Option    option    =(Option)cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
17	[BUG]  [BUGGY]  Option  option  =(Option)opts.getOption(options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)opts.getOption(options);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)opts.getOption(options);	  Option    option    =(Option)cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
18	[BUG]  [BUGGY]  ||(properties!=  null  &&  properties.size()  >  0))  {  updateRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(properties!=  null  &&  properties.size()  >  0))  {  updateRequiredOptions(properties);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(properties!=  null  &&  properties.size()  >  0))  {  updateRequiredOptions(properties);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
19	[BUG]  [BUGGY]  ||(properties!=  null  &&  properties.size()  >  0))  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(properties!=  null  &&  properties.size()  >  0))  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(properties!=  null  &&  properties.size()  >  0))  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  ||(properties!=  null  &&  properties.isEmpty()))  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(properties!=  null  &&  properties.isEmpty()))  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(properties!=  null  &&  properties.isEmpty()))  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
21	[BUG]  [BUGGY]  ||(properties!=  null  &&  properties.contains(value)))  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(properties!=  null  &&  properties.contains(value)))  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(properties!=  null  &&  properties.contains(value)))  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  ||(properties!=  null  &&  properties.isEmpty()))  {  updateRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(properties!=  null  &&  properties.isEmpty()))  {  updateRequiredOptions(properties);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(properties!=  null  &&  properties.isEmpty()))  {  updateRequiredOptions(properties);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
23	[BUG]  [BUGGY]  ||(properties!=  null  &&  properties.size()  >  0))  {  updateRequiredOptions(properties);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(properties!=  null  &&  properties.size()  >  0))  {  updateRequiredOptions(properties);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(properties!=  null  &&  properties.size()  >  0))  {  updateRequiredOptions(properties);	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
24	[BUG]  [BUGGY]  if(option!=  null)  {  updateRequiredOptions(option);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(option!=  null)  {  updateRequiredOptions(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(option!=  null)  {  updateRequiredOptions(option);  }	  if(opt!=    null)    {    updateRequiredOptions(option);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  Option  opt  =  properties.getOption(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  properties.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  properties.getOption(value);	  Option    opt    =    properties.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
26	[BUG]  [BUGGY]  Option  opt  =  properties.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  properties.getOption(option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  properties.getOption(option);	  Option    opt    =    properties.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
27	[BUG]  [BUGGY]  Option  opt  =  properties.getOption(key);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  properties.getOption(key);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  properties.getOption(key);	  Option    opt    =    properties.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.get(value  -  1);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.get(value  -  1);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.get(value  -  1);	  Option    option    =    options.get(value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
29	[BUG]  [BUGGY]  Option  option  =  options.get(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.get(option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.get(option);	  Option    option    =    options.get(value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
30	[BUG]  [BUGGY]  if(options!=  null)  {  updateRequiredOptions(properties,  options);  }  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(options!=  null)  {  updateRequiredOptions(properties,  options);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(options!=  null)  {  updateRequiredOptions(properties,  options);  }	  updateRequiredOptions(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
31	[BUG]  [BUGGY]  if(options  ==  null)  {  updateRequiredOptions(properties,  options);  }  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(options  ==  null)  {  updateRequiredOptions(properties,  options);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(options  ==  null)  {  updateRequiredOptions(properties,  options);  }	  updateRequiredOptions(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
32	[BUG]  [BUGGY]  updateRequiredOptions(properties,  options,  exp);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  options,  exp);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  options,  exp);	  updateRequiredOptions(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
33	[BUG]  [BUGGY]  if(options!=  null)  {  updateRequiredOptions(properties,  options);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(options!=  null)  {  updateRequiredOptions(properties,  options);  }  else  {  cmd.addOption(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(options!=  null)  {  updateRequiredOptions(properties,  options);  }  else  {  cmd.addOption(opt);  }	  updateRequiredOptions(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
34	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(value,  options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  cmd.getOption(value,  options);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  cmd.getOption(value,  options);	  Option    opt    =    options.getOption(value,    cmd);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
35	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  cmd.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  cmd.getOption(value);	  Option    opt    =    options.getOption(value,    cmd);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
36	[BUG]  [BUGGY]  options.add(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  options.add(option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	options.add(option);	  if(opt!=    null)    {    updateRequiredOptions(option);    }    else    {    cmd.addOption(option);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  updateRequiredOptions(properties,  values);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  values);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  values);	  updateRequiredOptions(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
38	[BUG]  [BUGGY]  updateRequiredOptions(properties,  value,  exp);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  value,  exp);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  value,  exp);	  updateRequiredOptions(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
39	[BUG]  [BUGGY]  addOption(properties,  value);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  addOption(properties,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	addOption(properties,  value);	  updateRequiredOptions(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
40	[BUG]  [BUGGY]  option  =  options.getOption(value,  value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  option  =  options.getOption(value,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option  =  options.getOption(value,  value);	  option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
41	[BUG]  [BUGGY]  Option  option  =  opts.getOption(value);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  opts.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  opts.getOption(value);	  Option    option    =    opts.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
42	[BUG]  [BUGGY]  if(opt!=  null)  {  addRequiredOptions(option);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  addRequiredOptions(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  addRequiredOptions(option);  }	  if(opt!=    null)    {    addRequiredOptions(opt);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
43	[BUG]  [BUGGY]  addRequiredOptions(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  addRequiredOptions(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	addRequiredOptions(opt);	  if(opt!=    null)    {    addRequiredOptions(opt);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  if(opt!=  null)  {  addRequiredOptions(requiredOptions);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  addRequiredOptions(requiredOptions);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  addRequiredOptions(requiredOptions);  }	  if(opt!=    null)    {    addRequiredOptions(opt);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOption(value)/  1;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value)/  1;  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value)/  1;	  Option    option    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.getOption(value)+  2;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value)+  2;  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value)+  2;	  Option    option    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
47	[BUG]  [BUGGY]  Option  option  =  options.getOption(value)-  1;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value)-  1;  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value)-  1;	  Option    option    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
48	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value)/  1;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(value)/  1;  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value)/  1;	  Option    opt    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
49	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value)+  2;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(value)+  2;  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value)+  2;	  Option    opt    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
50	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value)-  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(value)-  1;  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value)-  1;	  Option    opt    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  value  -  1);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value,  value  -  1);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value,  value  -  1);	  Option    option    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  value  +  1);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value,  value  +  1);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value,  value  +  1);	  Option    option    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
53	[BUG]  [BUGGY]  Option  opt  =  options.getOptions(properties);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOptions(properties);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOptions(properties);	  Option    opt    =    options.getOptions(value);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
54	[BUG]  [BUGGY]  Option  opt  =  options.getOptions(property);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOptions(property);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOptions(property);	  Option    opt    =    options.getOptions(value);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
55	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
56	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equals( "yes ")))  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(value!=  null  &&  value.equals( "yes ")))  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(value!=  null  &&  value.equals( "yes ")))  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
57	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equals( "prototype ")))  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(value!=  null  &&  value.equals( "prototype ")))  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(value!=  null  &&  value.equals( "prototype ")))  {  updateRequiredOptions(opt,  value);  }  else  {  cmd.addOption(opt);  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  Option  option  =  properties.getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  properties.getOption(opt,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.getOption(opt,  value);	  Option    option    =    properties.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
59	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options  ==  null)?  null  :  options.getOption(opt);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
60	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =(options  ==  null)?  null  :  options.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options  ==  null)?  null  :  options.getOption(value);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
61	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  null  :  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =(options!=  null)?  null  :  options.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options!=  null)?  null  :  options.getOption(value);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(option,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(option,  value);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
63	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  value  -  1);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(value,  value  -  1);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value,  value  -  1);	  Option    opt    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
64	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  values);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(value,  values);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value,  values);	  Option    opt    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
65	[BUG]  [BUGGY]  forceRequired(true);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  forceRequired(true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	forceRequired(true);	  forceRequired();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.get(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.get(opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.get(opt);	  Option    option    =    properties.get(opt);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
67	[BUG]  [BUGGY]  Option  option  =  properties.get(key);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  properties.get(key);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.get(key);	  Option    option    =    properties.get(opt);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.addOption(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.addOption(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.addOption(opt);	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    else    {    options.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
69	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equalsIgnoreCase(value)))  {  updateRequiredOptions(opt);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(value!=  null  &&  value.equalsIgnoreCase(value)))  {  updateRequiredOptions(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(value!=  null  &&  value.equalsIgnoreCase(value)))  {  updateRequiredOptions(opt);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    throw    new    RuntimeException(   "   ".equalsIgnoreCase(value));    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equalsIgnoreCase(value)))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(value!=  null  &&  value.equalsIgnoreCase(value)))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(value!=  null  &&  value.equalsIgnoreCase(value)))  {  throw  new  RuntimeException( " ");  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    throw    new    RuntimeException(   "   ".equalsIgnoreCase(value));    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt);  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  ||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	||(value!=  null  &&  value.equals( "null ")))  {  updateRequiredOptions(opt);  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    throw    new    RuntimeException(   "   ".equalsIgnoreCase(value));    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
72	[BUG]  [BUGGY]  Option  option  =  options.getOption(properties);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(properties);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(properties);	  Option    option    =    properties.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
73	[BUG]  [BUGGY]  Option  option  =  properties.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  properties.getOption(options,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.getOption(options,  value);	  Option    option    =    properties.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
74	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)this.options.getOption(option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)this.options.getOption(option);	  Option    option    =(Option)options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
75	[BUG]  [BUGGY]  Option  option  =(Option)opts.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)opts.getOption(option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)opts.getOption(option);	  Option    option    =(Option)options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
76	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)this.options.getOption(opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)this.options.getOption(opt);	  Option    option    =(Option)options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  Option  opt  =  getOption(value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  getOption(value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  getOption(value);	  if(opt!=    null)    {    updateRequiredOptions(value);    }    else    {    cmd.addOption(value);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
78	[BUG]  [BUGGY]  Option  opt  =  getOption(properties);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  getOption(properties);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  getOption(properties);	  Option    opt    =    getOption(options);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
79	[BUG]  [BUGGY]  Option  opt  =  getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  getOption(options,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  getOption(options,  value);	  Option    opt    =    getOption(options);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
80	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)opt.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)opt.getOption(value);	  Option    option    =(Option)opt.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
81	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)this.options.getOption(cmd);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)this.options.getOption(cmd);	  Option    option    =(Option)opt.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  false);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(value,  false);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value,  false);	  Option    opt    =    options.getOption(value,    true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
83	[BUG]  [BUGGY]  Option  opt  =  options.getOption(options,  true);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(options,  true);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(options,  true);	  Option    opt    =    options.getOption(value,    true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
84	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  false);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value,  false);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value,  false);	  Option    opt    =    options.getOption(value,    true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
85	[BUG]  [BUGGY]  updateRequiredOptions(properties,  e);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  e);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  e);	  updateRequiredOptions(properties,    exp);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
86	[BUG]  [BUGGY]  updateRequiredOptions(properties,  exp,  e);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  exp,  e);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  exp,  e);	  updateRequiredOptions(properties,    exp);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
87	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)options.getOption(option,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)options.getOption(option,  value);	  Option    option    =(Option)cmd.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
88	[BUG]  [BUGGY]  Option  option  =(Option)cmd.getOption(value,  option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)cmd.getOption(value,  option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)cmd.getOption(value,  option);	  Option    option    =(Option)cmd.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
89	[BUG]  [BUGGY]  Option  option  =(Option)cmd.getOption(option,  value  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)cmd.getOption(option,  value  -  1);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)cmd.getOption(option,  value  -  1);	  Option    option    =(Option)cmd.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value,  opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value,  opt);	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
91	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value,  cmd);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(opt,  value,  cmd);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(opt,  value,  cmd);	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
92	[BUG]  [BUGGY]  Option  option  =  properties.get(option  +  1);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  properties.get(option  +  1);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.get(option  +  1);	  Option    option    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
93	[BUG]  [BUGGY]  Option  option  =(Option)option.getOption(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)option.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)option.getOption(value);	  Option    option    =(Option)opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
94	[BUG]  [BUGGY]  Option  option  =(Option)option.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)option.getOption(option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)option.getOption(option);	  Option    option    =(Option)opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
95	[BUG]  [BUGGY]  Option  exp  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  exp  =  options.getOption(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  exp  =  options.getOption(opt);	  Option    exp    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
96	[BUG]  [BUGGY]  Option  exp  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  exp  =  options.getOption(options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  exp  =  options.getOption(options);	  Option    exp    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
97	[BUG]  [BUGGY]  Option  exp  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  exp  =  options.getOption(options,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  exp  =  options.getOption(options,  value);	  Option    exp    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
98	[BUG]  [BUGGY]  Option  exp  =  options.getOption(option);  if(exp!=  null)  {  updateRequiredOptions(option);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  exp  =  options.getOption(option);  if(exp!=  null)  {  updateRequiredOptions(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  exp  =  options.getOption(option);  if(exp!=  null)  {  updateRequiredOptions(option);  }	  if(opt!=    null)    {    updateRequiredOptions(option);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
99	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(properties);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(properties);  }	  if(opt!=    null)    {    updateRequiredOptions(value);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
100	[BUG]  [BUGGY]  if(opt!=  null)  {  addRequiredOptions(value);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  addRequiredOptions(value);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  addRequiredOptions(value);  }	  if(opt!=    null)    {    updateRequiredOptions(value);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
101	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(value,  requiredOptions);  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(value,  requiredOptions);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(value,  requiredOptions);  }	  if(opt!=    null)    {    updateRequiredOptions(value);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
102	[BUG]  [BUGGY]  Option  opt  =  _parseOption(value,  cmd.getOption(opt));  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  _parseOption(value,  cmd.getOption(opt));  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  _parseOption(value,  cmd.getOption(opt));	  Option    opt    =    cmd.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
103	[BUG]  [BUGGY]  options.addOption(opt,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  options.addOption(opt,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	options.addOption(opt,  value);	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
104	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  values);  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  values);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(opt,  values);  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
105	[BUG]  [BUGGY]  Option  option  =  options.getOption(key,  value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(key,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(key,  value);	  Option    option    =    options.getOption(key);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
106	[BUG]  [BUGGY]  e.printStackTrace();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  e.printStackTrace();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	e.printStackTrace();	  forceRequiredOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
107	[BUG]  [BUGGY]  forceRequiredOptions(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  forceRequiredOptions(option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	forceRequiredOptions(option);	  forceRequiredOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
108	[BUG]  [BUGGY]  Option  option  =(options  ==  null)?  null  :  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(options  ==  null)?  null  :  options.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(options  ==  null)?  null  :  options.getOption(value);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
109	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  properties);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(value,  properties);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value,  properties);	  Option    opt    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
110	[BUG]  [BUGGY]  option  option  =(Option)options.getOption(value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  option  option  =(Option)options.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option  option  =(Option)options.getOption(value);	  Option    option    =(Option)options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
111	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option,  value);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(option,  value);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(option,  value);  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
112	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(value,  opt);  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(value,  opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(value,  opt);  }	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
113	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  values);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value,  values);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value,  values);	  Option    option    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
114	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  defaultValue);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value,  defaultValue);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value,  defaultValue);	  Option    option    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
115	[BUG]  [BUGGY]  if(properties!=  null)  {  addRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(properties!=  null)  {  addRequiredOptions(properties);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(properties!=  null)  {  addRequiredOptions(properties);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
116	[BUG]  [BUGGY]  properties.addAll(requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  properties.addAll(requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	properties.addAll(requiredOptions);	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
117	[BUG]  [BUGGY]  if(properties!=  null)  {  removeRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(properties!=  null)  {  removeRequiredOptions(properties);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(properties!=  null)  {  removeRequiredOptions(properties);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
118	[BUG]  [BUGGY]  forceRequiredOptions(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  forceRequiredOptions(value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	forceRequiredOptions(value);	  forceRequiredOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
119	[BUG]  [BUGGY]  forceRequiredOptions(opt,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  forceRequiredOptions(opt,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	forceRequiredOptions(opt,  value);	  forceRequiredOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
120	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(option);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
121	[BUG]  [BUGGY]  if(opt  ==  null)  {  updateRequiredOptions(value);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt  ==  null)  {  updateRequiredOptions(value);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt  ==  null)  {  updateRequiredOptions(value);  }	  if(opt!=    null)    {    updateRequiredOptions(value);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
122	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(option);	  Option    opt    =    properties.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
123	[BUG]  [BUGGY]  Option  option  =  options.findOption(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.findOption(value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.findOption(value);	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
124	[BUG]  [BUGGY]  electedOptions.add(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  electedOptions.add(value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	electedOptions.add(value);	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
125	[BUG]  [BUGGY]  updateRequiredOptions(properties,  properties);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  properties);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  properties);	  updateRequiredOptions(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
126	[BUG]  [BUGGY]  updateRequiredOptions(properties,  value,  options);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  value,  options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  value,  options);	  updateRequiredOptions(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
127	[BUG]  [BUGGY]  Option  option  =  options.get(key);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.get(key);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.get(key);	  Option    option    =    options.get(value);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
128	[BUG]  [BUGGY]  Option  option  =(Option)md.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)md.getOption(opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)md.getOption(opt);	  Option    option    =(Option)opt.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
129	[BUG]  [BUGGY]  Option  opt  =  options.getOptions(value,  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOptions(value,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOptions(value,  value);	  Option    opt    =    options.getOptions(value);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
130	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  cmd.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  cmd.getOption(value);	  Option    opt    =    cmd.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
131	[BUG]  [BUGGY]  if(properties!=  null)  {  addRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(properties!=  null)  {  addRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(properties!=  null)  {  addRequiredOptions(properties);  }  else  {  cmd.addOption(opt);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
132	[BUG]  [BUGGY]  if(properties!=  null)  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(option);  }  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(properties!=  null)  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(properties!=  null)  {  updateRequiredOptions(properties);  }  else  {  cmd.addOption(option);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    else    {    cmd.addOption(opt);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
133	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(value,  options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)options.getOption(value,  options);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)options.getOption(value,  options);	  Option    option    =(Option)options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
134	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(value,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)options.getOption(value,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)options.getOption(value,  value);	  Option    option    =(Option)options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
135	[BUG]  [BUGGY]  updateRequiredOptions(properties,  exp,  value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  exp,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  exp,  value);	  updateRequiredOptions(properties,    exp);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
136	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  null);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(value,  null);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value,  null);	  Option    opt    =    options.getOption(value,    true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
137	[BUG]  [BUGGY]  Option  exp  =  options.getOptionExpr(value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  exp  =  options.getOptionExpr(value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  exp  =  options.getOptionExpr(value);	  Option    exp    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
138	[BUG]  [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ".equalsIgnoreCase(value));  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ".equalsIgnoreCase(value));  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  updateRequiredOptions(opt,  value);  }  else  {  throw  new  RuntimeException( " ".equalsIgnoreCase(value));  }	  if(opt!=    null)    {    updateRequiredOptions(opt);    }    else    {    throw    new    RuntimeException(   "   ".equalsIgnoreCase(value));    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
139	[BUG]  [BUGGY]  Option  option  =  properties.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  properties.getOption(option,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  properties.getOption(option,  value);	  Option    option    =    properties.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
140	[BUG]  [BUGGY]  updateRequiredOptions(properties,  options,  value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  options,  value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  options,  value);	  updateRequiredOptions(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
141	[BUG]  [BUGGY]  options.addRequiredOptions(opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  options.addRequiredOptions(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	options.addRequiredOptions(opt);	  if(opt!=    null)    {    addRequiredOptions(opt);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
142	[BUG]  [BUGGY]  electedOptions.add(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  electedOptions.add(opt);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	electedOptions.add(opt);	  if(opt!=    null)    {    updateRequiredOptions(opt,    value);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
143	[BUG]  [BUGGY]  Option  opt  =  options.getOption(value,  option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =  options.getOption(value,  option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =  options.getOption(value,  option);	  Option    opt    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
144	[BUG]  [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options!=  null)?  options.getOption(value):  options.getOption(value);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
145	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options  ==  null)?  options.getOption(value):  options.getOption(value);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
146	[BUG]  [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(opt):  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  opt  =(options  ==  null)?  options.getOption(opt):  options.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  opt  =(options  ==  null)?  options.getOption(opt):  options.getOption(value);	  Option    opt    =(options!=    null)?    options.getOption(opt):    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
147	[BUG]  [BUGGY]  if(opt  ==  null)  {  updateRequiredOptions(option);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt  ==  null)  {  updateRequiredOptions(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt  ==  null)  {  updateRequiredOptions(option);  }	  if(opt!=    null)    {    updateRequiredOptions(option);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
148	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  value)+  1;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value,  value)+  1;  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value,  value)+  1;	  Option    option    =    options.getOption(value,    value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
149	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(value,  option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)options.getOption(value,  option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)options.getOption(value,  option);	  Option    option    =(Option)cmd.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
150	[BUG]  [BUGGY]  if(options!=  null)  {  updateRequiredOptions(properties,  options);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(options!=  null)  {  updateRequiredOptions(properties,  options);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(options!=  null)  {  updateRequiredOptions(properties,  options);  }  else  {  throw  new  RuntimeException( " ");  }	  updateRequiredOptions(properties,    options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
151	[BUG]  [BUGGY]  option  =  option.getOption(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  option  =  option.getOption(value);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option  =  option.getOption(value);	  if(opt!=    null)    {    updateRequiredOptions(option);    }    else    {    cmd.addOption(value);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
152	[BUG]  [BUGGY]  if(value!=  null)  {  updateRequiredOptions(properties,  value);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(value!=  null)  {  updateRequiredOptions(properties,  value);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(value!=  null)  {  updateRequiredOptions(properties,  value);  }	  updateRequiredOptions(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
153	[BUG]  [BUGGY]  Option  exp  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  exp  =  options.getOption(option);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  exp  =  options.getOption(option);	  Option    exp    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
154	[BUG]  [BUGGY]  Option  option  =  options.getOptions(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOptions(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOptions(value);	  Option    opt    =    options.getOptions(value);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
155	[BUG]  [BUGGY]  Option  option  =  options.getOption(value)+  0;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(value)+  0;  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(value)+  0;	  Option    option    =    options.getOption(value)+    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
156	[BUG]  [BUGGY]  for(Option  option  :  properties.values())  {  requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  for(Option  option  :  properties.values())  {  requiredOptions.add(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	for(Option  option  :  properties.values())  {  requiredOptions.add(option);  }	  forceRequired();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
157	[BUG]  [BUGGY]  for(Option  option  :  properties.keySet())  {  requiredOptions.add(option);  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  for(Option  option  :  properties.keySet())  {  requiredOptions.add(option);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	for(Option  option  :  properties.keySet())  {  requiredOptions.add(option);  }	  forceRequired();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
158	[BUG]  [BUGGY]  for(Option  option  :  properties.values())  {  requiredOptions.add(opt);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  for(Option  option  :  properties.values())  {  requiredOptions.add(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	for(Option  option  :  properties.values())  {  requiredOptions.add(opt);  }	  forceRequired();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
159	[BUG]  [BUGGY]  Option  option  =(Option)opts.getOption(value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(Option)opts.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(Option)opts.getOption(value);	  Option    option    =(Option)options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
160	[BUG]  [BUGGY]  forceRequiredOptions(properties);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  forceRequiredOptions(properties);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	forceRequiredOptions(properties);	  forceRequiredOptions(opt);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
161	[BUG]  [BUGGY]  updateRequiredOptions(properties,  exp,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  updateRequiredOptions(properties,  exp,  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	updateRequiredOptions(properties,  exp,  requiredOptions);	  updateRequiredOptions(properties,    exp);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
162	[BUG]  [BUGGY]  Option  option  =(options  ==  null)?  null  :  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(options  ==  null)?  null  :  options.getOption(opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(options  ==  null)?  null  :  options.getOption(opt);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
163	[BUG]  [BUGGY]  Option  option  =(options!=  null)?  null  :  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =(options!=  null)?  null  :  options.getOption(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =(options!=  null)?  null  :  options.getOption(value);	  Option    opt    =(options!=    null)?    null    :    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
164	[BUG]  [BUGGY]  if(properties!=  null)  {  requiredOptions.add(properties);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(properties!=  null)  {  requiredOptions.add(properties);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(properties!=  null)  {  requiredOptions.add(properties);  }	  if(properties!=    null)    {    updateRequiredOptions(properties);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
165	[BUG]  [BUGGY]  Option  option  =  options.getOption(properties,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  Option  option  =  options.getOption(properties,  value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	Option  option  =  options.getOption(properties,  value);	  Option    option    =    options.getOption(options,    value);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
166	[BUG]  [BUGGY]  option  option  =  options.getOption(value,  opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  option  option  =  options.getOption(value,  opt);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option  option  =  options.getOption(value,  opt);	  Option    option    =    options.getOption(opt,    value);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
167	[BUG]  [BUGGY]  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  option  =  options.getOption(option);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	option  =  options.getOption(option);	  option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
168	[BUG]  [BUGGY]  if(value!=  null)  {  updateRequiredOptions(opt);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(value!=  null)  {  updateRequiredOptions(opt);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(value!=  null)  {  updateRequiredOptions(opt);  }	  if(opt!=    null)    {    updateRequiredOptions(value);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
169	[BUG]  [BUGGY]  if(opt!=  null)  {  addRequiredOptions(opt,  value);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  if(opt!=  null)  {  addRequiredOptions(opt,  value);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	if(opt!=  null)  {  addRequiredOptions(opt,  value);  }	  if(opt!=    null)    {    addRequiredOptions(opt);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
170	[BUG]  [BUGGY]  options.addValue(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  ||       "1     ".equalsIgnoreCase(value)))  {    continue;  }  cmd.addOption(opt);      [BUGGY]  options.addValue(value);  [BUGGY]      updateRequiredOptions(opt);  }  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.3333333333333333	296	296	9	replace	options.addValue(value);	  options.addOption(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
