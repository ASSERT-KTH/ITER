projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processProperties(properties);}else{cmd.addArg(t);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(!str.equals("-")){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(str.length()==0){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=options.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=options.keySet().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=options.values().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(!str.equals("--")){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(!str.equals("-+")){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)this.options.get(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(t+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getGroup();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(true);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opts.keySet().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(str.length()!=0){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(t.length()==0){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opts.values().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opts);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(properties,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,stopAtNonOption,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,stopAtNonOption,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next():null;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processRequiredOptions(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Option[]options=options.getOptions();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(iterator,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=option.getOptionGroup();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.options.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opts.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.processProperties(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next()&&options.getOptions().length>0;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.clone();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,properties,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opt.keySet().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options);}else{cmd.addArg(t);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption("opt");
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<Option>iterator=options.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,requiredOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,neededOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,this);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.options.keySet().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(str.length()>=0){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,stopAtNonOption,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.remove();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOption(properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOption(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options==null){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(properties)){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.size()>0){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getArgumentGroup();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOption(properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(test);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=properties.keySet().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)this.options.get(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)properties.get(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,arguments,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,arguments,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this.arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(opt,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(opt,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processOptions(opt,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opts);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(iterator,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,null);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.processOptions(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processOptions(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processOption(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(opts);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,null);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,this,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,this,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(!str.equals("--")&&!str.equals("--")){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,neededOptions,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,requiredOptions,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,iterator,neededOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,neededOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null||options.size()>0){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.size()>1){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption("opts");
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption("opt",str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption("stopAtNonOption");
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.getIterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.getValue();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(!str.equals("-+")||str.equals("-+")){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,iterator,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,str,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,properties,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(iterator,properties,opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,option,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(option,iterator,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=iterator.getOption(t,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator,requiredOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,blockAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,stopAtNonOption,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(opt);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processOptions(opt);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processOptions(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=option.getGroup();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=opt.getOptionGroup();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOption(options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOption(properties,stopAtNonOption,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOption(t,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOption(opt,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(options,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,arguments,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next()&&options.getOptions().length>1;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next()||options.getOptions().length>0;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.getOptions().length>0;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.hasOption(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(properties)){processRequiredOptions(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(t)){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)this.options.get(test);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(test+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionsopt=options.getOption(t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=optionGroup.getOption(t,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,stopAtNonOption,group);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,stopAtNonOption,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,stopAtNonOption,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,iterator,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processOptions(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.processOptions(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(opts);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption)processOptions(opts);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(arguments,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(arguments[0]);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(opt,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opts,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(options,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Option[]options=opts.getOptions();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Option[]options=opt.getOptions();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Option[]options=this.options.getOptions();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(iterator,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,iterator,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,iterator,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(opt,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(iterator,stopAtNonOption,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,stopAtNonOption,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(iterator,stopAtNonOption,property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=opts.getOptionGroup(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=cmd.getOptionGroup(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processRequiredOptions(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processRequiredOptions(options);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,blockAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.getOption(t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties,stopAtNonOption,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(t,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties,stopAtNonOption,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties,stopAtNonOption,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,stopAtNonOption,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(str.length()>0){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(false);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(true,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(true,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(true,false);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processRequiredOptions(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.addArg(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.options.values().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(t.length()!=0){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(t,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(t,stopAtNonOption,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(t,stopAtNonOption,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOption(t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOption(t,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOption(t,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,stopAtNonOption,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processProperties(properties,stopAtNonOption,options);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,stopAtNonOption,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(false);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(t,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.opts.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=properties.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=t.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)this.options.get(t+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)this.options.get(t-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(iterator,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opt.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(options,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(options,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(options,stopAtNonOption);}else{cmd.addArg(arguments[0]);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getArgumentGroup(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(t+2);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(properties,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opts,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(t,stopAtNonOption,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,stopAtNonOption,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,stopAtNonOption,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<Option>iterator=opts.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<Option>iterator=this.options.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<Option>iterator=options.values().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,iterator,requiredOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getGroup(t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getGroup():null;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=opt.getGroup();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.processProperties(properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.processProperties(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,str,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,str,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(str,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=cmd.getOption(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=opts.getOption(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(str,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=opt.getOption(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next():this;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next():arguments;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,str,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,str,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,argument);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOption(properties,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOption(options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOption(properties,stopAtNonOption,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken()+",";
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options,options);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(options,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(options,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processProperties(properties,options);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=option.keySet().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=opt.values().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Option[]options=option.getOptions();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator,neededOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(opt,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=option.getOptionGroup(true);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(cmd);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.processOptions(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.processOptions(opt,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption("opt",stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption("opt",t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(opts!=null){processOptions(opts);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opts,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this.stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(opt,properties,stopAtNonOption,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(!str.equals("+")){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.size()>0){processRequiredOptions(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.size()>0){processOptions(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(properties,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(properties,blockAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOption(opt,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOption(opt,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getGroup(true);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=optionGroup.getOption(t,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(opt,properties,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(opt,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(!t.equals("--")){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption("opt");
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,this.stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)this.options.get(arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,stopAtNonOption?null:stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,eatTheRest,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,iterator,requiredOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,requiredOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(opt,stopAtNonOption);}else{cmd.addArg(arguments[0]);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processOptions(opt,stopAtNonOption);}else{cmd.addArg(t);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next()&&options.getOptions().length==0;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processOptions(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(options);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(opts);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options,stopAtNonOption);}else{cmd.addArg(arguments[0]);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,block);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(options,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(opt,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(cmd,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(test,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(options,iterator);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(option,iterator,property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(option,iterator,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(arguments)){processProperties(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(arguments-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options==null){processOptions(options,options);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=optionGroup.getOption(str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,options,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,properties,iterator,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,block);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this.options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241ListIterator<String>iterator=opts.values().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(opt,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(properties,iterator);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(t,blockAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(options.size()-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(t*1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processProperties(options,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processProperties(options,stopAtNonOption);}else{cmd.addArg(arguments[0]);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,blockAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getArgumentGroup(true);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,stopAtNonOption,opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(false,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true,eatTheRest);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(false,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken()+1;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.nextToken()+"-"+t;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt,cmd);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,block);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,blockAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOption(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,str,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processRequiredOptions(properties,stopAtNonOption);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,str,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt,blockAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(opt,this.stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(t,this,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.opt.keySet().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,this.requiredOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(opt,arguments,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null&&options.hasOption(properties)){processOptions(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOption(opt,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOption(properties,stopAtNonOption,argument);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(t,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,neededOptions,group);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,iterator,neededOptions,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption,argument);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,stopAtNonOption,opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(str.equals("--")){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,options,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,str,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,block,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processRequiredOptions(properties,iterator);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.processProperties(properties,block);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(properties,block);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(stopAtNonOption){processProperties(properties,stopAtNonOption,iterator);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(arguments.length);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.opts.keySet().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processOptions(opts);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)this.options.get(t,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)iterator.next();if(str.equals("-")){cmd.addArg(str);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,stopAtNonOption,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(properties,stopAtNonOption,opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(t,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOption(properties,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOption(properties,block);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processOptions(options,options);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,options,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,options,group);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)options.get(test,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=this.opts.values().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Stringstr=(String)this.options.get(1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.processProperties(properties,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241options.processProperties(properties,block);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,block);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(true,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOption(t,arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties,str,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(options,str,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parse(properties,block);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Iterator<String>iterator=requiredOptions.iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241parseOptions(properties,iterator,option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionoption=options.getOption(str,t);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(options,iterator,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(true,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(!stopAtNonOption){processOptions(opt,properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,stopAtNonOption,iterator,requiredOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,block,iterator);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,neededOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processOptions(options,iterator,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,properties,stopAtNonOption,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241processProperties(properties,properties,stopAtNonOption);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getArgumentGroups();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options==null){processOptions(properties);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241if(options!=null){processOptions(properties,options);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optionopt=options.getOption(t,iterator,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241OptionGroupgroup=options.getOptionGroup(options,str);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java241Optiongroup=options.getOptionGroup(options,str);
