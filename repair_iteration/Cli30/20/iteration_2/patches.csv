bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opts,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(opts,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  cmd);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  cmd);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  cmd);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  eatTheRest);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(stopAtNonOption,  cmd);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(stopAtNonOption,  cmd);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(stopAtNonOption,  cmd);	  OptionGroup    group    =    options.getOptionGroup(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
6	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(arguments);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(arguments);	  Option    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
7	[BUG]  [BUGGY]  Option  group  =  cmd.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  cmd.getOptionGroup(options);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  cmd.getOptionGroup(options);	  Option    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
8	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(cmd,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(cmd,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
9	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt,  cmd);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(opt,  cmd);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(opt,  cmd);	  Option    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(opt,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(opt,  eatTheRest);	  Option    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt,  arguments);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(opt,  arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(opt,  arguments);	  Option    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  arguments);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  cmd,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  cmd,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  arguments);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  arguments);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  eatTheRest);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(false);	  OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
17	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(true,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
18	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(false,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
19	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(true,  eatTheRest);	  OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(arguments);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(arguments);	  OptionGroup    group    =    options.getGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getGroup(options);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getGroup(options);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  cmd.getGroup(options);	  OptionGroup    group    =    options.getGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(cmd,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(cmd,  stopAtNonOption);	  OptionGroup    group    =    options.getGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  Option  group  =  options.getOption(arguments);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOption(arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOption(arguments);	  Option    group    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
24	[BUG]  [BUGGY]  Option  group  =  cmd.getOption(options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  cmd.getOption(options);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  cmd.getOption(options);	  Option    group    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
25	[BUG]  [BUGGY]  Option  group  =  options.getOption(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOption(cmd,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOption(cmd,  stopAtNonOption);	  Option    group    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
26	[BUG]  [BUGGY]  Option  group  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOption(options);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOption(options);	  Option    group    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
27	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(arguments,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(options,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
28	[BUG]  [BUGGY]  arguments  =  new  String[size()  /  2];  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  arguments  =  new  String[size()  /  2];  [BUGGY]      }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	arguments  =  new  String[size()  /  2];	  arguments    =    new    String[size()    *    2];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  arguments  =  new  String[size()  -  2];  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  arguments  =  new  String[size()  -  2];  [BUGGY]      }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	arguments  =  new  String[size()  -  2];	  arguments    =    new    String[size()    *    2];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
30	[BUG]  [BUGGY]  Option  group  =  cmd.getGroup();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  cmd.getGroup();  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  cmd.getGroup();	  Option    group    =    cmd.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
31	[BUG]  [BUGGY]  Option  group  =  cmd.getArgumentGroup();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  cmd.getArgumentGroup();  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  cmd.getArgumentGroup();	  Option    group    =    cmd.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
32	[BUG]  [BUGGY]  Option  group  =  cmd.getSelectedOptionGroup();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  cmd.getSelectedOptionGroup();  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  cmd.getSelectedOptionGroup();	  Option    group    =    cmd.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
33	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
34	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(opts,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(opts,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
35	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(options,  stopAtNonOption,  arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(options,  stopAtNonOption,  arguments);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
36	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  cmd);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(options,  cmd);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(options,  cmd);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
37	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(options,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(options,  stopAtNonOption);	  OptionGroup    group    =    options.getGroup(options);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
38	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(options,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(options,  eatTheRest);	  OptionGroup    group    =    options.getGroup(options);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
39	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(false);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(false);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(false);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
40	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(true,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(true,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
41	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(false,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(false,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(false,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
42	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(true,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(true,  eatTheRest);	  Option    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
43	[BUG]  [BUGGY]  arguments  =  new  String[size()  [0];  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  arguments  =  new  String[size()  [0];  [BUGGY]      }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	arguments  =  new  String[size()  [0];	  arguments    =    new    String[size()    -    1];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  Option  group  =  options.getGroup(true);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getGroup(true);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getGroup(true);	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
45	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  cmd);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  cmd);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  cmd);	  OptionGroup    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
46	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  eatTheRest);	  OptionGroup    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
47	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultOptions);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultOptions);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(defaultOptions);	  OptionGroup    group    =    options.getOptionGroup(arguments);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(false);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(false);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(false);	  OptionGroup    group    =    options.getGroup(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(true,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(true,  stopAtNonOption);	  OptionGroup    group    =    options.getGroup(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(true,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(true,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(true,  eatTheRest);	  OptionGroup    group    =    options.getGroup(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(false,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(false,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(false,  stopAtNonOption);	  OptionGroup    group    =    options.getGroup(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  cmd.getOptionGroup(options,  stopAtNonOption);	  OptionGroup    group    =    cmd.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(arguments);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  cmd.getOptionGroup(arguments);	  OptionGroup    group    =    cmd.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  Option  group  =  cmd.getOptionGroup(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  cmd.getOptionGroup(stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  cmd.getOptionGroup(stopAtNonOption);	  Option    group    =    cmd.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
55	[BUG]  [BUGGY]  Option  group  =  cmd.getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  cmd.getOptionGroup(option);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  cmd.getOptionGroup(option);	  Option    group    =    cmd.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
56	[BUG]  [BUGGY]  Option  group  =  cmd.getOptionGroup(opt,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  cmd.getOptionGroup(opt,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  cmd.getOptionGroup(opt,  stopAtNonOption);	  Option    group    =    cmd.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getGroup(),  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getGroup(),  stopAtNonOption;  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  cmd.getGroup(),  stopAtNonOption;	  OptionGroup    group    =    cmd.getGroup();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  arguments  =  new  String[size()  /  1];  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  arguments  =  new  String[size()  /  1];  [BUGGY]      }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	arguments  =  new  String[size()  /  1];	  arguments    =    new    String[size()    +    1];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
59	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  arguments);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(options,  arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(options,  arguments);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
60	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(options,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(options,  eatTheRest);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
61	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  arguments);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  arguments);	  OptionGroup    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
62	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(opt);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(opt);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(opt);	  OptionGroup    group    =    options.getGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
63	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  eatTheRest);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  cmd.getOptionGroup(options,  eatTheRest);	  OptionGroup    group    =    cmd.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getArgumentGroup();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getArgumentGroup();  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  cmd.getArgumentGroup();	  OptionGroup    group    =    cmd.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  Option  group  =  options.getArgumentGroup();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getArgumentGroup();  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getArgumentGroup();	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
66	[BUG]  [BUGGY]  arguments  =  new  String[size()  *  1];  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  arguments  =  new  String[size()  *  1];  [BUGGY]      }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	arguments  =  new  String[size()  *  1];	  arguments    =    new    String[size()    +    1];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  Option  group  =  options.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOption(options,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOption(options,  stopAtNonOption);	  Option    group    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
68	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  cmd,  stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  cmd,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
69	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  argument);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  argument);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  argument);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  this.stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  this.stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
71	[BUG]  [BUGGY]  Option  group  =  options.getGroup(options);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getGroup(options);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getGroup(options);	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
72	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.group();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  cmd.group();  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  cmd.group();	  OptionGroup    group    =    cmd.getGroup();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  arguments);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(true,  arguments);	  OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
74	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options,  arguments);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getGroup(options,  arguments);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getGroup(options,  arguments);	  OptionGroup    group    =    options.getGroup(options);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
75	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  argument);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(options,  argument);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(options,  argument);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
76	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  Option  group  =  options.getOptionGroup(opt,  this.stopAtNonOption);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	Option  group  =  options.getOptionGroup(opt,  this.stopAtNonOption);	  Option    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
77	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  options);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  cmd.getOptionGroup(options,  options);	  OptionGroup    group    =    cmd.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  this);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  this);  [BUGGY]      arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.25819888974716115	169	169	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  this);	  OptionGroup    group    =    options.getOptionGroup(options,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
