bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyCmds();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyCmds();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.propertyCmds();	  Enumeration    <    String>    cmd    =    properties.propertyElements();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
2	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyHandlers();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyHandlers();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.propertyHandlers();	  Enumeration    <    String>    cmd    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
3	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  _properties.propertyNames();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  _properties.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  _properties.propertyNames();	  Enumeration    <    String>    cmd    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
4	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.propertyNames());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.propertyNames());	  Enumeration    <    String>    expectedOpts    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  props.propertyNames();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  props.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  props.propertyNames();	  Enumeration    <    String>    expectedOpts    =    currentOption.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
6	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  options.propertyNames();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  options.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  options.propertyNames();	  Enumeration    <    String>    expectedOpts    =    currentOption.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
7	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option)+  1;  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Option  cmd  =  options.getOption(option)+  1;  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Option  cmd  =  options.getOption(option)+  1;	  Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Option  cmd  =  options.getOption(option,  value);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Option  cmd  =  options.getOption(option,  value);	  Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option  +  1);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Option  cmd  =  options.getOption(option  +  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Option  cmd  =  options.getOption(option  +  1);	  Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  Properties  cmd  =  properties.handleOptions();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.handleOptions();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.handleOptions();	  Properties    cmd    =    properties.handleProperties();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
11	[BUG]  [BUGGY]  Properties  cmd  =  properties.handleCmd();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.handleCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.handleCmd();	  Properties    cmd    =    properties.handleProperties();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
12	[BUG]  [BUGGY]  Properties  cmd  =  properties.handleCommandLine();  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.handleCommandLine();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.handleCommandLine();	  Properties    cmd    =    properties.handleProperties();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
13	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.keySet();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.keySet();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.keySet();	  Enumeration    <    String>    expectedOpts    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.keySet();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.keySet();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  e.keySet();	  Enumeration    <    String>    expectedOpts    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(properties.size()  -  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.get(properties.size()  -  1);	  Enumeration    <    String>    expectedOpts    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.propertyOpts());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.propertyOpts());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.propertyOpts());	  List    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
17	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  currentOption.propertyOpts();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  currentOption.propertyOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  currentOption.propertyOpts();	  List    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
18	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  this.properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  this.properties.propertyOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  this.properties.propertyOpts();	  List    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
19	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyChanges();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.propertyChanges();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.propertyChanges();	  Properties    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
20	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyCmd();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.propertyCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.propertyCmd();	  Properties    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
21	[BUG]  [BUGGY]  Properties  cmd  =  properties.getParent();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getParent();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getParent();	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
22	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(null);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getCmd(null);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getCmd(null);	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
23	[BUG]  [BUGGY]  Properties  cmd  =  properties.getParser();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getParser();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getParser();	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
24	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.propertyOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  this.properties.propertyOpts();	  Enumeration    <    Object>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
25	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  currentOption.propertyOpts();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  currentOption.propertyOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  currentOption.propertyOpts();	  Enumeration    <    Object>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
26	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.propertyProperties();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.propertyProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  this.properties.propertyProperties();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  super.properties.propertyNames();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  super.properties.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  super.properties.propertyNames();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());	  Enumeration    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
29	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.propertyNames());	  Enumeration    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
30	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  LinkedList  <  Object>(properties.properties());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  LinkedList  <  Object>(properties.properties());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  new  LinkedList  <  Object>(properties.properties());	  Enumeration    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
31	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.properties());  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.properties());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.properties());	  Enumeration    <    String>    expectedOpts    =    this.properties.properties();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  _properties.properties();  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  _properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  _properties.properties();	  Enumeration    <    String>    expectedOpts    =    this.properties.properties();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  props.propertyOpts();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  props.propertyOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  props.propertyOpts();	  Enumeration    <    String>    expectedOpts    =    currentOption.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
34	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  options.propertyOpts();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  options.propertyOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  options.propertyOpts();	  Enumeration    <    String>    expectedOpts    =    currentOption.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAttributes();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAttributes();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.getAttributes();	  Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(value);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  e.getAttributes(value);	  Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(properties);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(properties);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  e.getAttributes(properties);	  Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.expectedOpts());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.expectedOpts());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.expectedOpts());	  List    <    String>    expectedOpts    =    this.properties.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
39	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  this.properties.getOpts();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  this.properties.getOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  this.properties.getOpts();	  List    <    String>    expectedOpts    =    this.properties.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
40	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.values());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.values());	  Enumeration    <    String>    expectedOpts    =    this.properties.values();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
41	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.propertyNames());	  List    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.expectedOpts());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
42	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values());	  List    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.expectedOpts());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
43	[BUG]  [BUGGY]  Set  <  String>  expectedOpts  =  new  HashSet  <  String>(properties.expectedOpts());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  expectedOpts  =  new  HashSet  <  String>(properties.expectedOpts());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Set  <  String>  expectedOpts  =  new  HashSet  <  String>(properties.expectedOpts());	  List    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.expectedOpts());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
44	[BUG]  [BUGGY]  Properties  cmd  =  properties.getArguments();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getArguments();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getArguments();	  Properties    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
45	[BUG]  [BUGGY]  Properties  cmd  =  properties.getPropertyConfig();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getPropertyConfig();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getPropertyConfig();	  Properties    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
46	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  currentOption.properties();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  currentOption.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  currentOption.properties();	  Enumeration    <    String>    properties    =    currentOption.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.currentOption.propertyNames();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.currentOption.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  this.currentOption.propertyNames();	  Enumeration    <    String>    properties    =    currentOption.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  currentOption.propertyProperties();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  currentOption.propertyProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  currentOption.propertyProperties();	  Enumeration    <    String>    properties    =    currentOption.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.keySet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.keySet());	  Enumeration    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
50	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values()  +  1);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values()  +  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values()  +  1);	  Enumeration    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
51	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values(),  properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values(),  properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values(),  properties.propertyNames());	  Enumeration    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
52	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  props.properties();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  props.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  props.properties();	  Enumeration    <    Object>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
53	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.currentOption.properties();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.currentOption.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  this.currentOption.properties();	  Enumeration    <    Object>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
54	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.values();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.values();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  this.properties.values();  e.hasNext();)  {	  for(Enumeration    e    =    this.properties.propertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
55	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.getPropertyNames();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.getPropertyNames();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  this.properties.getPropertyNames();  e.hasNext();)  {	  for(Enumeration    e    =    this.properties.propertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
56	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.propertyNames());	  Enumeration    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  LinkedList  <  String>(properties.properties());  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  LinkedList  <  String>(properties.properties());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  LinkedList  <  String>(properties.properties());	  Enumeration    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
58	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken  +  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken  +  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.get(currentToken  +  1);	  Enumeration    <    String>    expectedOpts    =    properties.get(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken,  value);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken,  value);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.get(currentToken,  value);	  Enumeration    <    String>    expectedOpts    =    properties.get(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken.toString());  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken.toString());  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.get(currentToken.toString());	  Enumeration    <    String>    expectedOpts    =    properties.get(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.keySet();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.keySet();  e.hasMoreElements();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.keySet();  e.hasMoreElements();)  {	  for(Enumeration    e    =    properties.values();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
62	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  props.properties();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  props.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  props.properties();	  Enumeration    <    String>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
63	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.currentOption.properties();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.currentOption.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.currentOption.properties();	  Enumeration    <    String>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
64	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty( "cmd ");  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getProperty( "cmd ");  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getProperty( "cmd ");	  Properties    cmd    =    properties.getProperties();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
65	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  this.properties.keySet();  e.hasNext();)  {	  for(Enumeration    e    =    this.properties.keySet();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
66	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.properties();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  options.properties();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
67	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.propertyProperties();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.propertyProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  options.propertyProperties();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
68	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.options.propertyNames();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.options.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  this.options.propertyNames();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
69	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(this.properties.properties());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(this.properties.properties());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(this.properties.properties());	  Enumeration    <    Object>    expectedOpts    =    this.properties.properties();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
70	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.values();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  this.properties.values();	  Enumeration    <    Object>    expectedOpts    =    this.properties.properties();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
71	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyTypes();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.propertyTypes();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.propertyTypes();	  Enumeration    cmd    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
72	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyChanges();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.propertyChanges();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.propertyChanges();	  Enumeration    cmd    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
73	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.elements();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.elements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.elements();	  Enumeration    <    String>    expectedOpts    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
74	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.getCmd();	  Enumeration    <    String>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
75	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.properties();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.properties();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  this.properties.properties();  e.hasNext();)  {	  for(Enumeration    e    =    properties.properties();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
76	[BUG]  [BUGGY]  Enumeration  e  =  properties.getEnumeration(null);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  e  =  properties.getEnumeration(null);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.getEnumeration(null);	  Enumeration    e    =    properties.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
77	[BUG]  [BUGGY]  Enumeration  e  =  properties.getEnumeration(true);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  e  =  properties.getEnumeration(true);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.getEnumeration(true);	  Enumeration    e    =    properties.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
78	[BUG]  [BUGGY]  Enumeration  e  =  properties.getEnumeration(options);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  e  =  properties.getEnumeration(options);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.getEnumeration(options);	  Enumeration    e    =    properties.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
79	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.values();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  _properties.values();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
80	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this._properties.propertyNames();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this._properties.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  this._properties.propertyNames();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
81	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  _properties.getPropertyNames();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
82	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.keySet().iterator().next();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  e.keySet().iterator().next();	  Enumeration    <    String>    expectedOpts    =    properties.keySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
83	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  properties.propertyNames();	  Enumeration    <    Object>    expectedOpts    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
84	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.elements();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.elements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  this.properties.elements();	  Enumeration    <    Object>    expectedOpts    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
85	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyParsers();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.propertyParsers();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.propertyParsers();	  Enumeration    cmd    =    properties.propertyCmds();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
86	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.elements();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.elements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  this.properties.elements();	  Enumeration    <    String>    cmd    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
87	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.values();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  this.properties.values();	  Enumeration    <    String>    cmd    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
88	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.propertyOpts());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.propertyOpts());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(this.properties.propertyOpts());	  Enumeration    <    String>    expectedOpts    =    this.properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
89	[BUG]  [BUGGY]  Enumeration  e  =  properties.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  e  =  properties.keySet().iterator();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.keySet().iterator();	  Enumeration    e    =    properties.keySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
90	[BUG]  [BUGGY]  Enumeration  e  =  properties.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  e  =  properties.values().iterator().next();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.values().iterator().next();	  Enumeration    e    =    properties.keySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
91	[BUG]  [BUGGY]  Enumeration  e  =  properties.properties.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  e  =  properties.properties.keySet().iterator().next();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.properties.keySet().iterator().next();	  Enumeration    e    =    properties.keySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
92	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyChars();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyChars();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.propertyChars();	  Enumeration    <    String>    cmd    =    properties.propertyChildren();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
93	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyCmd();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.propertyCmd();	  Enumeration    <    String>    cmd    =    properties.propertyChildren();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
94	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  currentOption.getOpts();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  currentOption.getOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  currentOption.getOpts();	  List    <    String>    expectedOpts    =    currentOption.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
95	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  options.expectedOpts();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  options.expectedOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  options.expectedOpts();	  List    <    String>    expectedOpts    =    currentOption.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
96	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyParser();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.propertyParser();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.propertyParser();	  Enumeration    cmd    =    properties.propertyCmd();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
97	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentToken();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentToken();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  currentToken();	  Enumeration    <    String>    expectedOpts    =    properties.currentToken();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
98	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.currentToken().toString();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.currentToken().toString();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.currentToken().toString();	  Enumeration    <    String>    expectedOpts    =    properties.currentToken();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
99	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAllOpts();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAllOpts();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  e.getAllOpts();	  Enumeration    <    String>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
100	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAllElements();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAllElements();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.getAllElements();	  Enumeration    <    String>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
101	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAllOpts(false);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAllOpts(false);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.getAllOpts(false);	  Enumeration    <    String>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
102	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  _properties.properties();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  _properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  _properties.properties();	  Enumeration    <    String>    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
103	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  this.properties.properties();	  Enumeration    <    String>    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
104	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.properties().iterator().next();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.properties().iterator().next();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.properties().iterator().next();	  Enumeration    <    String>    expectedOpts    =    properties.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
105	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.values().iterator().next();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  e.values().iterator().next();	  Enumeration    <    String>    expectedOpts    =    properties.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
106	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.values().iterator();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.values().iterator();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.values().iterator();  e.hasNext();)  {	  for(Enumeration    e    =    properties.values();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
107	[BUG]  [BUGGY]  for(Enumeration  e  =  props.properties();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  props.properties();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  props.properties();  e.hasNext();)  {	  for(Enumeration    e    =    properties.properties();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
108	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());	  Enumeration    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
109	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.propertyOpts(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.propertyOpts(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.propertyOpts(value);	  Enumeration    <    String>    expectedOpts    =    this.properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
110	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.propertyChildren();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.propertyChildren();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  this.properties.propertyChildren();	  Enumeration    <    String>    cmd    =    properties.propertyChildren();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
111	[BUG]  [BUGGY]  Enumeration  e  =  properties.getEnumeration(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  e  =  properties.getEnumeration(value);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.getEnumeration(value);	  Enumeration    e    =    properties.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
112	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.values();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  this.properties.values();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
113	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  this.properties.properties();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
114	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  this.properties.getPropertyNames();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
115	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.keySet();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  this.properties.keySet();	  Enumeration    <    Object>    expectedOpts    =    this.properties.properties();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
116	[BUG]  [BUGGY]  ArrayList  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.expectedOpts());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  ArrayList  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.expectedOpts());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	ArrayList  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.expectedOpts());	  List    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.expectedOpts());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
117	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.expectedOpts();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.expectedOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.expectedOpts();	  Enumeration    <    String>    expectedOpts    =    properties.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
118	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.expectedOpts();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.expectedOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  currentOption.expectedOpts();	  Enumeration    <    String>    expectedOpts    =    properties.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
119	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>();	  Enumeration    <    String>    expectedOpts    =    this.properties.values();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
120	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getAttributes();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getAttributes();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  e.nextElement().getAttributes();	  Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
121	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.getAttributes();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.getAttributes();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  currentOption.getAttributes();	  Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
122	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  currentOption.expectedOpts(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  currentOption.expectedOpts(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  currentOption.expectedOpts(value);	  List    <    String>    expectedOpts    =    currentOption.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
123	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.keySet();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  _properties.keySet();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
124	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken  -  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.get(currentToken  -  1);	  Enumeration    <    String>    expectedOpts    =    properties.get(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
125	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  this.properties.valueOpts();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  this.properties.valueOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  this.properties.valueOpts();	  List    <    String>    expectedOpts    =    this.properties.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
126	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.propertyElements();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.propertyElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  this.properties.propertyElements();	  Enumeration    <    String>    cmd    =    properties.propertyElements();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
127	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.values().iterator();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.values().iterator();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.values().iterator();	  Enumeration    <    String>    expectedOpts    =    properties.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
128	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  LinkedList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  LinkedList  <  String>(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  LinkedList  <  String>(properties.values());	  Enumeration    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
129	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  properties.currentToken();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  properties.currentToken();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  properties.currentToken();	  List    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
130	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  properties.valueOpts();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  properties.valueOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  properties.valueOpts();	  List    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
131	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.keySet();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.keySet();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.keySet();  e.hasNext();)  {	  for(Enumeration    e    =    properties.values();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
132	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  options.properties();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  options.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  options.properties();	  Enumeration    <    Object>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
133	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.currentToken().value;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.currentToken().value;  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.currentToken().value;	  Enumeration    <    String>    expectedOpts    =    properties.currentToken();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
134	[BUG]  [BUGGY]  Properties  cmd  =  properties.getArgumentCmd();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getArgumentCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getArgumentCmd();	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
135	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  this.properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  this.properties.properties();	  Properties    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
136	[BUG]  [BUGGY]  Enumeration  cmd  =  this.properties.values();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  this.properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  this.properties.values();	  Enumeration    cmd    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
137	[BUG]  [BUGGY]  Enumeration  cmd  =  this.properties.elements();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  this.properties.elements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  this.properties.elements();	  Enumeration    cmd    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
138	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAllOpts(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAllOpts(value);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.getAllOpts(value);	  Enumeration    <    String>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
139	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.getAllOpts();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.getAllOpts();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  currentOption.getAllOpts();	  Enumeration    <    String>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
140	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentNames();	  Enumeration    <    String>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
141	[BUG]  [BUGGY]  Enumeration  cmd  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  this.properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  this.properties.properties();	  Enumeration    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
142	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.currentToken();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.currentToken();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  properties.currentToken();	  Enumeration    <    Object>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
143	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Option  cmd  =  options.getOption(value);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Option  cmd  =  options.getOption(value);	  Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
144	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.properties.getPropertyNames();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.properties.getPropertyNames();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.properties.getPropertyNames();  e.hasNext();)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
145	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.getEnumerationNames();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.getEnumerationNames();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.getEnumerationNames();  e.hasNext();)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
146	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.getEnumerator();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.getEnumerator();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.getEnumerator();  e.hasNext();)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
147	[BUG]  [BUGGY]  Properties  cmd  =  properties.handleDefaultParser();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.handleDefaultParser();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.handleDefaultParser();	  Properties    cmd    =    properties.handleProperties();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
148	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.keySet();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.properties.keySet();	  Enumeration    <    String>    cmd    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
149	[BUG]  [BUGGY]  Properties  cmd  =  properties.getPropertyCmd();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getPropertyCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getPropertyCmd();	  Properties    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
150	[BUG]  [BUGGY]  Properties  cmd  =  properties.getPropertyChildren();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getPropertyChildren();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getPropertyChildren();	  Properties    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
151	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.expectedOpts()  +  1);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.expectedOpts()  +  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.expectedOpts()  +  1);	  List    <    String>    expectedOpts    =    new    ArrayList    <    String>(properties.expectedOpts());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
152	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.currentOption.propertyOpts();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.currentOption.propertyOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.currentOption.propertyOpts();	  Enumeration    <    String>    expectedOpts    =    currentOption.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
153	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Option  option  =  options.getOption(option);	  Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
154	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getPropertyNames();	  Enumeration    <    String>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
155	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentElements();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentElements();	  Enumeration    <    String>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
156	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.iterator().next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.iterator().next();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  _properties.iterator().next();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
157	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.handleProperties();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.handleProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.handleProperties();	  Enumeration    <    String>    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
158	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.propertyOpts(properties);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.propertyOpts(properties);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.propertyOpts(properties);	  Enumeration    <    String>    expectedOpts    =    this.properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
159	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.properties.propertyOpts();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.properties.propertyOpts();	  Enumeration    <    String>    expectedOpts    =    this.properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
160	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <?>  cmd  =  properties.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <?>  cmd  =  properties.propertyNames();	  Enumeration    cmd    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
161	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  properties.properties();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <?>  cmd  =  properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <?>  cmd  =  properties.properties();	  Enumeration    cmd    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
162	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  properties.handleProperties();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  expectedOpts  =  properties.handleProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  properties.handleProperties();	  List    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
163	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.properties.elements();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  cmd  =  properties.properties.elements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.properties.elements();	  Enumeration    cmd    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
164	[BUG]  [BUGGY]  Properties  cmd  =  properties.properties.getCmd();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.properties.getCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.properties.getCmd();	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
165	[BUG]  [BUGGY]  Properties  cmd  =  properties.handleProperties(properties);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.handleProperties(properties);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.handleProperties(properties);	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
166	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  _properties.elements();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  _properties.elements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  _properties.elements();	  Enumeration    <    String>    cmd    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
167	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.getPropertyNames();  e!=  null;)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.getPropertyNames();  e!=  null;)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.getPropertyNames();  e!=  null;)  {	  for(Enumeration    e    =    properties.getPropertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
168	[BUG]  [BUGGY]  Enumeration  e  =  properties.getEnumeration(this);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  e  =  properties.getEnumeration(this);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.getEnumeration(this);	  Enumeration    e    =    properties.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
169	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.entrySet();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.entrySet();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.entrySet();  e.hasNext();)  {	  for(Enumeration    e    =    properties.properties();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
170	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.properties.propertyNames();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.properties.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.properties.propertyNames();	  Enumeration    <    String>    expectedOpts    =    this.properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
171	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.properties.currentToken();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.properties.currentToken();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.properties.currentToken();	  Enumeration    <    String>    expectedOpts    =    properties.currentToken();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
172	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.getAllOpts();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.getAllOpts();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.getAllOpts();	  Enumeration    <    String>    expectedOpts    =    properties.getAllOpts();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
