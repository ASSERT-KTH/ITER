bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.keySet();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.keySet();  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.keySet();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes();  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  e.getAttributes();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.get(currentToken);  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.get(currentToken);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Option  cmd  =  options.getOption(option);  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Option  cmd  =  options.getOption(option);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.properties());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.properties());  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.properties());	      Enumeration    <    String>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.properties();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.properties();	      Enumeration    <    String>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.propertyOpts();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.propertyOpts();	      Enumeration    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.propertyOpts();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.propertyOpts();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  currentOption.propertyOpts();	      Enumeration    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyNames();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.getPropertyNames();	      Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyChildren();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyChildren();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.propertyChildren();	      Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.elements();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  cmd  =  properties.elements();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.elements();	      Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.propertyNames();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.propertyNames();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.propertyNames();	      Enumeration    <    String>    expectedOpts    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.propertyNames();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  properties  =  this.properties.propertyNames();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  this.properties.propertyNames();	      Enumeration    <    String>    properties    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  currentOption.propertyNames();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  properties  =  currentOption.propertyNames();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  currentOption.propertyNames();	      Enumeration    <    String>    properties    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.propertyNames();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  properties  =  _properties.propertyNames();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  _properties.propertyNames();	      Enumeration    <    String>    properties    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyChildren();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  cmd  =  properties.propertyChildren();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.propertyChildren();	      Enumeration    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyCmd();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  cmd  =  properties.propertyCmd();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.propertyCmd();	      Enumeration    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyCmds();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  cmd  =  properties.propertyCmds();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.propertyCmds();	      Enumeration    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.expectedOpts());  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.expectedOpts());  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.expectedOpts());	      List    <    String>    expectedOpts    =    properties.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  List  <  String>  expectedOpts  =  properties.propertyOpts();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  properties.propertyOpts();	      List    <    String>    expectedOpts    =    properties.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  currentOption.expectedOpts();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  List  <  String>  expectedOpts  =  currentOption.expectedOpts();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  currentOption.expectedOpts();	      List    <    String>    expectedOpts    =    properties.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  Properties  cmd  =  properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Properties  cmd  =  properties.getPropertyNames();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getPropertyNames();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperties();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Properties  cmd  =  properties.getProperties();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getProperties();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  Properties  cmd  =  properties.handleProperties();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Properties  cmd  =  properties.handleProperties();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.handleProperties();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.propertyOpts();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  properties.propertyOpts();	      Enumeration    <    Object>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.properties());  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.properties());  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.properties());	      Enumeration    <    Object>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
27	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  Object>  expectedOpts  =  this.properties.properties();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  this.properties.properties();	      Enumeration    <    Object>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
28	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.propertyNames();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  for(Enumeration  e  =  this.properties.propertyNames();  e.hasNext();)  {  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  this.properties.propertyNames();  e.hasNext();)  {	  for(Enumeration    e    =    this.properties.propertyNames();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.values();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  for(Enumeration  e  =  this.properties.values();  e.hasMoreElements();)  {  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  this.properties.values();  e.hasMoreElements();)  {	  for(Enumeration    e    =    this.properties.propertyNames();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values());  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  new  ArrayList  <  String>(properties.values());	      Enumeration    <    String>    expectedOpts    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.values();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  this.properties.values();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  this.properties.values();	      Enumeration    <    String>    expectedOpts    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.properties();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  for(Enumeration  e  =  this.properties.properties();  e.hasMoreElements();)  {  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  this.properties.properties();  e.hasMoreElements();)  {	  for(Enumeration    e    =    properties.properties();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.values();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  for(Enumeration  e  =  properties.values();  e.hasMoreElements();)  {  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.values();  e.hasMoreElements();)  {	  for(Enumeration    e    =    properties.properties();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.getPropertyNames();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  for(Enumeration  e  =  properties.getPropertyNames();  e.hasNext();)  {  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.getPropertyNames();  e.hasNext();)  {	  for(Enumeration    e    =    properties.propertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.values();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  for(Enumeration  e  =  properties.values();  e.hasNext();)  {  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.values();  e.hasNext();)  {	  for(Enumeration    e    =    properties.propertyNames();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.currentToken();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.currentToken();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.currentToken();	      Enumeration    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.properties();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  for(Enumeration  e  =  properties.properties();  e.hasNext();)  {  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.properties();  e.hasNext();)  {	  for(Enumeration    e    =    properties.properties();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.propertyNames();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.propertyNames();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  currentOption.propertyNames();	      Enumeration    <    String>    expectedOpts    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.properties();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  currentOption.properties();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  currentOption.properties();	      Enumeration    <    String>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAllOpts();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.getAllOpts();  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.getAllOpts();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  Enumeration  e  =  properties.getEnumeration();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  e  =  properties.getEnumeration();  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.getEnumeration();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.values();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  cmd  =  properties.values();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.values();	      Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.properties();	      Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.keySet();	      Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
45	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.propertyNames();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  properties  =  options.propertyNames();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  properties  =  options.propertyNames();	      Enumeration    <    String>    properties    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  currentOption.properties();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  Object>  expectedOpts  =  currentOption.properties();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  currentOption.properties();	      Enumeration    <    Object>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.values();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.values();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  properties.values();	      Enumeration    <    Object>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Properties  cmd  =  properties.getCmd();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.getCmd();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  Properties  cmd  =  properties.properties();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Properties  cmd  =  properties.properties();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Properties  cmd  =  properties.properties();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.properties();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  cmd  =  properties.properties();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.properties();	      Enumeration    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.values();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  cmd  =  properties.values();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.values();	      Enumeration    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.propertyElements();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  cmd  =  properties.propertyElements();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.propertyElements();	      Enumeration    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  Enumeration  cmd  =  properties.elements();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  cmd  =  properties.elements();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  cmd  =  properties.elements();	      Enumeration    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasMoreElements();)  {  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  this.properties.keySet();  e.hasMoreElements();)  {	  for(Enumeration    e    =    this.properties.propertyNames();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.elements();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.elements();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.elements();	      Enumeration    <    String>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.propertyNames();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.propertyNames();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  this.properties.propertyNames();	      Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
57	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyElements();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyElements();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  cmd  =  properties.propertyElements();	      Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
58	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.expectedOpts();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.expectedOpts();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.expectedOpts();	      Enumeration    <    String>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
59	[BUG]  [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.elements();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  Object>  expectedOpts  =  properties.elements();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  Object>  expectedOpts  =  properties.elements();	      Enumeration    <    Object>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.keySet().iterator().next();  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.keySet().iterator().next();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.values().iterator().next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  <  String>  expectedOpts  =  properties.values().iterator().next();  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  <  String>  expectedOpts  =  properties.values().iterator().next();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
62	[BUG]  [BUGGY]  Enumeration  e  =  properties.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  Enumeration  e  =  properties.keySet().iterator().next();  [BUGGY]    {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	Enumeration  e  =  properties.keySet().iterator().next();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  this.properties.expectedOpts();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }    [BUGGY]  List  <  String>  expectedOpts  =  this.properties.expectedOpts();  [BUGGY]    for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	List  <  String>  expectedOpts  =  this.properties.expectedOpts();	      List    <    String>    expectedOpts    =    properties.expectedOpts();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
