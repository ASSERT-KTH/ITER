bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.propertyNames();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]  for(Enumeration  e  =  properties.propertyNames();  e.hasNext();)  {  [BUGGY]  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.propertyNames();  e.hasNext();)  {	for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  	non-compiled	[CE]  illegal  start  of  type	41	None	replace
2	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.propertyNames();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]  for(Enumeration  e  =  this.properties.propertyNames();  e.hasMoreElements();)  {  [BUGGY]  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  this.properties.propertyNames();  e.hasMoreElements();)  {	for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  	non-compiled	[CE]  illegal  start  of  type	41	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    [BUGGY]  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	  	for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  	non-compiled	[CE]  illegal  start  of  type	41	None	replace
4	[BUG]  [BUGGY]    Enumeration  <  String>  properties  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    Enumeration  <  String>  properties  =  properties.propertyNames();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    Enumeration  <  String>  properties  =  properties.propertyNames();		non-compiled	[CE]  illegal  start  of  type	42	None	add
5	[BUG]  [BUGGY]    Enumeration  <  String>  expectedOpts  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    Enumeration  <  String>  expectedOpts  =  properties.propertyNames();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    Enumeration  <  String>  expectedOpts  =  properties.propertyNames();		non-compiled	[CE]  illegal  start  of  type	42	None	add
6	[BUG]  [BUGGY]    Properties  cmd  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    Properties  cmd  =  properties.propertyNames();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    Properties  cmd  =  properties.propertyNames();		non-compiled	[CE]  illegal  start  of  type	42	None	add
7	[BUG]  [BUGGY]    Enumeration  <  String>  expectedOpts  =  properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    Enumeration  <  String>  expectedOpts  =  properties.propertyOpts();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    Enumeration  <  String>  expectedOpts  =  properties.propertyOpts();		non-compiled	[CE]  illegal  start  of  type	42	None	add
8	[BUG]  [BUGGY]    Enumeration  <  String>  expectedOpts  =  properties.properties();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    Enumeration  <  String>  expectedOpts  =  properties.properties();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    Enumeration  <  String>  expectedOpts  =  properties.properties();		non-compiled	[CE]  illegal  start  of  type	42	None	add
9	[BUG]  [BUGGY]    Enumeration  cmd  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    Enumeration  cmd  =  properties.propertyNames();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    Enumeration  cmd  =  properties.propertyNames();		non-compiled	[CE]  illegal  start  of  type	42	None	add
10	[BUG]  [BUGGY]    Enumeration  <  String>  cmd  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    Enumeration  <  String>  cmd  =  properties.propertyNames();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    Enumeration  <  String>  cmd  =  properties.propertyNames();		non-compiled	[CE]  illegal  start  of  type	42	None	add
11	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.properties();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]  for(Enumeration  e  =  properties.properties();  e.hasMoreElements();)  {  [BUGGY]  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	for(Enumeration  e  =  properties.properties();  e.hasMoreElements();)  {	for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  	non-compiled	[CE]  illegal  start  of  type	41	None	replace
12	[BUG]  [BUGGY]    Enumeration  <  Object>  expectedOpts  =  properties.properties();  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    Enumeration  <  Object>  expectedOpts  =  properties.properties();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    Enumeration  <  Object>  expectedOpts  =  properties.properties();		non-compiled	[CE]  illegal  start  of  type	42	None	add
13	[BUG]  [BUGGY]    List  <  String>  expectedOpts  =  properties.expectedOpts();  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    List  <  String>  expectedOpts  =  properties.expectedOpts();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    List  <  String>  expectedOpts  =  properties.expectedOpts();		non-compiled	[CE]  illegal  start  of  type	42	None	add
14	[BUG]  [BUGGY]    Enumeration  <  String>  expectedOpts  =  properties.values();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  {  if  (properties  ==  null)  {  return;  }  [BUGGY]    Enumeration  <  String>  expectedOpts  =  properties.values();  [BUGGY]  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	146	147	9	replace	    Enumeration  <  String>  expectedOpts  =  properties.values();		non-compiled	[CE]  illegal  start  of  type	42	None	add
