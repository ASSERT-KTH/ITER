bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.propertyNames());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.propertyNames());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.propertyNames());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
2	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.propertyNames());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.propertyNames());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.propertyNames());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
3	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.propertyNames());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
4	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  getPropertyNames();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  getPropertyNames();	  Enumeration    <    String>    properties    =    getProperties();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
5	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  getAllProperties();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  getAllProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  getAllProperties();	  Enumeration    <    String>    properties    =    getProperties();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
6	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  getValues();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  getValues();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  getValues();	  Enumeration    <    String>    properties    =    getProperties();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
7	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyCmds();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyCmds();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.propertyCmds();	  Enumeration    <    String>    cmd    =    properties.propertyValues();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
8	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.properties.values();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.properties.values();  e.hasMoreElements();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  properties.properties.values();  e.hasMoreElements();)  {	  for(Enumeration    e    =    properties.properties.keySet();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.properties.get(0);  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.properties.get(0);  e.hasMoreElements();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  properties.properties.get(0);  e.hasMoreElements();)  {	  for(Enumeration    e    =    properties.properties.keySet();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.properties.keySet();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.properties.keySet();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  properties.properties.keySet();  e.hasNext();)  {	  for(Enumeration    e    =    properties.properties.keySet();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newHashSet();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newHashSet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newHashSet();	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	29	None	replace
12	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  Lists.newArrayList();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  ArrayList  <  String>  requiredOptions  =  Lists.newArrayList();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	ArrayList  <  String>  requiredOptions  =  Lists.newArrayList();	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	29	None	replace
13	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getMoreElements();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getMoreElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getMoreElements();	  Enumeration    <    String>    cmd    =    properties.properties.getPropertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	59	None	replace
14	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getPropertyName(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getPropertyName(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getPropertyName(value);	  Enumeration    <    String>    cmd    =    properties.properties.getPropertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	59	None	replace
15	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getValues();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getValues();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getValues();	  Enumeration    <    String>    cmd    =    properties.properties.getPropertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	59	None	replace
16	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(requiredOptions);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(requiredOptions);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(requiredOptions);	  Enumeration    <    String>    requiredOptions    =    properties.keySet();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
17	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(requiredOptions.size()  -  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(requiredOptions.size()  -  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(requiredOptions.size()  -  1);	  Enumeration    <    String>    requiredOptions    =    properties.keySet();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
18	[BUG]  [BUGGY]  Collections.sort(properties,  properties);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  properties);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  properties);	  Collections.sort(properties,    exp);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
19	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyParameters();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyParameters();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.propertyParameters();	  Enumeration    <    String>    cmd    =    properties.propertyArguments();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
20	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyParser();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.propertyParser();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.propertyParser();	  Properties    cmd    =    properties.propertyCmd();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
21	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  _properties.properties();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  _properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  _properties.properties();	  Enumeration    <    String>    cmd    =    properties.properties();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	27	None	replace
22	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requiredOptions();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requiredOptions();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  props.requiredOptions();	  Enumeration    <    String>    requiredOptions    =    properties.requiredOptions();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	19	None	replace
23	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequires();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequires();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.propertyRequires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	42	None	replace
24	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requires();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  props.requires();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  props.requires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	42	None	replace
25	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyChanges();  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.propertyChanges();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.propertyChanges();	  Properties    cmd    =    properties.properties();    	non-compiled	[CE]  	49	None	replace
26	[BUG]  [BUGGY]  Properties  cmd  =  properties.getPropertyConfig();  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getPropertyConfig();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.getPropertyConfig();	  Properties    cmd    =    properties.propertyConfig();    	non-compiled	[CE]  	33	None	replace
27	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.propertyValues();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.propertyValues();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  _properties.propertyValues();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
28	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.getPropertyNames();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  _properties.getPropertyNames();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
29	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.propertyProperties();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.propertyProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  _properties.propertyProperties();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
30	[BUG]  [BUGGY]  ArrayList  requiredOptions  =  new  ArrayList(properties.keySet());  [CE]  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  ArrayList  requiredOptions  =  new  ArrayList(properties.keySet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	ArrayList  requiredOptions  =  new  ArrayList(properties.keySet());	  ArrayList    requiredOptions    =    new    ArrayList(properties.values());    	non-compiled	[CE]  	12	None	replace
31	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequired();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.propertyRequired();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.propertyRequired();	  Enumeration    <    String>    requiredOptions    =    properties.propertyValues();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
32	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.values();  e.hasNext();)  {  [CE]  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.values();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  this.properties.values();  e.hasNext();)  {	  for(Enumeration    e    =    this.properties.propertyNames();    e.hasNext();)    {    	non-compiled	[CE]  	4	None	replace
33	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasNext();)  {  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  this.properties.keySet();  e.hasNext();)  {	  for(Enumeration    e    =    this.properties.propertyNames();    e.hasNext();)    {    	non-compiled	[CE]  	4	None	replace
34	[BUG]  [BUGGY]  Collections.sort(this.properties,  values);  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(this.properties,  values);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(this.properties,  values);	  Collections.sort(properties,    values);    	non-compiled	[CE]  	44	None	replace
35	[BUG]  [BUGGY]  Collections.sort(properties,  values,  exp);  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  values,  exp);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  values,  exp);	  Collections.sort(properties,    values);    	non-compiled	[CE]  	44	None	replace
36	[BUG]  [BUGGY]  Collections.sort(properties,  new  Properties());  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  new  Properties());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  new  Properties());	  Collections.sort(properties,    values);    	non-compiled	[CE]  	44	None	replace
37	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.elements().iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.elements().iterator().next();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.elements().iterator().next();	  Enumeration    <    String>    requiredOptions    =    properties.values().iterator().next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	54	None	replace
38	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.values().iterator();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.values().iterator();	  Enumeration    <    String>    requiredOptions    =    properties.values().iterator().next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	54	None	replace
39	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  values);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  values);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  values);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	28	None	replace
40	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	28	None	replace
41	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.get(key);	  Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	47	None	replace
42	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(properties.size()  -  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(properties.size()  -  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.get(properties.size()  -  1);	  Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	47	None	replace
43	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.get(value  -  1);	  Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	47	None	replace
44	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(e.nextElement().toString());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(e.nextElement().toString());  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(e.nextElement().toString());	  Enumeration    <    String>    requiredOptions    =    properties.get(e.nextElement());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	22	None	replace
45	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(e.nextElement(),  value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(e.nextElement(),  value);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(e.nextElement(),  value);	  Enumeration    <    String>    requiredOptions    =    properties.get(e.nextElement());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	22	None	replace
46	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().toString();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().toString();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  e.nextElement().toString();	  Enumeration    <    String>    requiredOptions    =    properties.get(e.nextElement());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	22	None	replace
47	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyRequires();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyRequires();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  properties.propertyRequires();	  List    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	56	None	replace
48	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.requires());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.requires());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.requires());	  List    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	56	None	replace
49	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyElements();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.propertyElements();	  Enumeration    <    String>    cmd    =    properties.getArgumentElements();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	60	None	replace
50	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyHandlers();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyHandlers();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.propertyHandlers();	  Enumeration    <    String>    cmd    =    properties.getArgumentElements();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	60	None	replace
51	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  properties.getRequiredOptions();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  requiredOptions  =  properties.getRequiredOptions();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Set  <  String>  requiredOptions  =  properties.getRequiredOptions();	  List    <    String>    requiredOptions    =    properties.getRequiredOptions();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	39	None	replace
52	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.getRequiredOptions(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  properties.getRequiredOptions(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  properties.getRequiredOptions(value);	  List    <    String>    requiredOptions    =    properties.getRequiredOptions();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	39	None	replace
53	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(properties.size()  -  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(properties.size()  -  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(properties.size()  -  1);	  Enumeration    <    String>    requiredOptions    =    properties.get(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	23	None	replace
54	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(requiredOptions.length);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(requiredOptions.length);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(requiredOptions.length);	  Enumeration    <    String>    requiredOptions    =    properties.get(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	23	None	replace
55	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.values();  e.hasMoreElements();)  {  [CE]  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.values();  e.hasMoreElements();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  this.properties.values();  e.hasMoreElements();)  {	  for(Enumeration    e    =    this.properties.properties();    e.hasMoreElements();)    {    	non-compiled	[CE]  	3	None	replace
56	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasMoreElements();)  {  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.keySet();  e.hasMoreElements();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  this.properties.keySet();  e.hasMoreElements();)  {	  for(Enumeration    e    =    this.properties.properties();    e.hasMoreElements();)    {    	non-compiled	[CE]  	3	None	replace
57	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.keySet().iterator();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.keySet().iterator();	  Enumeration    <    String>    requiredOptions    =    properties.keySet().iterator().next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
58	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.keySet().iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.keySet().iterator().next();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  e.keySet().iterator().next();	  Enumeration    <    String>    requiredOptions    =    properties.keySet().iterator().next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
59	[BUG]  [BUGGY]  Collections.sort(properties,  value,  requiredOptions);  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  value,  requiredOptions);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  value,  requiredOptions);	  Collections.sort(properties,    value);    	non-compiled	[CE]  	37	None	replace
60	[BUG]  [BUGGY]  Collections.sort(properties,  value,  exp);  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  value,  exp);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  value,  exp);	  Collections.sort(properties,    value);    	non-compiled	[CE]  	37	None	replace
61	[BUG]  [BUGGY]  Collections.sort(properties,  value,  null);  [CE]  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  value,  null);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  value,  null);	  Collections.sort(properties,    value);    	non-compiled	[CE]  	37	None	replace
62	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values);	  List    <    String>    requiredOptions    =    Lists.newArrayList(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	30	None	replace
63	[BUG]  [BUGGY]  Set  requiredOptions  =  new  HashSet(properties.keySet());  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  requiredOptions  =  new  HashSet(properties.keySet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Set  requiredOptions  =  new  HashSet(properties.keySet());	  List    requiredOptions    =    new    ArrayList(properties.keySet());    	non-compiled	[CE]  	11	None	replace
64	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.keySet();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  this.properties.keySet();	  Enumeration    <    String>    cmd    =    this.properties.values();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	34	None	replace
65	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  _properties.values();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  _properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  _properties.values();	  Enumeration    <    String>    cmd    =    this.properties.values();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	34	None	replace
66	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList(properties.propertyNames());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList(properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  new  ArrayList(properties.propertyNames());	  List    <    String>    requiredOptions    =    new    ArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	53	None	replace
67	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.values());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.values());	  List    <    String>    requiredOptions    =    new    ArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	53	None	replace
68	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList(properties.keySet());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList(properties.keySet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  new  ArrayList(properties.keySet());	  List    <    String>    requiredOptions    =    new    ArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	53	None	replace
69	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.properties());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.properties());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.properties());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.properties());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
70	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.properties();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  options.properties();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	45	None	replace
71	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.propertyProperties();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.propertyProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  options.propertyProperties();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	45	None	replace
72	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.propertyValues();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.propertyValues();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  options.propertyValues();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	45	None	replace
73	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  1);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	57	None	replace
74	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.size()  -  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.size()  -  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.size()  -  1);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	57	None	replace
75	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  2);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  -  2);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	57	None	replace
76	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  +  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  +  1);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.size()  +  1);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	57	None	replace
77	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyCmds();  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.propertyCmds();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.propertyCmds();	  Properties    cmd    =    properties.propertyParameters();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
78	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  cmd.properties();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  cmd.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  cmd.properties();	  Enumeration    <    String>    properties    =    cmd.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
79	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.cmd.propertyNames();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.cmd.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  this.cmd.propertyNames();	  Enumeration    <    String>    properties    =    cmd.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
80	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.propertyNames());	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	46	None	replace
81	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values(),  properties.propertyNames());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values(),  properties.propertyNames());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values(),  properties.propertyNames());	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	46	None	replace
82	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.keySet());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.keySet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.keySet());	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	46	None	replace
83	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames()  +  1;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames()  +  1;  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentNames()  +  1;	  Enumeration    <    String>    cmd    =    properties.getArgumentNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
84	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames(),  exp;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames(),  exp;  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentNames(),  exp;	  Enumeration    <    String>    cmd    =    properties.getArgumentNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
85	[BUG]  [BUGGY]  Collections.sort(properties,  requiredOptions,  value);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  requiredOptions,  value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  requiredOptions,  value);	  Collections.sort(properties,    requiredOptions);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
86	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.properties();  e.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.properties();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  this.properties.properties();  e.hasNext();)  {	  for(Enumeration    e    =    properties.properties();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
87	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(key);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(key);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(key);	  Enumeration    <    String>    requiredOptions    =    properties.get(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
88	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(value  +  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(value  +  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(value  +  1);	  Enumeration    <    String>    requiredOptions    =    properties.get(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
89	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCommonCmd();  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getCommonCmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.getCommonCmd();	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
90	[BUG]  [BUGGY]  Properties  cmd  =  properties.getParent();  [CE]  illegal  start  of  expression  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getParent();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.getParent();	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
91	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(null);  [CE]  illegal  start  of  expression  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getCmd(null);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.getCmd(null);	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
92	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmdLines();  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getCmdLines();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.getCmdLines();	  Properties    cmd    =    properties.getProperties();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
93	[BUG]  [BUGGY]  Properties  cmd  =  properties.getPropertyNames();  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getPropertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.getPropertyNames();	  Properties    cmd    =    properties.getProperties();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
94	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.propertyProperties();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.propertyProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  this.properties.propertyProperties();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
95	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  super.properties.propertyNames();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  super.properties.propertyNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  super.properties.propertyNames();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
96	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.values();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  _properties.values();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
97	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.keySet();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  _properties.keySet();	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
98	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  cmd.values();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  cmd.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  cmd.values();	  Enumeration    <    String>    properties    =    cmd.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
99	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArguments(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArguments(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.getArguments(value);	  Enumeration    <    String>    cmd    =    properties.getArguments();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	25	None	replace
100	[BUG]  [BUGGY]  Collections.sort(properties,  options);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  options);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  options);	  Collections.sort(properties,    values);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
101	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newLinkedList(value);	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	29	None	replace
102	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(properties);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(properties);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newLinkedList(properties);	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	29	None	replace
103	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(value  -  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(value  -  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(value  -  1);	  Enumeration    <    String>    requiredOptions    =    properties.get(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
104	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.values();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  options.values();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	45	None	replace
105	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  options.keySet();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  options.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  options.keySet();	  Enumeration    <    String>    properties    =    options.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	45	None	replace
106	[BUG]  [BUGGY]  List  requiredOptions  =  new  HashSet(properties.values());  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  requiredOptions  =  new  HashSet(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  requiredOptions  =  new  HashSet(properties.values());	  Set    requiredOptions    =    new    HashSet(properties.values());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
107	[BUG]  [BUGGY]  Properties  cmd  =  properties.cmd();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.cmd();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.cmd();	  Properties    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
108	[BUG]  [BUGGY]  Properties  cmd  =  properties.getOptions();  [CE]  class  or  interface  expected  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getOptions();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.getOptions();	  Properties    cmd    =    properties.propertyConfig();    	non-compiled	[CE]  class  or  interface  expected	33	None	replace
109	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.properties.get(e.nextElement());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.properties.get(e.nextElement());  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  e.properties.get(e.nextElement());	  Enumeration    <    String>    requiredOptions    =    properties.get(e.nextElement());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	22	None	replace
110	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentElements(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentElements(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentElements(value);	  Enumeration    <    String>    cmd    =    properties.getArgumentElements();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	60	None	replace
111	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.keySet();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  properties.keySet();	  List    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
112	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  new  ArrayList();	  List    <    String>    requiredOptions    =    new    ArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	53	None	replace
113	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList(properties.values());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList(properties.values());	  List    <    String>    requiredOptions    =    new    ArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	53	None	replace
114	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values(),  value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values(),  value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties.values(),  value);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	46	None	replace
115	[BUG]  [BUGGY]  List  requiredOptions  =  new  ArrayList(properties.valueSet());  [CE]  class  or  interface  expected  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  requiredOptions  =  new  ArrayList(properties.valueSet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  requiredOptions  =  new  ArrayList(properties.valueSet());	  List    requiredOptions    =    new    ArrayList(properties.keySet());    	non-compiled	[CE]  class  or  interface  expected	11	None	replace
116	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.properties());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
117	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  property.keySet();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  property.keySet();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  property.keySet();	  Enumeration    <    String>    requiredOptions    =    properties.keySet();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
118	[BUG]  [BUGGY]  Properties  cmd  =  properties.keySet();  [CE]  class  or  interface  expected  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.keySet();	  Properties    cmd    =    properties.values();    	non-compiled	[CE]  class  or  interface  expected	48	None	replace
119	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  +  1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  +  1);  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.get(value  +  1);	  Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	47	None	replace
120	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.values();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  this.properties.values();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
121	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.properties();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  this.properties.properties();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
122	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.properties.keySet();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  this.properties.keySet();	  Enumeration    <    String>    properties    =    this.properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
123	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  getRequiredProperties();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  getRequiredProperties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  getRequiredProperties();	  Enumeration    <    String>    properties    =    getProperties();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
124	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.values());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties.values());	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	57	None	replace
125	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =(this.properties!=  null)?  null  :  this.properties.values();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =(this.properties!=  null)?  null  :  this.properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =(this.properties!=  null)?  null  :  this.properties.values();	  Enumeration    <    String>    cmd    =    this.properties.values();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	34	None	replace
126	[BUG]  [BUGGY]  List  neededOptions  =  new  ArrayList(properties.values());  [CE]  class  or  interface  expected  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  neededOptions  =  new  ArrayList(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  neededOptions  =  new  ArrayList(properties.values());	  List    requiredOptions    =    new    ArrayList(properties.values()    +    1);    	non-compiled	[CE]  class  or  interface  expected	51	None	replace
127	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.requiredOptions();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  properties.requiredOptions();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  properties.requiredOptions();	  List    <    String>    requiredOptions    =    properties.getRequiredOptions();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	39	None	replace
128	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentNames();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentNames();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getArgumentNames();	  Enumeration    <    String>    cmd    =    properties.properties.getPropertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	59	None	replace
129	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.keySet();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.keySet();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.properties.keySet();	  Enumeration    <    String>    cmd    =    properties.properties.getPropertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	59	None	replace
130	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentElements();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentElements();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getArgumentElements();	  Enumeration    <    String>    cmd    =    properties.properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
131	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getCmd(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.getCmd(value);	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
132	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  options.requires();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  options.requires();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  options.requires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
133	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyValues();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyValues();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  properties.propertyValues();	  List    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
134	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(properties.values());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newArrayList(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Set  <  String>  requiredOptions  =  Lists.newArrayList(properties.values());	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
135	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.propertyValues();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.propertyValues();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  this.properties.propertyValues();	  Enumeration    <    String>    cmd    =    properties.propertyValues();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
136	[BUG]  [BUGGY]  Properties  cmd  =  properties.getArguments();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.getArguments();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.getArguments();	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
137	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  this.properties.requiredOptions();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  this.properties.requiredOptions();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  this.properties.requiredOptions();	  Enumeration    <    String>    requiredOptions    =    properties.requiredOptions();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
138	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArguments();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArguments();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getArguments();	  Enumeration    <    String>    cmd    =    properties.getArguments();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
139	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.properties.entrySet();  e.hasMoreElements();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.properties.entrySet();  e.hasMoreElements();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  properties.properties.entrySet();  e.hasMoreElements();)  {	  for(Enumeration    e    =    properties.properties.keySet();    e.hasMoreElements();)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
140	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyRequiredOptions();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  <  String>  requiredOptions  =  properties.propertyRequiredOptions();	  List    <    String>    requiredOptions    =    properties.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
141	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.properties.keySet();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.properties.keySet();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.properties.keySet();	  Enumeration    <    String>    requiredOptions    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
142	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.properties().iterator().next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.properties().iterator().next();  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.properties().iterator().next();	  Enumeration    <    String>    requiredOptions    =    properties.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
143	[BUG]  [BUGGY]  for(Enumeration  e  =  properties.entrySet();  e.hasNext();)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  properties.entrySet();  e.hasNext();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  properties.entrySet();  e.hasNext();)  {	  for(Enumeration    e    =    properties.values();    e.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
144	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  getProperties().values();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  getProperties().values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  getProperties().values();	  Enumeration    <    String>    properties    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
145	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(properties.size());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(properties.size());  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.get(properties.size());	  Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
146	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  this.cmd.properties();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  this.cmd.properties();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  this.cmd.properties();	  Enumeration    <    String>    properties    =    cmd.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
147	[BUG]  [BUGGY]  Enumeration  <  String>  properties  =  _properties.propertyNames(value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  properties  =  _properties.propertyNames(value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  properties  =  _properties.propertyNames(value);	  Enumeration    <    String>    properties    =    _properties.propertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
148	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  this.properties.requires();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  this.properties.requires();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  this.properties.requires();	  Enumeration    <    String>    requiredOptions    =    properties.requires();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	42	None	replace
149	[BUG]  [BUGGY]  List  requiredOptions  =  new  LinkedList(properties.values());  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  List  requiredOptions  =  new  LinkedList(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	List  requiredOptions  =  new  LinkedList(properties.values());	  Set    requiredOptions    =    new    HashSet(properties.values());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
150	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyChildren();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Properties  cmd  =  properties.propertyChildren();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Properties  cmd  =  properties.propertyChildren();	  Properties    cmd    =    properties.propertyCmd();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
151	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(properties.size());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  requiredOptions  =  properties.get(properties.size());  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  requiredOptions  =  properties.get(properties.size());	  Enumeration    <    String>    requiredOptions    =    properties.get(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
152	[BUG]  [BUGGY]  Collections.sort(this.properties,  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(this.properties,  value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(this.properties,  value);	  Collections.sort(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
153	[BUG]  [BUGGY]  for(Enumeration  e  =  this.properties.entrySet();  e.hasMoreElements();)  {  [CE]  reached  end  of  file  while  parsing  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  for(Enumeration  e  =  this.properties.entrySet();  e.hasMoreElements();)  {  [BUGGY]      {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	for(Enumeration  e  =  this.properties.entrySet();  e.hasMoreElements();)  {	  for(Enumeration    e    =    this.properties.properties();    e.hasMoreElements();)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
154	[BUG]  [BUGGY]  Collections.sort(properties,  values,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  values,  value);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  values,  value);	  Collections.sort(properties,    values);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
155	[BUG]  [BUGGY]  Collections.sort(properties,  values,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Collections.sort(properties,  values,  requiredOptions);  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Collections.sort(properties,  values,  requiredOptions);	  Collections.sort(properties,    values);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
156	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.values();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.values();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.properties.values();	  Enumeration    <    String>    cmd    =    this.properties.values();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	34	None	replace
157	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.iterator().next();  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Enumeration  <  String>  cmd  =  properties.properties.iterator().next();	  Enumeration    <    String>    cmd    =    properties.properties.getPropertyNames();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	59	None	replace
158	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  TreeSet(properties.values());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }      [BUGGY]  Set  <  String>  requiredOptions  =  new  TreeSet(properties.values());  [BUGGY]      for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	259	260	9	replace	Set  <  String>  requiredOptions  =  new  TreeSet(properties.values());	  List    <    String>    requiredOptions    =    new    ArrayList(properties.values());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	53	None	replace
