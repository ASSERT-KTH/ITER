bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().getCmd();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.nextElement().getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().getCmd();	      String    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  String  cmd  =  e.getCmd().toString();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.getCmd().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd().toString();	      String    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  String  cmd  =  e.getCmd()  + "n ";  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.getCmd()  + "n ";  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd()  + "n ";	      String    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toString();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().toString();	      Enumeration    <    String>    cmd    =    e.nextElement();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  String  option  =  e.getKey();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getKey();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey();	  String    option    =    e.nextElement().getKey();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
6	[BUG]  [BUGGY]  String  option  =  e.getElement().getKey();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getElement().getKey();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().getKey();	  String    option    =    e.nextElement().getKey();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
7	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement().getCmd();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  cmd  =  e.nextElement().getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cmd  =  e.nextElement().getCmd();	      Enumeration    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  cmd  =  e.nextElement();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cmd  =  e.nextElement();	      Enumeration    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  Enumeration  c  =  e.getCmd();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  c  =  e.getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  c  =  e.getCmd();	      Enumeration    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  String  option  =  e.nextElement().getValue()  +  1;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().getValue()  +  1;  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().getValue()  +  1;	  String    option    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  String  option  =  e.getElement().getValue();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getElement().getValue();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().getValue();	  String    option    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().toString()  + "n ";  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.nextElement().toString()  + "n ";  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().toString()  + "n ";	      String    cmd    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().toString()  + ": ";  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.nextElement().toString()  + ": ";  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().toString()  + ": ";	      String    cmd    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  e.nextElement().getCmd();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Option  cmd  =  e.nextElement().getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.nextElement().getCmd();	      Option    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  e.getArgument();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Option  cmd  =  e.getArgument();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.getArgument();	      Option    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  e.nextElement();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Option  cmd  =  e.nextElement();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.nextElement();	      Option    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  String  option  =  e.getCmd().toLowerCase();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getCmd().toLowerCase();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toLowerCase();	  String    option    =    e.getCmd().toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  String  option  =  e.getCmd().toString()  + "n ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getCmd().toString()  + "n ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toString()  + "n ";	  String    option    =    e.getCmd().toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().toString();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.getElements().toString();	      Enumeration    <    String>    requiredOptions    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().toString()  +  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().toString()  +  1;  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.nextElement().toString()  +  1;	      Enumeration    <    String>    requiredOptions    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().getValue();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().getValue();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.nextElement().getValue();	      Enumeration    <    String>    requiredOptions    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  String  option  =  e.getKey().toLowerCase();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getKey().toLowerCase();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toLowerCase();	  String    option    =    e.getKey().toString();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getElements();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getElements();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().getElements();	      Enumeration    <    String>    cmd    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().iterator().next();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().iterator().next();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().iterator().next();	      Enumeration    <    String>    cmd    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  String  option  =  e.getValue().toLowerCase();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getValue().toLowerCase();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toLowerCase();	  String    option    =    e.getValue().toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  String  option  =  e.getValue().toString()  + "n ";  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getValue().toString()  + "n ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toString()  + "n ";	  String    option    =    e.getValue().toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ", ";  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + ", ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ", ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + "/ ";  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + "/ ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + "/ ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ";n ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + ";n ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ";n ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getCmd();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().getCmd();	      Enumeration    <    String>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getEnumeration();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getEnumeration();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getEnumeration();	      Enumeration    <    String>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  String  option  =  e.nextElement().getOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().getOption(option);  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().getOption(option);	  String    option    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toCharArray();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toCharArray();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().toCharArray();	      Enumeration    <    String>    cmd    =    e.nextElement();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
34	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ": ";  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + ": ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ": ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  String  cmd  =  e.getElement().toString();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.getElement().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getElement().toString();	      String    cmd    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  String  option  =  e.getKey().toString()  + "n ";  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getKey().toString()  + "n ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toString()  + "n ";	  String    option    =    e.getKey().toString();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
37	[BUG]  [BUGGY]  String  cmd  =  e.getArgument();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.getArgument();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getArgument();	      String    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  String  option  =  e.getValue().trim();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getValue().trim();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().trim();	  String    option    =    e.getValue().toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().iterator();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().iterator();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().iterator();	      Enumeration    <    String>    cmd    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  String  option  =  e.getCmd().toUpperCase();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getCmd().toUpperCase();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toUpperCase();	  String    option    =    e.getCmd().toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + "_ ";  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + "_ ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + "_ ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  Enumeration  cd  =  e.getCmd();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  cd  =  e.getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cd  =  e.getCmd();	      Enumeration    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  String  option  =  e.getKey().getValue();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getKey().getValue();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().getValue();	  String    option    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =(Option)e.getCmd();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Option  cmd  =(Option)e.getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =(Option)e.getCmd();	      Option    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.currentElement().toString();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.currentElement().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.currentElement().toString();	      Enumeration    <    String>    requiredOptions    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  String  cmd  =  e.getKey().toString();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.getKey().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getKey().toString();	      String    cmd    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
47	[BUG]  [BUGGY]  String  cmd  =  e.getCmd().toLowerCase();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.getCmd().toLowerCase();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd().toLowerCase();	      String    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  String  cmd  =  e.getSource();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  cmd  =  e.getSource();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getSource();	      String    cmd    =    e.getCmd();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
49	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0];  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0];  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements()  [0];	      Enumeration    <    String>    cmd    =    e.getElements();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
50	[BUG]  [BUGGY]  String  option  =  e.getValue().getKey();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getValue().getKey();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().getKey();	  String    option    =    e.nextElement().getKey();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
