bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  cmd  =  e.getCmd().toLowerCase(Locale.ENGLISH);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd().toLowerCase(Locale.ENGLISH);  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd().toLowerCase(Locale.ENGLISH);	  String    cmd    =    e.getCmd().toLowerCase();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	47	None	replace
2	[BUG]  [BUGGY]  String  cmd  =  e.getCmd().toLowerCase()  +  1;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd().toLowerCase()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd().toLowerCase()  +  1;	  String    cmd    =    e.getCmd().toLowerCase();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	47	None	replace
3	[BUG]  [BUGGY]  String  cmd  =  e.getCmd().toString()  + "n ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd().toString()  + "n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd().toString()  + "n ";	  String    cmd    =    e.getCmd().toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
4	[BUG]  [BUGGY]  String  cmd  =  e.getCmd().toString()  + ": ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd().toString()  + ": ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd().toString()  + ": ";	  String    cmd    =    e.getCmd().toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
5	[BUG]  [BUGGY]  String  cmd  =  e.getCmd().toString()  + ";n ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd().toString()  + ";n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd().toString()  + ";n ";	  String    cmd    =    e.getCmd().toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
6	[BUG]  [BUGGY]  String  cmd  =  e.getArgument().toString();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getArgument().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getArgument().toString();	  String    cmd    =    e.getArgument();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	37	None	replace
7	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().getArgument();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().getArgument();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().getArgument();	  String    cmd    =    e.getArgument();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	37	None	replace
8	[BUG]  [BUGGY]  String  cmd  =  e.getArgument().toLowerCase();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getArgument().toLowerCase();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getArgument().toLowerCase();	  String    cmd    =    e.getArgument();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	37	None	replace
9	[BUG]  [BUGGY]  Option  cmd  =  e.nextElement().getArgument();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =  e.nextElement().getArgument();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.nextElement().getArgument();	  Option    cmd    =    e.getArgument();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
10	[BUG]  [BUGGY]  String  cmd  =  e.getCmd()  + ": ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd()  + ": ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd()  + ": ";	  String    cmd    =    e.getCmd()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	replace
11	[BUG]  [BUGGY]  String  cmd  =  e.getCmd()  + ";n ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd()  + ";n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd()  + ";n ";	  String    cmd    =    e.getCmd()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	replace
12	[BUG]  [BUGGY]  String  cmd  =  e.getCmd()  + "_ ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd()  + "_ ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd()  + "_ ";	  String    cmd    =    e.getCmd()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	replace
13	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().entrySet().iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().entrySet().iterator().next();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().entrySet().iterator().next();	  Enumeration    <    String>    cmd    =    e.getElements().iterator().next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
14	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().keySet().iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().keySet().iterator().next();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().keySet().iterator().next();	  Enumeration    <    String>    cmd    =    e.getElements().iterator().next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
15	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().entrySet().iterator();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().entrySet().iterator();	  Enumeration    <    String>    cmd    =    e.getElements().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	39	None	replace
16	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().toArray(new  Enumeration[cmds.size()  ]);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().toArray(new  Enumeration[cmds.size()  ]);  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().toArray(new  Enumeration[cmds.size()  ]);	  Enumeration    <    String>    cmd    =    e.getElements().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	39	None	replace
17	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().keySet().iterator();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().keySet().iterator();	  Enumeration    <    String>    cmd    =    e.getElements().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	39	None	replace
18	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getElements()  +  1;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getElements()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().getElements()  +  1;	  Enumeration    <    String>    cmd    =    e.nextElement().getElements();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	23	None	replace
19	[BUG]  [BUGGY]  Enumeration  cd  =  e.nextElement();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  cd  =  e.nextElement();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cd  =  e.nextElement();	  Enumeration    cd    =    e.getCmd();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	42	None	replace
20	[BUG]  [BUGGY]  Enumeration  cd  =  e.nextElement().getCmd();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  cd  =  e.nextElement().getCmd();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cd  =  e.nextElement().getCmd();	  Enumeration    cd    =    e.getCmd();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	42	None	replace
21	[BUG]  [BUGGY]  Enumeration  cd  =  e.getEnumeration();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  cd  =  e.getEnumeration();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cd  =  e.getEnumeration();	  Enumeration    cd    =    e.getCmd();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	42	None	replace
22	[BUG]  [BUGGY]  String  cmd  =  e.getElement().toString()  + "n ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getElement().toString()  + "n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getElement().toString()  + "n ";	  String    cmd    =    e.getElement().toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	35	None	replace
23	[BUG]  [BUGGY]  String  cmd  =  e.getElement().toString()  + ": ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getElement().toString()  + ": ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getElement().toString()  + ": ";	  String    cmd    =    e.getElement().toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	35	None	replace
24	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + "._ ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + "._ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + "._ ";	  String    option    =    e.nextElement().toString()    +   "_   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	41	None	replace
25	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ",_ ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ",_ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ",_ ";	  String    option    =    e.nextElement().toString()    +   "_   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	41	None	replace
26	[BUG]  [BUGGY]  String  option  =  e.getElement().toString()  + "_ ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getElement().toString()  + "_ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().toString()  + "_ ";	  String    option    =    e.nextElement().toString()    +   "_   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	41	None	replace
27	[BUG]  [BUGGY]  String  option  =  e.getCmd().toLowerCase(Locale.ENGLISH);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toLowerCase(Locale.ENGLISH);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toLowerCase(Locale.ENGLISH);	  String    option    =    e.getCmd().toLowerCase();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
28	[BUG]  [BUGGY]  String  option  =  e.getCmd().toLowerCase()  +  1;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toLowerCase()  +  1;  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toLowerCase()  +  1;	  String    option    =    e.getCmd().toLowerCase();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
29	[BUG]  [BUGGY]  String  option  =  e.getCmd().toLowerCase(false);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toLowerCase(false);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toLowerCase(false);	  String    option    =    e.getCmd().toLowerCase();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
30	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().getSource();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().getSource();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().getSource();	  String    cmd    =    e.getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	48	None	replace
31	[BUG]  [BUGGY]  String  cmd  =  e.nextElement();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement();	  String    cmd    =    e.getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	48	None	replace
32	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ".: ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ".: ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ".: ";	  String    option    =    e.nextElement().toString()    +   ":   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	34	None	replace
33	[BUG]  [BUGGY]  String  option  =  e.getElement().toString()  + ": ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getElement().toString()  + ": ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().toString()  + ": ";	  String    option    =    e.nextElement().toString()    +   ":   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	34	None	replace
34	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ",  options: ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ",  options: ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ",  options: ";	  String    option    =    e.nextElement().toString()    +   ":   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	34	None	replace
35	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().toString()  + ".: ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().toString()  + ".: ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().toString()  + ".: ";	  String    cmd    =    e.nextElement().toString()    +   ":   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
36	[BUG]  [BUGGY]  String  option  =  e.getKey().toString()  + ", ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().toString()  + ", ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toString()  + ", ";	  String    option    =    e.getKey().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	36	None	replace
37	[BUG]  [BUGGY]  String  option  =  e.getKey().toString()  + "/ ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().toString()  + "/ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toString()  + "/ ";	  String    option    =    e.getKey().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	36	None	replace
38	[BUG]  [BUGGY]  String  option  =  e.getKey().toString()  + "_ ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().toString()  + "_ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toString()  + "_ ";	  String    option    =    e.getKey().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	36	None	replace
39	[BUG]  [BUGGY]  String  option  =  e.getKey().toString()  + ". ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().toString()  + ". ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toString()  + ". ";	  String    option    =    e.getKey().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	36	None	replace
40	[BUG]  [BUGGY]  Enumeration  c  =  e.nextElement();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  c  =  e.nextElement();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  c  =  e.nextElement();	  Enumeration    c    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  Enumeration  c  =  e.nextElement().getCmd();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  c  =  e.nextElement().getCmd();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  c  =  e.nextElement().getCmd();	  Enumeration    c    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  Enumeration  c  =  e.getEnumeration();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  c  =  e.getEnumeration();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  c  =  e.getEnumeration();	  Enumeration    c    =    e.getCmd();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
43	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().toString()  + ", ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().toString()  + ", ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().toString()  + ", ";	  String    cmd    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
44	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().toString()  + ";n ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().toString()  + ";n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().toString()  + ";n ";	  String    cmd    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
45	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().toString()  + "/ ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().toString()  + "/ ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().toString()  + "/ ";	  String    cmd    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
46	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElement().toString();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElement().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.getElement().toString();	  Enumeration    <    String>    requiredOptions    =    e.nextElement().toString()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	20	None	replace
47	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().toString()  +  1;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().toString()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.getElements().toString()  +  1;	  Enumeration    <    String>    requiredOptions    =    e.nextElement().toString()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	20	None	replace
48	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().toString();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().toString();	  Enumeration    <    String>    cmd    =    e.nextElement().toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	4	None	replace
49	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toString()  + "n ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toString()  + "n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().toString()  + "n ";	  Enumeration    <    String>    cmd    =    e.nextElement().toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	4	None	replace
50	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getCmd().toString();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getCmd().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getCmd().toString();	  Enumeration    <    String>    cmd    =    e.nextElement().toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	4	None	replace
51	[BUG]  [BUGGY]  String  option  =  e.getKey().toLowerCase()  +  1;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().toLowerCase()  +  1;  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toLowerCase()  +  1;	  String    option    =    e.getKey().toLowerCase();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	22	None	replace
52	[BUG]  [BUGGY]  String  option  =  e.getKey().toLowerCase(Locale.ENGLISH);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().toLowerCase(Locale.ENGLISH);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toLowerCase(Locale.ENGLISH);	  String    option    =    e.getKey().toLowerCase();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	22	None	replace
53	[BUG]  [BUGGY]  String  option  =  e.getValue().getKey()  + "n ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().getKey()  + "n ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().getKey()  + "n ";	  String    option    =    e.getValue().getKey();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	50	None	replace
54	[BUG]  [BUGGY]  String  option  =  e.getCmd().toString()  + ", ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toString()  + ", ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toString()  + ", ";	  String    option    =    e.getCmd().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
55	[BUG]  [BUGGY]  String  option  =  e.getCmd().toString()  + "/ ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toString()  + "/ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toString()  + "/ ";	  String    option    =    e.getCmd().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
56	[BUG]  [BUGGY]  String  option  =  e.getCmd().toString()  + ";n ";  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toString()  + ";n ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toString()  + ";n ";	  String    option    =    e.getCmd().toString()    +   "n   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
57	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().getValue()  +  1;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().getValue()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.nextElement().getValue()  +  1;	  Enumeration    <    String>    requiredOptions    =    e.nextElement().getValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
58	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().getKey();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().getKey();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.nextElement().getKey();	  Enumeration    <    String>    requiredOptions    =    e.nextElement().getValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
59	[BUG]  [BUGGY]  Option  option  =  e.nextElement().getOption(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  option  =  e.nextElement().getOption(option);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  option  =  e.nextElement().getOption(option);	  String    option    =    e.nextElement().getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	32	None	replace
60	[BUG]  [BUGGY]  String  option  =  e.getElement().getOption(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getElement().getOption(option);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().getOption(option);	  String    option    =    e.nextElement().getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	32	None	replace
61	[BUG]  [BUGGY]  String  option  =  e.nextElement().getOption(option,  value);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().getOption(option,  value);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().getOption(option,  value);	  String    option    =    e.nextElement().getOption(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	32	None	replace
62	[BUG]  [BUGGY]  String  option  =  e.getValue();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue();	  String    option    =    e.getKey();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
63	[BUG]  [BUGGY]  String  option  =  e.getKey()  + ": "  +  e.getValue();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey()  + ": "  +  e.getValue();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey()  + ": "  +  e.getValue();	  String    option    =    e.getKey();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
64	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [1];  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [1];  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements()  [1];	  Enumeration    <    String>    cmd    =    e.getElements()    [0];    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
65	[BUG]  [BUGGY]  String  option  =  e.getElement().getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getElement().getValue()  +  1;  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().getValue()  +  1;	  String    option    =    e.getElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
66	[BUG]  [BUGGY]  String  option  =  e.getElement().getValue()  + "n ";  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getElement().getValue()  + "n ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().getValue()  + "n ";	  String    option    =    e.getElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().getCmd()  + ": ";  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().getCmd()  + ": ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().getCmd()  + ": ";	  String    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
68	[BUG]  [BUGGY]  Option  cmd  =(Option)e.nextElement();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =(Option)e.nextElement();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =(Option)e.nextElement();	  Option    cmd    =(Option)e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
69	[BUG]  [BUGGY]  Option  cmd  =(Option)e.nextElement().getCmd();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =(Option)e.nextElement().getCmd();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =(Option)e.nextElement().getCmd();	  Option    cmd    =(Option)e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =(Option)e.next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =(Option)e.next();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =(Option)e.next();	  Option    cmd    =(Option)e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
71	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getCmd()  +  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getCmd()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().getCmd()  +  1;	  Enumeration    <    String>    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
72	[BUG]  [BUGGY]  String  option  =  e.getValue().toString()  + ", ";  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().toString()  + ", ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toString()  + ", ";	  String    option    =    e.getValue().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
73	[BUG]  [BUGGY]  String  option  =  e.getValue().toString()  + "/ ";  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().toString()  + "/ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toString()  + "/ ";	  String    option    =    e.getValue().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
74	[BUG]  [BUGGY]  String  option  =  e.getValue().toString()  + "_ ";  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().toString()  + "_ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toString()  + "_ ";	  String    option    =    e.getValue().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
75	[BUG]  [BUGGY]  Option  cmd  =  e.nextElement().toString();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =  e.nextElement().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.nextElement().toString();	  Option    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
76	[BUG]  [BUGGY]  Option  cmd  =  e.nextElement().getParent();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =  e.nextElement().getParent();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.nextElement().getParent();	  Option    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
77	[BUG]  [BUGGY]  String  option  =  e.getValue().trim()  + "n ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().trim()  + "n ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().trim()  + "n ";	  String    option    =    e.getValue().trim();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
78	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.firstElement().toString();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.firstElement().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.firstElement().toString();	  Enumeration    <    String>    requiredOptions    =    e.currentElement().toString();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
79	[BUG]  [BUGGY]  String  option  =  e.getCmd().toUpperCase(false);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toUpperCase(false);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toUpperCase(false);	  String    option    =    e.getCmd().toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
80	[BUG]  [BUGGY]  String  option  =  e.getCmd().toUpperCase(context);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toUpperCase(context);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toUpperCase(context);	  String    option    =    e.getCmd().toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
81	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().toCharArray();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().toCharArray();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().toCharArray();	  Enumeration    <    String>    cmd    =    e.nextElement().toCharArray();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
82	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toCharArray()  +  1;  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toCharArray()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().toCharArray()  +  1;	  Enumeration    <    String>    cmd    =    e.nextElement().toCharArray();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
83	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + "./ ";  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + "./ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + "./ ";	  String    option    =    e.nextElement().toString()    +   "/   ";    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
84	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + "/. ";  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + "/. ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + "/. ";	  String    option    =    e.nextElement().toString()    +   "/   ";    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
85	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + "/ ",  e.getModule();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + "/ ",  e.getModule();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + "/ ",  e.getModule();	  String    option    =    e.nextElement().toString()    +   "/   ";    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
86	[BUG]  [BUGGY]  String  cmd  =  e.getValue().toString();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getValue().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getValue().toString();	  String    cmd    =    e.getKey().toString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
87	[BUG]  [BUGGY]  String  cmd  =  e.getKey();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getKey();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getKey();	  String    cmd    =    e.getKey().toString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
88	[BUG]  [BUGGY]  String  option  =  e.getValue().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().toLowerCase(Locale.ENGLISH);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toLowerCase(Locale.ENGLISH);	  String    option    =    e.getValue().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
89	[BUG]  [BUGGY]  String  option  =  e.getValue().toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().toLowerCase()  +  1;  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toLowerCase()  +  1;	  String    option    =    e.getValue().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
90	[BUG]  [BUGGY]  String  option  =  e.nextElement().getValue()  *  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().getValue()  *  1;  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().getValue()  *  1;	  String    option    =    e.nextElement().getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
91	[BUG]  [BUGGY]  Option  cmd  =  e.getCmdLine();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =  e.getCmdLine();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.getCmdLine();	  Option    cmd    =    e.nextElement();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
92	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement().toString();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  cmd  =  e.nextElement().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cmd  =  e.nextElement().toString();	  Enumeration    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
93	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement().getParent();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  cmd  =  e.nextElement().getParent();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cmd  =  e.nextElement().getParent();	  Enumeration    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
94	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement().getCmd()  +  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  cmd  =  e.nextElement().getCmd()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cmd  =  e.nextElement().getCmd()  +  1;	  Enumeration    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
95	[BUG]  [BUGGY]  String  option  =  e.getElement().getKey()  + "n ";  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getElement().getKey()  + "n ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().getKey()  + "n ";	  String    option    =    e.getElement().getKey();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
96	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().keySet().toString();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().keySet().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.getElements().keySet().toString();	  Enumeration    <    String>    requiredOptions    =    e.getElements().toString();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
97	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().iterator().toString();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().iterator().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.getElements().iterator().toString();	  Enumeration    <    String>    requiredOptions    =    e.getElements().toString();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
98	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().toArray(requiredOptions);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().toArray(requiredOptions);  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.getElements().toArray(requiredOptions);	  Enumeration    <    String>    requiredOptions    =    e.getElements().toString();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
99	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getEnumeration();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getEnumeration();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().getEnumeration();	  Enumeration    <    String>    cmd    =    e.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
100	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getEnumeration().toString();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getEnumeration().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getEnumeration().toString();	  Enumeration    <    String>    cmd    =    e.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
101	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ";no ";  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ";no ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ";no ";	  String    option    =    e.nextElement().toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
102	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ";null ";  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ";null ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ";null ";	  String    option    =    e.nextElement().toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
103	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ",null ";  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ",null ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ",null ";	  String    option    =    e.nextElement().toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
104	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ";no-selected ";  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ";no-selected ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ";no-selected ";	  String    option    =    e.nextElement().toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
105	[BUG]  [BUGGY]  String  option  =  e.getCmd().toString()  + "_ ";  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toString()  + "_ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toString()  + "_ ";	  String    option    =    e.getCmd().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
106	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getArgumentElement();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getArgumentElement();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().getArgumentElement();	  Enumeration    <    String>    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
107	[BUG]  [BUGGY]  String  cmd  =  e.getCmd().toUpperCase();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd().toUpperCase();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd().toUpperCase();	  String    cmd    =    e.getCmd().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
108	[BUG]  [BUGGY]  String  option  =  e.getArgument();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getArgument();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getArgument();	  String    option    =    e.getKey();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
109	[BUG]  [BUGGY]  String  option  =  e.getOption();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getOption();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getOption();	  String    option    =    e.getKey();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
110	[BUG]  [BUGGY]  String  option  =  e.getValue().getValue();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().getValue();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().getValue();	  String    option    =    e.getValue().getKey();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
111	[BUG]  [BUGGY]  String  option  =  e.getValue().getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().getOption(option);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().getOption(option);	  String    option    =    e.getValue().getKey();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
112	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().getCmd()  +  1;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().getCmd()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().getCmd()  +  1;	  String    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
113	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().getCmd()  + "n ";  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().getCmd()  + "n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().getCmd()  + "n ";	  String    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
114	[BUG]  [BUGGY]  String  cmd  =  e.getCmd()  + ",null ";  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd()  + ",null ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd()  + ",null ";	  String    cmd    =    e.getCmd()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
115	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0],  e.hasMoreElements();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0],  e.hasMoreElements();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements()  [0],  e.hasMoreElements();	  Enumeration    <    String>    cmd    =    e.getElements()    [0];    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
116	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0],  e.nextElement().toString();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0],  e.nextElement().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements()  [0],  e.nextElement().toString();	  Enumeration    <    String>    cmd    =    e.getElements()    [0];    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
117	[BUG]  [BUGGY]  String  cmd  =  e.getSource().toString();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getSource().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getSource().toString();	  String    cmd    =    e.getSource();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
118	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getCmds();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getCmds();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().getCmds();	  Enumeration    <    String>    cmd    =    e.nextElement().getElements();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
119	[BUG]  [BUGGY]  String  cmd  =  e.getElement().toString()  + ";n ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getElement().toString()  + ";n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getElement().toString()  + ";n ";	  String    cmd    =    e.getElement().toString();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
120	[BUG]  [BUGGY]  String  option  =  e.getCmd().toLowerCase(labelList);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toLowerCase(labelList);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toLowerCase(labelList);	  String    option    =    e.getCmd().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
121	[BUG]  [BUGGY]  String  option  =  e.getElement().getOptionName();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getElement().getOptionName();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().getOptionName();	  String    option    =    e.getElement().getKey();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
122	[BUG]  [BUGGY]  Enumeration  c  =  e.getCurrentElement();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  c  =  e.getCurrentElement();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  c  =  e.getCurrentElement();	  Enumeration    c    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
123	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ",n ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ",n ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ",n ";	  String    option    =    e.nextElement().toString()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
124	[BUG]  [BUGGY]  Enumeration  cd  =  e.getCurrentElement();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  cd  =  e.getCurrentElement();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cd  =  e.getCurrentElement();	  Enumeration    cd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
125	[BUG]  [BUGGY]  String  option  =  e.getCmd().toUpperCase(null);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toUpperCase(null);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toUpperCase(null);	  String    option    =    e.getCmd().toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
126	[BUG]  [BUGGY]  String  option  =  e.getCmd().toUpperCase(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toUpperCase(option);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toUpperCase(option);	  String    option    =    e.getCmd().toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
127	[BUG]  [BUGGY]  String  option  =  e.nextElement().getName()  + ": ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().getName()  + ": ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().getName()  + ": ";	  String    option    =    e.nextElement().toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
128	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.previousElement().toString();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.previousElement().toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.previousElement().toString();	  Enumeration    <    String>    requiredOptions    =    e.nextElement().toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
129	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ";navigation ";  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ";navigation ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ";navigation ";	  String    option    =    e.nextElement().toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
130	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement().toCmd();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  cmd  =  e.nextElement().toCmd();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cmd  =  e.nextElement().toCmd();	  Enumeration    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
131	[BUG]  [BUGGY]  Option  cmd  =  e.getArg1();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =  e.getArg1();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.getArg1();	  Option    cmd    =    e.getArgument();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
132	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().requires();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.nextElement().requires();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.nextElement().requires();	  Enumeration    <    String>    requiredOptions    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
133	[BUG]  [BUGGY]  String  option  =  e.nextElement().getValue()  +  2;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().getValue()  +  2;  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().getValue()  +  2;	  String    option    =    e.nextElement().getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
134	[BUG]  [BUGGY]  Option  cmd  =(Option)e.getArgument();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =(Option)e.getArgument();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =(Option)e.getArgument();	  Option    cmd    =(Option)e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
135	[BUG]  [BUGGY]  String  option  =  e.getValue().toUpperCase();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().toUpperCase();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toUpperCase();	  String    option    =    e.getValue().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
136	[BUG]  [BUGGY]  String  option  =  e.getValue().substring(0,  e.getValue().length());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().substring(0,  e.getValue().length());  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().substring(0,  e.getValue().length());	  String    option    =    e.getValue().trim();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
137	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().values().iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().values().iterator();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements().values().iterator();	  Enumeration    <    String>    cmd    =    e.getElements().iterator();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
138	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.currentElement().getValue();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.currentElement().getValue();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.currentElement().getValue();	  Enumeration    <    String>    requiredOptions    =    e.currentElement().toString();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
139	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.currentElement().toArray();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.currentElement().toArray();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.currentElement().toArray();	  Enumeration    <    String>    requiredOptions    =    e.currentElement().toString();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
140	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement().toCharArray();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  cmd  =  e.nextElement().toCharArray();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  cmd  =  e.nextElement().toCharArray();	  Enumeration    cmd    =    e.nextElement();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
141	[BUG]  [BUGGY]  String  option  =  e.getKey().toString()  + ": ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().toString()  + ": ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toString()  + ": ";	  String    option    =    e.getKey().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
142	[BUG]  [BUGGY]  String  cmd  =  e.getKey().toString()  + "n ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getKey().toString()  + "n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getKey().toString()  + "n ";	  String    cmd    =    e.getKey().toString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
143	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getEnumeration().enumerator();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getEnumeration().enumerator();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getEnumeration().enumerator();	  Enumeration    <    String>    cmd    =    e.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
144	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toString()  +  1;  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toString()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().toString()  +  1;	  Enumeration    <    String>    cmd    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
145	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().toString()  + "_ ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().toString()  + "_ ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().toString()  + "_ ";	  String    cmd    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
146	[BUG]  [BUGGY]  Option  cmd  =  e.nextElement().getCmd()  +  1;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =  e.nextElement().getCmd()  +  1;  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.nextElement().getCmd()  +  1;	  Option    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
147	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().toString()  + ".n ";  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().toString()  + ".n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().toString()  + ".n ";	  String    cmd    =    e.nextElement().toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
148	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().toString()  + ": "  +  e.getMessage();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().toString()  + ": "  +  e.getMessage();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().toString()  + ": "  +  e.getMessage();	  String    cmd    =    e.nextElement().toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
149	[BUG]  [BUGGY]  String  option  =  e.getKey()  + "_ "  +  e.getValue();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey()  + "_ "  +  e.getValue();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey()  + "_ "  +  e.getValue();	  String    option    =    e.getKey();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
150	[BUG]  [BUGGY]  String  option  =  e.getKey()  + "- "  +  e.getValue();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey()  + "- "  +  e.getValue();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey()  + "- "  +  e.getValue();	  String    option    =    e.getKey();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
151	[BUG]  [BUGGY]  String  option  =  e.getSource();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getSource();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getSource();	  String    cmd    =    e.getSource();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
152	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toString()  + ": "+e.getKey();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().toString()  + ": "+e.getKey();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().toString()  + ": "+e.getKey();	  Enumeration    <    String>    cmd    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
153	[BUG]  [BUGGY]  String  cmd  =  e.getElement().toString()  + ": "  +  e.getMessage();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getElement().toString()  + ": "  +  e.getMessage();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getElement().toString()  + ": "  +  e.getMessage();	  String    cmd    =    e.getElement().toString();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
154	[BUG]  [BUGGY]  String  option  =  e.getKey().getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().getOption(option);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().getOption(option);	  String    option    =    e.nextElement().getOption(option);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
155	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().iterator().next();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.getElements().iterator().next();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.getElements().iterator().next();	  Enumeration    <    String>    requiredOptions    =    e.getElements().toString();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
156	[BUG]  [BUGGY]  Option  cmd  =  e.getArgumentValue();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =  e.getArgumentValue();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.getArgumentValue();	  Option    cmd    =    e.getArgument();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
157	[BUG]  [BUGGY]  String  option  =  e.getElement().getOptionValue();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getElement().getOptionValue();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getElement().getOptionValue();	  String    option    =    e.getElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
158	[BUG]  [BUGGY]  String  option  =  e.nextElement().getKey()  +  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().getKey()  +  1;  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().getKey()  +  1;	  String    option    =    e.nextElement().getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
159	[BUG]  [BUGGY]  String  option  =  e.getValue().getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().getValue()  +  1;  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().getValue()  +  1;	  String    option    =    e.nextElement().getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
160	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + "/ ".equals(e.getKey());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + "/ ".equals(e.getKey());  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + "/ ".equals(e.getKey());	  String    option    =    e.nextElement().toString()    +   "/   ";    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
161	[BUG]  [BUGGY]  Option  cmd  =(Option)e.clone();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =(Option)e.clone();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =(Option)e.clone();	  Option    cmd    =(Option)e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
162	[BUG]  [BUGGY]  String  option  =  e.getValue().toString()  + ". ";  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().toString()  + ". ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toString()  + ". ";	  String    option    =    e.getValue().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
163	[BUG]  [BUGGY]  Option  cmd  =  e.nextElement().getArgumentValue();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Option  cmd  =  e.nextElement().getArgumentValue();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Option  cmd  =  e.nextElement().getArgumentValue();	  Option    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
164	[BUG]  [BUGGY]  String  cmd  =  e.getKey().toString()  + ": "  +  e.getValue();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getKey().toString()  + ": "  +  e.getValue();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getKey().toString()  + ": "  +  e.getValue();	  String    cmd    =    e.getKey().toString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
165	[BUG]  [BUGGY]  String  option  =  e.getValue().toString()  + ": ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getValue().toString()  + ": ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getValue().toString()  + ": ";	  String    option    =    e.nextElement().toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
166	[BUG]  [BUGGY]  String  option  =  e.nextElement().getKey()  + ": ";  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().getKey()  + ": ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().getKey()  + ": ";	  String    option    =    e.nextElement().toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
167	[BUG]  [BUGGY]  String  option  =  e.getKey().substring(0,  e.getValue());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().substring(0,  e.getValue());  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().substring(0,  e.getValue());	  String    option    =    e.getKey().getValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
168	[BUG]  [BUGGY]  String  option  =  e.getKey().trim();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().trim();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().trim();	  String    option    =    e.getKey().getValue();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
169	[BUG]  [BUGGY]  String  option  =  e.getKey().toUpperCase();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getKey().toUpperCase();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getKey().toUpperCase();	  String    option    =    e.getKey().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
170	[BUG]  [BUGGY]  String  option  =  e.nextElement().getKey()  + "_ ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().getKey()  + "_ ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().getKey()  + "_ ";	  String    option    =    e.nextElement().toString()    +   "_   ";    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
171	[BUG]  [BUGGY]  String  cmd  =  e.nextElement().getArgumentValue();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.nextElement().getArgumentValue();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.nextElement().getArgumentValue();	  String    cmd    =    e.nextElement().getCmd();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
172	[BUG]  [BUGGY]  String  option  =  e.getCmd().toString()  + ": ";  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toString()  + ": ";  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toString()  + ": ";	  String    option    =    e.getCmd().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
173	[BUG]  [BUGGY]  String  option  =  e.getCmd().getKey();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().getKey();  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().getKey();	  String    option    =    e.getElement().getKey();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
174	[BUG]  [BUGGY]  String  cmd  =  e.getCmd().toString()  + ": "  +  e.getMessage();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd().toString()  + ": "  +  e.getMessage();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd().toString()  + ": "  +  e.getMessage();	  String    cmd    =    e.getCmd().toString();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
175	[BUG]  [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.currentElement().toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  requiredOptions  =  e.currentElement().toString()  + "n ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  requiredOptions  =  e.currentElement().toString()  + "n ";	  Enumeration    <    String>    requiredOptions    =    e.currentElement().toString();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
176	[BUG]  [BUGGY]  String  option  =  e.getCmd().toUpperCase(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.getCmd().toUpperCase(value);  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.getCmd().toUpperCase(value);	  String    option    =    e.getCmd().toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
177	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0].toString();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0].toString();  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	Enumeration  <  String>  cmd  =  e.getElements()  [0].toString();	  Enumeration    <    String>    cmd    =    e.getElements()    [0];    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
178	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ";no ",  e.nextElement());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  option  =  e.nextElement().toString()  + ";no ",  e.nextElement());  [BUGGY]        if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  option  =  e.nextElement().toString()  + ";no ",  e.nextElement());	  String    option    =    e.nextElement().toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
179	[BUG]  [BUGGY]  String  cmd  =  e.getCmd()  + "null ";  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {      [BUGGY]  String  cmd  =  e.getCmd()  + "null ";  [BUGGY]      String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.49746833816309105	261	261	9	replace	String  cmd  =  e.getCmd()  + "null ";	  String    cmd    =    e.getCmd()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
