bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  options.getOption(null);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOption(null);  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOption(null);	      Option    option    =    opt.getOption(null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2	[BUG]  [BUGGY]  Option  option  =  opt.getOption(t);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  opt.getOption(t);  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  opt.getOption(t);	      Option    option    =    opt.getOption(null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  Option  option  =  opt.getOption(options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  opt.getOption(options);  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  opt.getOption(options);	      Option    option    =    opt.getOption(null);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
4	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.clone();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.clone();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)opt.clone();	      OptionGroup    group    =(OptionGroup)opt.getSelected();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)option.getSelected();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)option.getSelected();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)option.getSelected();	      OptionGroup    group    =(OptionGroup)opt.getSelected();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitStructure();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitStructure();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)opt.getImplicitStructure();	      OptionGroup    group    =(OptionGroup)opt.getSelected();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)opt.getOption();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)opt.getOption();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  Option  option  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)opt.clone();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)opt.clone();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptions();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)opt.getOptions();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)opt.getOptions();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  ListIterator  it  =  opt.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  ListIterator  it  =  opt.getOptionGroups().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	ListIterator  it  =  opt.getOptionGroups().iterator();	      ListIterator    it    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  ListIterator  it  =  options.getRequiredOptions().iterator();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  ListIterator  it  =  options.getRequiredOptions().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	ListIterator  it  =  options.getRequiredOptions().iterator();	      ListIterator    it    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  for(Iterator  it  =  options.optionsOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.optionsOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.optionsOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.requiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
13	[BUG]  [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.options().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.requiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOption();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOption();	      Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOptions();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOptions();	      Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.opts().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  for(Iterator  it  =  opt.getOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  opt.getOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  opt.getOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getKey();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getKey();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)opt.getKey();	      OptionGroup    group    =(OptionGroup)opt.getValues();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOption(t);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  Option  option  =  opt.getOption(option);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  opt.getOption(option);  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  opt.getOption(option);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  Option  group  =(Option)options.getGroups().iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  group  =(Option)options.getGroups().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  group  =(Option)options.getGroups().iterator();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)it.next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)it.next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)options.getOption();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)options.getOption();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  for(Iterator  it  =  opt.requireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  opt.requireOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  opt.requireOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  for(Iterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.addOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.addOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  Option  option  =(Option)options.next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)options.next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)options.next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  Option  option  =(Option)options.getSelected();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)options.getSelected();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)options.getSelected();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  Option  option  =(Option)options.getValue();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)options.getValue();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)options.getValue();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  Option  group  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  group  =(OptionGroup)it.next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  group  =(OptionGroup)it.next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getSelected();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  group  =(OptionGroup)options.getSelected();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  group  =(OptionGroup)options.getSelected();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  group  =(OptionGroup)options.next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  group  =(OptionGroup)options.next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getSelected();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)options.getSelected();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)options.getSelected();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  Option[]  options  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option[]  options  =  option.getOptions();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option[]  options  =  option.getOptions();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  Option[]  options  =  opt.opts();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option[]  options  =  opt.opts();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option[]  options  =  opt.opts();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  Option[]  options  =  opt.clone();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option[]  options  =  opt.clone();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option[]  options  =  opt.clone();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.requiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)option.next();	      Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  for(Iterator  it  =  options.optionsRequiresOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.optionsRequiresOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.optionsRequiresOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getRequiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  ListIterator  it  =  opt.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  ListIterator  it  =  opt.getOptions().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	ListIterator  it  =  opt.getOptions().iterator();	      ListIterator    it    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
41	[BUG]  [BUGGY]  for(Iterator  it  =  options.allOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.allOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.allOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  Option[]  options  =  opt.cloneOptions();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option[]  options  =  opt.cloneOptions();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option[]  options  =  opt.cloneOptions();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  Option[]  options  =  opt.options();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option[]  options  =  opt.options();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option[]  options  =  opt.options();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
44	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getAttributes();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getAttributes();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)opt.getAttributes();	      OptionGroup    group    =(OptionGroup)opt.getValues();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOptionGroups().iterator();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroups().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =  options.getOptionGroups().iterator();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =  options.getOptionGroups();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  for(Iterator  it  =  options.allRequiresOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.allRequiresOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.allRequiresOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getRequiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  Option  option  =(Option)opt.get();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)opt.get();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)opt.get();	      Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionGroups().next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)options.getOptionGroups().next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)options.getOptionGroups().next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)options.getOptionGroups().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)options.getOptionGroups().iterator();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
53	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  group  =  options.getOptionGroups().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  group  =  options.getOptionGroups().iterator();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().next();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  group  =(OptionGroup)options.getOptionGroups().next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  group  =(OptionGroup)options.getOptionGroups().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  group  =(OptionGroup)options.getOptionGroups().iterator();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptionGroups().next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)options.getOptionGroups().next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  for(Iterator  it  =  options.opts.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.opts.iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.opts.iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  for(Iterator  it  =  options.optionsRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.optionsRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.optionsRequiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  for(Iterator  it  =  options.addRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.addRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.addRequiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  null);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOption(opt,  null);  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOption(opt,  null);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  t);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOption(opt,  t);  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOption(opt,  t);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
62	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOptionGroup();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)opt.getOptionGroup();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)opt.getOptionGroup();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getValue();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getValue();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)opt.getValue();	      OptionGroup    group    =(OptionGroup)opt.getSelected();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
64	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitReturn();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getImplicitReturn();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)opt.getImplicitReturn();	      OptionGroup    group    =(OptionGroup)opt.getSelected();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOptionOption();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOptionOption();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOptionOption();	      Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
66	[BUG]  [BUGGY]  ListIterator  it  =  options.getOptionList().iterator();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  ListIterator  it  =  options.getOptionList().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	ListIterator  it  =  options.getOptionList().iterator();	      ListIterator    it    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.getOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.options.getOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.options.getOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getGroup();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getGroup();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)opt.getGroup();	      OptionGroup    group    =(OptionGroup)opt.getSelected();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  group  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  group  =(OptionGroup)it.next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  group  =(OptionGroup)it.next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
70	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)it.next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
71	[BUG]  [BUGGY]  Option[]  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option[]  options  =  options.getOptions();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option[]  options  =  options.getOptions();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  Option[]  options  =  t.getOptions();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option[]  options  =  t.getOptions();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option[]  options  =  t.getOptions();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  ListIterator  it  =  option.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  ListIterator  it  =  option.getOptions().iterator();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	ListIterator  it  =  option.getOptions().iterator();	      ListIterator    it    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
74	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.requireOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.options.requireOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.options.requireOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.requireOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
75	[BUG]  [BUGGY]  Option  option  =(Option)opt.getKey();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =(Option)opt.getKey();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =(Option)opt.getKey();	      Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
76	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.requiresOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.options.requiresOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.options.requiresOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.requiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
77	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.next();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	OptionGroup  group  =(OptionGroup)opt.next();	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
78	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOptionGroups();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOptionGroups();	      Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
79	[BUG]  [BUGGY]  Option  option  =  options.getOptionOptions();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOptionOptions();  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOptionOptions();	      Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  Option  option  =  options.getOptionGroup(options);  [BUGGY]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	Option  option  =  options.getOptionGroup(options);	      ListIterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
81	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.getRequiresOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.options.getRequiresOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.options.getRequiresOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getRequiresOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
82	[BUG]  [BUGGY]  for(Iterator  it  =  options.options.getRequiredOptions().iterator();  it.hasNext();)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }      [BUGGY]  for(Iterator  it  =  options.options.getRequiredOptions().iterator();  it.hasNext();)  {  [BUGGY]    {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	154	155	9	replace	for(Iterator  it  =  options.options.getRequiredOptions().iterator();  it.hasNext();)  {	  for(Iterator    it    =    options.getRequiredOptions().iterator();    it.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
