bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  currentToken);  [CE]  not  a  statement  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  currentToken);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(option,  expectedOpts,  currentToken);	  Option    opt    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  not  a  statement	12	None	replace
2	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  true);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  true);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(option,  expectedOpts,  true);	  Option    opt    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  e);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  e);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(option,  expectedOpts,  e);	  Option    opt    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  false);  [CE]  illegal  start  of  expression  [FE]                      AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  false);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(option,  expectedOpts,  false);	  Option    opt    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(cmd);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  currentOption.getOption(cmd);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  currentOption.getOption(cmd);	  Option    options    =    currentOption.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(cmd,  expectedOpts);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(cmd,  expectedOpts);	  Option    opt    =    options.getOption(option,    expectedOpts,    cmd);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  cmd,  expectedOpts);  [CE]  not  a  statement  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  cmd,  expectedOpts);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  cmd,  expectedOpts);	  Option    opt    =    options.getOption(option,    expectedOpts,    cmd);    	non-compiled	[CE]  not  a  statement	10	None	replace
8	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  options);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  cmd.getOption(option,  expectedOpts,  options);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(option,  expectedOpts,  options);	  Option    opt    =    options.getOption(option,    expectedOpts,    cmd);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  options.getOption(cmd,  expectedOpts);	  Option    opt    =    options.getOption(option,    expectedOpts,    cmd);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  Option  opt  =  currentToken.getOption(option);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  currentToken.getOption(option);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  currentToken.getOption(option);	  Option    opt    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  Option  opt  =  currentOption.getOption(option,  cmd);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  currentOption.getOption(option,  cmd);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  currentOption.getOption(option,  cmd);	  Option    opt    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(currentToken,  option);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  cmd.getOption(currentToken,  option);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(currentToken,  option);	  Option    opt    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(option,  currentToken,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                      AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  cmd.getOption(option,  currentToken,  expectedOpts);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(option,  currentToken,  expectedOpts);	  Option    opt    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  Option  options  =  cmd.getOption(option,  value);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  cmd.getOption(option,  value);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  cmd.getOption(option,  value);	  Option    options    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  Option  options  =  currentToken.getOption(option);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  currentToken.getOption(option);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  currentToken.getOption(option);	  Option    options    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  Option  options  =  cmd.getOption(option,  currentToken,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  cmd.getOption(option,  currentToken,  expectedOpts);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  cmd.getOption(option,  currentToken,  expectedOpts);	  Option    options    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  Option  options  =  cmd.getOption(option,  currentToken,  value);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  cmd.getOption(option,  currentToken,  value);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  cmd.getOption(option,  currentToken,  value);	  Option    options    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  options.getOption(option,  expectedOpts);	  Option    opt    =    options.getOption(cmd,    option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  option,  expectedOpts,  currentToken);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(cmd,  option,  expectedOpts,  currentToken);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(cmd,  option,  expectedOpts,  currentToken);	  Option    opt    =    options.getOption(cmd,    option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  option,  expectedOpts);  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  option,  expectedOpts);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  option,  expectedOpts);	  Option    opt    =    options.getOption(cmd,    option,    expectedOpts);    	non-compiled	[CE]  	11	None	replace
21	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  option);  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(cmd,  option);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(cmd,  option);	  Option    opt    =    options.getOption(option,    currentToken);    	non-compiled	[CE]  	14	None	replace
22	[BUG]  [BUGGY]  Option  opt  =  options.getOption(currentToken,  option);  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(currentToken,  option);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(currentToken,  option);	  Option    opt    =    options.getOption(option,    currentToken);    	non-compiled	[CE]  	14	None	replace
23	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  currentToken,  expectedOpts);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  currentToken,  expectedOpts);	  Option    opt    =    options.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)+  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  options.getOption(option)+  1;  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  options.getOption(option)+  1;	  Option    option    =    cmd.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option)+  1L;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  cmd.getOption(option)+  1L;  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  cmd.getOption(option)+  1L;	  Option    option    =    cmd.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option)+  2;  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  cmd.getOption(option)+  2;  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  cmd.getOption(option)+  2;	  Option    option    =    cmd.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  Option  opt  =  options.getOption(currentToken,  expectedOpts,  option);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(currentToken,  expectedOpts,  option);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(currentToken,  expectedOpts,  option);	  Option    opt    =    options.getOption(option,    expectedOpts,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts,  currentToken,  cmd);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts,  currentToken,  cmd);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  expectedOpts,  currentToken,  cmd);	  Option    opt    =    options.getOption(option,    expectedOpts,    currentToken);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts,  true);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts,  true);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  cmd.getOption(option,  expectedOpts,  true);	  Option    option    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts,  false);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts,  false);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  cmd.getOption(option,  expectedOpts,  false);	  Option    option    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts,  e);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts,  e);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  cmd.getOption(option,  expectedOpts,  e);	  Option    option    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  Option  options  =  e.getOption(cmd);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  e.getOption(cmd);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  e.getOption(cmd);	  Option    options    =    e.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  Option  option  =  e.getOption(option);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  e.getOption(option);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  e.getOption(option);	  Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  option,  e);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(cmd,  option,  e);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(cmd,  option,  e);	  Option    opt    =    options.getOption(option,    expectedOpts,    e);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
35	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  currentToken,  e);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  currentToken,  e);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  currentToken,  e);	  Option    opt    =    options.getOption(option,    expectedOpts,    e);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
36	[BUG]  [BUGGY]  Option  options  =  cmd.getOption(option,  expectedOpts,  e);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  cmd.getOption(option,  expectedOpts,  e);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  cmd.getOption(option,  expectedOpts,  e);	  Option    options    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  Option  options  =  cmd.getOption(option,  expectedOpts,  true);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  cmd.getOption(option,  expectedOpts,  true);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  cmd.getOption(option,  expectedOpts,  true);	  Option    options    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  Option  options  =  cmd.getOption(option,  expectedOpts,  currentToken);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  cmd.getOption(option,  expectedOpts,  currentToken);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  cmd.getOption(option,  expectedOpts,  currentToken);	  Option    options    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  Option  options  =  cmd.getOption(option,  expectedOpts,  false);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  cmd.getOption(option,  expectedOpts,  false);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  cmd.getOption(option,  expectedOpts,  false);	  Option    options    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  option  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  option  =  options.getOption(option);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	option  =  options.getOption(option);	  option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
41	[BUG]  [BUGGY]  option  =  options.getOption(cmd);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  option  =  options.getOption(cmd);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	option  =  options.getOption(cmd);	  option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
42	[BUG]  [BUGGY]  Option  options  =  this.cmd.getOption(option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  this.cmd.getOption(option);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  this.cmd.getOption(option);	  Option    options    =    this.cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
43	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(currentOption);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  cmd.getOption(currentOption);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(currentOption);	  Option    opt    =    currentOption.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  cmd);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  cmd);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  cmd);	  Option    opt    =    options.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
45	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  value);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  value);	  Option    opt    =    options.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  cmd);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  options.getOption(option,  cmd);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  options.getOption(option,  cmd);	  Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
47	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option,  currentToken);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  cmd.getOption(option,  currentToken);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  cmd.getOption(option,  currentToken);	  Option    option    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  cmd.getOption(option,  value);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  cmd.getOption(option,  value);	  Option    option    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  cmd.getOption(option,  value);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(option,  value);	  Option    opt    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  expectedOpts,  option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(cmd,  expectedOpts,  option);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(cmd,  expectedOpts,  option);	  Option    opt    =    options.getOption(option,    expectedOpts,    cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  options.getOption(option,  cmd,  expectedOpts);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  options.getOption(option,  cmd,  expectedOpts);	  Option    opt    =    options.getOption(option,    expectedOpts,    cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  e,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  e,  expectedOpts);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  e,  expectedOpts);	  Option    opt    =    options.getOption(option,    expectedOpts,    e);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
54	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts,  option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts,  option);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  expectedOpts,  option);	  Option    opt    =    options.getOption(cmd,    option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts,  option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  options.getOption(cmd,  expectedOpts,  option);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  options.getOption(cmd,  expectedOpts,  option);	  Option    opt    =    options.getOption(option,    expectedOpts,    cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts,  currentToken);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  cmd.getOption(option,  expectedOpts,  currentToken);	  Option    option    =    cmd.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option)/  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  cmd.getOption(option)/  1;  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  cmd.getOption(option)/  1;	  Option    option    =    cmd.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken,  expectedOpts,  option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  options.getOption(currentToken,  expectedOpts,  option);  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  options.getOption(currentToken,  expectedOpts,  option);	  Option    opt    =    options.getOption(option,    expectedOpts,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(option,  cmd);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  currentOption.getOption(option,  cmd);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  currentOption.getOption(option,  cmd);	  Option    options    =    cmd.getOption(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
60	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts,  e.toString());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts,  e.toString());  [BUGGY]          String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  expectedOpts,  e.toString());	  Option    opt    =    options.getOption(option,    expectedOpts,    e);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
61	[BUG]  [BUGGY]  Option  options  =  options.getOptions(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  options  =  options.getOptions(option);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  options  =  options.getOptions(option);	  Option    options    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
62	[BUG]  [BUGGY]  option  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  option  =  cmd.getOption(option);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	option  =  cmd.getOption(option);	  option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
63	[BUG]  [BUGGY]  Option  option  =  properties.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {      [BUGGY]  Option  option  =  properties.getOption(option);  [BUGGY]      Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  option  =  properties.getOption(option);	  Option    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
