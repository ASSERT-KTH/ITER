bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  options  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [BUGGY]    Option  options  =  cmd.getOption(option);  [BUGGY]  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	    Option  options  =  cmd.getOption(option);		non-compiled	[CE]  illegal  start  of  type	34	None	add
2	[BUG]  [BUGGY]    Option  options  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [BUGGY]    Option  options  =  cmd.getOptions();  [BUGGY]  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	    Option  options  =  cmd.getOptions();		non-compiled	[CE]  illegal  start  of  type	34	None	add
3	[BUG]  [BUGGY]    Option  option  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [BUGGY]    Option  option  =  cmd.getOption(option);  [BUGGY]  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	    Option  option  =  cmd.getOption(option);		non-compiled	[CE]  illegal  start  of  type	34	None	add
4	[BUG]  [BUGGY]    Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException  [CONTEXT]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [BUGGY]    Option  option  =  options.getOption(option);  [BUGGY]  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	    Option  option  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	34	None	add
5	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [BUGGY]  Option  opt  =  options.getOption(cmd);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(cmd);	Option  opt  =  options.getOption(option);  	non-compiled	[CE]  illegal  start  of  type	33	None	replace
6	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [BUGGY]  Option  opt  =  cmd.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  cmd.getOption(option);	Option  opt  =  options.getOption(option);  	non-compiled	[CE]  illegal  start  of  type	33	None	replace
7	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	Option  opt  =  options.getOption(option,  expectedOpts);	Option  opt  =  options.getOption(option);  	non-compiled	[CE]  illegal  start  of  type	33	None	replace
8	[BUG]  [BUGGY]    Option  options  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [BUGGY]    Option  options  =  options.getOption(option);  [BUGGY]  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	    Option  options  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	34	None	add
9	[BUG]  [BUGGY]    Option  options  =  e.getOptions();  [CE]  [FE]    AlreadySelectedException  [CONTEXT]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [BUGGY]    Option  options  =  e.getOptions();  [BUGGY]  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	152	152	9	replace	    Option  options  =  e.getOptions();		non-compiled	[CE]  	34	None	add
