projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.hasProperty(propertyNames())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getOptions();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getPropertyNames();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.getPropertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=options.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,values);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(propertyName);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value.toString());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||propertyNames.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Set<String>requiredOptions=newHashSet<String>(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.values()+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.size()-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.size()+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.size()-2);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(option,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optionoption=options.getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.getPropertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.getPropertyNames().size()!=0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.getPropertyNames().size()==1){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.propertyNames!=null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.propertyNames==null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.propertyNames();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmd();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Context.reportCodeChange();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newLinkedList();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.size()!=0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(propertyName);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArguments();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(option==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.hasProperty(propertyNames())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.hasProperty(propertyNames())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.hasProperty(propertyNames()+1)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(value,exp);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newLinkedList<String>();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254ArrayList<String>requiredOptions=newArrayList<String>();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=option.getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArgumentElements();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArgumentNames();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.size()==1){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.hasProperty(propertyNames())&&!cmd.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmd(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=this.properties.getProperty(property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getCmd(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=options.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(value==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getPropertyName(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(8);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=this.properties.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value).properties();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.properties();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optionoption=options.getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newLinkedList<String>(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254ArrayList<String>requiredOptions=newArrayList<String>(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(propertiesName);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayListWithCapacity(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.propertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.propertyNames().contains(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames!=null||properties.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.propertyValues();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames!=null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=options.get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=options.get(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmd(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmd(value,exp);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmd(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Collections.synchronizedList(newLinkedList<String>());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Collections.synchronizedList(newArrayList<String>());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,value,cmd);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(value,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,value,null);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(propertyName,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(2);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(4);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254ArrayList<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Set<String>requiredOptions=newHashSet<String>();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.size()==1){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames!=null||properties.hasProperty(propertyNames())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(properties.keySet(),values);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(properties.keySet(),value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(properties.keySet()+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(key,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(key+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(key-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value-1+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value-2);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(value.length);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(value.toString());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmdElements();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.propertyElements();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.size()!=0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getPropertyName(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getStringValue(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getPropertyName(value,exp);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(propertiesName,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(propertiesName,values);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=getOption(option,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=getOptions(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(value,option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(option,value,requiredOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(option,value-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.propertyNames().contains(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.propertyNames().contains(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames!=null||properties.propertyNames().contains(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArgumentNames(),exp;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=options.get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=options.get(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(opt,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(propertyName);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(value-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(key.toString());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value.toString(),exp);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value.toString(),false);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(requiredOptions.size()-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(requiredOptions.size()+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=this.properties.get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=this.properties.get(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(option==null||properties.hasOption(value)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(cmd==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=exp.getProperty(value,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=exp.getProperty(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(propertyName,value,exp);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(propertyNames,value,exp);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().get(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().iterator().next().get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().get(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Set<String>requiredOptions=newHashSet<String>(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.getPropertyNames().size()==1){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.getPropertyNames().size()>=0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.propertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.propertyNames().size()!=0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.propertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(cmd==null||properties.hasProperty(propertyNames())&&!cmd.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.hasProperty(propertyNames())&&!cmd.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(options,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optionoption=options.getOption(options,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optionoption=options.getOption(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(0).propertyNames();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(0).properties;
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(0).properties();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||propertyNames.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties.keySet(),value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties.keySet(),values);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Context.report(JSError.make(PROPERTY_NAMESPACE_ERROR,value));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Context.report(JSError.make(cmd,value));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Context.report(JSError.make(PROPERTY_NAMESPACE_ERROR,e.getMessage()));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(option==null||options.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.propertyNames==null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.propertyNames!=null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newHashSet();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Set<String>requiredOptions=Lists.newHashSet();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=this.properties.getProperty(propertyName);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(this.properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,tokenList);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,values.values);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=option.getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=value.getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(propertyName,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(key,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(value,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(key,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties,value,null);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayListWithCapacity(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayListWithCapacity(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Set<String>requiredOptions=newHashSet<String>(properties.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254ArrayList<String>requiredOptions=newArrayList<String>(properties.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newLinkedList<String>(properties.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(propers.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(key).properties();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(propertyName).properties();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=this.properties.keySet();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254ArrayList<String>requiredOptions=newArrayList<String>(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.properties().iterator().next();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.properties().iterator();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optionoption=options.getOption(option,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254optionoption=options.getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().iterator().next().get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getCmd(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getCmd(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getCmd(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(key,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(key+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.propertyNames==null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(value.cloneTree());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.getPropertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(6);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames!=null||properties.propertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Set<String>requiredOptions=newArrayList<String>(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayListWithCapacity(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(option!=null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getPropertyName(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmdName(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(value,property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.size()==1){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(value,property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Set<String>requiredOptions=newArrayList<String>(properties.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getCmd(option,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(value.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArgumentNames(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.values();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newLinkedList(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newLinkedList(requiredOptions);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.properties().get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().get(value-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value.toString(),value.toLowerCase());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value.toString(),value.toCharArray());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArgumentElements(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=this.properties.getProperty(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Context.report(JSError.make(String.valueOf(option)));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Context.report(JSError.make(sourceName,option,value));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Context.report(JSError.make(String.valueOf(value)));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(option).properties();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.properties().get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(opt==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArguments(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=getOptionValue(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmdCount();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(value==null||options.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(value,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(value,option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(value,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(option==null||properties.propertyNames().contains(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(option!=null||properties.propertyNames().contains(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(property==null||properties.hasProperty(propertyNames())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.hasProperty(propertyNames()+1)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(value+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmd(value,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(7);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null&&properties.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.propertyNames!=null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperties(propertiesName,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null&&properties.propertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties,value-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties,option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.size()!=0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.properties.getArgumentElements();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(value==null||properties.size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optionoption=options.getOptionValue(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getPropertyNames(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getPropertyName(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.properties.getCmd();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null&&properties.getPropertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optionoption=options.getOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=this.properties.getProperty(property,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(RequiredOptions.class.getSimpleName());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(RequiredOptions.class);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().iterator().next();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=getOptions(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||property.propertyNames==null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null&&properties.propertyNames().contains(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperties(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(properties,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(value==null||properties.containsKey(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(properties.size()-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.properties.getArgumentNames();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value.toString(),value.toUpperCase());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value.toString(),options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.getPropertyNames().size()!=0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||propertyNames.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null&&properties.hasProperty(propertyNames())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.getPropertyNames().size()!=1){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(option==null||properties.hasProperty(propertyNames())&&!cmd.hasOption(option)){
