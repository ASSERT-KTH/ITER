bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.get(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.get(value);	      Properties    cmd    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(key);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.get(key);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.get(key);	      Properties    cmd    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  Properties  cmd  =  options.get(option);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  options.get(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  options.get(option);	      Properties    cmd    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value);	      List    <    String>    requiredOptions    =    Lists.newArrayList(properties);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  values);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  values);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  values);	      List    <    String>    requiredOptions    =    Lists.newArrayList(properties);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(key);	      Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(propertyName);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(propertyName);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(propertyName);	      Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value.toString());	      Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(propertyNames  ==  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  if(properties  ==  null  ||  propertyNames.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  propertyNames.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  propertyNames.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
12	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(0);	      Enumeration    <    String>    cmd    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.values());	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
15	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values()  +  1);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values()  +  1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values()  +  1);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
16	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size()  -  1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size()  -  1);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
17	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size()  +  1);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size()  +  1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size()  +  1);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
18	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size()  -  2);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size()  -  2);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size()  -  2);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
19	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size());	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
20	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(1);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(1);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
21	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(0);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(0);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(0);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(option,  value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  options.getOption(option,  value);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  option  =  options.getOption(option);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
24	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.getPropertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.getPropertyNames().size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.getPropertyNames().size()  ==  0)  {	  if(properties    ==    null    ||    properties.getPropertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
25	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()!=  0)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()!=  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.getPropertyNames().size()!=  0)  {	  if(properties    ==    null    ||    properties.getPropertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
26	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()  ==  1)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.getPropertyNames().size()  ==  1)  {	  if(properties    ==    null    ||    properties.getPropertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
27	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames!=  null)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.propertyNames!=  null)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.propertyNames!=  null)  {	  if(properties!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.propertyNames  ==  null)  {	  if(properties!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyNames();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.propertyNames();	      Enumeration    <    String>    cmd    =    properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.keySet();	      Enumeration    <    String>    cmd    =    properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getCmd();	      Enumeration    <    String>    cmd    =    properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Context.reportCodeChange();  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Context.reportCodeChange();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(opt);  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  options.getOption(opt);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(value);	      List    <    String>    requiredOptions    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newLinkedList();	      List    <    String>    requiredOptions    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
36	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(0);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(0);	      List    <    String>    requiredOptions    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
37	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(key);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(key);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(key);	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(properties,  value);	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties.keySet());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(properties.keySet());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(properties.keySet());	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(options);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  options.getOption(options);	      Option    cmd    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
41	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(propertyName);	      Properties    cmd    =    properties.getProperty(property);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArguments();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArguments();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getArguments();	      Enumeration    <    String>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.hasOption(option))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  if(option  ==  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(option  ==  null  ||  properties.hasOption(option))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(option  ==  null  ||  properties.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(propertyNames  ==  null  ||  properties.hasOption(option))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.hasProperty(propertyNames()))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(propertyNames  ==  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.hasProperty(propertyNames()))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames()  +  1))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames()  +  1))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.hasProperty(propertyNames()  +  1))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(key);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(key);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(key);	      Enumeration    <    String>    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  exp);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  exp);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(value,  exp);	      Enumeration    <    String>    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet());	      Enumeration    <    String>    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  LinkedList  <  String>();	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
56	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
57	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>();	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Option  cmd  =  option.getOption(value);  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  option.getOption(value);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  getOption(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  getOption(option);  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  getOption(option);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentElements();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentElements();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentElements();	      Enumeration    <    String>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentNames();	      Enumeration    <    String>    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
62	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  1);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value  -  1);	      Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.size()  ==  1)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
65	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(value);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getCmd(value);	      Enumeration    <    String>    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getProperty(property);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  this.properties.getProperty(property);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  this.properties.getProperty(property);	      Properties    cmd    =    properties.getProperty(property);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(value);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getCmd(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getCmd(value);	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
68	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  options.get(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  options.get(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  options.get(option);	      Enumeration    <    String>    cmd    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  if(propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(propertyNames  ==  null)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null)  {	  if(properties!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
70	[BUG]  [BUGGY]  if(value  ==  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(value  ==  null  ||  properties.hasOption(option))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(value  ==  null  ||  properties.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
71	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(value);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getPropertyName(value);	      Enumeration    <    String>    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
72	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(8);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(8);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(8);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
73	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.get(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  this.properties.get(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  this.properties.get(option);	      Properties    cmd    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
74	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.keySet().get(value);	      Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
75	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value).properties();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value).properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value).properties();	      Enumeration    <    String>    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
76	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.properties();	      Enumeration    <    String>    cmd    =    properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
77	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.keySet().get(option);	      Enumeration    <    String>    cmd    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
78	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  option  =  options.getOption(value);	      Option    cmd    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
79	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.values());	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
80	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
81	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(propertiesName);	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
82	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(value);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(value);	      List    <    String>    requiredOptions    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
83	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
84	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
