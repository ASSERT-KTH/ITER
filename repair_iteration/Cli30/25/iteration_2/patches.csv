bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames!=  null  ||  properties.isEmpty())  {	  if(properties!=    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyValues();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyValues();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.propertyValues();	  Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
3	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames!=  null  ||  properties.hasOption(option))  {	  if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
4	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  options.get(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  options.get(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  options.get(value);	  Enumeration    <    String>    cmd    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
5	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  options.get(key);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  options.get(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  options.get(key);	  Enumeration    <    String>    cmd    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
6	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(key);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getCmd(key);	  Enumeration    <    String>    cmd    =    properties.getCmd(value);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
7	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(value,  exp);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(value,  exp);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getCmd(value,  exp);	  Enumeration    <    String>    cmd    =    properties.getCmd(value);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
8	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getCmd(option);	  Enumeration    <    String>    cmd    =    properties.getCmd(value);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
9	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Collections.synchronizedList(new  LinkedList  <  String>());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Collections.synchronizedList(new  LinkedList  <  String>());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Collections.synchronizedList(new  LinkedList  <  String>());	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
10	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Collections.synchronizedList(new  ArrayList  <  String>());  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Collections.synchronizedList(new  ArrayList  <  String>());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Collections.synchronizedList(new  ArrayList  <  String>());	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
11	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value,  cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value,  cmd);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value,  cmd);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value,  properties);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value,  properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(value,  properties);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value,  null);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value,  null);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  value,  null);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(propertyName,  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(propertyName,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(propertyName,  value);	  Enumeration    <    String>    cmd    =    properties.get(propertyName);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(2);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(2);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(2);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
16	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(4);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(4);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(4);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
17	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size());	  ArrayList    <    String>    requiredOptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
18	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>();  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>();	  ArrayList    <    String>    requiredOptions    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
19	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.size()  ==  1)  {	  if(propertyNames    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
20	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames!=  null  ||  properties.hasProperty(propertyNames()))  {	  if(properties!=    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
21	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet(),  values);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet(),  values);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet(),  values);	  Enumeration    <    String>    cmd    =    properties.getProperty(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
22	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet(),  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet(),  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet(),  value);	  Enumeration    <    String>    cmd    =    properties.getProperty(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
23	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet()  +  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet()  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(properties.keySet()  +  1);	  Enumeration    <    String>    cmd    =    properties.getProperty(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
24	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(key,  value);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(key,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.get(key,  value);	  Properties    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(key  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.get(key  +  1);	  Properties    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key  -  1);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(key  -  1);	  Enumeration    <    String>    cmd    =    properties.get(value    -    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
27	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  1  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value  -  1  +  1);	  Enumeration    <    String>    cmd    =    properties.get(value    -    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
28	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  2);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value  -  2);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value  -  2);	  Enumeration    <    String>    cmd    =    properties.get(value    -    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
29	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.length);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.length);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.length);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(value);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
30	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.toString());  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.toString());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.toString());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(value);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
31	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmdElements();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmdElements();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getCmdElements();	  Enumeration    <    String>    cmd    =    properties.getArgumentElements();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
32	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyElements();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.propertyElements();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.propertyElements();	  Enumeration    <    String>    cmd    =    properties.getArgumentElements();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
33	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
34	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(key);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getPropertyName(key);	  Enumeration    <    String>    cmd    =    properties.getPropertyName(value);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
35	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getStringValue(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getStringValue(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getStringValue(value);	  Enumeration    <    String>    cmd    =    properties.getPropertyName(value);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
36	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(value,  exp);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(value,  exp);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getPropertyName(value,  exp);	  Enumeration    <    String>    cmd    =    properties.getPropertyName(value);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
37	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(propertiesName,  value);	  Properties    cmd    =    properties.getProperty(propertiesName);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
38	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName,  values);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName,  values);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(propertiesName,  values);	  Properties    cmd    =    properties.getProperty(propertiesName);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
39	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  getOption(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  getOption(value);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  getOption(value);	  Enumeration    <    String>    cmd    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
40	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  getOption(option,  value);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  getOption(option,  value);	  Enumeration    <    String>    cmd    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
41	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  getOptions(option);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  getOptions(option);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  getOptions(option);	  Enumeration    <    String>    cmd    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(value,  option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(value,  option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  options.getOption(value,  option);	  Option    cmd    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  value,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(option,  value,  requiredOptions);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  options.getOption(option,  value,  requiredOptions);	  Option    cmd    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  value  -  1);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(option,  value  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  options.getOption(option,  value  -  1);	  Option    cmd    =    options.getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
45	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
46	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
47	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames!=  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
48	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames(),  exp;  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames(),  exp;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentNames(),  exp;	  Enumeration    <    String>    cmd    =    properties.getArgumentNames();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
49	[BUG]  [BUGGY]  Properties  cmd  =  options.get(value);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.get(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  options.get(value);	  Properties    cmd    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  Properties  cmd  =  options.get(key);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.get(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  options.get(key);	  Properties    cmd    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(opt,  value);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  options.getOption(opt,  value);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
52	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(propertyName);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(propertyName);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.get(propertyName);	  Properties    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(value  -  1);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(value  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.get(value  -  1);	  Properties    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key.toString());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key.toString());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(key.toString());	  Enumeration    <    String>    cmd    =    properties.get(value.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  exp);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  exp);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value.toString(),  exp);	  Enumeration    <    String>    cmd    =    properties.get(value.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  false);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  false);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value.toString(),  false);	  Enumeration    <    String>    cmd    =    properties.get(value.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  -  1);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
58	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  +  1);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(requiredOptions.size()  +  1);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
59	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.get(value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.get(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  this.properties.get(value);	  Properties    cmd    =    this.properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
60	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.get(key);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.get(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  this.properties.get(key);	  Properties    cmd    =    this.properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
61	[BUG]  [BUGGY]  if(option  ==  null  ||  properties.hasOption(value))  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  properties.hasOption(value))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(option  ==  null  ||  properties.hasOption(value))  {	  if(value    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
62	[BUG]  [BUGGY]  if(cmd  ==  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(cmd  ==  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(cmd  ==  null  ||  properties.hasOption(option))  {	  if(value    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
63	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  exp.getProperty(value,  properties);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  exp.getProperty(value,  properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  exp.getProperty(value,  properties);	  Enumeration    <    String>    cmd    =    properties.getProperty(value,    exp);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
64	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  exp.getProperty(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  exp.getProperty(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  exp.getProperty(value);	  Enumeration    <    String>    cmd    =    properties.getProperty(value,    exp);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
65	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(propertyName,  value,  exp);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(propertyName,  value,  exp);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(propertyName,  value,  exp);	  Enumeration    <    String>    cmd    =    properties.getProperty(value,    exp);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
66	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(propertyNames,  value,  exp);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(propertyNames,  value,  exp);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(propertyNames,  value,  exp);	  Enumeration    <    String>    cmd    =    properties.getProperty(value,    exp);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
67	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(key);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.keySet().get(key);	  Enumeration    <    String>    cmd    =    properties.keySet().get(value);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
68	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().iterator().next().get(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().iterator().next().get(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.keySet().iterator().next().get(value);	  Enumeration    <    String>    cmd    =    properties.keySet().get(value);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
69	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(0);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(0);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.keySet().get(0);	  Enumeration    <    String>    cmd    =    properties.keySet().get(value);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
70	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.keySet());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.keySet());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.getPropertyNames().size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.getPropertyNames().size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.getPropertyNames().size()  ==  1)  {	  if(properties!=    null    ||    properties.getPropertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
72	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()  >=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.getPropertyNames().size()  >=  0)  {	  if(properties    ==    null    ||    properties.getPropertyNames().size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
73	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
74	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
75	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
76	[BUG]  [BUGGY]  if(cmd  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(cmd  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(cmd  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames())&&!cmd.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
77	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames())&&!cmd.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
78	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(options,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  options.getOption(options,  value);	  Option    cmd    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
79	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  option  =  options.getOption(options,  value);	  Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
80	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
81	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).propertyNames();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(0).propertyNames();	  Enumeration    <    String>    cmd    =    properties.get(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).properties;  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).properties;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(0).properties;	  Enumeration    <    String>    cmd    =    properties.get(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
83	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).properties();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(0).properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(0).properties();	  Enumeration    <    String>    cmd    =    properties.get(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
84	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  propertyNames.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  propertyNames.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  propertyNames.isEmpty())  {	  if(properties    ==    null    ||    propertyNames.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
85	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(1);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(1);	  List    <    String>    requiredOptions    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
86	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties.keySet(),  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties.keySet(),  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(properties.keySet(),  value);	  Properties    cmd    =    properties.getProperty(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
87	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties.keySet(),  values);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties.keySet(),  values);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(properties.keySet(),  values);	  Properties    cmd    =    properties.getProperty(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
88	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties.values());  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(properties.values());	  Properties    cmd    =    properties.getProperty(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
89	[BUG]  [BUGGY]  Context.report(JSError.make(PROPERTY_NAMESPACE_ERROR,  value));  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Context.report(JSError.make(PROPERTY_NAMESPACE_ERROR,  value));  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Context.report(JSError.make(PROPERTY_NAMESPACE_ERROR,  value));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
90	[BUG]  [BUGGY]  Context.report(JSError.make(cmd,  value));  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Context.report(JSError.make(cmd,  value));  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Context.report(JSError.make(cmd,  value));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
91	[BUG]  [BUGGY]  Context.report(JSError.make(PROPERTY_NAMESPACE_ERROR,  e.getMessage()));  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Context.report(JSError.make(PROPERTY_NAMESPACE_ERROR,  e.getMessage()));  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Context.report(JSError.make(PROPERTY_NAMESPACE_ERROR,  e.getMessage()));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
92	[BUG]  [BUGGY]  if(option  ==  null  ||  options.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  options.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(option  ==  null  ||  options.hasOption(option))  {	  if(option    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
93	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.propertyNames  ==  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
94	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames!=  null)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.propertyNames!=  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
95	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newHashSet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newHashSet();	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
96	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  Lists.newHashSet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Set  <  String>  requiredOptions  =  Lists.newHashSet();	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
97	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getProperty(propertyName);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getProperty(propertyName);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  this.properties.getProperty(propertyName);	  Properties    cmd    =    this.properties.getProperty(property);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
98	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(this.properties);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(this.properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(this.properties);	  Properties    cmd    =    this.properties.getProperty(property);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
99	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  options);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  options);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties,    values);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
100	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  properties);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  properties);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties,    values);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
101	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  tokenList);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  tokenList);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  tokenList);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties,    values);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
102	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  values.values);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  values.values);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  values.values);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties,    values);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
103	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  cmd  =  option.getOption(option);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  option.getOption(option);	  Option    cmd    =    option.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
104	[BUG]  [BUGGY]  Option  cmd  =  value.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  cmd  =  value.getOption(option);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  cmd  =  value.getOption(option);	  Option    cmd    =    option.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
105	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName,  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(propertyName,  value);	  Properties    cmd    =    properties.getProperty(propertyName);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
106	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(key,  value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(key,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(key,  value);	  Enumeration    <    String>    cmd    =    properties.getProperty(key);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
107	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(options);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(options);	  List    <    String>    requiredOptions    =    Lists.newArrayList(value);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
108	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(value,  properties);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(value,  properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(value,  properties);	  Properties    cmd    =    properties.getProperty(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
109	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(key,  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(key,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(key,  value);	  Properties    cmd    =    properties.getProperty(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
110	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  value,  null);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  value,  null);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(properties,  value,  null);	  Properties    cmd    =    properties.getProperty(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
111	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(properties);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(value);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
112	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(options);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(value);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
113	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Set  <  String>  requiredOptions  =  new  HashSet  <  String>(properties.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
114	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
115	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  LinkedList  <  String>(properties.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
116	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(propers.size());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(propers.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(propers.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
117	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key).properties();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key).properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(key).properties();	  Enumeration    <    String>    cmd    =    properties.get(value).properties();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
118	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(propertyName).properties();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(propertyName).properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(propertyName).properties();	  Enumeration    <    String>    cmd    =    properties.get(value).properties();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
119	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.keySet();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  this.properties.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  this.properties.keySet();	  Enumeration    <    String>    cmd    =    properties.keySet();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
120	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());	  ArrayList    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
121	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().iterator().next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().iterator().next();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.properties().iterator().next();	  Enumeration    <    String>    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
122	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().iterator();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.properties().iterator();	  Enumeration    <    String>    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
123	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(option,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  option  =  options.getOption(option,  value);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
124	[BUG]  [BUGGY]  option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  option  option  =  options.getOption(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	option  option  =  options.getOption(value);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
125	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().iterator().next().get(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().iterator().next().get(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.keySet().iterator().next().get(option);	  Enumeration    <    String>    cmd    =    properties.keySet().get(option);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
126	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getCmd(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getCmd(option);	  Properties    cmd    =    properties.getCmd(value);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
127	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(key);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getCmd(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getCmd(key);	  Properties    cmd    =    properties.getCmd(value);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
128	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getCmd(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getCmd(opt);	  Properties    cmd    =    properties.getCmd(value);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
129	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key,  value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(key,  value);	  Enumeration    <    String>    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
130	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(key  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(key  +  1);	  Enumeration    <    String>    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
131	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
132	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.cloneTree());  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.cloneTree());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.cloneTree());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(value);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
133	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.getPropertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.getPropertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames  ==  null  ||  properties.getPropertyNames().size()  ==  0)  {	  if(properties    ==    null    ||    properties.getPropertyNames().size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
134	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(6);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(6);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(6);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
135	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
136	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.values()    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
137	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayListWithCapacity(option);	  List    <    String>    requiredOptions    =    Lists.newArrayListWithCapacity(value);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
138	[BUG]  [BUGGY]  if(option!=  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(option!=  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(option!=  null  ||  properties.hasOption(option))  {	  if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
139	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getPropertyName(option);	  Enumeration    <    String>    cmd    =    properties.getPropertyName(value);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
140	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmdName(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmdName(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getCmdName(value);	  Enumeration    <    String>    cmd    =    properties.getPropertyName(value);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
141	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value,  property);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value,  property);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(value,  property);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
142	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(properties,  option);	  List    <    String>    requiredOptions    =    Lists.newArrayList(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
143	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.size()  ==  1)  {	  if(properties!=    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
144	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(value,  property);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(value,  property);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(value,  property);	  Properties    cmd    =    properties.getProperty(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
145	[BUG]  [BUGGY]  Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Set  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
146	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(option,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getCmd(option,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getCmd(option,  value);	  Properties    cmd    =    properties.getCmd(value);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
147	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.size());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(value.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(requiredOptions.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
148	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames(value);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentNames(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentNames(value);	  Enumeration    <    String>    cmd    =    properties.getArgumentNames();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
149	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.values();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.values();	  Enumeration    <    String>    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
150	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newLinkedList(value);	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
151	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(requiredOptions);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newLinkedList(requiredOptions);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newLinkedList(requiredOptions);	  List    <    String>    requiredOptions    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
152	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().get(value);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().get(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.properties().get(value);	  Enumeration    <    String>    cmd    =    properties.keySet().get(value);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
153	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(value  -  1);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().get(value  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.keySet().get(value  -  1);	  Enumeration    <    String>    cmd    =    properties.keySet().get(value);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
154	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(opt);	  List    <    String>    requiredOptions    =    Lists.newArrayList(value);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
155	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  value.toLowerCase());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  value.toLowerCase());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value.toString(),  value.toLowerCase());	  Enumeration    <    String>    cmd    =    properties.get(value.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
156	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  value.toCharArray());  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  value.toCharArray());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value.toString(),  value.toCharArray());	  Enumeration    <    String>    cmd    =    properties.get(value.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
157	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentElements(value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArgumentElements(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getArgumentElements(value);	  Enumeration    <    String>    cmd    =    properties.getArgumentElements();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
158	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getProperty(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getProperty(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  this.properties.getProperty(value);	  Properties    cmd    =    this.properties.getProperty(property);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
159	[BUG]  [BUGGY]  Context.report(JSError.make(String.valueOf(option)));  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Context.report(JSError.make(String.valueOf(option)));  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Context.report(JSError.make(String.valueOf(option)));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
160	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  option,  value));  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Context.report(JSError.make(sourceName,  option,  value));  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Context.report(JSError.make(sourceName,  option,  value));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
161	[BUG]  [BUGGY]  Context.report(JSError.make(String.valueOf(value)));  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Context.report(JSError.make(String.valueOf(value)));  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Context.report(JSError.make(String.valueOf(value)));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
162	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(option).properties();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(option).properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(option).properties();	  Enumeration    <    String>    cmd    =    properties.get(value).properties();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
163	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().get(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties().get(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.properties().get(option);	  Enumeration    <    String>    cmd    =    properties.keySet().get(option);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
164	[BUG]  [BUGGY]  if(opt  ==  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(opt  ==  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(opt  ==  null  ||  properties.hasOption(option))  {	  if(option    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
165	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArguments(value);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getArguments(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getArguments(value);	  Enumeration    <    String>    cmd    =    properties.getArguments();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
166	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  getOptionValue(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  getOptionValue(option);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  getOptionValue(option);	  Enumeration    <    String>    cmd    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
167	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmdCount();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmdCount();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getCmdCount();	  Enumeration    <    String>    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
168	[BUG]  [BUGGY]  if(value  ==  null  ||  options.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  options.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(value  ==  null  ||  options.hasOption(option))  {	  if(value    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
169	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(value,  value);	  Enumeration    <    String>    cmd    =    properties.getProperty(value,    exp);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
170	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(value,  option);	  Enumeration    <    String>    cmd    =    properties.getProperty(value,    exp);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
171	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  options);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(value,  options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(value,  options);	  Enumeration    <    String>    cmd    =    properties.getProperty(value,    exp);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
172	[BUG]  [BUGGY]  if(option  ==  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(option  ==  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
173	[BUG]  [BUGGY]  if(option!=  null  ||  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(option!=  null  ||  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(option!=  null  ||  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
174	[BUG]  [BUGGY]  if(property  ==  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(property  ==  null  ||  properties.hasProperty(propertyNames()))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()    +    1))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
175	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames()  +  1))  {  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.hasProperty(propertyNames()  +  1))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.hasProperty(propertyNames()  +  1))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames()    +    1))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
176	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value  +  1);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  Lists.newArrayList(value  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  Lists.newArrayList(value  +  1);	  List    <    String>    requiredOptions    =    Lists.newArrayList(value);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
177	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(value,  value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getCmd(value,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getCmd(value,  value);	  Enumeration    <    String>    cmd    =    properties.getCmd(value);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
178	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(7);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(7);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(7);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(8);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
179	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.values());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(properties.values());	  Enumeration    <    String>    cmd    =    properties.getProperty(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
180	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(properties.keySet());  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.get(properties.keySet());	  Properties    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
181	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  &&  properties.isEmpty())  {	  if(properties!=    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
182	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames!=  null)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.propertyNames!=  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
183	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperties(propertiesName,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperties(propertiesName,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperties(propertiesName,  value);	  Properties    cmd    =    properties.getProperty(propertiesName);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
184	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
185	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  value  -  1);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  value  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(properties,  value  -  1);	  Properties    cmd    =    properties.getProperty(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
186	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperty(properties,  option);	  Properties    cmd    =    properties.getProperty(properties,    value);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
187	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
188	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentElements();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentElements();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getArgumentElements();	  Enumeration    <    String>    cmd    =    properties.getArgumentElements();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
189	[BUG]  [BUGGY]  if(value  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(value  ==  null  ||  properties.size()  ==  0)  {	  if(propertyNames    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
190	[BUG]  [BUGGY]  Option  option  =  options.getOptionValue(option);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOptionValue(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  option  =  options.getOptionValue(option);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
191	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyNames(value);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyNames(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getPropertyNames(value);	  Enumeration    <    String>    cmd    =    properties.getPropertyName(value);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
192	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(properties.keySet());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getPropertyName(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getPropertyName(properties.keySet());	  Enumeration    <    String>    cmd    =    properties.getPropertyName(value);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
193	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getCmd();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getCmd();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getCmd();	  Enumeration    <    String>    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
194	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.getPropertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.getPropertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  &&  properties.getPropertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.getPropertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
195	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Option  option  =  options.getOption(opt);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
196	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getProperty(property,  value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getProperty(property,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  this.properties.getProperty(property,  value);	  Properties    cmd    =    this.properties.getProperty(property);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
197	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.class.getSimpleName());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.class.getSimpleName());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.class.getSimpleName());	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
198	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.class);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.class);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(RequiredOptions.class);	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
199	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.keySet().iterator().next();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.keySet().iterator().next();	  Enumeration    <    String>    cmd    =    properties.keySet().get(option);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
200	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  getOptions(value);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  getOptions(value);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  getOptions(value);	  Enumeration    <    String>    cmd    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
201	[BUG]  [BUGGY]  if(properties  ==  null  ||  property.propertyNames  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  property.propertyNames  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  property.propertyNames  ==  null)  {	  if(properties!=    null    ||    properties.propertyNames    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
202	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.propertyNames().contains(option))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.propertyNames().contains(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  &&  properties.propertyNames().contains(option))  {	  if(properties!=    null    ||    properties.propertyNames().contains(option))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
203	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperties(properties.keySet());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperties(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.getProperties(properties.keySet());	  Properties    cmd    =    properties.getProperty(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
204	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties,  value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.getProperty(properties,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.getProperty(properties,  value);	  Enumeration    <    String>    cmd    =    properties.getProperty(value,    exp);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
205	[BUG]  [BUGGY]  if(value  ==  null  ||  properties.containsKey(option))  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  properties.containsKey(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(value  ==  null  ||  properties.containsKey(option))  {	  if(value    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
206	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(properties.size()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Properties  cmd  =  properties.get(properties.size()  -  1);	  Properties    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
207	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentNames();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.properties.getArgumentNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.properties.getArgumentNames();	  Enumeration    <    String>    cmd    =    properties.getArgumentNames();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
208	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  value.toUpperCase());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  value.toUpperCase());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value.toString(),  value.toUpperCase());	  Enumeration    <    String>    cmd    =    properties.get(value.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
209	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  options);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {      [BUGGY]  Enumeration  <  String>  cmd  =  properties.get(value.toString(),  options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	Enumeration  <  String>  cmd  =  properties.get(value.toString(),  options);	  Enumeration    <    String>    cmd    =    properties.get(value.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
210	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.getPropertyNames().size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.getPropertyNames().size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  properties.getPropertyNames().size()!=  0)  {	  if(properties    ==    null    ||    properties.getPropertyNames().size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
211	[BUG]  [BUGGY]  if(properties!=  null  ||  propertyNames.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  propertyNames.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  ||  propertyNames.isEmpty())  {	  if(properties    ==    null    ||    propertyNames.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
212	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.hasProperty(propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null  &&  properties.hasProperty(propertyNames()))  {	  if(properties!=    null    ||    properties.hasProperty(propertyNames()))    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
213	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()!=  1)  {  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()!=  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.getPropertyNames().size()!=  1)  {	  if(properties    ==    null    ||    properties.getPropertyNames().size()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
214	[BUG]  [BUGGY]  if(option  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(option  ==  null  ||  properties.hasProperty(propertyNames())&&!cmd.hasOption(option))  {	  if(properties    ==    null    ||    properties.hasProperty(propertyNames())&&!cmd.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
