projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.hasProperty(propertyNames())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getOptions();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getPropertyNames();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.getPropertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.get(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=options.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(properties,values);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(propertyName);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value.toString());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||propertyNames.isEmpty()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Set<String>requiredOptions=newHashSet<String>(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.values()+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.size()-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.size()+1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(properties.size()-2);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(option,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optionoption=options.getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.getPropertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.getPropertyNames().size()!=0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.getPropertyNames().size()==1){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.propertyNames!=null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.propertyNames==null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.propertyNames();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmd();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Context.reportCodeChange();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newLinkedList();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayList(0);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=options.getOption(options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.size()!=0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(propertyName);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArguments();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(option==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.hasProperty(propertyNames())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null||properties.hasProperty(propertyNames())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.hasProperty(propertyNames()+1)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(key);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(value,exp);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getProperty(properties.keySet());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newLinkedList<String>();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254ArrayList<String>requiredOptions=newArrayList<String>();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optioncmd=option.getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArgumentElements();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getArgumentNames();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.size()==1){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties==null||properties.hasProperty(propertyNames())&&!cmd.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getCmd(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=this.properties.getProperty(property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getCmd(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=options.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(propertyNames==null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(value==null||properties.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.getPropertyName(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newArrayList<String>(8);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=this.properties.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().get(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.get(value).properties();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.properties();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Enumeration<String>cmd=properties.keySet().get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Optionoption=options.getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=newLinkedList<String>(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254ArrayList<String>requiredOptions=newArrayList<String>(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254Propertiescmd=properties.getProperty(propertiesName);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254List<String>requiredOptions=Lists.newArrayListWithCapacity(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.propertyNames().size()==0){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java254if(properties!=null||properties.propertyNames().contains(option)){
