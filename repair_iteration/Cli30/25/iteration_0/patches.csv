bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(properties!=  null)  {  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  [BUGGY]  if(properties!=  null)  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties!=  null)  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
2	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames()))  {  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.hasProperty(propertyNames()))  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.hasProperty(propertyNames()))  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  {  [BUGGY]    [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	  	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
4	[BUG]  [BUGGY]    List  <  String>  requiredOptions  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  [BUGGY]    List  <  String>  requiredOptions  =  Lists.newArrayList();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    List  <  String>  requiredOptions  =  Lists.newArrayList();		non-compiled	[CE]  illegal  start  of  type	50	None	add
5	[BUG]  [BUGGY]    Properties  cmd  =  properties.getProperty(value);  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.getProperty(value);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Properties  cmd  =  properties.getProperty(value);		non-compiled	[CE]  illegal  start  of  type	50	None	add
6	[BUG]  [BUGGY]    List  <  String>  requiredOptions  =  Lists.newArrayList(properties);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  {  [BUGGY]    List  <  String>  requiredOptions  =  Lists.newArrayList(properties);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    List  <  String>  requiredOptions  =  Lists.newArrayList(properties);		non-compiled	[CE]  illegal  start  of  type	50	None	add
7	[BUG]  [BUGGY]    Properties  cmd  =  properties.getProperty(property);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.getProperty(property);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Properties  cmd  =  properties.getProperty(property);		non-compiled	[CE]  illegal  start  of  type	50	None	add
8	[BUG]  [BUGGY]    Properties  cmd  =  properties.get(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.get(option);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Properties  cmd  =  properties.get(option);		non-compiled	[CE]  illegal  start  of  type	50	None	add
9	[BUG]  [BUGGY]    Enumeration  <  String>  cmd  =  properties.getProperty(value);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Enumeration  <  String>  cmd  =  properties.getProperty(value);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Enumeration  <  String>  cmd  =  properties.getProperty(value);		non-compiled	[CE]  illegal  start  of  type	50	None	add
10	[BUG]  [BUGGY]    Enumeration  <  String>  cmd  =  properties.getOptions();  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Enumeration  <  String>  cmd  =  properties.getOptions();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Enumeration  <  String>  cmd  =  properties.getOptions();		non-compiled	[CE]  illegal  start  of  type	50	None	add
11	[BUG]  [BUGGY]    Enumeration  <  String>  cmd  =  properties.get(value);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Enumeration  <  String>  cmd  =  properties.get(value);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Enumeration  <  String>  cmd  =  properties.get(value);		non-compiled	[CE]  illegal  start  of  type	50	None	add
12	[BUG]  [BUGGY]    Enumeration  <  String>  cmd  =  properties.get(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Enumeration  <  String>  cmd  =  properties.get(option);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Enumeration  <  String>  cmd  =  properties.get(option);		non-compiled	[CE]  illegal  start  of  type	50	None	add
13	[BUG]  [BUGGY]    Enumeration  <  String>  cmd  =  properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Enumeration  <  String>  cmd  =  properties.getPropertyNames();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Enumeration  <  String>  cmd  =  properties.getPropertyNames();		non-compiled	[CE]  illegal  start  of  type	50	None	add
14	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.hasOption(option))  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.hasOption(option))  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
15	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.size()  ==  0)  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
16	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.isEmpty())  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
17	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.getPropertyNames().size()  ==  0)  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	if(properties  ==  null  ||  properties.getPropertyNames().size()  ==  0)  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
18	[BUG]  [BUGGY]    List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  {  [BUGGY]    List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());		non-compiled	[CE]  illegal  start  of  type	50	None	add
19	[BUG]  [BUGGY]    List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  {  [BUGGY]    List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.size());		non-compiled	[CE]  illegal  start  of  type	50	None	add
20	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Option  cmd  =  options.getOption(value);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Option  cmd  =  options.getOption(value);		non-compiled	[CE]  illegal  start  of  type	50	None	add
21	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException  [CONTEXT]  {  [BUGGY]    Option  cmd  =  options.getOption(option);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    Option  cmd  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	50	None	add
22	[BUG]  [BUGGY]    List  <  String>  requiredOptions  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException  [CONTEXT]  {  [BUGGY]    List  <  String>  requiredOptions  =  new  ArrayList  <  String>();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2195015359561727	254	255	9	replace	    List  <  String>  requiredOptions  =  new  ArrayList  <  String>();		non-compiled	[CE]  illegal  start  of  type	50	None	add
