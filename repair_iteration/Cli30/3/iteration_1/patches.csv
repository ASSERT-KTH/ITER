bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  value  =  properties.getValue(option);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  properties.getValue(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.getValue(option);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  String  value  =  properties.get(option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  properties.get(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.get(option);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  String  value  =  cmd.getValue(option);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  cmd.getValue(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  cmd.getValue(option);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(value);  [CE]  illegal  start  of  expression  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  getOptions().getOption(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(value);	      Option    cmd    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  Option  cmd  =  getOptions().get(value);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  getOptions().get(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().get(value);	      Option    cmd    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  Option  cmd  =  getOptions().get(option);  [CE]  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  getOptions().get(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().get(option);	      Option    cmd    =    getOptions().getOption(option);    	non-compiled	[CE]  	2	None	replace
7	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.length()  ==  0)  {	  if(opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  	9	None	replace
8	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.length()  ==  0)  {	  if(opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  if(value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.length()  ==  0)  {	  if(opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  if(value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {	  if(opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  if(opt.hasValues()  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValues()  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasValues()  ||  value.length()  ==  0)  {	  if(opt.hasValues())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  if(value!=  null  ||  value.hasValues())  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  ||  value.hasValues())  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.hasValues())  {	  if(opt.hasValues())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.length()  >  0)  {	  if(opt.hasValues())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  getOption(value);  [CE]  illegal  start  of  expression  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  getOption(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(value);	      Option    cmd    =    getOptions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  getCmd();  [CE]  illegal  start  of  expression  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  getCmd();  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getCmd();	      Option    cmd    =    getOptions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  getOptions().getOption(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(value);	      Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  getOptions().getOption(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(option,  value);	      Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  Option  opt  =  getOptions().get(value);  [CE]  [FE]                    AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  getOptions().get(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().get(value);	      Option    opt    =    getOptions().getOption(option);    	non-compiled	[CE]  	5	None	replace
19	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasValue())  {  [CE]  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  opt.hasValue())  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasValue())  {	  if(opt.hasValue())    {    	non-compiled	[CE]  	6	None	replace
20	[BUG]  [BUGGY]  if(opt.hasValue()  ||  value.length()  ==  0)  {  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValue()  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasValue()  ||  value.length()  ==  0)  {	  if(opt.hasValue())    {    	non-compiled	[CE]  	6	None	replace
21	[BUG]  [BUGGY]  if(value.equals(opt.getArg()))  {  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value.equals(opt.getArg()))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getArg()))  {	  if(opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  	13	None	replace
22	[BUG]  [BUGGY]  if(value.equals(opt.hasArg())&&  value.equals(value))  {  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value.equals(opt.hasArg())&&  value.equals(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.hasArg())&&  value.equals(value))  {	  if(opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  	13	None	replace
23	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(opt.getValue()))  {  [CE]  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  value.equals(opt.getValue()))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(opt.getValue()))  {	  if(opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  	13	None	replace
24	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(opt.getArg()))  {  [CE]  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  value.equals(opt.getArg()))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(opt.getArg()))  {	  if(opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  	13	None	replace
25	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value);  String  option  =  properties.getProperty(option);  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  getOptions().getOption(value);  String  option  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(value);  String  option  =  properties.getProperty(option);	      Option    opt    =    getOptions().getOption(option);    String    option    =    properties.getProperty(option);    	non-compiled	[CE]  	11	None	replace
26	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  String  option  =  properties.getProperty(option);  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  getOptions().getOption(option);  String  option  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option);  String  option  =  properties.getProperty(option);	      Option    opt    =    getOptions().getOption(option);    String    option    =    properties.getProperty(option);    	non-compiled	[CE]  	11	None	replace
27	[BUG]  [BUGGY]  Option  cmd  =  getOption(option,  value);  [CE]  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  getOption(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(option,  value);	      Option    cmd    =    getOption(option);    	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  ==  0)  {  [CE]  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.length()  ==  0)  {	  if(opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  	12	None	replace
29	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value);  [CE]  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  getOptions().getOption(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(value);	      Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  	14	None	replace
30	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option,  value);  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  getOptions().getOption(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option,  value);	      Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  	14	None	replace
31	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(cmd);  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  getOptions().getOption(cmd);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(cmd);	      Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  	14	None	replace
32	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option);  [CE]  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option);	      Option    opt    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  	1	None	replace
33	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(cmd);  String  value  =  properties.getProperty(option);  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  opt  =  getOptions().getOption(cmd);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(cmd);  String  value  =  properties.getProperty(option);	      Option    opt    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  	1	None	replace
34	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);	      Option    opt    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  	1	None	replace
35	[BUG]  [BUGGY]  if(value!=  null)  {  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  	8	None	replace
36	[BUG]  [BUGGY]  if(value  ==  null)  {  [CE]  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value  ==  null)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  	8	None	replace
37	[BUG]  [BUGGY]  if(opt.hasProperty(value)||  value.equals( "prototype "))  {  [CE]  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasProperty(value)||  value.equals( "prototype "))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasProperty(value)||  value.equals( "prototype "))  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  	15	None	replace
38	[BUG]  [BUGGY]  if(opt.hasProperty(value)||  value.length()  ==  0)  {  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasProperty(value)||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasProperty(value)||  value.length()  ==  0)  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  	15	None	replace
39	[BUG]  [BUGGY]  if(opt.getValues()  ==  null  ||  opt.hasValues())  {  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.getValues()  ==  null  ||  opt.hasValues())  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.getValues()  ==  null  ||  opt.hasValues())  {	  if(opt.hasValues())    {    	non-compiled	[CE]  	7	None	replace
40	[BUG]  [BUGGY]  if(opt.hasValues()  ||  value.length()!=  0)  {  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValues()  ||  value.length()!=  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasValues()  ||  value.length()!=  0)  {	  if(opt.hasValues())    {    	non-compiled	[CE]  	7	None	replace
41	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasArg()  &&  value.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  opt.hasArg()  &&  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasArg()  &&  value.length()  ==  0)  {	  if(opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  getOptions(option);  [CE]  <identifier>  expected  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  getOptions(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions(option);	      Option    cmd    =    getOption(option);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  getCmd(option);  [CE]  <identifier>  expected  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  getCmd(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getCmd(option);	      Option    cmd    =    getOption(option);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  if(opt.getValues()  ==  null  ||  opt.hasValue())  {  [CE]  <identifier>  expected  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.getValues()  ==  null  ||  opt.hasValue())  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.getValues()  ==  null  ||  opt.hasValue())  {	  if(opt.hasValue())    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt);  [CE]  <identifier>  expected  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  getOptions().getOption(opt);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(opt);	      Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  String  value  =  properties.getProperty(value);  [CE]  <identifier>  expected  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  properties.getProperty(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.getProperty(value);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option);  [CE]  <identifier>  expected  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(value);  String  value  =  properties.getProperty(option);	      Option    opt    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  if(opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [CE]  <identifier>  expected  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value);  [CE]  <identifier>  expected  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(option,  value);	      Option    cmd    =    getOptions().getOption(option);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  if(opt.hasArg()  ||  value.equals(value))  {  [CE]  <identifier>  expected  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasArg()  ||  value.equals(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasArg()  ||  value.equals(value))  {	  if(opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(opt))  {  [CE]  <identifier>  expected  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  value.equals(opt))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(opt))  {	  if(opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
52	[BUG]  [BUGGY]  if(opt.hasValueForProcessing(value))  {  [CE]  <identifier>  expected  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasValueForProcessing(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasValueForProcessing(value))  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
53	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasProperty(value))  {  [CE]  <identifier>  expected  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  opt.hasProperty(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasProperty(value))  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
54	[BUG]  [BUGGY]  if(!opt.hasValue())  {  [CE]  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(!opt.hasValue())  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(!opt.hasValue())  {	  if(opt.hasValue())    {    	non-compiled	[CE]  	6	None	replace
55	[BUG]  [BUGGY]  String  value  =  options.getProperty(value);  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  String  value  =  options.getProperty(value);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  options.getProperty(value);	      String    value    =    properties.getProperty(option);    	non-compiled	[CE]  	3	None	replace
56	[BUG]  [BUGGY]  if(opt.getValues()  ==  null  ||  value.length()  ==  0)  {  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.getValues()  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.getValues()  ==  null  ||  value.length()  ==  0)  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  	8	None	replace
57	[BUG]  [BUGGY]  if(!cmd.hasOption(option))  {  [CE]  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(!cmd.hasOption(option))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(!cmd.hasOption(option))  {	  if(opt.getValues().length    ==    0)    {    	non-compiled	[CE]  	8	None	replace
58	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasArg()  &&  value.equals(value))  {  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  opt.hasArg()  &&  value.equals(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasArg()  &&  value.equals(value))  {	  if(opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  	13	None	replace
59	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(opt.getKey()))  {  [CE]  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(value!=  null  &&  value.equals(opt.getKey()))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(opt.getKey()))  {	  if(opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  	13	None	replace
60	[BUG]  [BUGGY]  Option  option  =  getOption(option);  [CE]  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  getOption(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOption(option);	      Option    cmd    =    getOption(option);    	non-compiled	[CE]  	4	None	replace
61	[BUG]  [BUGGY]  if(opt.hasProperty(value)||  opt.hasValueForProcessing(value))  {  [CE]  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  if(opt.hasProperty(value)||  opt.hasValueForProcessing(value))  {  [BUGGY]    {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasProperty(value)||  opt.hasValueForProcessing(value))  {	  if(opt.hasProperty(value))    {    	non-compiled	[CE]  	15	None	replace
62	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option)+  1;  [CE]  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  getOptions().getOption(option)+  1;  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option)+  1;	      Option    option    =    getOptions().getOption(option);    	non-compiled	[CE]  	14	None	replace
63	[BUG]  [BUGGY]  Option  option  =  properties.getProperty(option);  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);    [BUGGY]  Option  option  =  properties.getProperty(option);  [BUGGY]    if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  properties.getProperty(option);	      Option    opt    =    getOptions().getOption(option);    String    option    =    properties.getProperty(option);    	non-compiled	[CE]  	11	None	replace
