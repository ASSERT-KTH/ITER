bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value,  option);  [CE]  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  opt  =  getOptions().getOption(value,  option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(value,  option);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  	17	None	replace
2	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  requiredOptions);  [CE]  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  requiredOptions);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(option,  value,  requiredOptions);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  	17	None	replace
3	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  cmd);  [CE]  [FE]                          AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  cmd);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(option,  value,  cmd);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  	17	None	replace
4	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(value,  option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(value,  option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(value,  option);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
5	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(value,  opt);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(value,  opt);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(value,  opt);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
6	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(opt,  value);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(opt,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(opt,  value);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
7	[BUG]  [BUGGY]  if(value.equals(opt.getArg())||  value.equals(opt.getArg()))  {  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getArg())||  value.equals(opt.getArg()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getArg())||  value.equals(opt.getArg()))  {	  if(opt.hasArg()    ||    value.equals(value))    {    	non-compiled	[CE]  	50	None	replace
8	[BUG]  [BUGGY]  if(value.equals(opt.getArgument())||  value.equals(opt.getArgument()))  {  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getArgument())||  value.equals(opt.getArgument()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getArgument())||  value.equals(opt.getArgument()))  {	  if(opt.hasArg()    ||    value.equals(value))    {    	non-compiled	[CE]  	50	None	replace
9	[BUG]  [BUGGY]  if(value.equals(opt.hasArg())||  value.equals(opt.getArg()))  {  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.hasArg())||  value.equals(opt.getArg()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.hasArg())||  value.equals(opt.getArg()))  {	  if(opt.hasArg()    ||    value.equals(value))    {    	non-compiled	[CE]  	50	None	replace
10	[BUG]  [BUGGY]  if(value!=  null  ||  value.equals(opt.getArg()))  {  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  value.equals(opt.getArg()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.equals(opt.getArg()))  {	  if(opt.hasArg()    ||    value.equals(value))    {    	non-compiled	[CE]  	50	None	replace
11	[BUG]  [BUGGY]  if(value!=  null  ||  value.equals(opt.getValue()))  {  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  value.equals(opt.getValue()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.equals(opt.getValue()))  {	  if(value!=    null    &&    value.equals(opt.getValue()))    {    	non-compiled	[CE]  	23	None	replace
12	[BUG]  [BUGGY]  if(value  ==  null  &&  value.equals(opt.getValue()))  {  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  &&  value.equals(opt.getValue()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  &&  value.equals(opt.getValue()))  {	  if(value!=    null    &&    value.equals(opt.getValue()))    {    	non-compiled	[CE]  	23	None	replace
13	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(value))  {  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.equals(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(value))  {	  if(value!=    null    &&    value.equals(opt))    {    	non-compiled	[CE]  	51	None	replace
14	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(option))  {  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.equals(option))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(option))  {	  if(value!=    null    &&    value.equals(opt))    {    	non-compiled	[CE]  	51	None	replace
15	[BUG]  [BUGGY]  if(value!=  null  ||  value.equals(opt))  {  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  value.equals(opt))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.equals(opt))  {	  if(value!=    null    &&    value.equals(opt))    {    	non-compiled	[CE]  	51	None	replace
16	[BUG]  [BUGGY]  if(value!=  null  ||!opt.hasValue())  {  [CE]  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||!opt.hasValue())  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||!opt.hasValue())  {	  if(!opt.hasValue())    {    	non-compiled	[CE]  	54	None	replace
17	[BUG]  [BUGGY]  if(opt.getValues()  ==  null  ||!opt.hasValue())  {  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.getValues()  ==  null  ||!opt.hasValue())  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.getValues()  ==  null  ||!opt.hasValue())  {	  if(!opt.hasValue())    {    	non-compiled	[CE]  	54	None	replace
18	[BUG]  [BUGGY]  if(!opt.hasValue()  ||  value.length()  ==  0)  {  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(!opt.hasValue()  ||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(!opt.hasValue()  ||  value.length()  ==  0)  {	  if(!opt.hasValue())    {    	non-compiled	[CE]  	54	None	replace
19	[BUG]  [BUGGY]  if(!opt.hasValue()  &&  value.length()  >  0)  {  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(!opt.hasValue()  &&  value.length()  >  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(!opt.hasValue()  &&  value.length()  >  0)  {	  if(!opt.hasValue())    {    	non-compiled	[CE]  	54	None	replace
20	[BUG]  [BUGGY]  if(value.equals(opt.getValue()))  {  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getValue()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getValue()))  {	  if(value.equals(opt.getArg()))    {    	non-compiled	[CE]  	21	None	replace
21	[BUG]  [BUGGY]  if(value.equals(opt.getKey()))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getKey()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getKey()))  {	  if(value.equals(opt.getArg()))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
22	[BUG]  [BUGGY]  if(value!=  null  ||!cmd.hasOption(option))  {  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||!cmd.hasOption(option))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||!cmd.hasOption(option))  {	  if(!cmd.hasOption(option))    {    	non-compiled	[CE]  	57	None	replace
23	[BUG]  [BUGGY]  if(value  ==  null  ||!cmd.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||!cmd.hasOption(option))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||!cmd.hasOption(option))  {	  if(!cmd.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
24	[BUG]  [BUGGY]  if(value!=  null  &&!cmd.hasOption(option))  {  [CE]  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&!cmd.hasOption(option))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&!cmd.hasOption(option))  {	  if(!cmd.hasOption(option))    {    	non-compiled	[CE]  	57	None	replace
25	[BUG]  [BUGGY]  Option  option  =  properties.getOption(option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  properties.getOption(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  properties.getOption(option);	  Option    option    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
26	[BUG]  [BUGGY]  Option  option  =  properties.getOption(value);  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  properties.getOption(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  properties.getOption(value);	  Option    option    =    properties.getProperty(option);    	non-compiled	[CE]  	63	None	replace
27	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option);  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  cmd.getOption(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  cmd.getOption(option);	  Option    option    =    properties.getProperty(option);    	non-compiled	[CE]  	63	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  options.getOption(value);	  Option    option    =    properties.getProperty(option);    	non-compiled	[CE]  	63	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  getOption(opt);  [CE]  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOption(opt);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(opt);	  Option    cmd    =    getOption(value);    	non-compiled	[CE]  	14	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  getOption(value,  value);  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOption(value,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(value,  value);	  Option    cmd    =    getOption(value);    	non-compiled	[CE]  	14	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  getOptions(value);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions(value);	  Option    cmd    =    getOptions(option);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
32	[BUG]  [BUGGY]  if(value.length()  ==  0  ||  opt.hasValue()  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.length()  ==  0  ||  opt.hasValue()  ||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.length()  ==  0  ||  opt.hasValue()  ||  value.length()  ==  0)  {	  if(opt.hasValue()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
33	[BUG]  [BUGGY]  String  value  =  properties.get(opt);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  properties.get(opt);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.get(opt);	  String    value    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  String  value  =  properties.get(option  +  1);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  properties.get(option  +  1);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.get(option  +  1);	  String    value    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  if(value!=  null  ||  value.equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  value.equals( "prototype "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.equals( "prototype "))  {	  if(opt.hasProperty(value)||    value.equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
36	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.equals( "prototype "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals( "prototype "))  {	  if(opt.hasProperty(value)||    value.equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
37	[BUG]  [BUGGY]  if(value.equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals( "prototype "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals( "prototype "))  {	  if(opt.hasProperty(value)||    value.equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
38	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value)+  1;  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(value)+  1;  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(value)+  1;	  Option    option    =    getOptions().getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
39	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option)/  1;  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(option)/  1;  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option)/  1;	  Option    option    =    getOptions().getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
40	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option)+  2;  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(option)+  2;  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option)+  2;	  Option    option    =    getOptions().getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
41	[BUG]  [BUGGY]  if(!opt.hasValueForProcessing(value))  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(!opt.hasValueForProcessing(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(!opt.hasValueForProcessing(value))  {	  if(opt.hasValueForProcessing(value))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
42	[BUG]  [BUGGY]  if(opt.hasValueForProcessing(value)||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.hasValueForProcessing(value)||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasValueForProcessing(value)||  value.length()  ==  0)  {	  if(opt.hasValueForProcessing(value))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
43	[BUG]  [BUGGY]  if(value.equals(opt.getValue())&&  value.equals(value))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getValue())&&  value.equals(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getValue())&&  value.equals(value))  {	  if(value.equals(opt.hasArg())&&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
44	[BUG]  [BUGGY]  if(value.equals(opt.getKey())&&  value.equals(value))  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getKey())&&  value.equals(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getKey())&&  value.equals(value))  {	  if(value.equals(opt.hasArg())&&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
45	[BUG]  [BUGGY]  if(value.equals(opt.getClass())&&  value.equals(value))  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getClass())&&  value.equals(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getClass())&&  value.equals(value))  {	  if(value.equals(opt.hasArg())&&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
46	[BUG]  [BUGGY]  if(value.equals(opt.getArg())&&  value.equals(value))  {  [CE]  illegal  start  of  expression  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getArg())&&  value.equals(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getArg())&&  value.equals(value))  {	  if(value.equals(opt.hasArg())&&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  getOptions().get(key);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().get(key);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().get(key);	  Option    cmd    =    getOptions().get(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  getCmd().get(option);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getCmd().get(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getCmd().get(option);	  Option    cmd    =    getOptions().get(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  Option  option  =  getOption(value);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOption(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOption(value);	  Option    option    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
50	[BUG]  [BUGGY]  Option  option  =  getOption(option,  value);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOption(option,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOption(option,  value);	  Option    option    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  getOptions().get(value  +  1);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().get(value  +  1);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().get(value  +  1);	  Option    cmd    =    getOptions().get(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  Option  cmd  =  getOptions().get(value  -  1);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().get(value  -  1);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().get(value  -  1);	  Option    cmd    =    getOptions().get(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value);  String  option  =  properties.getProperty(option);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(value);  String  option  =  properties.getProperty(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(value);  String  option  =  properties.getProperty(option);	  Option    option    =    getOptions().getOption(option);    String    option    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
54	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt);  String  value  =  properties.getProperty(option);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(opt);  String  value  =  properties.getProperty(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(opt);  String  value  =  properties.getProperty(option);	  Option    option    =    getOptions().getOption(value);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
55	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(cmd);  String  value  =  properties.getProperty(option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(cmd);  String  value  =  properties.getProperty(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(cmd);  String  value  =  properties.getProperty(option);	  Option    option    =    getOptions().getOption(value);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
56	[BUG]  [BUGGY]  Option  option  =  getOptions().get(value);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().get(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().get(value);	  Option    option    =    getOptions().getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
57	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  value.length()  >  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.length()  >  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  if(value!=  null  ||  opt.hasProperty(value))  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  opt.hasProperty(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  opt.hasProperty(value))  {	  if(value!=    null    &&    opt.hasProperty(value))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
60	[BUG]  [BUGGY]  if(value  ==  null  &&  opt.hasProperty(value))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  &&  opt.hasProperty(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  &&  opt.hasProperty(value))  {	  if(value!=    null    &&    opt.hasProperty(value))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
61	[BUG]  [BUGGY]  if(value  >=  null  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  >=  null  ||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  >=  null  ||  value.length()  ==  0)  {	  if(opt.getValues()    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
62	[BUG]  [BUGGY]  String  value  =  properties.getValue(opt);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  properties.getValue(opt);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.getValue(opt);	  String    value    =    properties.getValue(option);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  String  value  =  properties.getValue(option  +  1);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  properties.getValue(option  +  1);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.getValue(option  +  1);	  String    value    =    properties.getValue(option);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
64	[BUG]  [BUGGY]  String  value  =  properties.getValue(option,  value);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  properties.getValue(option,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.getValue(option,  value);	  String    value    =    properties.getValue(option);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {	  if(value.length()    ==    0    ||    opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {	  if(value.length()    ==    0    ||    opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
67	[BUG]  [BUGGY]  if(value.length()  ==  0  ||  opt.hasArg()  &&  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.length()  ==  0  ||  opt.hasArg()  &&  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.length()  ==  0  ||  opt.hasArg()  &&  value.length()  ==  0)  {	  if(value.length()    ==    0    ||    opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
68	[BUG]  [BUGGY]  if(value!=  null  ||  value.equals(opt.getKey()))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  value.equals(opt.getKey()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.equals(opt.getKey()))  {	  if(value!=    null    &&    value.equals(opt.getKey()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
69	[BUG]  [BUGGY]  if(value  ==  null  &&  value.equals(opt.getKey()))  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  &&  value.equals(opt.getKey()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  &&  value.equals(opt.getKey()))  {	  if(value!=    null    &&    value.equals(opt.getKey()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  getCmd(value);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getCmd(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getCmd(value);	  Option    cmd    =    getCmd(option);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
71	[BUG]  [BUGGY]  Option  cmd  =  getCmd(key);  [CE]  illegal  start  of  expression  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getCmd(key);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getCmd(key);	  Option    cmd    =    getCmd(option);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
72	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  value.length()!=  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.length()!=  0)  {	  if(opt.hasValues()    ||    value.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
73	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.length()!=  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.length()!=  0)  {	  if(opt.hasValues()    ||    value.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
74	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.length()!=  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.length()!=  0)  {	  if(opt.hasValues()    ||    value.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
75	[BUG]  [BUGGY]  if(value.length()  ==  0  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.length()  ==  0  ||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.length()  ==  0  ||  value.length()  ==  0)  {	  if(value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  Option  opt  =  getOptions().get(option);  [CE]  illegal  start  of  expression  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  opt  =  getOptions().get(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().get(option);	  Option    opt    =    getOptions().get(value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  Option  opt  =  getOptions().get(value  -  1);  [CE]  illegal  start  of  expression  [FE]                          AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  opt  =  getOptions().get(value  -  1);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().get(value  -  1);	  Option    opt    =    getOptions().get(value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  Option  opt  =  getOptions().get(key);  [CE]  illegal  start  of  expression  [FE]                            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  opt  =  getOptions().get(key);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().get(key);	  Option    opt    =    getOptions().get(value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
79	[BUG]  [BUGGY]  if(value.length()  ==  0  ||  opt.hasValues()  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.length()  ==  0  ||  opt.hasValues()  ||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.length()  ==  0  ||  opt.hasValues()  ||  value.length()  ==  0)  {	  if(opt.hasValues()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
80	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  String  value  =  properties.getValue(option);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(option);  String  value  =  properties.getValue(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option);  String  value  =  properties.getValue(option);	  Option    option    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
81	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option);  String  value  =  properties.getValueForProcessing(option);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(option);  String  value  =  properties.getValueForProcessing(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option);  String  value  =  properties.getValueForProcessing(option);	  Option    option    =    getOptions().getOption(option);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
82	[BUG]  [BUGGY]  String  value  =  properties.getStringValue(option);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  properties.getStringValue(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.getStringValue(option);	  String    value    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
83	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(opt);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(opt);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(opt);	  Option    cmd    =    getOptions().getOption(value);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  if(value!=  null  &&  option.hasArg()  &&  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  option.hasArg()  &&  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  option.hasArg()  &&  value.length()  ==  0)  {	  if(value!=    null    &&    opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
85	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasArg()  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  opt.hasArg()  ||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasArg()  ||  value.length()  ==  0)  {	  if(value!=    null    &&    opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
86	[BUG]  [BUGGY]  if(value  ==  null  &&  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  &&  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  &&  value.length()  ==  0)  {	  if(value!=    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  String  value  =  options.getValue(option);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  options.getValue(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  options.getValue(option);	  String    value    =    options.getProperty(value);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
88	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  options.getValueForProcessing(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  options.getValueForProcessing(option);	  String    value    =    options.getProperty(value);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
89	[BUG]  [BUGGY]  String  value  =  options.getValue(value);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  options.getValue(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  options.getValue(value);	  String    value    =    options.getProperty(value);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
90	[BUG]  [BUGGY]  if(value!=  null  &&  value.hasValues())  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.hasValues())  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.hasValues())  {	  if(value!=    null    ||    value.hasValues())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
91	[BUG]  [BUGGY]  if(value  ==  null  &&  value.hasValues())  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  &&  value.hasValues())  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  &&  value.hasValues())  {	  if(value!=    null    ||    value.hasValues())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  if(value!=  null  ||  value.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  ||  value.equals( " "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  ||  value.equals( " "))  {	  if(value!=    null    ||    value.hasValues())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
93	[BUG]  [BUGGY]  Option  cmd  =  getOption(value,  option);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOption(value,  option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(value,  option);	  Option    cmd    =    getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
94	[BUG]  [BUGGY]  Option  cmd  =  getOption(opt,  value);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOption(opt,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(opt,  value);	  Option    cmd    =    getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
95	[BUG]  [BUGGY]  Option  cmd  =  getOption(value,  opt);  [CE]  illegal  start  of  expression  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOption(value,  opt);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(value,  opt);	  Option    cmd    =    getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
96	[BUG]  [BUGGY]  Option  cmd  =  getOption(option,  value,  requiredOptions);  [CE]  illegal  start  of  expression  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOption(option,  value,  requiredOptions);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(option,  value,  requiredOptions);	  Option    cmd    =    getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
97	[BUG]  [BUGGY]  if(value!=  null  &&  option.hasArg()  &&  value.equals(value))  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  option.hasArg()  &&  value.equals(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  option.hasArg()  &&  value.equals(value))  {	  if(value!=    null    &&    opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
98	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasArg()  &&  value.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  opt.hasArg()  &&  value.equals( " "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasArg()  &&  value.equals( " "))  {	  if(value!=    null    &&    opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
99	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(opt,  value);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(opt,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(opt,  value);	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
100	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value,  opt);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(value,  opt);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(value,  opt);	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
101	[BUG]  [BUGGY]  if(value!=  null  &&  opt.getValues().length  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  opt.getValues().length  >  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.getValues().length  >  0)  {	  if(value!=    null    &&    opt.hasValue())    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
102	[BUG]  [BUGGY]  if(value!=  null  &&  opt.getValues().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  opt.getValues().length  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.getValues().length  ==  0)  {	  if(value!=    null    &&    opt.hasValue())    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
103	[BUG]  [BUGGY]  String  value  =  cmd.getValue(value);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  cmd.getValue(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  cmd.getValue(value);	  String    value    =    cmd.getValue(option);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
104	[BUG]  [BUGGY]  if(opt.hasValueForProcessing(value)||  opt.hasValueForProcessing(value))  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.hasValueForProcessing(value)||  opt.hasValueForProcessing(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasValueForProcessing(value)||  opt.hasValueForProcessing(value))  {	  if(opt.hasProperty(value)||    opt.hasValueForProcessing(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
105	[BUG]  [BUGGY]  if(opt.hasProperty(value)||  opt.getValues().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.hasProperty(value)||  opt.getValues().length  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasProperty(value)||  opt.getValues().length  ==  0)  {	  if(opt.hasProperty(value)||    opt.hasValueForProcessing(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
106	[BUG]  [BUGGY]  if(value  ==  null  ||  value.hasValues())  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.hasValues())  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.hasValues())  {	  if(value!=    null    ||    value.hasValues())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
107	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(value,  option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(value,  option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(value,  option);	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
108	[BUG]  [BUGGY]  Option  option  =  opt.getProperty(option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  opt.getProperty(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  opt.getProperty(option);	  Option    option    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
109	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.length()  ==  0  ||  opt.hasArg()  ||  value.length()  ==  0)  {	  if(value.length()    ==    0    ||    opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
110	[BUG]  [BUGGY]  String  value  =  properties.get(value);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  properties.get(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.get(value);	  String    value    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
111	[BUG]  [BUGGY]  String  value  =  properties.getValueForProcessing(option);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  properties.getValueForProcessing(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.getValueForProcessing(option);	  String    value    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
112	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(option);  String  value  =  properties.getProperty(option);	  Option    opt    =    getOptions().getOption(cmd);    String    value    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
113	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals(opt.getArg()))  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.equals(opt.getArg()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.equals(opt.getArg()))  {	  if(value.equals(opt.getArg()))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
114	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals(opt))  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.equals(opt))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.equals(opt))  {	  if(opt.hasArg()    ||    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
115	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals(opt.getValue()))  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.equals(opt.getValue()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.equals(opt.getValue()))  {	  if(opt.getValues()    ==    null    ||    opt.hasValue())    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
116	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasValueForProcessing(value))  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  opt.hasValueForProcessing(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasValueForProcessing(value))  {	  if(value!=    null    &&    opt.hasProperty(value))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
117	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option)+  0;  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(option)+  0;  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option)+  0;	  Option    option    =    getOptions().getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
118	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(opt.getName()))  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.equals(opt.getName()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(opt.getName()))  {	  if(value!=    null    &&    value.equals(opt.getArg()))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
119	[BUG]  [BUGGY]  Option  cmd  =  getOption(value,  options);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOption(value,  options);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(value,  options);	  Option    cmd    =    getOption(value);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
120	[BUG]  [BUGGY]  Option  cmd  =  getOptions().get(value,  value);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().get(value,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().get(value,  value);	  Option    cmd    =    getOptions().get(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
121	[BUG]  [BUGGY]  Option  cmd  =  getOptions().get(value,  options);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().get(value,  options);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().get(value,  options);	  Option    cmd    =    getOptions().get(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
122	[BUG]  [BUGGY]  String  value  =  properties.getValue(value);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  properties.getValue(value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  properties.getValue(value);	  String    value    =    properties.getValue(option);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
123	[BUG]  [BUGGY]  if(!opt.hasValue()  &&  value.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(!opt.hasValue()  &&  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(!opt.hasValue()  &&  value.length()  ==  0)  {	  if(!opt.hasValue())    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
124	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.equals( "prototype "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.equals( "prototype "))  {	  if(opt.hasProperty(value)||    value.equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
125	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(value,  value);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(value,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(value,  value);	  Option    cmd    =    getOptions().getOption(value);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
126	[BUG]  [BUGGY]  if(opt!=  null  &&  opt.hasArg()  &&  value.equals(value))  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt!=  null  &&  opt.hasArg()  &&  value.equals(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt!=  null  &&  opt.hasArg()  &&  value.equals(value))  {	  if(value!=    null    &&    opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
127	[BUG]  [BUGGY]  Option  option  =  getOptions(option);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions(option);	  Option    option    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
128	[BUG]  [BUGGY]  String  value  =  options.getProperty(option);  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  String  value  =  options.getProperty(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	String  value  =  options.getProperty(option);	  String    value    =    options.getProperty(value);    	non-compiled	[CE]  	55	None	replace
129	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(key);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(key);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(key);	  Option    option    =    getOptions().getOption(cmd);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
130	[BUG]  [BUGGY]  if(value.equals(opt.getKey())&&  value.equals(opt.getValue()))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getKey())&&  value.equals(opt.getValue()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getKey())&&  value.equals(opt.getValue()))  {	  if(value.equals(opt.hasArg())&&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
131	[BUG]  [BUGGY]  if(value.equals(opt.getValue())&&  value.equals(opt.getValue()))  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getValue())&&  value.equals(opt.getValue()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getValue())&&  value.equals(opt.getValue()))  {	  if(value.equals(opt.hasArg())&&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
132	[BUG]  [BUGGY]  if(value  ==  null  &&  value.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  &&  value.length()  >  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  &&  value.length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
133	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(value,  value);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  opt  =  getOptions().getOption(value,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(value,  value);	  Option    opt    =    getOptions().getOption(value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
134	[BUG]  [BUGGY]  if(opt.hasProperty(value)&&  opt.hasValueForProcessing(value))  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.hasProperty(value)&&  opt.hasValueForProcessing(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasProperty(value)&&  opt.hasValueForProcessing(value))  {	  if(opt.hasProperty(value)||    opt.hasValueForProcessing(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
135	[BUG]  [BUGGY]  if(opt.hasValues()  ||  opt.hasValueForProcessing(value))  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.hasValues()  ||  opt.hasValueForProcessing(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasValues()  ||  opt.hasValueForProcessing(value))  {	  if(opt.hasProperty(value)||    opt.hasValueForProcessing(value))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
136	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasArg()  &&  value.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  opt.hasArg()  &&  value.length()  >  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasArg()  &&  value.length()  >  0)  {	  if(value!=    null    &&    opt.hasArg()    &&    value.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
137	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.equals( " "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals( " "))  {	  if(value!=    null    &&    value.equals(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
138	[BUG]  [BUGGY]  if(value  ==  null  &&  value.equals(value))  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  &&  value.equals(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  &&  value.equals(value))  {	  if(value!=    null    &&    value.equals(opt))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
139	[BUG]  [BUGGY]  if(value!=  null  &&!cmd.hasOption(value))  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&!cmd.hasOption(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&!cmd.hasOption(value))  {	  if(!cmd.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
140	[BUG]  [BUGGY]  if(!cmd.hasValue(value))  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(!cmd.hasValue(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(!cmd.hasValue(value))  {	  if(!cmd.hasOption(option))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
141	[BUG]  [BUGGY]  Option  opt  =  getOptions().get(value,  value);  [CE]  illegal  start  of  expression  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  opt  =  getOptions().get(value,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().get(value,  value);	  Option    opt    =    getOptions().get(value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
142	[BUG]  [BUGGY]  if(opt.hasValueForProcessing(value)||  opt.getValues().length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.hasValueForProcessing(value)||  opt.getValues().length  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasValueForProcessing(value)||  opt.getValues().length  ==  0)  {	  if(opt.hasValueForProcessing(value))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
143	[BUG]  [BUGGY]  Option  option  =  getOptions().getOptionValue(option);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOptionValue(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOptionValue(option);	  Option    option    =    getOptions().getOption(cmd);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
144	[BUG]  [BUGGY]  if(value!=  null  &&  value.trim().length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.trim().length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.trim().length()  ==  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
145	[BUG]  [BUGGY]  if(value!=  null  &&  value.trim().length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.trim().length()  >  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.trim().length()  >  0)  {	  if(value!=    null    &&    value.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
146	[BUG]  [BUGGY]  Option  cmd  =  getOption(cmd);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOption(cmd);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOption(cmd);	  Option    cmd    =    getOption(value);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
147	[BUG]  [BUGGY]  if(opt.getValues()!=  null  &&  opt.hasValue())  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.getValues()!=  null  &&  opt.hasValue())  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.getValues()!=  null  &&  opt.hasValue())  {	  if(opt.getValues()    ==    null    ||    opt.hasValue())    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
148	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(option.getKey()))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.equals(option.getKey()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(option.getKey()))  {	  if(value!=    null    &&    value.equals(opt.getKey()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
149	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals(opt.getKey()))  {  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.equals(opt.getKey()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.equals(opt.getKey()))  {	  if(value!=    null    &&    value.equals(opt.getKey()))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
150	[BUG]  [BUGGY]  if(value  ==  null  ||  value.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.equals( " "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.equals( " "))  {	  if(opt.getValues()    ==    null    ||    opt.getValues().length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
151	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasValue()  &&  value.equals(value))  {  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  opt.hasValue()  &&  value.equals(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasValue()  &&  value.equals(value))  {	  if(value!=    null    &&    opt.hasArg()    &&    value.equals(value))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
152	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(opt.getText()))  {  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.equals(opt.getText()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(opt.getText()))  {	  if(value!=    null    &&    value.equals(opt.getArg()))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
153	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(option.getArg()))  {  [CE]  illegal  start  of  expression  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.equals(option.getArg()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(option.getArg()))  {	  if(value!=    null    &&    value.equals(opt.getArg()))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
154	[BUG]  [BUGGY]  if(value!=  null  &&!opt.hasValue())  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&!opt.hasValue())  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&!opt.hasValue())  {	  if(!opt.hasValue())    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
155	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  properties);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  properties);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option,  value,  properties);	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
156	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  values);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(option,  value,  values);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option,  value,  values);	  Option    option    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
157	[BUG]  [BUGGY]  if(value  ==  null  ||  value.trim().length()  ==  0)  {  [CE]  not  a  statement  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value  ==  null  ||  value.trim().length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value  ==  null  ||  value.trim().length()  ==  0)  {	  if(value    ==    null)    {    	non-compiled	[CE]  not  a  statement	36	None	replace
158	[BUG]  [BUGGY]  if(opt.hasProperty(value)&&  value.length()  ==  0)  {  [CE]  not  a  statement  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.hasProperty(value)&&  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasProperty(value)&&  value.length()  ==  0)  {	  if(opt.hasProperty(value)||    value.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	38	None	replace
159	[BUG]  [BUGGY]  if(opt.getValues()!=  null  &&  opt.hasValues())  {  [CE]  not  a  statement  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.getValues()!=  null  &&  opt.hasValues())  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.getValues()!=  null  &&  opt.hasValues())  {	  if(opt.getValues()    ==    null    ||    opt.hasValues())    {    	non-compiled	[CE]  not  a  statement	39	None	replace
160	[BUG]  [BUGGY]  if(value.equals(opt.getKey())&&  value.equals(option.getValue()))  {  [CE]  not  a  statement  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value.equals(opt.getKey())&&  value.equals(option.getValue()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value.equals(opt.getKey())&&  value.equals(option.getValue()))  {	  if(value.equals(opt.hasArg())&&    value.equals(value))    {    	non-compiled	[CE]  not  a  statement	22	None	replace
161	[BUG]  [BUGGY]  Option  option  =  getOptions().get(option);  [CE]  not  a  statement  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().get(option);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().get(option);	  Option    option    =    getOption(option);    	non-compiled	[CE]  not  a  statement	60	None	replace
162	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  properties);  [CE]  not  a  statement  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  properties);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(option,  value,  properties);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  not  a  statement	49	None	replace
163	[BUG]  [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  cmd);  [CE]  not  a  statement  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getOptions().getOption(option,  value,  cmd);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getOptions().getOption(option,  value,  cmd);	  Option    cmd    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  not  a  statement	49	None	replace
164	[BUG]  [BUGGY]  if(opt.hasValue(value)||  opt.hasValueForProcessing(value))  {  [CE]  not  a  statement  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.hasValue(value)||  opt.hasValueForProcessing(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasValue(value)||  opt.hasValueForProcessing(value))  {	  if(opt.hasProperty(value)||    opt.hasValueForProcessing(value))    {    	non-compiled	[CE]  not  a  statement	61	None	replace
165	[BUG]  [BUGGY]  if(value!=  null  &&  value.equals(option.getValue()))  {  [CE]  not  a  statement  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.equals(option.getValue()))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.equals(option.getValue()))  {	  if(value!=    null    &&    value.equals(opt.getValue()))    {    	non-compiled	[CE]  not  a  statement	23	None	replace
166	[BUG]  [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  properties);  [CE]  not  a  statement  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  opt  =  getOptions().getOption(option,  value,  properties);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  opt  =  getOptions().getOption(option,  value,  properties);	  Option    opt    =    getOptions().getOption(option,    value);    	non-compiled	[CE]  not  a  statement	17	None	replace
167	[BUG]  [BUGGY]  if(value!=  null  &&  option.hasProperty(value))  {  [CE]  not  a  statement  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  option.hasProperty(value))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  option.hasProperty(value))  {	  if(value!=    null    &&    opt.hasProperty(value))    {    	non-compiled	[CE]  not  a  statement	53	None	replace
168	[BUG]  [BUGGY]  if(value!=  null  &&  opt.hasProperty(value)||  value.equals( "prototype   "))  {  [CE]  not  a  statement  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  opt.hasProperty(value)||  value.equals( "prototype   "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  opt.hasProperty(value)||  value.equals( "prototype   "))  {	  if(opt.hasProperty(value)||    value.equals(   "prototype   "))    {    	non-compiled	[CE]  not  a  statement	37	None	replace
169	[BUG]  [BUGGY]  if(opt.hasProperty(value)&&  value.equals( "prototype   "))  {  [CE]  not  a  statement  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(opt.hasProperty(value)&&  value.equals( "prototype   "))  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(opt.hasProperty(value)&&  value.equals( "prototype   "))  {	  if(opt.hasProperty(value)||    value.equals(   "prototype   "))    {    	non-compiled	[CE]  not  a  statement	37	None	replace
170	[BUG]  [BUGGY]  Option  cmd  =  getCmd(option,  value);  [CE]  not  a  statement  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  cmd  =  getCmd(option,  value);  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  cmd  =  getCmd(option,  value);	  Option    cmd    =    getCmd(option);    	non-compiled	[CE]  not  a  statement	43	None	replace
171	[BUG]  [BUGGY]  Option  option  =  getOptions().getOption(option)+  value;  [CE]  not  a  statement  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  Option  option  =  getOptions().getOption(option)+  value;  [BUGGY]      if  (opt.hasArg())    {  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	Option  option  =  getOptions().getOption(option)+  value;	  Option    option    =    getOptions().getOption(option)+    1;    	non-compiled	[CE]  not  a  statement	62	None	replace
172	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  ==  0  ||  opt.hasArg()  &&  value.length()  ==  0)  {  [CE]  not  a  statement  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  getOptions().getOption(option);    String  value  =  properties.getProperty(option);      [BUGGY]  if(value!=  null  &&  value.length()  ==  0  ||  opt.hasArg()  &&  value.length()  ==  0)  {  [BUGGY]      {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  try  {  opt.addValueForProcessing(value);  }  catch  (RuntimeException  exp)  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.5353033790313108	272	273	9	replace	if(value!=  null  &&  value.length()  ==  0  ||  opt.hasArg()  &&  value.length()  ==  0)  {	  if(value.length()    ==    0    ||    opt.hasArg()    ||    value.length()    ==    0)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
