bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  eatTheRest));  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  eatTheRest));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  eatTheRest));	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  	non-compiled	[CE]  illegal  start  of  type	75	None	replace
2	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null));  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null));	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  	non-compiled	[CE]  illegal  start  of  type	75	None	replace
3	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  false));  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  false));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  false));	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  	non-compiled	[CE]  illegal  start  of  type	75	None	replace
4	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  stopAtNonOption));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	List  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  stopAtNonOption));	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  	non-compiled	[CE]  illegal  start  of  type	75	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]    [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	  	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  	non-compiled	[CE]  illegal  start  of  type	75	None	replace
6	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]    OptionGroup  group  =  options.getOptionGroup();  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	    OptionGroup  group  =  options.getOptionGroup();		non-compiled	[CE]  illegal  start  of  type	76	None	add
7	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(opt);  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	    OptionGroup  group  =  options.getOptionGroup(opt);		non-compiled	[CE]  illegal  start  of  type	76	None	add
8	[BUG]  [BUGGY]    Option  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]    Option  group  =  options.getOptionGroup();  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	    Option  group  =  options.getOptionGroup();		non-compiled	[CE]  illegal  start  of  type	76	None	add
9	[BUG]  [BUGGY]    Option  group  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]    Option  group  =  options.getOptions();  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	    Option  group  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	76	None	add
10	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	    OptionGroup  group  =  options.getOptionGroup(options);		non-compiled	[CE]  illegal  start  of  type	76	None	add
11	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  stopAtNonOption));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	List  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  stopAtNonOption));	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  	non-compiled	[CE]  illegal  start  of  type	75	None	replace
12	[BUG]  [BUGGY]    Option  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]    Option  group  =  options.getOptionGroup(opt);  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	    Option  group  =  options.getOptionGroup(opt);		non-compiled	[CE]  illegal  start  of  type	76	None	add
13	[BUG]  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	List  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));	List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  	non-compiled	[CE]  illegal  start  of  type	75	None	replace
14	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(cmd);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(cmd);  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	    OptionGroup  group  =  options.getOptionGroup(cmd);		non-compiled	[CE]  illegal  start  of  type	76	None	add
15	[BUG]  [BUGGY]    OptionGroup  group  =  option.getOptionGroup();  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  [BUGGY]    OptionGroup  group  =  option.getOptionGroup();  [BUGGY]  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	172	172	9	replace	    OptionGroup  group  =  option.getOptionGroup();		non-compiled	[CE]  illegal  start  of  type	76	None	add
