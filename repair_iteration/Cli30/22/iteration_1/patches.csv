bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getKey();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getKey();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.nextElement().getKey();	      Enumeration    <    String>    expectedOpts    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getValue()  +  1;  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.nextElement().getValue()  +  1;	      Enumeration    <    String>    expectedOpts    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  String  option  =  e.getKey().toLowerCase();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getKey().toLowerCase();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.getKey().toLowerCase();	  String    option    =    e.getKey().toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  String  option  =  e.getKey().trim();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getKey().trim();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.getKey().trim();	  String    option    =    e.getKey().toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getElements();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getElements();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().getElements();	      Enumeration    <    String>    cmd    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().iterator().next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().iterator().next();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.getElements().iterator().next();	      Enumeration    <    String>    cmd    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.nextElement().getOptions();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.nextElement().getOptions();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.nextElement().getOptions();	      Enumeration    <    String>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.getOptions()  ||  e.hasMoreElements();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.getOptions()  ||  e.hasMoreElements();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.getOptions()  ||  e.hasMoreElements();	      Enumeration    <    String>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.getOpts();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.getOpts();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.getOpts();	      Enumeration    <    String>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ": ";  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + ": ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextElement().toString()  + ": ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ", ";  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + ", ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextElement().toString()  + ", ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + "/ ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + "/ ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextElement().toString()  + "/ ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ";n ";  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + ";n ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextElement().toString()  + ";n ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getCmd();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement().getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.nextElement().getCmd();	      Enumeration    <    String>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getCmd().toString();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getCmd().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.getCmd().toString();	      Enumeration    <    String>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.nextElement();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.nextElement();	      Enumeration    <    String>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getAttributes();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getAttributes();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.nextElement().getAttributes();	      Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(null);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(null);  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getAttributes(null);	      Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(properties);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(properties);  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getAttributes(properties);	      Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  String  option  =  e.nextToken().toLowerCase();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextToken().toLowerCase();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextToken().toLowerCase();	  String    option    =    e.nextToken().toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  String  option  =  e.getCurrentToken().toString();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getCurrentToken().toString();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.getCurrentToken().toString();	  String    option    =    e.nextToken().toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  String  option  =  e.getSourceName().toString();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getSourceName().toString();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.getSourceName().toString();	  String    option    =    e.nextToken().toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement().getCmd();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  cmd  =  e.nextElement().getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  cmd  =  e.nextElement().getCmd();	      Enumeration    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  cmd  =  e.nextElement();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  cmd  =  e.nextElement();	      Enumeration    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextToken().toString();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextToken().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.nextToken().toString();	      Enumeration    <    String>    expectedOpts    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getElements().toString();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getElements().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getElements().toString();	      Enumeration    <    String>    expectedOpts    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getCurrentElement().toString();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getCurrentElement().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getCurrentElement().toString();	      Enumeration    <    String>    expectedOpts    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.nextElement().toString();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.nextElement().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.nextElement().toString();	      Enumeration    <    String>    options    =    e.nextElement();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.getElements();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.getElements();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.getElements();	      Enumeration    <    String>    options    =    e.nextElement();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
30	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.getCurrentElement();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.getCurrentElement();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.getCurrentElement();	      Enumeration    <    String>    options    =    e.nextElement();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
31	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  e.nextElement().getCmd();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <?>  cmd  =  e.nextElement().getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <?>  cmd  =  e.nextElement().getCmd();	      Enumeration    <?>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  e.nextElement();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <?>  cmd  =  e.nextElement();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <?>  cmd  =  e.nextElement();	      Enumeration    <?>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
33	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  e.next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <?>  cmd  =  e.next();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <?>  cmd  =  e.next();	      Enumeration    <?>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
34	[BUG]  [BUGGY]  String  option  =  e.nextElement().getValue()  +  1;  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().getValue()  +  1;  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextElement().getValue()  +  1;	  String    option    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  String  option  =  e.nextToken().getValue();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextToken().getValue();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextToken().getValue();	  String    option    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  String  option  =  e.nextElement().getKey();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().getKey();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextElement().getKey();	  String    option    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  String  option  =  e.getValue().toLowerCase();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getValue().toLowerCase();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.getValue().toLowerCase();	  String    option    =    e.getValue().toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  String  option  =  e.getValue().toString()  + "n ";  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getValue().toString()  + "n ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.getValue().toString()  + "n ";	  String    option    =    e.getValue().toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getElements();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().getElements();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.nextElement().getElements();	      Enumeration    <    String>    expectedOpts    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getElements().iterator().next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getElements().iterator().next();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getElements().iterator().next();	      Enumeration    <    String>    expectedOpts    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getCurrentElement();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getCurrentElement();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getCurrentElement();	      Enumeration    <    String>    expectedOpts    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  Enumeration  <  Object>  options  =  e.nextElement().getOptions();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  Object>  options  =  e.nextElement().getOptions();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  Object>  options  =  e.nextElement().getOptions();	      Enumeration    <    Object>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  Enumeration  <  Object>  options  =  e.getOpts();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  Object>  options  =  e.getOpts();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  Object>  options  =  e.getOpts();	      Enumeration    <    Object>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  Enumeration  <  Object>  options  =  e.getOptions()  ||  e.hasMoreElements();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  Object>  options  =  e.getOptions()  ||  e.hasMoreElements();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  Object>  options  =  e.getOptions()  ||  e.hasMoreElements();	      Enumeration    <    Object>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  Enumeration  cmd  =  e.nextElement().getEnumeration();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  cmd  =  e.nextElement().getEnumeration();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  cmd  =  e.nextElement().getEnumeration();	      Enumeration    cmd    =    e.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  Enumeration  c  =  e.getEnumeration();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  c  =  e.getEnumeration();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  c  =  e.getEnumeration();	      Enumeration    cmd    =    e.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  String  option  =  e.nextToken().toString()  + "n ";  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextToken().toString()  + "n ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextToken().toString()  + "n ";	  String    option    =    e.nextToken().toString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  String  option  =  e.getValue().substring(0,  e.getValue().length());  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getValue().substring(0,  e.getValue().length());  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.getValue().substring(0,  e.getValue().length());	  String    option    =    e.getValue().toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.propertyNames();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.propertyNames();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.propertyNames();	      Enumeration    <    String>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
50	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getElements().values();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getElements().values();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getElements().values();	      Enumeration    <    String>    expectedOpts    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  e.getArgumentElements();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <?>  cmd  =  e.getArgumentElements();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <?>  cmd  =  e.getArgumentElements();	      Enumeration    <?>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  Enumeration  cmd  =  e.getArgumentElements();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  cmd  =  e.getArgumentElements();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  cmd  =  e.getArgumentElements();	      Enumeration    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.currentElement();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.currentElement();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.currentElement();	      Enumeration    <    String>    options    =    e.nextElement();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + ",  current ";  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + ",  current ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextElement().toString()  + ",  current ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().valueToString();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().valueToString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.nextElement().valueToString();	      Enumeration    <    String>    expectedOpts    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().toString()  +  1;  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.nextElement().toString()  +  1;  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.nextElement().toString()  +  1;	      Enumeration    <    String>    expectedOpts    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
57	[BUG]  [BUGGY]  Enumeration  <  Object>  options  =  e.values();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  Object>  options  =  e.values();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  Object>  options  =  e.values();	      Enumeration    <    Object>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
58	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements().iterator();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.getElements().iterator();	      Enumeration    <    String>    cmd    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  String  option  =  e.getKey().toString()  + ": "+e.getValue();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.getKey().toString()  + ": "+e.getValue();  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.getKey().toString()  + ": "+e.getValue();	  String    option    =    e.getKey().toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(currentToken);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(currentToken);  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getAttributes(currentToken);	      Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getArguments();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getArguments();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getArguments();	      Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getEnumeration();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getEnumeration();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.getEnumeration();	      Enumeration    <    String>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
63	[BUG]  [BUGGY]  Enumeration  cd  =  e.getCmd();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  cd  =  e.getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  cd  =  e.getCmd();	      Enumeration    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
64	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.properties.getOptions();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.properties.getOptions();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.properties.getOptions();	      Enumeration    <    String>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  Enumeration  <  String>  options  =  e.getOptions()  [0];  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  options  =  e.getOptions()  [0];  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  options  =  e.getOptions()  [0];	      Enumeration    <    String>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getCmd().intValue();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getCmd().intValue();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.getCmd().intValue();	      Enumeration    <    String>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
67	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getCmd().enumerator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getCmd().enumerator();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.getCmd().enumerator();	      Enumeration    <    String>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  Enumeration  <?>  cmd  =  e.parent().getCmd();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <?>  cmd  =  e.parent().getCmd();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <?>  cmd  =  e.parent().getCmd();	      Enumeration    <?>    cmd    =    e.getCmd();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.currentElement().getValue();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.currentElement().getValue();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.currentElement().getValue();	      Enumeration    <    String>    expectedOpts    =    e.nextElement().getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
70	[BUG]  [BUGGY]  Enumeration  cd  =  e.getEnumeration();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  cd  =  e.getEnumeration();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  cd  =  e.getEnumeration();	      Enumeration    cmd    =    e.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
71	[BUG]  [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0];  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  cmd  =  e.getElements()  [0];  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  cmd  =  e.getElements()  [0];	      Enumeration    <    String>    cmd    =    e.getElements();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  Enumeration  <  Object>  options  =  e.properties.getOptions();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  Object>  options  =  e.properties.getOptions();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  Object>  options  =  e.properties.getOptions();	      Enumeration    <    Object>    options    =    e.getOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
73	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.currentElement().toString();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.currentElement().toString();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.currentElement().toString();	      Enumeration    <    String>    expectedOpts    =    e.nextElement().toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
74	[BUG]  [BUGGY]  String  option  =  e.nextElement().toString()  + "_ ";  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  String  option  =  e.nextElement().toString()  + "_ ";  [BUGGY]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	String  option  =  e.nextElement().toString()  + "_ ";	  String    option    =    e.nextElement().toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
75	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes().iterator().next();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes().iterator().next();  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getAttributes().iterator().next();	      Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
76	[BUG]  [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(e.nextToken());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    {  if  (properties  ==  null)  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {    [BUGGY]  Enumeration  <  String>  expectedOpts  =  e.getAttributes(e.nextToken());  [BUGGY]    String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);    String  value  =  properties.getProperty(option);  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2519763153394848	148	148	9	replace	Enumeration  <  String>  expectedOpts  =  e.getAttributes(e.nextToken());	      Enumeration    <    String>    expectedOpts    =    e.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
