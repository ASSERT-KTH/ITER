bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  it  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  it  =  options.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  it  =  options.iterator();	  Iterator    it    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  Iterator  it  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  it  =  requiredOptions.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  it  =  requiredOptions.iterator();	  Iterator    it    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  Iterator  it  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  it  =  arguments.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  it  =  arguments.iterator();	  Iterator    it    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  Arrays.sort(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(arguments,  stopAtNonOption);	  Arrays.sort(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  Arrays.sort(options,  tokenList,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(options,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(options,  tokenList,  stopAtNonOption);	  Arrays.sort(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  stopAtNonOption,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(tokenList,  stopAtNonOption,  arguments);	  OptionGroup    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
7	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  arguments);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(tokenList,  arguments);	  OptionGroup    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
8	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(tokenList,  arguments,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
9	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(arguments,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
10	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(stopAtNonOption,  tokenList);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(stopAtNonOption,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(stopAtNonOption,  tokenList);	  Option    group    =    options.getOptionGroup(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
11	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(arguments,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
12	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(tokenList,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(tokenList,  stopAtNonOption,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(tokenList,  stopAtNonOption,  arguments);	  Option    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
13	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(tokenList,  arguments);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(tokenList,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(tokenList,  arguments);	  Option    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
14	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(tokenList,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(tokenList,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(tokenList,  arguments,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
15	[BUG]  [BUGGY]  Option  group  =  options.getGroup(tokenList);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getGroup(tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getGroup(tokenList);	  Option    group    =    options.getOptionGroup(arguments);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
16	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  <  String>  iterator  =  options.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  <  String>  iterator  =  options.iterator();	  Iterator    <    String>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
17	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.tokenList.iterator();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  <  String>  iterator  =  this.tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  <  String>  iterator  =  this.tokenList.iterator();	  Iterator    <    String>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  Arrays.asList(tokenList.iterator());  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  <  String>  iterator  =  Arrays.asList(tokenList.iterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  <  String>  iterator  =  Arrays.asList(tokenList.iterator());	  Iterator    <    String>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  Arrays.sort(arguments,  tokenList);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(arguments,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(arguments,  tokenList);	  Arrays.sort(tokenList,    arguments);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  Arrays.sort(tokenList,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  arguments,  stopAtNonOption);	  Arrays.sort(tokenList,    arguments);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  Arrays.sort(parameters,  tokenList);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(parameters,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(parameters,  tokenList);	  Arrays.sort(tokenList,    arguments);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  Arrays.sort(parameterList,  tokenList);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(parameterList,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(parameterList,  tokenList);	  Arrays.sort(tokenList,    arguments);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getGroups();  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getGroups();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
24	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups(tokenList);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroups(tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroups(tokenList);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
25	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments));  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments));	  List    <    String>    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  stopAtNonOption));	  List    <    String>    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(t,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(t,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
28	[BUG]  [BUGGY]  Option  group  =  options.getGroup(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getGroup(t,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getGroup(t,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
29	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(t,  tokenList);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(t,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(t,  tokenList);	  Option    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
30	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(stopAtNonOption,  tokenList);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(stopAtNonOption,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(stopAtNonOption,  tokenList);	  OptionGroup    group    =    options.getOptionGroup(stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
31	[BUG]  [BUGGY]  iterator.remove();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  iterator.remove();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	iterator.remove();	  iterator.next();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  this.tokenList.listIterator()  :  tokenList;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  this.tokenList.listIterator()  :  tokenList;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList!=  null)?  this.tokenList.listIterator()  :  tokenList;	  ListIterator    iterator    =(this.tokenList!=    null)?    this.tokenList.listIterator()    :    tokenList;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
33	[BUG]  [BUGGY]  ListIterator  iterator  =(this.tokenList  ==  null)?  this.tokenList.listIterator()  :  tokenList;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.tokenList  ==  null)?  this.tokenList.listIterator()  :  tokenList;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(this.tokenList  ==  null)?  this.tokenList.listIterator()  :  tokenList;	  ListIterator    iterator    =(this.tokenList!=    null)?    this.tokenList.listIterator()    :    tokenList;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
34	[BUG]  [BUGGY]  ListIterator  iterator  =(this.tokenList!=  null)?  tokenList.listIterator()  :  this.tokenList;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.tokenList!=  null)?  tokenList.listIterator()  :  this.tokenList;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(this.tokenList!=  null)?  tokenList.listIterator()  :  this.tokenList;	  ListIterator    iterator    =(this.tokenList!=    null)?    this.tokenList.listIterator()    :    tokenList;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
35	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  false),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  false),  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  false),  stopAtNonOption);	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
36	[BUG]  [BUGGY]  Option  group  =  options.getGroup(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getGroup(),  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getGroup(),  stopAtNonOption);	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
37	[BUG]  [BUGGY]  Option  group  =  options.getGroup(),  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getGroup(),  stopAtNonOption;  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getGroup(),  stopAtNonOption;	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
38	[BUG]  [BUGGY]  Arrays.sort(tokenList,  argumentList);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  argumentList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  argumentList);	  Arrays.sort(tokenList,    tokenList);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
39	[BUG]  [BUGGY]  Arrays.sort(tokenList,  exceptionList);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  exceptionList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  exceptionList);	  Arrays.sort(tokenList,    tokenList);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
40	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  tokenList);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  tokenList);	  OptionGroup    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
41	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  stopAtNonOption,  tokenList);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  stopAtNonOption,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  stopAtNonOption,  tokenList);	  OptionGroup    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
42	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  tokenList);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  tokenList);	  OptionGroup    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
43	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(totalList);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(totalList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(totalList);	  OptionGroup    group    =    options.getOptionGroup(arguments);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
44	[BUG]  [BUGGY]  ListIterator  iterator  =  tokenList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  tokenList.keySet().iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  tokenList.keySet().iterator();	  ListIterator    iterator    =    tokenList.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
45	[BUG]  [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  options.values().iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  options.values().iterator();	  ListIterator    iterator    =    tokenList.values().iterator();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
46	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
47	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(opts,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(opts,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
48	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  stopAtNonOption,  tokenList);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(options,  stopAtNonOption,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(options,  stopAtNonOption,  tokenList);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
49	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  arguments);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(options,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(options,  arguments);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
50	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(tokenList);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getGroup(tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getGroup(tokenList);	  OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getGroup(),  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getGroup(),  stopAtNonOption);	  OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  stopAtNonOption,  tokenList);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  stopAtNonOption,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(),  stopAtNonOption,  tokenList);	  OptionGroup    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(),  arguments,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
54	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  arguments);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(),  arguments);	  OptionGroup    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  blockAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(),  blockAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  iterator  =  options.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	iterator  =  options.iterator();	  iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
57	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  this.tokenList.listIterator()  :  null;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  this.tokenList.listIterator()  :  null;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList!=  null)?  this.tokenList.listIterator()  :  null;	  ListIterator    iterator    =(this.tokenList!=    null)?    tokenList.listIterator()    :    null;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
58	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  tokenList.listIterator()  :  null;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  tokenList.listIterator()  :  null;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList!=  null)?  tokenList.listIterator()  :  null;	  ListIterator    iterator    =(this.tokenList!=    null)?    tokenList.listIterator()    :    null;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
59	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList  ==  null)?  this.tokenList.listIterator()  :  null;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList  ==  null)?  this.tokenList.listIterator()  :  null;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList  ==  null)?  this.tokenList.listIterator()  :  null;	  ListIterator    iterator    =(this.tokenList!=    null)?    tokenList.listIterator()    :    null;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
60	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList!=  null?  this.tokenList.iterator()  :  tokenList.listIterator());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList!=  null?  this.tokenList.iterator()  :  tokenList.listIterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList!=  null?  this.tokenList.iterator()  :  tokenList.listIterator());	  ListIterator    iterator    =(this.tokenList!=    null?    this.tokenList.iterator()    :    tokenList.listIterator());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
61	[BUG]  [BUGGY]  ListIterator  iterator  =(this.tokenList  ==  null?  this.tokenList.iterator()  :  tokenList.listIterator());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.tokenList  ==  null?  this.tokenList.iterator()  :  tokenList.listIterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(this.tokenList  ==  null?  this.tokenList.iterator()  :  tokenList.listIterator());	  ListIterator    iterator    =(this.tokenList!=    null?    this.tokenList.iterator()    :    tokenList.listIterator());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
62	[BUG]  [BUGGY]  ListIterator  iterator  =(this.tokenList!=  null?  tokenList.iterator()  :  tokenList.listIterator());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.tokenList!=  null?  tokenList.iterator()  :  tokenList.listIterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(this.tokenList!=  null?  tokenList.iterator()  :  tokenList.listIterator());	  ListIterator    iterator    =(this.tokenList!=    null?    this.tokenList.iterator()    :    tokenList.listIterator());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
63	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments),  stopAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments),  stopAtNonOption,  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments),  stopAtNonOption,  options);	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
64	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  true));  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  true));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  true));	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    false));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  OptionGroup  group  =  tokenList.getOptionGroup(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  tokenList.getOptionGroup(options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  tokenList.getOptionGroup(options,  stopAtNonOption);	  OptionGroup    group    =    tokenList.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
66	[BUG]  [BUGGY]  Option  group  =  tokenList.getOptionGroup(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  tokenList.getOptionGroup(options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  tokenList.getOptionGroup(options,  stopAtNonOption);	  Option    group    =    tokenList.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
67	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(arguments);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  options.listIterator(arguments);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  options.listIterator(arguments);	  ListIterator    iterator    =    options.listIterator(tokenList);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator(options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  tokenList.listIterator(options);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  tokenList.listIterator(options);	  ListIterator    iterator    =    options.listIterator(tokenList);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
69	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(tokenList,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  options.listIterator(tokenList,  stopAtNonOption);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  options.listIterator(tokenList,  stopAtNonOption);	  ListIterator    iterator    =    options.listIterator(tokenList);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
70	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  tokenList);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(options,  tokenList);	  Option    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
71	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  argument,  null));  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  argument,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  argument,  null));	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    argument,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
72	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt,  stopAtNonOption,  tokenList);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(opt,  stopAtNonOption,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(opt,  stopAtNonOption,  tokenList);	  Option    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
73	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt,  arguments);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(opt,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(opt,  arguments);	  Option    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
74	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null));  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null));	  ArrayList    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
75	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));	  ArrayList    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
76	[BUG]  [BUGGY]  ListIterator  iterator  =  options.iterator().listIterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  options.iterator().listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  options.iterator().listIterator();	  ListIterator    iterator    =    tokenList.iterator().listIterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
77	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  arguments,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
78	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opts,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(opts,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
79	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  stopAtNonOption,  tokenList);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  stopAtNonOption,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  stopAtNonOption,  tokenList);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
80	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  <  Option>  iterator  =  options.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  <  Option>  iterator  =  options.iterator();	  Iterator    <    Option>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
81	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  this.tokenList.iterator();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  <  Option>  iterator  =  this.tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  <  Option>  iterator  =  this.tokenList.iterator();	  Iterator    <    Option>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
82	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  Arrays.asList(tokenList.iterator());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  <  Option>  iterator  =  Arrays.asList(tokenList.iterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  <  Option>  iterator  =  Arrays.asList(tokenList.iterator());	  Iterator    <    Option>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
83	[BUG]  [BUGGY]  Arrays.sort(tokenList,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  options,  stopAtNonOption);	  Arrays.sort(tokenList,    options);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]  Arrays.sort(options,  tokenList);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(options,  tokenList);	  Arrays.sort(tokenList,    options);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
85	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  arguments;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  arguments;  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  arguments;	  Option    group    =    options.getOptionGroup(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
86	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  tokenList;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  tokenList;  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  tokenList;	  Option    group    =    options.getOptionGroup(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
87	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  null));  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  null));	  List    <    String>    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
88	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));	  List    <    String>    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
89	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption),  options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption),  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption),  options);	  List    <    String>    tokenList    =    Arrays.asList(flatten(options,    getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
90	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  options),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  options),  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  options),  stopAtNonOption);	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    options));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
91	[BUG]  [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments,  null));  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.asList(flatten(getOptions(),  arguments,  null));	  Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
92	[BUG]  [BUGGY]  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.asList(flatten(options,  getOptions(),  arguments,  stopAtNonOption));	  Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
93	[BUG]  [BUGGY]  Arrays.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.asList(flatten(opts,  getOptions(),  arguments,  stopAtNonOption));	  Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
94	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(t,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
95	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t,  tokenList);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(t,  tokenList);	  OptionGroup    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
96	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(str);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(str);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(str);	  OptionGroup    group    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
97	[BUG]  [BUGGY]  Iterator  iterator  =  options.listIterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  options.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  iterator  =  options.listIterator();	  Iterator    iterator    =    tokenList.listIterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
98	[BUG]  [BUGGY]  Iterator  iterator  =  this.tokenList.listIterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.tokenList.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  iterator  =  this.tokenList.listIterator();	  Iterator    iterator    =    tokenList.listIterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
99	[BUG]  [BUGGY]  ListIterator  iterator  =  Arrays.asList(tokenList.iterator(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  Arrays.asList(tokenList.iterator(),  stopAtNonOption);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  Arrays.asList(tokenList.iterator(),  stopAtNonOption);	  ListIterator    iterator    =    Arrays.asList(tokenList.iterator());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
100	[BUG]  [BUGGY]  ListIterator  iterator  =  Arrays.asList(arguments.iterator());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  Arrays.asList(arguments.iterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  Arrays.asList(arguments.iterator());	  ListIterator    iterator    =    Arrays.asList(tokenList.iterator());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
101	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  options.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  iterator  =  options.iterator();	  Iterator    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
102	[BUG]  [BUGGY]  Iterator  iterator  =  this.tokenList.iterator();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  iterator  =  this.tokenList.iterator();	  Iterator    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
103	[BUG]  [BUGGY]  Iterator  iterator  =  arguments.iterator();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  arguments.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  iterator  =  arguments.iterator();	  Iterator    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
104	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  stopAtNonOption,  tokenList);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  stopAtNonOption,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  stopAtNonOption,  tokenList);	  Option    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
105	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  arguments,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
106	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  arguments);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  arguments);	  Option    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
107	[BUG]  [BUGGY]  Arrays.sort(parameterList);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(parameterList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(parameterList);	  Arrays.sort(arguments);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
108	[BUG]  [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  options.keySet().iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  iterator  =  options.keySet().iterator();	  Iterator    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
109	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList  ==  null)?  tokenList.listIterator()  :  null;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList  ==  null)?  tokenList.listIterator()  :  null;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList  ==  null)?  tokenList.listIterator()  :  null;	  ListIterator    iterator    =(this.tokenList!=    null)?    tokenList.listIterator()    :    null;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
110	[BUG]  [BUGGY]  ListIterator  iterator  =(this.tokenList  ==  null)?  tokenList.listIterator()  :  null;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.tokenList  ==  null)?  tokenList.listIterator()  :  null;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(this.tokenList  ==  null)?  tokenList.listIterator()  :  null;	  ListIterator    iterator    =(this.tokenList!=    null)?    tokenList.listIterator()    :    null;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
111	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  tokenList);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  tokenList);	  Option    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
112	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  blockAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  blockAtNonOption);	  Option    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
113	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  tokenList);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(),  tokenList);	  OptionGroup    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
114	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  options.listIterator(options);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  options.listIterator(options);	  ListIterator    iterator    =    options.listIterator(tokenList);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
115	[BUG]  [BUGGY]  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption));	  Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
116	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  this.stopAtNonOption;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  this.stopAtNonOption;  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  this.stopAtNonOption;	  Option    group    =    options.getOptionGroup(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
117	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt,  tokenList);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(opt,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(opt,  tokenList);	  Option    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
118	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  arguments);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(options,  arguments);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
119	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(getArguments(),  arguments,  stopAtNonOption));	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    argument,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
120	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  options,  stopAtNonOption));	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    options,    eatTheRest));    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
121	[BUG]  [BUGGY]  ListIterator  iterator  =  options.asList(tokenList.iterator());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  options.asList(tokenList.iterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  options.asList(tokenList.iterator());	  ListIterator    iterator    =    Arrays.asList(tokenList.iterator());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
122	[BUG]  [BUGGY]  ListIterator  iterator  =  Arrays.asList(tokenList,  tokenList.iterator());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  Arrays.asList(tokenList,  tokenList.iterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  Arrays.asList(tokenList,  tokenList.iterator());	  ListIterator    iterator    =    Arrays.asList(tokenList.iterator());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
123	[BUG]  [BUGGY]  ListIterator  iterator  =  tokens.iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  tokens.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  tokens.iterator();	  ListIterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
124	[BUG]  [BUGGY]  Iterator  iterator  =  tokenList.keySet().listIterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  tokenList.keySet().listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  iterator  =  tokenList.keySet().listIterator();	  Iterator    iterator    =    tokenList.listIterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
125	[BUG]  [BUGGY]  Option  group  =  optionList.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  optionList.getOptionGroup(options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  optionList.getOptionGroup(options);	  Option    group    =    tokenList.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
126	[BUG]  [BUGGY]  ListIterator  iterator  =  optionList.keySet().iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  optionList.keySet().iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  optionList.keySet().iterator();	  ListIterator    iterator    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
127	[BUG]  [BUGGY]  Arrays.sort(tokenList,  opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  opt);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  opt);	  Arrays.sort(tokenList,    tokenList);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
128	[BUG]  [BUGGY]  Arrays.sort(tokenList,  exception);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  exception);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  exception);	  Arrays.sort(tokenList,    tokenList);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
129	[BUG]  [BUGGY]  Arrays.sort(arguments,  options);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(arguments,  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(arguments,  options);	  Arrays.sort(tokenList,    options);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
130	[BUG]  [BUGGY]  OptionGroup  group  =  optionList.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  optionList.getOptionGroup(options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  optionList.getOptionGroup(options);	  OptionGroup    group    =    tokenList.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
131	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null),  stopAtNonOption,  opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null),  stopAtNonOption,  opt);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null),  stopAtNonOption,  opt);	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
132	[BUG]  [BUGGY]  Iterator  it  =  this.tokenList.iterator();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  it  =  this.tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  it  =  this.tokenList.iterator();	  Iterator    it    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
133	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  this.tokenList.iterator()  :  tokenList.iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  this.tokenList.iterator()  :  tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList!=  null)?  this.tokenList.iterator()  :  tokenList.iterator();	  ListIterator    iterator    =    this.tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
134	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  tokenList.iterator()  :  this.tokenList.iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList!=  null)?  tokenList.iterator()  :  this.tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList!=  null)?  tokenList.iterator()  :  this.tokenList.iterator();	  ListIterator    iterator    =    this.tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
135	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  arguments);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  arguments);	  OptionGroup    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
136	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  stopAtNonOption,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  stopAtNonOption,  eatTheRest);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(tokenList,  stopAtNonOption,  eatTheRest);	  OptionGroup    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
137	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList  ==  null)?  this.tokenList.listIterator()  :  tokenList;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList  ==  null)?  this.tokenList.listIterator()  :  tokenList;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList  ==  null)?  this.tokenList.listIterator()  :  tokenList;	  ListIterator    iterator    =(this.tokenList!=    null)?    this.tokenList.listIterator()    :    tokenList;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
138	[BUG]  [BUGGY]  Iterator  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  requiredOptions.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  iterator  =  requiredOptions.iterator();	  Iterator    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
139	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  argument);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  argument);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  argument);	  Option    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
140	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null)-  1,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null)-  1,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  null)-  1,  stopAtNonOption);	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    null),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
141	[BUG]  [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  <  Option>  iterator  =  requiredOptions.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  <  Option>  iterator  =  requiredOptions.iterator();	  Iterator    <    Option>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
142	[BUG]  [BUGGY]  Option  group  =  options.getOption(tokenList);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOption(tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOption(tokenList);	  Option    group    =    options.getOptionGroup(arguments);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
143	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(tokenList,  argument);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(tokenList,  argument);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(tokenList,  argument);	  Option    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
144	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  argument);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(),  argument);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(),  argument);	  OptionGroup    group    =    options.getOptionGroup(),    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
145	[BUG]  [BUGGY]  Iterator  iterator  =  requiredOptions.listIterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  iterator  =  requiredOptions.listIterator();	  Iterator    iterator    =    tokenList.listIterator();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
146	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  argument);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(tokenList,  argument);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(tokenList,  argument);	  OptionGroup    group    =    options.getOptionGroup(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
147	[BUG]  [BUGGY]  ListIterator  iterator  =  tokenList.iterator().next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  tokenList.iterator().next();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  tokenList.iterator().next();	  ListIterator    iterator    =    tokenList.iterator().listIterator();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
148	[BUG]  [BUGGY]  Option  group  =  options.getGroups();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getGroups();  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getGroups();	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
149	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(),  argument;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(),  argument;  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(),  argument;	  Option    group    =    options.getOptionGroup(),    stopAtNonOption;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
150	[BUG]  [BUGGY]  Arrays.sort(tokenList,  preferredOptions);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  preferredOptions);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  preferredOptions);	  Arrays.sort(tokenList,    tokenList);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
151	[BUG]  [BUGGY]  Arrays.sort(tokenList,  tokenList,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  tokenList,  stopAtNonOption);	  Arrays.sort(tokenList,    tokenList);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
152	[BUG]  [BUGGY]  ListIterator  iterator  =  Arrays.asList(options.iterator());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  Arrays.asList(options.iterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  Arrays.asList(options.iterator());	  ListIterator    iterator    =    Arrays.asList(tokenList.iterator());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
153	[BUG]  [BUGGY]  ListIterator  iterator  =  Arrays.asList(getOptions().iterator());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  Arrays.asList(getOptions().iterator());  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  Arrays.asList(getOptions().iterator());	  ListIterator    iterator    =    Arrays.asList(tokenList.iterator());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
154	[BUG]  [BUGGY]  OptionGroup  group  =  options.group();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.group();  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.group();	  OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
155	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  arguments,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
156	[BUG]  [BUGGY]  ListIterator  iterator  =(options!=  null)?  options.iterator()  :  tokenList.iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(options!=  null)?  options.iterator()  :  tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(options!=  null)?  options.iterator()  :  tokenList.iterator();	  ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
157	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  this.options.iterator();	  ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
158	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  false));  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  false));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  false));	  ArrayList    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
159	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  opts,  eatTheRest));  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  opts,  eatTheRest));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(getOptions(),  opts,  eatTheRest));	  List    <    String>    tokenList    =    Arrays.asList(flatten(getOptions(),    options,    eatTheRest));    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
160	[BUG]  [BUGGY]  ListIterator  iterator  =(tokenList  ==  null)?  this.tokenList.iterator()  :  tokenList.iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(tokenList  ==  null)?  this.tokenList.iterator()  :  tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =(tokenList  ==  null)?  this.tokenList.iterator()  :  tokenList.iterator();	  ListIterator    iterator    =    this.tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
161	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =(tokenList  ==  null)?  null  :  tokenList.iterator();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Iterator  <  String>  iterator  =(tokenList  ==  null)?  null  :  tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Iterator  <  String>  iterator  =(tokenList  ==  null)?  null  :  tokenList.iterator();	  Iterator    <    String>    iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
162	[BUG]  [BUGGY]  iterator  =  this.tokenList.iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  iterator  =  this.tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	iterator  =  this.tokenList.iterator();	  iterator    =    tokenList.iterator();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
163	[BUG]  [BUGGY]  Arrays.sort(tokenList,  group);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  group);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  group);	  Arrays.sort(tokenList,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
164	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Option  group  =  options.getOptionGroup(opt,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Option  group  =  options.getOptionGroup(opt,  arguments,  stopAtNonOption);	  Option    group    =    options.getOptionGroup(options,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
165	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	ListIterator  iterator  =  this.requiredOptions.iterator();	  ListIterator    iterator    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
166	[BUG]  [BUGGY]  Arrays.sort(tokenList,  arguments,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.sort(tokenList,  arguments,  stopAtNonOption));	  Arrays.sort(tokenList,    arguments);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
167	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  argument);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  argument);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  argument);	  OptionGroup    group    =    options.getOptionGroup(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
168	[BUG]  [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments,  false));  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));      [BUGGY]  Arrays.asList(flatten(getOptions(),  arguments,  false));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.20623947784607638	174	174	9	replace	Arrays.asList(flatten(getOptions(),  arguments,  false));	  Arrays.asList(flatten(getOptions(),    arguments,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
