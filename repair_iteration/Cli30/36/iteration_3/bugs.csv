bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  opt  =  options.getOption(group,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(group,  cmd,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(group,  cmd,  stopAtNonOption);	  Option    opt    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
2	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  group);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(cmd,  group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(cmd,  group);	  Option    opt    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
3	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(cmd,  blockAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(cmd,  blockAtNonOption);	  Option    opt    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
4	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(cmd,  stopAtNonOption,  group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(cmd,  stopAtNonOption,  group);	  Option    opt    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
5	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(group);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.options.get(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.options.get(group);	  Option    option    =(Option)options.get(group);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
6	[BUG]  [BUGGY]  Option  option  =(Option)opts.get(group);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)opts.get(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)opts.get(group);	  Option    option    =(Option)options.get(group);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
7	[BUG]  [BUGGY]  Option  option  =(Option)group.get(cmd);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)group.get(cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)group.get(cmd);	  Option    option    =(Option)opts.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
8	[BUG]  [BUGGY]  Option  option  =(Option)this.opts.get(cmd);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.opts.get(cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.opts.get(cmd);	  Option    option    =(Option)opts.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
9	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)this.group.clone();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =(OptionOption)this.group.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =(OptionOption)this.group.clone();	  OptionOption    option    =(OptionOption)group.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  Option  opt  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(str);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(str);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
11	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(t);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  cmd.getOption(t);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  cmd.getOption(t);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
12	[BUG]  [BUGGY]  Option  opt  =  t.getOption(options);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  t.getOption(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  t.getOption(options);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
13	[BUG]  [BUGGY]  Option  option  =(Option)group.clone();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)group.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)group.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
14	[BUG]  [BUGGY]  Option  option  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)options.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)options.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
15	[BUG]  [BUGGY]  Option  option  =(Option)cmd.clone();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)cmd.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)cmd.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  cmd.setSelected(false);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  cmd.setSelected(false);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)it.next();  cmd.setSelected(false);	  OptionGroup    group    =(OptionGroup)it.next();    cmd.setSelected(null);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
17	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(str);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(str);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  cmd.getOption(str);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  Option  option  =  group.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  group.getOption(str);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  group.getOption(str);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  Option  option  =(Option)group.getOptions().get(cmd);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)group.getOptions().get(cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)group.getOptions().get(cmd);	  Option    option    =(Option)this.options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
20	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.options.get(cmd,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.options.get(cmd,  stopAtNonOption);	  Option    option    =(Option)this.options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
21	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)group.get(0);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =(OptionOption)group.get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =(OptionOption)group.get(0);	  OptionOption    option    =(OptionOption)cmd.get(0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)group.get(1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =(OptionOption)group.get(1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =(OptionOption)group.get(1);	  OptionOption    option    =(OptionOption)cmd.get(0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)cmd.get(1);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =(OptionOption)cmd.get(1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =(OptionOption)cmd.get(1);	  OptionOption    option    =(OptionOption)cmd.get(0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  Option  option  =(Option)group.get(1);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)group.get(1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)group.get(1);	  Option    option    =(Option)cmd.get(0);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
25	[BUG]  [BUGGY]  Option  option  =(Option)cmd.get(1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)cmd.get(1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)cmd.get(1);	  Option    option    =(Option)cmd.get(0);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
26	[BUG]  [BUGGY]  Option  opt  =  group.getOption(t);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  group.getOption(t);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  group.getOption(t);	  Option    opt    =    group.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
27	[BUG]  [BUGGY]  Option  opt  =  group.getOption(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  group.getOption(cmd,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  group.getOption(cmd,  stopAtNonOption);	  Option    opt    =    group.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
28	[BUG]  [BUGGY]  Option  opt  =  group.getOption(options);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  group.getOption(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  group.getOption(options);	  Option    opt    =    group.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
29	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(group);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  cmd.getOption(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  cmd.getOption(group);	  Option    opt    =    group.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
30	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(options,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  cmd.getOption(options,  stopAtNonOption);	  Option    option    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
31	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(options,  group);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(options,  group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  cmd.getOption(options,  group);	  Option    option    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
32	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(opts);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(opts);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  cmd.getOption(opts);	  Option    option    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
33	[BUG]  [BUGGY]  Option  option  =(Option)opts.clone();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)opts.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)opts.clone();	  Option    option    =(OptionOption)options.clone();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(opts);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(opts);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(opts);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
35	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  cmd.setSelected(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  cmd.setSelected(group,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)it.next();  cmd.setSelected(group,  stopAtNonOption);	  OptionGroup    group    =(OptionGroup)it.next();    cmd.setSelected(group);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
36	[BUG]  [BUGGY]  Group  group  =(OptionGroup)it.next();  cmd.setSelected(group);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Group  group  =(OptionGroup)it.next();  cmd.setSelected(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Group  group  =(OptionGroup)it.next();  cmd.setSelected(group);	  OptionGroup    group    =(OptionGroup)it.next();    cmd.setSelected(group);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
37	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.options.get(group);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.options.get(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)this.options.get(group);	  OptionGroup    optionGroup    =(OptionGroup)this.options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
38	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.options.get(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.options.get(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)this.options.get(opt);	  OptionGroup    optionGroup    =(OptionGroup)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
39	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)opts.get(option);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)opts.get(option);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)opts.get(option);	  OptionGroup    optionGroup    =(OptionGroup)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
40	[BUG]  [BUGGY]  Option  option  =(Option)group.getOption(options);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)group.getOption(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)group.getOption(options);	  Option    option    =(Option)cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
41	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)options.getOption(cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)options.getOption(cmd);	  Option    option    =(Option)cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
42	[BUG]  [BUGGY]  Option  option  =(Option)opts.getOption(options);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)opts.getOption(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)opts.getOption(options);	  Option    option    =(Option)cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(group,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(group,  stopAtNonOption);	  Option    option    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(options,  stopAtNonOption);	  Option    option    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
45	[BUG]  [BUGGY]  Option  option  =(Option)opts.getOption();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)opts.getOption();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)opts.getOption();	  Option    option    =(Option)options.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
46	[BUG]  [BUGGY]  Option  option  =(Option)cmd.getOption();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)cmd.getOption();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)cmd.getOption();	  Option    option    =(Option)options.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
47	[BUG]  [BUGGY]  options  =(Option)this.options.get(0);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  options  =(Option)this.options.get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	options  =(Option)this.options.get(0);	  Option    option    =(Option)this.options.get(0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  Option  option  =(Option)this.group.getOption();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.group.getOption();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.group.getOption();	  Option    option    =(Option)group.getOption();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
49	[BUG]  [BUGGY]  Option  option  =(Option)group.getOptions();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)group.getOptions();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)group.getOptions();	  Option    option    =(Option)group.getOption();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
50	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.get(group  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.get(group  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)options.get(group  -  1);	  OptionGroup    optionGroup    =(OptionGroup)options.get(cmd    -    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
51	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)opts.get(cmd  -  1);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)opts.get(cmd  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)opts.get(cmd  -  1);	  OptionGroup    optionGroup    =(OptionGroup)options.get(cmd    -    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
52	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.get(cmd  -  2);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.get(cmd  -  2);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)options.get(cmd  -  2);	  OptionGroup    optionGroup    =(OptionGroup)options.get(cmd    -    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
53	[BUG]  [BUGGY]  Boolean  eatTheRest  =  true;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Boolean  eatTheRest  =  true;  [BUGGY]        if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Boolean  eatTheRest  =  true;	  Boolean    eatTheRest    =    false;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
54	[BUG]  [BUGGY]  Boolean  eattheRest  =  true;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Boolean  eattheRest  =  true;  [BUGGY]        if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Boolean  eattheRest  =  true;	  Boolean    eatTheRest    =    false;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
55	[BUG]  [BUGGY]  Boolean  eatTheRest;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Boolean  eatTheRest;  [BUGGY]        if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Boolean  eatTheRest;	  Boolean    eatTheRest    =    false;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
56	[BUG]  [BUGGY]  Option  opt  =  groups.getOption(group);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  groups.getOption(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  groups.getOption(group);	  Option    opt    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
57	[BUG]  [BUGGY]  Option  option  =(OptionOption)group.clone();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(OptionOption)group.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(OptionOption)group.clone();	  OptionOption    option    =(OptionOption)cmd.clone();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
58	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)opts.get(group);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)opts.get(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)opts.get(group);	  OptionGroup    optionGroup    =(OptionGroup)options.get(group);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  Option  option  =(OptionOption)this.options.get(0);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(OptionOption)this.options.get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(OptionOption)this.options.get(0);	  Option    option    =(OptionOption)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
60	[BUG]  [BUGGY]  Option  option  =(Option)opts.get(1);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)opts.get(1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)opts.get(1);	  Option    option    =(Option)options.get(1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
61	[BUG]  [BUGGY]  Group  group  =(OptionGroup)it.next();  cmd.addArg(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Group  group  =(OptionGroup)it.next();  cmd.addArg(group,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Group  group  =(OptionGroup)it.next();  cmd.addArg(group,  stopAtNonOption);	  Group    group    =(OptionGroup)it.next();    cmd.addArg(group);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
62	[BUG]  [BUGGY]  Group  group  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Group  group  =(OptionGroup)it.next();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Group  group  =(OptionGroup)it.next();	  Group    group    =(OptionGroup)it.next();    cmd.addArg(group);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
63	[BUG]  [BUGGY]  Option  option  =  options.getOption(group,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(group,  cmd,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(group,  cmd,  stopAtNonOption);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  group);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(cmd,  group);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption,  group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(cmd,  stopAtNonOption,  group);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  boolean  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  boolean  stopAtNonOption;  [BUGGY]        if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	boolean  stopAtNonOption;	  boolean    eatTheRest;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
67	[BUG]  [BUGGY]  final  boolean  eatTheRest;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  final  boolean  eatTheRest;  [BUGGY]        if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	final  boolean  eatTheRest;	  boolean    eatTheRest;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
68	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)group.getOptions();  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)group.getOptions();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)group.getOptions();	  OptionGroup    optionGroup    =(OptionGroup)cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
69	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.options.getOptions();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)this.options.getOptions();	  OptionGroup    optionGroup    =(OptionGroup)cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
70	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.getOptions();  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.getOptions();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)options.getOptions();	  OptionGroup    optionGroup    =(OptionGroup)cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
71	[BUG]  [BUGGY]  OptionOption  option  =  cmd.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  cmd.getOption(str);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  cmd.getOption(str);	  OptionOption    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
72	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)cmd.getOptions().get(0);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =(OptionOption)cmd.getOptions().get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =(OptionOption)cmd.getOptions().get(0);	  OptionOption    option    =(OptionOption)this.options.get(0);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(t,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(t,  cmd,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(t,  cmd,  stopAtNonOption);	  OptionOption    option    =    options.getOption(t,    cmd);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
74	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(t,  group);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(t,  group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(t,  group);	  OptionOption    option    =    options.getOption(t,    cmd);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
75	[BUG]  [BUGGY]  OptionOption  option  =  t.getOption(options,  cmd);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  t.getOption(options,  cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  t.getOption(options,  cmd);	  OptionOption    option    =    options.getOption(t,    cmd);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
76	[BUG]  [BUGGY]  final  boolean  eattheRest;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  final  boolean  eattheRest;  [BUGGY]        if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	final  boolean  eattheRest;	  boolean    eattheRest;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
77	[BUG]  [BUGGY]  Option  option  =  group.getOption(options);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  group.getOption(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  group.getOption(options);	  Option    option    =    t.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
78	[BUG]  [BUGGY]  Option  option  =  t.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  t.getOption(cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  t.getOption(cmd);	  Option    option    =    t.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
79	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)cmd.getValue();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)cmd.getValue();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)cmd.getValue();	  OptionGroup    group    =(OptionGroup)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
80	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValue();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValue();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)options.getValue();	  OptionGroup    group    =(OptionGroup)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
81	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(t,  str,  cmd);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(t,  str,  cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(t,  str,  cmd);	  OptionOption    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
82	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(t,  str,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(t,  str,  stopAtNonOption);	  OptionOption    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
83	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(t,  str,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(t,  str,  eatTheRest);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(t,  str,  eatTheRest);	  OptionOption    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
84	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)it.next();	  optionGroup    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
85	[BUG]  [BUGGY]  Option  group  =(OptionGroup)it.next();  cmd.addArg(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  group  =(OptionGroup)it.next();  cmd.addArg(group,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  group  =(OptionGroup)it.next();  cmd.addArg(group,  stopAtNonOption);	  OptionGroup    group    =(OptionGroup)it.next();    cmd.addArg(group,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
86	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(group);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  cmd.getOption(group);	  Option    option    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
87	[BUG]  [BUGGY]  Option  option  =  groups.getOption(group);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  groups.getOption(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  groups.getOption(group);	  Option    option    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
88	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(t,  cmd,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(t,  cmd,  stopAtNonOption);	  Option    option    =    options.getOption(t,    cmd);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  group);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(t,  group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(t,  group);	  Option    option    =    options.getOption(t,    cmd);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
90	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(t,  options);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(t,  options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  cmd.getOption(t,  options);	  Option    option    =    options.getOption(t,    cmd);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
91	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)cmd.getAttributes();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)cmd.getAttributes();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)cmd.getAttributes();	  OptionGroup    group    =(OptionGroup)it.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
92	[BUG]  [BUGGY]  Option  option  =  opt.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  opt.getOption(cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  opt.getOption(cmd);	  Option    option    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
93	[BUG]  [BUGGY]  Option  option  =  group.getOption(option);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  group.getOption(option);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  group.getOption(option);	  Option    option    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
94	[BUG]  [BUGGY]  Option  option  =  group.getOption(opt);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  group.getOption(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  group.getOption(opt);	  Option    option    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
95	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(option);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  cmd.getOption(option);	  Option    option    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
96	[BUG]  [BUGGY]  Option  option  =(Option)opts.get(option);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)opts.get(option);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)opts.get(option);	  Option    option    =(Option)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
97	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(opt);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.options.get(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.options.get(opt);	  Option    option    =(Option)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
98	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)this.opts.clone();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =(OptionOption)this.opts.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =(OptionOption)this.opts.clone();	  OptionOption    option    =(OptionOption)opts.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
99	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(opt,  cmd,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(opt,  cmd,  stopAtNonOption);	  Option    option    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
100	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  group);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(opt,  group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(opt,  group);	  Option    option    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
101	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  null);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(opt,  null);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(opt,  null);	  Option    option    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
102	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(opt,  options);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(opt,  options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  cmd.getOption(opt,  options);	  Option    option    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
103	[BUG]  [BUGGY]  Boolean  eattheRest;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Boolean  eattheRest;  [BUGGY]        if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Boolean  eattheRest;	  Boolean    eattheRest    =    false;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
104	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(group);	  OptionOption    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
105	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(cmd,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(cmd,  stopAtNonOption);	  OptionOption    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
106	[BUG]  [BUGGY]  OptionOption  option  =  cmd.getOption(options);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  cmd.getOption(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  cmd.getOption(options);	  OptionOption    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
107	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(opt);	  OptionOption    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
108	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  cmd.getOption(options,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  cmd.getOption(options,  stopAtNonOption);	  Option    opt    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
109	[BUG]  [BUGGY]  Option  option  =(Option)this.opts.get(0);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.opts.get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.opts.get(0);	  Option    option    =(Option)opts.get(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
110	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(t,  str,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(t,  str,  stopAtNonOption);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
111	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  cmd);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(t,  str,  cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(t,  str,  cmd);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
112	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(t,  str,  eatTheRest);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(t,  str,  eatTheRest);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
113	[BUG]  [BUGGY]  Option  option  =(Option)this.group.get(0);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.group.get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.group.get(0);	  Option    option    =(Option)group.get(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
114	[BUG]  [BUGGY]  Option  option  =(Option)group.getObject();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)group.getObject();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)group.getObject();	  Option    option    =(Option)group.get(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
115	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)this.opts.get(0);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =(OptionOption)this.opts.get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =(OptionOption)this.opts.get(0);	  OptionOption    option    =(OptionOption)opts.get(0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
116	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(t,  stopAtNonOption);	  Option    option    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
117	[BUG]  [BUGGY]  Option  option  =(OptionOption)opt.clone();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(OptionOption)opt.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(OptionOption)opt.clone();	  OptionOption    option    =(OptionOption)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
118	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  eatTheRest);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(cmd,  eatTheRest);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(cmd,  eatTheRest);	  Option    opt    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
119	[BUG]  [BUGGY]  Option  opt  =  options.getOption(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(group,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(group,  stopAtNonOption);	  Option    opt    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
120	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(cmd,  stopAtNonOption,  arguments);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(cmd,  stopAtNonOption,  arguments);	  Option    opt    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
121	[BUG]  [BUGGY]  Option  option  =(Option)options.get(opt  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)options.get(opt  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)options.get(opt  -  1);	  Option    option    =(Option)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
122	[BUG]  [BUGGY]  Option  option  =(Option)options.get(opt,  cmd);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)options.get(opt,  cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)options.get(opt,  cmd);	  Option    option    =(Option)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
123	[BUG]  [BUGGY]  Option  option  =(OptionOption)opts.clone();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(OptionOption)opts.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(OptionOption)opts.clone();	  Option    option    =(OptionOption)options.clone();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
124	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(2);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.options.get(2);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.options.get(2);	  Option    option    =(Option)this.options.get(1);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
125	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(options);	  OptionOption    option    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
126	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)opt.getOptions();  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)opt.getOptions();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)opt.getOptions();	  OptionGroup    optionGroup    =(OptionGroup)cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
127	[BUG]  [BUGGY]  Group  group  =(OptionGroup)it.next();  cmd.addArg(group,  t);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Group  group  =(OptionGroup)it.next();  cmd.addArg(group,  t);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Group  group  =(OptionGroup)it.next();  cmd.addArg(group,  t);	  Group    group    =(OptionGroup)it.next();    cmd.addArg(group);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
128	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  eatTheRest);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(cmd,  eatTheRest);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
129	[BUG]  [BUGGY]  Option  option  =(OptionOption)opts.get(0);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(OptionOption)opts.get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(OptionOption)opts.get(0);	  OptionOption    option    =(OptionOption)opts.get(0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
130	[BUG]  [BUGGY]  Option  option  =(OptionOption)cmd.get(0);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(OptionOption)cmd.get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(OptionOption)cmd.get(0);	  OptionOption    option    =(OptionOption)cmd.get(0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
131	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  str);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  str);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(cmd,  str);	  Option    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
132	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)options.getOption(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)options.getOption(opt);	  Option    option    =(Option)options.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
133	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(null);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  cmd.getOption(null);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  cmd.getOption(null);	  Option    opt    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
134	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.get(opt  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.get(opt  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)options.get(opt  -  1);	  OptionGroup    optionGroup    =(OptionGroup)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
135	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  cmd.getOption(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  cmd.getOption(opt);	  Option    option    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
136	[BUG]  [BUGGY]  Option  option  =(Option)group.getOption(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)group.getOption(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)group.getOption(opt);	  Option    option    =(Option)group.get(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
137	[BUG]  [BUGGY]  Group  group  =(OptionGroup)it.next();  cmd.addChangeListener(this,  options);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Group  group  =(OptionGroup)it.next();  cmd.addChangeListener(this,  options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Group  group  =(OptionGroup)it.next();  cmd.addChangeListener(this,  options);	  Group    group    =(OptionGroup)it.next();    cmd.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
138	[BUG]  [BUGGY]  Option  option  =  options.getOption(true);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(true);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(true);	  Option    option    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
139	[BUG]  [BUGGY]  Option  option  =(Option)opt.getOption(options);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)opt.getOption(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)opt.getOption(options);	  Option    option    =(Option)cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
140	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  cmd);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(t,  cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(t,  cmd);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
141	[BUG]  [BUGGY]  Option  opt  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(t,  str);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(t,  str);	  Option    opt    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
142	[BUG]  [BUGGY]  Option  option  =  opt.getOption(options);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  opt.getOption(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  opt.getOption(options);	  Option    option    =    t.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
143	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(opt);	  Option    opt    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
144	[BUG]  [BUGGY]  Option  opt  =  options.getOption(true);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  opt  =  options.getOption(true);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  opt  =  options.getOption(true);	  Option    opt    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
145	[BUG]  [BUGGY]  Option  group  =(OptionGroup)it.getValue();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  group  =(OptionGroup)it.getValue();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  group  =(OptionGroup)it.getValue();	  Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
146	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  group  =(OptionGroup)options.next();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  group  =(OptionGroup)options.next();	  Option    group    =(OptionGroup)it.next();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
147	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getAttributes();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)options.getAttributes();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)options.getAttributes();	  OptionGroup    group    =(OptionGroup)it.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
148	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getAttributes();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getAttributes();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)opt.getAttributes();	  OptionGroup    group    =(OptionGroup)it.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
149	[BUG]  [BUGGY]  Option  option  =(Option)this.opts.get(1);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.opts.get(1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.opts.get(1);	  Option    option    =(Option)opts.get(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
150	[BUG]  [BUGGY]  Option  option  =(Option)block.clone();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)block.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)block.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
151	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(cmd,  opt);	  Option    option    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
152	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  t);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(opt,  t);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(opt,  t);	  Option    option    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
153	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  t);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  t);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(cmd,  t);	  Option    option    =    options.getOption(t,    cmd);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
154	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  cmd);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(str,  cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(str,  cmd);	  Option    option    =    options.getOption(t,    cmd);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
155	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  cmd.addArg(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  cmd.addArg(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  cmd.addArg(opt);	  if(it.hasNext())    {    OptionGroup    group    =(OptionGroup)it.next();    cmd.addArg(group);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
156	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Iterator  <  Option>  it  =  options.iterator();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Iterator  <  Option>  it  =  options.iterator();	  if(it.hasNext())    {    OptionGroup    group    =(OptionGroup)it.next();    cmd.addArg(group);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
157	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  cmd.setSelected(options);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  cmd.setSelected(options);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)it.next();  cmd.setSelected(options);	  OptionGroup    group    =(OptionGroup)it.next();    cmd.setSelected(null);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
158	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(cmd,  t);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(cmd,  t);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(cmd,  t);	  OptionOption    option    =    options.getOption(t,    cmd);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
159	[BUG]  [BUGGY]  boolean  eatTheRest  ==  false;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  boolean  eatTheRest  ==  false;  [BUGGY]        if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	boolean  eatTheRest  ==  false;	  boolean    eatTheRest;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
160	[BUG]  [BUGGY]  OptionOption  option  =  options.getOption(cmd,  str);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  options.getOption(cmd,  str);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  options.getOption(cmd,  str);	  OptionOption    option    =    options.getOption(t,    str);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
161	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)block.clone();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =(OptionOption)block.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =(OptionOption)block.clone();	  OptionOption    option    =(OptionOption)group.clone();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
162	[BUG]  [BUGGY]  Option  option  =(OptionOption)this.options.get(1);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(OptionOption)this.options.get(1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(OptionOption)this.options.get(1);	  Option    option    =(OptionOption)options.get(0);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
163	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.getAttributes();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.getAttributes();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)this.options.getAttributes();	  OptionGroup    group    =(OptionGroup)it.getAttributes();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
164	[BUG]  [BUGGY]  OptionOption  option  =  opt.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =  opt.getOption(str);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =  opt.getOption(str);	  OptionOption    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
165	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.getKey();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)it.getKey();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)it.getKey();	  OptionGroup    group    =(OptionGroup)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
166	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.getValue();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.getValue();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)this.options.getValue();	  OptionGroup    group    =(OptionGroup)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
167	[BUG]  [BUGGY]  Option  option  =(Option)group.getObject(0);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)group.getObject(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)group.getObject(0);	  Option    option    =(Option)group.get(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
168	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.options.get(cmd  -  1);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.options.get(cmd  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)this.options.get(cmd  -  1);	  OptionGroup    optionGroup    =(OptionGroup)this.options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
169	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.options.getOption();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.options.getOption();	  Option    option    =(Option)options.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
170	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(true);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)options.getOption(true);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)options.getOption(true);	  Option    option    =(Option)options.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
171	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(t);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)options.getOption(t);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)options.getOption(t);	  Option    option    =(Option)options.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
172	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(stopAtNonOption);	  Option    option    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
173	[BUG]  [BUGGY]  Option  option  =  options.getOption(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(true,  stopAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(true,  stopAtNonOption);	  Option    option    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
174	[BUG]  [BUGGY]  Option  option  =(Option)this.opts.get(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.opts.get(opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.opts.get(opt);	  Option    option    =(Option)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
175	[BUG]  [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  boolean  eatTheRest  =  stopAtNonOption;  [BUGGY]        if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	boolean  eatTheRest  =  stopAtNonOption;	  boolean    eatTheRest;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
176	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(cmd  -  1);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)this.options.get(cmd  -  1);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)this.options.get(cmd  -  1);	  Option    option    =(Option)this.options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
177	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.opts.get(cmd);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)this.opts.get(cmd);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)this.opts.get(cmd);	  OptionGroup    optionGroup    =(OptionGroup)opts.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
178	[BUG]  [BUGGY]  Option  option  =(Option)modules.get(0);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(Option)modules.get(0);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(Option)modules.get(0);	  Option    option    =(Option)options.get(1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
179	[BUG]  [BUGGY]  Option  option  =  opt.getOption(t);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  opt.getOption(t);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  opt.getOption(t);	  Option    option    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
180	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(option);	  Option    option    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
181	[BUG]  [BUGGY]  OptionOption  option  =(OptionOption)this.options.get(2);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionOption  option  =(OptionOption)this.options.get(2);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionOption  option  =(OptionOption)this.options.get(2);	  OptionOption    option    =(OptionOption)this.options.get(1);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
182	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  blockAtNonOption);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(cmd,  blockAtNonOption);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
183	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption,  opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  options.getOption(cmd,  stopAtNonOption,  opt);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  options.getOption(cmd,  stopAtNonOption,  opt);	  Option    option    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
184	[BUG]  [BUGGY]  Option  option  =  opt.getOption(str);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =  opt.getOption(str);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =  opt.getOption(str);	  Option    option    =    options.getOption(str);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
185	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.get(cmd  -  1,  group);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)options.get(cmd  -  1,  group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  optionGroup  =(OptionGroup)options.get(cmd  -  1,  group);	  OptionGroup    optionGroup    =(OptionGroup)options.get(cmd    -    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
186	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.get(group);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.get(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)this.options.get(group);	  OptionGroup    optionGroup    =(OptionGroup)options.get(group);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
187	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(group);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(group);  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	OptionGroup  group  =(OptionGroup)options.get(group);	  OptionGroup    optionGroup    =(OptionGroup)options.get(group);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
188	[BUG]  [BUGGY]  Option  option  =(OptionOption)this.options.clone();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();      [BUGGY]  Option  option  =(OptionOption)this.options.clone();  [BUGGY]      boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	165	165	9	replace	Option  option  =(OptionOption)this.options.clone();	  Option    option    =(OptionOption)options.clone();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
