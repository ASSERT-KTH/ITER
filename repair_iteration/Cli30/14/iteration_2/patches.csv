bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  group  =  opt.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =  opt.getOptionGroups();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =  opt.getOptionGroups();	  Option    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
2	[BUG]  [BUGGY]  Option  group  =  options.getGroups();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =  options.getGroups();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =  options.getGroups();	  Option    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
3	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =  options.getOptionGroup(opt);  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =  options.getOptionGroup(opt);	  Option    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
4	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getKey();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getKey();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)opt.getKey();	  OptionGroup    group    =(OptionGroup)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getSelected();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getSelected();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)opt.getSelected();	  OptionGroup    group    =(OptionGroup)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  Option  option  =  opt.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.getOptionGroup(options);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOptionGroup(options);	  Option    option    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(opts);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(opts);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(opts);	  Option    option    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  Option  option  =  opt.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.getOptionGroup(null);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOptionGroup(null);	  Option    option    =    opt.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
9	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getOptionGroup();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getOptionGroup();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)opt.getOptionGroup();	  OptionGroup    group    =(OptionGroup)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt  -  1);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt  -  1);  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)options.get(opt  -  1);	  OptionGroup    group    =(OptionGroup)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
11	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.get(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =(OptionGroup)options.get(opt);  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(OptionGroup)options.get(opt);	  OptionGroup    group    =(OptionGroup)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
12	[BUG]  [BUGGY]  Option[]  options  =  option.clone();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  option.clone();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  option.clone();	  Option[]    options    =    opt.clone();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption();	  Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptions();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptions();	  Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
15	[BUG]  [BUGGY]  Option  option  =  opt.getOption(t);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.getOption(t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOption(t);	  Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =  opt.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =  opt.getOptionGroups();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =  opt.getOptionGroups();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
17	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =  options.getGroups();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =  options.getGroups();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
18	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt);  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =  options.getOptionGroup(opt);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
19	[BUG]  [BUGGY]  Option  group  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =(OptionGroup)it.next();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(OptionGroup)it.next();	  Option    group    =(OptionGroup)opt.next();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.getValue();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =(OptionGroup)opt.getValue();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(OptionGroup)opt.getValue();	  Option    group    =(OptionGroup)opt.next();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  Option[]  options  =  option.cloneOptions();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  option.cloneOptions();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  option.cloneOptions();	  Option[]    options    =    opt.cloneOptions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  Option[]  options  =  opt.cloneAllOptions();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  opt.cloneAllOptions();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  opt.cloneAllOptions();	  Option[]    options    =    opt.cloneOptions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  Option  group  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =(Option)opt.clone();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(Option)opt.clone();	  Option    group    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
24	[BUG]  [BUGGY]  Option  group  =(Option)opt.getKey();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =(Option)opt.getKey();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(Option)opt.getKey();	  Option    group    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
25	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  null,  t);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(opt,  null,  t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(opt,  null,  t);	  Option    option    =    options.getOption(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
26	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(opt,  null,  stopAtNonOption);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(opt,  null,  stopAtNonOption);	  Option    option    =    options.getOption(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
27	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  this);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(opt,  this);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(opt,  this);	  Option    option    =    options.getOption(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
28	[BUG]  [BUGGY]  Option  option  =(Option)options.clone();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.clone();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)options.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)option.clone();	  Option    option    =(Option)opt.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  Option[]  options  =(Option[])opts.toArray(new  Option[options.size()  ]);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])opts.toArray(new  Option[options.size()  ]);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])opts.toArray(new  Option[options.size()  ]);	  Option[]    options    =(Option[])options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
31	[BUG]  [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[options.size()  ]);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[options.size()  ]);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])opt.toArray(new  Option[options.size()  ]);	  Option[]    options    =(Option[])options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
32	[BUG]  [BUGGY]  Option[]  options  =(Option[])options.toArray(new  Option[opt.size()  ]);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])options.toArray(new  Option[opt.size()  ]);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])options.toArray(new  Option[opt.size()  ]);	  Option[]    options    =(Option[])options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
33	[BUG]  [BUGGY]  Option[]  options  =  t.getOptions();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  t.getOptions();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  t.getOptions();	  Option[]    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  -  1]);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  -  1]);	  Option[]    options    =(Option[])opt.toArray(new    Option[opt.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
35	[BUG]  [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  +  1]);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  +  1]);	  Option[]    options    =(Option[])opt.toArray(new    Option[opt.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
36	[BUG]  [BUGGY]  Option  option  =  opt.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.getOptions().iterator();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOptions().iterator();	  Option    option    =    opt.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
37	[BUG]  [BUGGY]  Option  option  =  opt.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.getOptionGroup(t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOptionGroup(t);	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups(t);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroups(t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroups(t);	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(opt,  null,  t);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(opt,  null,  t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(opt,  null,  t);	  Option    option    =    options.getOptionGroup(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(opt,  this);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(opt,  this);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(opt,  this);	  Option    option    =    options.getOptionGroup(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  opt);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  opt);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(t,  opt);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  opt);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(str,  opt);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(str,  opt);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  opt,  t);  [CE]  illegal  start  of  type  [FE]                            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(str,  opt,  t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(str,  opt,  t);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  t);  [CE]  illegal  start  of  type  [FE]                              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(options,  t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(options,  t);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
45	[BUG]  [BUGGY]  Option  option  =  opt.helpOptions();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.helpOptions();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.helpOptions();	  Option    option    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.opts();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.opts();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.opts();	  Option    option    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
47	[BUG]  [BUGGY]  Option  option  =(Option)options.getValue();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.getValue();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)options.getValue();	  Option    option    =(Option)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
48	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.clone();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.clone();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)opt.clone();	  OptionGroup    group    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
49	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getGroup();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)options.getGroup();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)options.getGroup();	  OptionGroup    group    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
50	[BUG]  [BUGGY]  Option  option  =  opt.getOption(options);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.getOption(options);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOption(options);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(opts);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(opts);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(opts);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  options);  [CE]  illegal  start  of  type  [FE]                          AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(opt,  options);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(opt,  options);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)options.get();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)options.get();	  OptionGroup    group    =(OptionGroup)opt.get();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
54	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.get();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =(OptionGroup)opt.get();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(OptionGroup)opt.get();	  OptionGroup    group    =(OptionGroup)opt.get();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
55	[BUG]  [BUGGY]  Option[]  options  =(Option[])opt.next();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])opt.next();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])opt.next();	  Option[]    options    =(Option[])it.next();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
56	[BUG]  [BUGGY]  Option[]  options  =(Option[])options.next();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])options.next();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])options.next();	  Option[]    options    =(Option[])it.next();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
57	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)options.getOption();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)options.getOption();	  Option    option    =(Option)it.getOption();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(t,  opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(t,  opt);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(t,  opt);	  Option    option    =    options.getOptionGroup(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(opt,  it);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(opt,  it);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(opt,  it);	  Option    option    =    options.getOptionGroup(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
60	[BUG]  [BUGGY]  Option  option  =  opt.getOptionOptions().iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.getOptionOptions().iterator();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOptionOptions().iterator();	  Option    option    =    options.getOptionOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getKey();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)options.getKey();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)options.getKey();	  OptionGroup    group    =(OptionGroup)options.getValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.getValue();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =(OptionGroup)options.getValue();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(OptionGroup)options.getValue();	  OptionGroup    group    =(OptionGroup)options.getValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  Option[]  options  =  options.opts();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  options.opts();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  options.opts();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
64	[BUG]  [BUGGY]  Option  option  =  opt.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.helpOptions().iterator();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.helpOptions().iterator();	  Option    option    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOption().iterator();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption().iterator();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption().iterator();	  Option    option    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  str);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(t,  str);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(t,  str);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
67	[BUG]  [BUGGY]  Options  options  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Options  options  =(Option)it.next();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Options  options  =(Option)it.next();	  options    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.addOption(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.addOption(opt);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.addOption(opt);	  Option    option    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
69	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValueList();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValueList();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)options.getValueList();	  OptionGroup    group    =(OptionGroup)options.getValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(options,  t);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(options,  t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(options,  t);	  Option    option    =    options.getOptionGroup(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(opt,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(opt,  null,  stopAtNonOption);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(opt,  null,  stopAtNonOption);	  Option    option    =    options.getOptionGroup(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
72	[BUG]  [BUGGY]  Option[]  options  =  options.helpOptions();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  options.helpOptions();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  options.helpOptions();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroups(opt);  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =  options.getOptionGroups(opt);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroups(opt);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroups(opt);	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
75	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.get();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)it.get();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)it.get();	  OptionGroup    group    =(OptionGroup)opt.get();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
76	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.get(0);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)opt.get(0);  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)opt.get(0);	  OptionGroup    group    =(OptionGroup)opt.get();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
77	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt  +  1);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt  +  1);  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)options.get(opt  +  1);	  OptionGroup    group    =(OptionGroup)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
78	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt,  it.next());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt,  it.next());  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)options.get(opt,  it.next());	  OptionGroup    group    =(OptionGroup)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
79	[BUG]  [BUGGY]  Option[]  options  =(Option[])opts.toArray(new  Option[opts.size()  ]);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])opts.toArray(new  Option[opts.size()  ]);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])opts.toArray(new  Option[opts.size()  ]);	  Option[]    options    =(Option[])opts.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
80	[BUG]  [BUGGY]  Option  option  =  options.getOptionStructures().iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionStructures().iterator();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionStructures().iterator();	  Option    option    =    options.getOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  t);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(str,  t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(str,  t);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
82	[BUG]  [BUGGY]  Option[]  options  =  options.cloneOptions();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  options.cloneOptions();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  options.cloneOptions();	  Option[]    options    =    opt.clone();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
83	[BUG]  [BUGGY]  Option  option  =  options.getOptions(t);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptions(t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptions(t);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
84	[BUG]  [BUGGY]  Option[]  options  =(Option[])options.toArray(new  Option[options.size()  -  1]);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])options.toArray(new  Option[options.size()  -  1]);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])options.toArray(new  Option[options.size()  -  1]);	  Option[]    options    =(Option[])options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
85	[BUG]  [BUGGY]  Option  option  =  opt.getOption(null);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  opt.getOption(null);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOption(null);	  Option    option    =    opt.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
86	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt.getOptions()).iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(opt.getOptions()).iterator();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(opt.getOptions()).iterator();	  Option    option    =    options.helpOptions().iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
87	[BUG]  [BUGGY]  Options  option  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Options  option  =(Option)it.next();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Options  option  =(Option)it.next();	  options    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
88	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =(OptionGroup)options.next();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(OptionGroup)options.next();	  Option    group    =(OptionGroup)opt.next();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
89	[BUG]  [BUGGY]  Option[]  options  =  opt.options();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  opt.options();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  opt.options();	  Option[]    options    =    opt.cloneOptions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.getOptionOptionGroups();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionOptionGroups();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionOptionGroups();	  Option    option    =    opt.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
91	[BUG]  [BUGGY]  Option  option  =  options.getOptionOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionOptionGroups().iterator();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionOptionGroups().iterator();	  Option    option    =    opt.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
92	[BUG]  [BUGGY]  Option  option  =(Option)it.getObject();  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)it.getObject();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)it.getObject();	  Option    option    =(Option)it.getOption();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
93	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.getGroup();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)it.getGroup();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)it.getGroup();	  OptionGroup    group    =(OptionGroup)opt.getGroup();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
94	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(t,  str);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(t,  str);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(t,  str);	  Option    option    =    options.getOptionGroup(t);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
95	[BUG]  [BUGGY]  Option  option  =(Option)it.getKey();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)it.getKey();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)it.getKey();	  Option    option    =(Option)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
96	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.get(opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.get(opt);  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)this.options.get(opt);	  OptionGroup    group    =(OptionGroup)options.get(opt);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
97	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(option);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(option);	  Option    option    =    opt.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
98	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  str,  t);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(options,  str,  t);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(options,  str,  t);	  Option    option    =    options.getOption(opt,    t);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
99	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.getAssignedValue();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  OptionGroup  group  =(OptionGroup)it.getAssignedValue();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)it.getAssignedValue();	  OptionGroup    group    =(OptionGroup)it.getKey();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
100	[BUG]  [BUGGY]  Option  option  =  options.getOption(str);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(str);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(str);	  Option    option    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
101	[BUG]  [BUGGY]  Option  option  =  options.getOptionOption(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionOption(opt);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionOption(opt);	  Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOptionOption();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionOption();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionOption();	  Option    option    =    opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
103	[BUG]  [BUGGY]  Option[]  options  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =  options.getOptionGroups();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  options.getOptionGroups();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
104	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  null,  null);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(opt,  null,  null);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(opt,  null,  null);	  Option    option    =    options.getOption(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
105	[BUG]  [BUGGY]  Option[]  options  =(Option[])it.getValues();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option[]  options  =(Option[])it.getValues();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])it.getValues();	  Option[]    options    =(Option[])it.next();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
106	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(opt,  null,  null);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionGroup(opt,  null,  null);  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(opt,  null,  null);	  Option    option    =    options.getOptionGroup(opt,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
107	[BUG]  [BUGGY]  Option  option  =  options.getOptionOptions();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =  options.getOptionOptions();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionOptions();	  Option    option    =    options.helpOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
108	[BUG]  [BUGGY]  Option  option  =(Option)opt.getKey();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  option  =(Option)opt.getKey();  [BUGGY]      OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)opt.getKey();	  Option    option    =(Option)opt.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
109	[BUG]  [BUGGY]  Option  group  =(Option)it.getValue();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {      [BUGGY]  Option  group  =(Option)it.getValue();  [BUGGY]      group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(Option)it.getValue();	  Option    group    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
