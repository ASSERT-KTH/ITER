bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)opt.getValue();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =(Option)opt.getValue();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)opt.getValue();	      Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)opt.clone();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =(Option)opt.clone();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)opt.clone();	      Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  Option  option  =  opt.getOptionGroups().iterator();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  opt.getOptionGroups().iterator();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOptionGroups().iterator();	      Option    option    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOptionOptions().iterator();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOptionOptions().iterator();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionOptions().iterator();	      Option    option    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOptions().iterator();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptions().iterator();	      Option    option    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  Option[]  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =  options.getOptions();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  options.getOptions();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  Option[]  options  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =  option.getOptions();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  option.getOptions();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  Option[]  options  =  it.getOptions();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =  it.getOptions();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  it.getOptions();	      Option[]    options    =    opt.getOptions();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  Option  option  =  opt.getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  opt.getOptionGroup(option);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOptionGroup(option);	      Option    option    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(opt,  null);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOptionGroup(opt,  null);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(opt,  null);	      Option    option    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOptionGroup(options);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(options);	      Option    option    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  Option[]  options  =(Option[])opts.clone();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =(Option[])opts.clone();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])opts.clone();	      Option[]    options    =(Option[])options.clone();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  Option[]  options  =  opt.cloneOptions();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =  opt.cloneOptions();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  opt.cloneOptions();	      Option[]    options    =(Option[])options.clone();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getValue();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getValue();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)opt.getValue();	  OptionGroup    group    =(OptionGroup)opt.next();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  Option  group  =(OptionGroup)opt.next();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  group  =(OptionGroup)opt.next();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(OptionGroup)opt.next();	  OptionGroup    group    =(OptionGroup)opt.next();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValue();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)options.getValue();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)options.getValue();	  OptionGroup    group    =(OptionGroup)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
17	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt);  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)options.get(opt);	  OptionGroup    group    =(OptionGroup)options.next();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  Option  option  =(Option)option.getOption();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =(Option)option.getOption();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)option.getOption();	      Option    option    =(Option)opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(t);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  t);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOption(opt,  t);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(opt,  t);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  Option[]  options  =(Option[])it.next();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =(Option[])it.next();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])it.next();	      Option[]    options    =(Option[])opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  Option[]  options  =  opt.clone();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =  opt.clone();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =  opt.clone();	      Option[]    options    =(Option[])opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  Option  option  =  opt.getOptionGroups();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  opt.getOptionGroups();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOptionGroups();	      Option    option    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  Option  option  =  opt.getOption();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  opt.getOption();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  opt.getOption();	      Option    option    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  options  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  options  =(Option)it.next();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	options  =(Option)it.next();	      Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  Option  group  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  group  =(Option)it.next();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(Option)it.next();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  Option  group  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  group  =(Option)opt.next();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(Option)opt.next();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  Option  group  =(Option)opt.getValue();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  group  =(Option)opt.getValue();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =(Option)opt.getValue();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)option.next();	      Option    option    =(Option)opt.next();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.helpOptions().iterator();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.helpOptions().iterator();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.helpOptions().iterator();	      Option    option    =    options.getOptionGroups().iterator();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  group  =  options.getOptionGroups();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  group  =  options.getOptionGroups();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  OptionGroup  group  =  options.getOptionGroups();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =  options.getOptionGroups();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  Option  option  =(Option)it.getValue();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =(Option)it.getValue();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)it.getValue();	      Option    option    =(Option)it.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getGroup();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)opt.getGroup();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)opt.getGroup();	  OptionGroup    group    =(OptionGroup)opt.next();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opt.get();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)opt.get();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)opt.get();	  OptionGroup    group    =(OptionGroup)opt.next();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.helpOptions();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.helpOptions();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.helpOptions();	      Option    option    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  ]);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  ]);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])opt.toArray(new  Option[opt.size()  ]);	      Option[]    options    =(Option[])opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(opt,  t);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOptionGroup(opt,  t);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(opt,  t);	      Option    option    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
40	[BUG]  [BUGGY]  Option[]  options  =(Option[])options.toArray(new  Option[options.size()  ]);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =(Option[])options.toArray(new  Option[options.size()  ]);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])options.toArray(new  Option[options.size()  ]);	      Option[]    options    =(Option[])options.clone();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  Option  option  =(Option)it.getOption();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =(Option)it.getOption();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =(Option)it.getOption();	      Option    option    =(Option)opt.getOption();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.getKey();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)it.getKey();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)it.getKey();	  OptionGroup    group    =(OptionGroup)it.getValue();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  null);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOption(opt,  null);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOption(opt,  null);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  Option[]  options  =(Option[])it.clone();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option[]  options  =(Option[])it.clone();  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option[]  options  =(Option[])it.clone();	      Option[]    options    =(Option[])opt.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  Option  option  =  options.getOptionGroup(t);  [BUGGY]    OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	Option  option  =  options.getOptionGroup(t);	      Option    option    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.next();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {    [BUGGY]  OptionGroup  group  =(OptionGroup)iterator.next();  [BUGGY]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	156	156	9	replace	OptionGroup  group  =(OptionGroup)iterator.next();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
