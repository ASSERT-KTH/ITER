bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getValue());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getValue());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getValue());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getValue();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getValue();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.getValue();	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getValue();  group.setSelected(opt.getValue());  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getValue();  group.setSelected(opt.getValue());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.getValue();  group.setSelected(opt.getValue());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getSelected());  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getSelected());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getSelected());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    optionGroup    =(OptionGroup)it.next();    group.setSelected(optionGroup.getSelected());    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getSelected());  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getSelected());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getSelected());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    optionGroup    =(OptionGroup)it.next();    group.setSelected(optionGroup.getSelected());    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  optionGroup  =(OptionGroup)it.next();	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    optionGroup    =(OptionGroup)it.next();    group.setSelected(optionGroup.getSelected());    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  OptionGroup[]  options  =  options.getOptions();  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup[]  options  =  options.getOptions();  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup[]  options  =  options.getOptions();  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  OptionGroup[]  options  =  options.getOptions();  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(options);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup[]  options  =  options.getOptions();  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(options);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup[]  options  =  options.getOptions();  for(Iterator  it  =  options.iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(options);  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)option.next();  group.setSelected(option.cloneTree());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)option.next();  group.setSelected(option.cloneTree());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)option.next();  group.setSelected(option.cloneTree());  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =(Option)options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =(Option)options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.get(0);  group.setSelected(opt.clone());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.get(0);  group.setSelected(opt.clone());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.get(0);  group.setSelected(opt.clone());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(option.clone());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(option.clone());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(option.clone());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
19	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.get(0);  group.setSelected(null);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.get(0);  group.setSelected(null);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.get(0);  group.setSelected(null);	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)option.next();  group.setSelected(option);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)option.next();  group.setSelected(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)option.next();  group.setSelected(option);  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  group.setSelected(option);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  group.setSelected(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)opt.next();  group.setSelected(option);  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.get(0);  group.setSelected(opt.cloneTree());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.get(0);  group.setSelected(opt.cloneTree());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.get(0);  group.setSelected(opt.cloneTree());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(option.cloneTree());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(option.cloneTree());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(option.cloneTree());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getValue();  group.setSelected(opt.cloneTree());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getValue();  group.setSelected(opt.cloneTree());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.getValue();  group.setSelected(opt.cloneTree());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =(Option)it.next();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =(Option)it.next();	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
30	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  group.setSelected(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =(Option)it.next();  group.setSelected(option);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =(Option)it.next();  group.setSelected(option);	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
31	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(opt.clone());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(opt.clone());  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.clone();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.clone();  group.setSelected(opt.clone());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.clone();  group.setSelected(opt.clone());  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.clone();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.clone();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.clone();	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  Option[]  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option[]  options  =  options.getOptions();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option[]  options  =  options.getOptions();	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
35	[BUG]  [BUGGY]  Option  option  =(Option)opt.next();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =(Option)opt.next();  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =(Option)opt.next();	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  }	  if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
37	[BUG]  [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);	  if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)option.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)option.next();  group.setSelected(null);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)option.next();  group.setSelected(null);  }	  if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)opt.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)opt.next();  group.setSelected(null);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)opt.next();  group.setSelected(null);  }	  if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }	  for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(opt.clone());  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(opt.clone());  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(opt.clone());  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(opt.clone());  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.clone());  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.clone());  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.clone());  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
44	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(option.clone());  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(option.clone());  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(option.clone());  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
45	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getKey());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(option.getKey());  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(option.getKey());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(option.getKey());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)options.getOptions().iterator();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)options.getOptions().iterator();	      for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptions().iterator();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  group  =(OptionGroup)options.getOptions().iterator();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  group  =(OptionGroup)options.getOptions().iterator();	      for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }	      for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }	      for(Iterator    it    =    options.getOptions().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  OptionGroup  opt  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(opt.clone());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(opt.clone());  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  option  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  option  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  option  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
56	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  option  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  option  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  option  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
57	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(false);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(false);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(false);  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(null);  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(t);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  optGroup  =(OptionGroup)it.next();  group.setSelected(optGroup.getSelected());  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  optGroup  =(OptionGroup)it.next();  group.setSelected(optGroup.getSelected());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  optGroup  =(OptionGroup)it.next();  group.setSelected(optGroup.getSelected());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    optionGroup    =(OptionGroup)it.next();    group.setSelected(optionGroup.getSelected());    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
60	[BUG]  [BUGGY]  Option  option  =(Option)options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =(Option)options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =(Option)options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(null);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(null);  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
62	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(null);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(null);  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
63	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(t);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(t);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(t);  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  }	  if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  optionGroup  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  }	  if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);	  if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  optionGroup  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  optionGroup  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(null);	  if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(opt);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(opt);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(opt);  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
69	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getValue());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getValue());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getValue());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
70	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(opt.getValue());  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(opt.getValue());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)opt.next();  group.setSelected(opt.getValue());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
71	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(opt.clone());  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptions().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(opt.clone());  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
72	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(opt.clone());  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(opt.clone());  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
73	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.clone());  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.clone());  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.clone());  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
74	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getKey());  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getKey());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getKey());	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
75	[BUG]  [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  option  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  option  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	for(Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  option  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
76	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getSelected());  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getSelected());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(optionGroup.getSelected());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    optionGroup    =(OptionGroup)it.next();    group.setSelected(optionGroup.getSelected());    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
77	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(opt.clone());  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(opt.clone());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(opt.clone());	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
78	[BUG]  [BUGGY]  OptionGroup  opt  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(opt.clone());  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(opt.clone());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  optionGroup  =(OptionGroup)it.next();  group.setSelected(opt.clone());	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
80	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
81	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getKey());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getKey());    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
82	[BUG]  [BUGGY]  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  option  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option.cloneTree());  }	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(option.cloneTree());  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(option.cloneTree());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(option.cloneTree());	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
85	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
86	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.clone());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.clone());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
87	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(null);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(null);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(null);	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
88	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
89	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.cloneTree());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.cloneTree());    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
90	[BUG]  [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(null);  }  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  opt  =(Option)it.next();  group.setSelected(null);  }	  for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    opt    =(Option)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
91	[BUG]  [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt);  [BUGGY]      [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt);	  if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  group  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  group  =  options.getOptionGroups().iterator();  it.hasNext();)  {  Option  option  =(Option)it.next();  group.setSelected(option);  }	      if(options.getOptions()!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
93	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(option);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(option);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	OptionGroup  group  =(OptionGroup)it.next();  group.setSelected(option);	      if(options!=    null)    {    for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    Option    option    =(Option)it.next();    group.setSelected(option);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
94	[BUG]  [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getValue());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    for  (Iterator  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  group  =  (OptionGroup)  it.next();  group.setSelected(null);    [BUGGY]  Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getValue());  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.27801921874276636	158	158	9	replace	Iterator  <  Option>  it  =  options.getOptionGroups().iterator();  it.hasNext();)  {  OptionGroup  opt  =(OptionGroup)it.next();  group.setSelected(opt.getValue());  }	      for(Iterator    it    =    options.getOptionGroups().iterator();    it.hasNext();)    {    OptionGroup    opt    =(OptionGroup)it.next();    group.setSelected(opt.getValue());    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
