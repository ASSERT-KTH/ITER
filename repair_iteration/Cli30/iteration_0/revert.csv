projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296updateRequiredOptions(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296requiredOptions.remove(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296requiredOptions.add(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296requiredOptions.clear();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296addOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295cmd.addOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295cmd.addOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295cmd.addOption(opt,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295cmd.addOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259properties.remove(properties.values());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259properties.remove(properties.indexOf('n'));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259properties.add(newProperty(value));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259properties.remove(properties.size()-1);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259properties=getProperties();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261if(e.hasMoreElements()){if(!cmd.hasMoreProperty(property)){return;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261if(e.hasMoreElements()){if(!cmd.hasMoreProperty(properties)){return;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261if(e.hasMoreElements()){if(!cmd.hasMoreElements()){return;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261if(e.hasMoreElements()){if(!cmd.hasMoreProperties()){return;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261if(e.hasMoreElements()){if(!cmd.hasMoreOptions()){return;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties,true);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties);requiredOptions=newArrayList<Option>();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties);requiredOptions=newArrayList<CommandLine>();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties);requiredOptions=options.getRequiredOptions();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103returnparse(options,arguments,properties,false);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103returnparse(options,arguments,properties,true);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103returnparseOptions(options,arguments,properties,true);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103returnparse(options,arguments,properties,null);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()&&value!=null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(!opt.hasArg()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()||opt.hasArg()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286elseif(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)))
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286elseif(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1".equalsIgnoreCase(value))){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286elseif(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||"1.equalsIgnoreCase(value))){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(!cmd.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(option!=null||!cmd.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(option!=null&&!cmd.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(!cmd.hasOption(option)||e.hasMoreElements()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(!cmd.hasOption(option)||e.hasMoreProperty(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265requiredOptions.add(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265cmd.addOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265requiredOptions.remove(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265cmd.addValue(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265options.add(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286opt.addValueForProcessing(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286requiredOptions.remove(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286cmd.addOption(opt);requiredOptions.remove(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286if(opt.hasArg()){requiredOptions.add(opt);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286cmd.addOption(opt);requiredOptions.remove(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270properties.add(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270Propertiesproperties=options.getProperty(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){requiredOptions.add(opt);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270options.addOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){requiredOptions.remove(0);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265Optionopt=options.getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265Optionopt=options().getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().getOption(option,options);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259for(Enumeratione=properties.propertyNames();e.hasMoreElements();){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259for(Enumeratione=properties.next();e.hasMoreElements();){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259for(Enumeratione=properties.name();e.hasMoreElements();){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259for(Enumeratione=properties.properties();e.hasMoreElements();){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295Optionopt=options.getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295option=options.getOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295opt.addValue(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295opt.addOption(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295options.addOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.nextElement().toString();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.next().toString();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.getNextElement().toString();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.nextNode().toString();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263cmd.addOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263cmd.addValue(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263cmd.addValue(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263cmd.addArg(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263cmd.addValue(option,value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272opt.addValue(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(value!=null){if(opt.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()){if(opt.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272opt.addValueForProcessing(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(value!=null){if(opt.hasArg()){return;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270Stringvalue=properties.getProperty(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270Stringvalue=properties.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270Stringvalue=options.getProperty(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270Stringvalue=properties.getKey(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296requiredOptions.remove(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296options.addOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270opt.addValue(opt.getKey());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270opt.addValueToString(opt.getKey());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){Stringoption=opt.getValue();if(option.getArg().length==0){continue;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){Stringoption=opt.getValue();if(option.getArgs().length==0){continue;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270opt.addValueToProcessing(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296opt.addValue(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296processOptions(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296checkRequiredOptions(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270Stringvalue=opt.getProperty(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270Stringvalue=opt.getProperty(property);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()){if(opt.getValues()==null||opt.getValues().length==0){continue;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()){if(opt.getValues()==null||opt.getValues().length==0){return;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()){if(opt.getValues()==null){continue;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()){try{opt.addValueForProcessing(value);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103cmd.parse(options,arguments,properties,false);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103requiredOptions.remove(options.getKey());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103requiredOptions.remove(arguments);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296cmd.addOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296if(opt.hasArg()){requiredOptions.remove(opt.getKey());}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296if(opt.hasArg()){opt.addValue(value);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296if(opt.hasArg()){requiredOptions.remove(opt);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263CommandLinecmd=getOptions().getCmd(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263CommandLinecmd=e.getCmd();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263CommandLinecmd=options.getCmd();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263CommandLinecmd=getOptions().get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295cmd.addValue(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295cmd.addChildToFront(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259for(Enumeratione=properties.getPropertyNames();e.hasMoreElements();){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259for(Enumeratione=properties.getPropertyName();e.hasMoreElements();){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259for(Enumeratione=properties.numberList();e.hasMoreElements();){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()&&opt.hasArg()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265Optionopt=option.getOption().getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().getOption(option,option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259cmd.addOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259cmd.addChildToFront(properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259cmd.addArg(properties.value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259cmd.addValue(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259cmd.addChildToFront(newProperty(this));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261CommandLinecmd=e.getCmd();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261cmd.addOption(e);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261CommandLinecmd=e.getConditionExpression();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261e.nextElement().toString();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261CommandLinecmd=e.nextCommandLine();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265option=cmd.getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265Optionoption=options.getOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265e.removeFirstElement();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265processOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286if(opt.hasArg()){Stringvalue=opt.getValue();if(value!=null){continue;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286opt.addValue(value);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286if(opt.hasArg()){Stringvalue=opt.getKey();if(value!=null){continue;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286if(opt.hasArg()){Stringvalue=opt.getValue();if(value==null){continue;}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295Optionopt=options.getOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295Optionopt=options.getOption(opt.getKey());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.getOption().toString();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.nextElement().getName();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.nextOption().toString();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(option!=null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(!cmd.hasOption(option)||(option.getValueType()==null&&option.getValueType().equals(value))){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(!cmd.hasOption(option)||(option.getValueType()==null&&!option.hasArg())){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265e.removeProperty(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265processOption(option,null);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296processProperties(cmd);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296requiredOptions.remove(cmd);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261if(e.hasMoreElements()){if(cmd.hasOption(e)){cmd.addChildToFront(e);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261if(e.hasMoreElements()){if(cmd.hasOption(e)){cmd.addChildToBack(e);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261if(e.hasMoreElements()){if(cmd.hasOption(e)){cmd.addOption(e);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261if(e.hasMoreElements()){if(cmd.hasOption(e)){cmd.addArg(e.nextElement());}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(option.hasArg()&&value!=null){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(option.hasArg()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263CommandLinecmd=cmd.addOption(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(option==null){cmd.addOption(option);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263CommandLinecmd=e.getArgumentLine();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(option==null){CommandLinecmd=options.getCmd();}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.nextElement().get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.nextAst(0).toString();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java261Stringoption=e.nextAction().toString();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103returnparse(options,arguments,properties,false,options.mapping);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(option==null&&!cmd.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(option==null||!cmd.hasOption(option)){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java263if(!option.isRequired()){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295if(opt.hasArg()){requiredOptions.remove(opt.getKey());}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295opt.addValue(value);requiredOptions.remove(opt.getKey());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295if(opt.hasArg()){opt.addValue(value);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java295if(opt.hasArg()){requiredOptions.clear();}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286elseif(!("yes".equalsIgnoreCase(value)||"true".equalsIgnoreCase(value)||1".equalsIgnoreCase(value)))
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java265Optionopt=getOptions().getOption(option,e);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259for(Enumeratione=properties.values();e.hasMoreElements();){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259for(Enumeratione=properties.keySet();e.hasMoreElements();){
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103cmd.parseOptions(options,arguments,properties);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java103requiredOptions.clear();cmd.parse(options,arguments,properties,true);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){thrownewRuntimeException("");}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){try{opt.addValueForProcessing(value);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270if(opt.hasArg()){try{opt.addValueForProcessing(option);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270opt.addValueForProcessing(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270cmd.addOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()){if(opt.getValues()==null||opt.getValues().length==0){thrownewRuntimeException("");}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()){thrownewRuntimeException("");}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java272if(opt.hasArg()){if(opt.getArguments().length==0){thrownewRuntimeException("");}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296requiredOptions.remove(opt.getKey());
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296e.removeOption(opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java296processOption(e,opt);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270Stringvalue=properties!=null?properties.getProperty(option):properties.getProperty(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java270Stringvalue=properties!=null?properties.getProperty(option):properties.get(option);
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286if(option.getValue()==null){Stringvalue=opt.getValue();if(value.equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)||"2".equalsIgnore
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286if(option.getValue()==null){Stringvalue=opt.getValue();if(value.equalsIgnoreCase(value)||"0".equalsIgnoreCase(value)||"1".equalsIgnore
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286if(option.getValueType()==String.valueOf(value)){Stringvalue=opt.getValueType();if(value!=null){cmd.addOption(value);}
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286if(option.getValue()==null){Stringvalue=opt.getValue();if(value.equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)||"0".equalsIgnore
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java286if(value==null){Stringvalue=newString(value);if(value.equalsIgnoreCase(value)||"1".equalsIgnoreCase(value)||"2".equalsIgnoreCase(value))
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259properties=properties.values();
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259properties=properties.toArray(newProperty(value));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259properties.add(newProperty(properties));
projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java259cmd.addArg(properties);
