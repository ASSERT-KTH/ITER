bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  value  =  options.getProperty(option);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]  String  value  =  options.getProperty(option);  [BUGGY]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(option);	String  value  =  properties.getProperty(option);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
2	[BUG]  [BUGGY]  String  value  =  cmd.getProperty(option);  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]  String  value  =  cmd.getProperty(option);  [BUGGY]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getProperty(option);	String  value  =  properties.getProperty(option);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
3	[BUG]  [BUGGY]  String  value  =  cmd.getValue(option);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]  String  value  =  cmd.getValue(option);  [BUGGY]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getValue(option);	String  value  =  properties.getProperty(option);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
4	[BUG]  [BUGGY]  String  value  =  cmd.getValueForProcessing(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]  String  value  =  cmd.getValueForProcessing(option);  [BUGGY]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getValueForProcessing(option);	String  value  =  properties.getProperty(option);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    [BUGGY]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	  	String  value  =  properties.getProperty(option);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
6	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    Option  cmd  =  options.getOption(option);  [BUGGY]  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	    Option  cmd  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	36	None	add
7	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    Option  cmd  =  options.getOption(opt);  [BUGGY]  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	    Option  cmd  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	36	None	add
8	[BUG]  [BUGGY]    Properties  properties  =  options.getProperty(option);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    Properties  properties  =  options.getProperty(option);  [BUGGY]  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	    Properties  properties  =  options.getProperty(option);		non-compiled	[CE]  illegal  start  of  type	36	None	add
9	[BUG]  [BUGGY]    Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    Option  option  =  options.getOption(option);  [BUGGY]  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	    Option  option  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	36	None	add
10	[BUG]  [BUGGY]    Enumeration  e  =  options.getEnumeration();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    Enumeration  e  =  options.getEnumeration();  [BUGGY]  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	    Enumeration  e  =  options.getEnumeration();		non-compiled	[CE]  illegal  start  of  type	36	None	add
11	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    Option  currentOption  =  options.getOption(option);  [BUGGY]  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	    Option  currentOption  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	36	None	add
12	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    Option  currentOption  =  options.getOption(opt);  [BUGGY]  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	    Option  currentOption  =  options.getOption(opt);		non-compiled	[CE]  illegal  start  of  type	36	None	add
13	[BUG]  [BUGGY]  String  value  =  options.getValue(option);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]  String  value  =  options.getValue(option);  [BUGGY]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option);	String  value  =  properties.getProperty(option);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
14	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option);  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]  String  value  =  options.getValueForProcessing(option);  [BUGGY]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option);	String  value  =  properties.getProperty(option);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
15	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]  String  value  =  options.getStringValue(option);  [BUGGY]    if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option);	String  value  =  properties.getProperty(option);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
16	[BUG]  [BUGGY]    Option  currentToken  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    Option  currentToken  =  options.getOption(option);  [BUGGY]  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	    Option  currentToken  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	36	None	add
17	[BUG]  [BUGGY]    Option  options  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException  [CONTEXT]  if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);      [BUGGY]    Option  options  =  options.getOption(option);  [BUGGY]  String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!( "yes ".equalsIgnoreCase(value)  ||   "true ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	    Option  options  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  type	36	None	add
