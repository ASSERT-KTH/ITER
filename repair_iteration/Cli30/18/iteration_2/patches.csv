bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Properties  properties  =  cmd.getProperty(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  cmd.getProperty(option,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  cmd.getProperty(option,  expectedOpts);	  Properties    properties    =    cmd.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  Properties  properties  =  cmd.getProperty(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  cmd.getProperty(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  cmd.getProperty(opt);	  Properties    properties    =    cmd.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  String  value  =  cmd.getStringValue(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getStringValue(opt);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getStringValue(opt);	  String    value    =    options.getStringValue(opt);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
4	[BUG]  [BUGGY]  String  value  =  options.getValue(opt,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(opt,  expectedOpts);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(opt,  expectedOpts);	  String    value    =    options.getValue(opt);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
5	[BUG]  [BUGGY]  Option  options  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  options  =  cmd.getOption(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  options  =  cmd.getOption(opt);	  Option    options    =    cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
6	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts,  false);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts,  false);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt,  expectedOpts,  false);	  Option    currentOption    =    options.getOption(opt,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts,  e);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts,  e);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt,  expectedOpts,  e);	  Option    currentOption    =    options.getOption(opt,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts,  true);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt,  expectedOpts,  true);	  Option    currentOption    =    options.getOption(opt,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  Properties  properties  =  cmd.getProperties(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  cmd.getProperties(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  cmd.getProperties(option);	  Properties    properties    =    options.getProperties(option);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
10	[BUG]  [BUGGY]  Properties  properties  =  options.getProperties(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getProperties(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperties(opt);	  Properties    properties    =    options.getProperties(option);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
11	[BUG]  [BUGGY]  Properties  properties  =  options.getProperties(cmd);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getProperties(cmd);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperties(cmd);	  Properties    properties    =    options.getProperties(option);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
12	[BUG]  [BUGGY]  String  value  =  options.getValue(option)+  1L;  [CE]  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(option)+  1L;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option)+  1L;	  String    value    =    options.getValue(option)+    1;    	non-compiled	[CE]  	51	None	replace
13	[BUG]  [BUGGY]  String  value  =  options.getValue(opt)+  1;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(opt)+  1;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(opt)+  1;	  String    value    =    options.getValue(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
14	[BUG]  [BUGGY]  String  value  =  options.getValue(option)/  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(option)/  1;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option)/  1;	  String    value    =    options.getValue(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
15	[BUG]  [BUGGY]  String  value  =  option.getValueForProcessing(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  option.getValueForProcessing(opt);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  option.getValueForProcessing(opt);	  String    value    =    opt.getValueForProcessing(option);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
16	[BUG]  [BUGGY]  String  value  =  options.getProperty(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getProperty(opt);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(opt);	  String    value    =    options.getProperty(cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  Option  currentOption  =  opt.getOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  opt.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  opt.getOption(option);	  Option    currentOption    =    cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
18	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(opt)+  1;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(opt)+  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(opt)+  1;	  Option    currentToken    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
19	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option)/  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(option)/  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option)/  1;	  Option    currentToken    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
20	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option)+  2;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(option)+  2;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option)+  2;	  Option    currentToken    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
21	[BUG]  [BUGGY]  String  value  =  opt.getValue(cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  opt.getValue(cmd);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  opt.getValue(cmd);	  String    value    =    cmd.getValue(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  String  value  =  cmd.getStringValue(option,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getStringValue(option,  expectedOpts);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getStringValue(option,  expectedOpts);	  String    value    =    options.getStringValue(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
23	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts,  0);  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts,  0);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option,  expectedOpts,  0);	  String    value    =    options.getStringValue(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
24	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts,  true);  [CE]  illegal  start  of  expression  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts,  true);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option,  expectedOpts,  true);	  String    value    =    options.getStringValue(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
25	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts,  false);  [CE]  illegal  start  of  expression  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts,  false);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option,  expectedOpts,  false);	  String    value    =    options.getStringValue(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
26	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt)/  1;  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(opt)/  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt)/  1;	  Option    currentOption    =    options.getOption(opt)+    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
27	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt)+  1L;  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(opt)+  1L;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt)+  1L;	  Option    currentOption    =    options.getOption(opt)+    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
28	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option)+  1L;  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(option)+  1L;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option)+  1L;	  String    value    =    options.getStringValue(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
29	[BUG]  [BUGGY]  String  value  =  options.getStringValue(opt)+  1;  [CE]  illegal  start  of  expression  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(opt)+  1;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(opt)+  1;	  String    value    =    options.getStringValue(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
30	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option)+  2;  [CE]  illegal  start  of  expression  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(option)+  2;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option)+  2;	  String    value    =    options.getStringValue(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
31	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts,  stopAtNonOption);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option,  expectedOpts,  stopAtNonOption);	  Option    currentOption    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
32	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts,  false);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts,  false);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option,  expectedOpts,  false);	  Option    currentOption    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  cmd.getOption(option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  cmd.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  cmd.getOption(option);	  Option    cmd    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  option.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  option.getOption(option);	  Option    cmd    =    opt.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Options  cmd  =  options.getOption(opt);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Options  cmd  =  options.getOption(opt);	  Options    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
36	[BUG]  [BUGGY]  Enumeration  e  =  opt.getEnumeration();  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  e  =  opt.getEnumeration();  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  opt.getEnumeration();	  Enumeration    e    =    cmd.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
37	[BUG]  [BUGGY]  Enumeration  e  =  cmd.getEnumeration(option);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  e  =  cmd.getEnumeration(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  cmd.getEnumeration(option);	  Enumeration    e    =    cmd.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
38	[BUG]  [BUGGY]  Option  currentOption  =  opt.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  opt.getOption(cmd);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  opt.getOption(cmd);	  Option    currentOption    =    cmd.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(opt,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(opt,  expectedOpts);	  Option    option    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts,  e);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts,  e);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option,  expectedOpts,  e);	  Option    option    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
41	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  cmd.getOption(option,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  cmd.getOption(option,  expectedOpts);	  Option    option    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
42	[BUG]  [BUGGY]  Enumeration  e  =  options.getEnumeration(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  e  =  options.getEnumeration(option,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  options.getEnumeration(option,  expectedOpts);	  Enumeration    e    =    options.getEnumeration(option);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(opt,  expectedOpts,  0);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(opt,  expectedOpts,  0);	  Option    cmd    =    options.getOption(opt,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
44	[BUG]  [BUGGY]  Option  value  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  value  =  options.getOption(cmd);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  value  =  options.getOption(cmd);	  Option    value    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
45	[BUG]  [BUGGY]  Option  value  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  value  =  cmd.getOption(option);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  value  =  cmd.getOption(option);	  Option    value    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
46	[BUG]  [BUGGY]  Option  value  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  value  =  options.getOption(opt);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  value  =  options.getOption(opt);	  Option    value    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
47	[BUG]  [BUGGY]  String  value  =  cmd.getValue(option)+  1L;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getValue(option)+  1L;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getValue(option)+  1L;	  String    value    =    cmd.getValue(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  String  value  =  cmd.getValue(option)/  1;  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getValue(option)/  1;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getValue(option)/  1;	  String    value    =    cmd.getValue(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt)+  1;  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(opt)+  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(opt)+  1;	  Option    option    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)+  1L;  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(option)+  1L;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option)+  1L;	  Option    option    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)/  1;  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(option)/  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option)/  1;	  Option    option    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
52	[BUG]  [BUGGY]  String  value  =  cmd.getProperty(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getProperty(option,  expectedOpts);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getProperty(option,  expectedOpts);	  String    value    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
53	[BUG]  [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  0);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(option,  expectedOpts,  0);	  String    value    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
54	[BUG]  [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  e);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  e);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(option,  expectedOpts,  e);	  String    value    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
55	[BUG]  [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  true);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(option,  expectedOpts,  true);	  String    value    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
56	[BUG]  [BUGGY]  Enumeration  e  =  options.getEnumeration(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  e  =  options.getEnumeration(options,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  options.getEnumeration(options,  expectedOpts);	  Enumeration    e    =    options.getEnumeration(options);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
57	[BUG]  [BUGGY]  Enumeration  e  =  cmd.getEnumeration(options);  [CE]  illegal  start  of  type  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  e  =  cmd.getEnumeration(options);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  cmd.getEnumeration(options);	  Enumeration    e    =    options.getEnumeration(options);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
58	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option)/  1;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(option)/  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option)/  1;	  Option    currentOption    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
59	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option)+  1L;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(option)+  1L;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option)+  1L;	  Option    currentOption    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
60	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(opt,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(opt,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(opt,  expectedOpts);	  Option    currentToken    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
61	[BUG]  [BUGGY]  String  value  =  cmd.getPropertyValue(option);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getPropertyValue(option);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getPropertyValue(option);	  String    value    =    options.getPropertyValue(option);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
62	[BUG]  [BUGGY]  String  value  =  options.getPropertyValue(opt);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getPropertyValue(opt);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getPropertyValue(opt);	  String    value    =    options.getPropertyValue(option);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
63	[BUG]  [BUGGY]  Option  currentToken  =  option.getOption(cmd);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  option.getOption(cmd);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  option.getOption(cmd);	  Option    currentToken    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts,  0);  [CE]  illegal  start  of  expression  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts,  0);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option,  expectedOpts,  0);	  String    value    =    options.getValueForProcessing(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
65	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts,  true);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option,  expectedOpts,  true);	  String    value    =    options.getValueForProcessing(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
66	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts,  currentToken);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option,  expectedOpts,  currentToken);	  String    value    =    options.getValueForProcessing(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
67	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(opt,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(opt,  expectedOpts);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(opt,  expectedOpts);	  String    value    =    options.getValueForProcessing(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
68	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(cmd,  opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(cmd,  opt);	  Option    currentOption    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
69	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(option,  cmd);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option,  cmd);	  Option    currentOption    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
70	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(opt,  options);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  cmd.getOption(opt,  options);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  cmd.getOption(opt,  options);	  Option    currentOption    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
71	[BUG]  [BUGGY]  Options  options  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Options  options  =  cmd.getOption(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Options  options  =  cmd.getOption(opt);	  Options    options    =    cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
72	[BUG]  [BUGGY]  Options  options  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Options  options  =  options.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Options  options  =  options.getOption(option);	  Options    options    =    cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
73	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt)/  1;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(opt)/  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(opt)/  1;	  Option    cmd    =    options.getOption(opt)+    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
74	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt)+  1L;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(opt)+  1L;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(opt)+  1L;	  Option    cmd    =    options.getOption(opt)+    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
75	[BUG]  [BUGGY]  String  value  =  opt.getValueForProcessing(cmd);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  opt.getValueForProcessing(cmd);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  opt.getValueForProcessing(cmd);	  String    value    =    cmd.getValueForProcessing(opt);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
76	[BUG]  [BUGGY]  Option  opt  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  opt  =  cmd.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  opt  =  cmd.getOption(option);	  Option    opt    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
77	[BUG]  [BUGGY]  Option  opt  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  opt  =  options.getOption(cmd);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  opt  =  options.getOption(cmd);	  Option    opt    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
78	[BUG]  [BUGGY]  Properties  properties  =  options.getOptions(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getOptions(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getOptions(opt);	  Properties    properties    =    options.getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
79	[BUG]  [BUGGY]  Properties  properties  =  cmd.getOptions(option);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  cmd.getOptions(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  cmd.getOptions(option);	  Properties    properties    =    options.getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
80	[BUG]  [BUGGY]  Properties  properties  =  options.getOptions(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getOptions(option,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getOptions(option,  expectedOpts);	  Properties    properties    =    options.getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
81	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  stopAtNonOption);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option,  expectedOpts,  stopAtNonOption);	  Option    currentToken    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
82	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  e);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  e);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option,  expectedOpts,  e);	  Option    currentToken    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
83	[BUG]  [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  <?>  e  =  options.getEnumeration(option);	  Enumeration    <?>    e    =    options.getEnumeration();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
84	[BUG]  [BUGGY]  Enumeration  <?>  e  =  opt.getEnumeration();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  <?>  e  =  opt.getEnumeration();  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  <?>  e  =  opt.getEnumeration();	  Enumeration    <?>    e    =    options.getEnumeration();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
85	[BUG]  [BUGGY]  Enumeration  <?>  e  =  cmd.getEnumeration();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  <?>  e  =  cmd.getEnumeration();  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  <?>  e  =  cmd.getEnumeration();	  Enumeration    <?>    e    =    options.getEnumeration();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
86	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option)/  1;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(option)/  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(option)/  1;	  Option    cmd    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
87	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option)+  1L;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(option)+  1L;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(option)+  1L;	  Option    cmd    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
88	[BUG]  [BUGGY]  Option  currentOption  =  option.getOption(cmd);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  option.getOption(cmd);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  option.getOption(cmd);	  Option    currentOption    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
89	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  cmd.getOption(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  cmd.getOption(opt);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
90	[BUG]  [BUGGY]  String  value  =  opt.getStringValue(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  opt.getStringValue(option);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  opt.getStringValue(option);	  String    value    =    cmd.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
91	[BUG]  [BUGGY]  String  value  =  option.getStringValue(cmd);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  option.getStringValue(cmd);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  option.getStringValue(cmd);	  String    value    =    cmd.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
92	[BUG]  [BUGGY]  Option  currentToken  =  opt.getOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  opt.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  opt.getOption(option);	  Option    currentToken    =    cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  Option  currentToken  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  cmd.getOption(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  cmd.getOption(opt);	  Option    currentToken    =    cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
94	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  expectedOpts  -  1);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(option,  expectedOpts  -  1);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(option,  expectedOpts  -  1);	  Option    cmd    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
95	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(option,  expectedOpts,  0);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(option,  expectedOpts,  0);	  Option    cmd    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
96	[BUG]  [BUGGY]  String  value  =  options.getValue(option,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(option,  expectedOpts,  0);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option,  expectedOpts,  0);	  String    value    =    options.getValue(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
97	[BUG]  [BUGGY]  String  value  =  options.getValue(option,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(option,  expectedOpts,  true);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option,  expectedOpts,  true);	  String    value    =    options.getValue(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
98	[BUG]  [BUGGY]  String  value  =  options.getValue(option,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(option,  expectedOpts,  currentToken);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option,  expectedOpts,  currentToken);	  String    value    =    options.getValue(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
99	[BUG]  [BUGGY]  String  value  =  cmd.getValue(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getValue(option,  expectedOpts);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getValue(option,  expectedOpts);	  String    value    =    options.getValue(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
100	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(opt)+  1;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(opt)+  1;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(opt)+  1;	  String    value    =    options.getValueForProcessing(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
101	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option)+  1L;  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(option)+  1L;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option)+  1L;	  String    value    =    options.getValueForProcessing(option)+    1;    	non-compiled	[CE]  	46	None	replace
102	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option)/  1;  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(option)/  1;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option)/  1;	  String    value    =    options.getValueForProcessing(option)+    1;    	non-compiled	[CE]  	46	None	replace
103	[BUG]  [BUGGY]  String  value  =  cmd.getStringValue();  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getStringValue();  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getStringValue();	  String    value    =    options.getStringValue(cmd);    	non-compiled	[CE]  	33	None	replace
104	[BUG]  [BUGGY]  Properties  properties  =  options.getProperty(opt,  expectedOpts);  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getProperty(opt,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperty(opt,  expectedOpts);	  Properties    properties    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  	10	None	replace
105	[BUG]  [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts,  true);  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts,  true);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperty(option,  expectedOpts,  true);	  Properties    properties    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  	10	None	replace
106	[BUG]  [BUGGY]  Enumeration  e  =  cmd.getEnumeration(opt);  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  e  =  cmd.getEnumeration(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  cmd.getEnumeration(opt);	  Enumeration    e    =    options.getEnumeration(opt);    	non-compiled	[CE]  	54	None	replace
107	[BUG]  [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration(opt);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  <?>  e  =  options.getEnumeration(opt);	  Enumeration    e    =    options.getEnumeration(opt);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	54	None	replace
108	[BUG]  [BUGGY]  Enumeration  e  =  options.getEnumeration(opt,  expectedOpts);  [CE]  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  e  =  options.getEnumeration(opt,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  options.getEnumeration(opt,  expectedOpts);	  Enumeration    e    =    options.getEnumeration(opt);    	non-compiled	[CE]  	54	None	replace
109	[BUG]  [BUGGY]  Option  option  =  opt.getOption(option);  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  opt.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  opt.getOption(option);	  Option    option    =    cmd.getOption(option);    	non-compiled	[CE]  	12	None	replace
110	[BUG]  [BUGGY]  String  value  =  cmd.getValueForProcessing(opt,  expectedOpts);  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getValueForProcessing(opt,  expectedOpts);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getValueForProcessing(opt,  expectedOpts);	  String    value    =    cmd.getValueForProcessing(opt);    	non-compiled	[CE]  	30	None	replace
111	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  expectedOpts);  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  options  =  options.getOption(opt,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  options  =  options.getOption(opt,  expectedOpts);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  	45	None	replace
112	[BUG]  [BUGGY]  Option  cd  =  options.getOption(option);  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cd  =  options.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cd  =  options.getOption(option);	  Option    cmd    =    opt.getOption(option);    	non-compiled	[CE]  	16	None	replace
113	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  0);  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(opt,  0);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt,  0);	  Option    currentOption    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  	61	None	replace
114	[BUG]  [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  currentToken);  [CE]  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  currentToken);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(option,  expectedOpts,  currentToken);	  String    value    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  	41	None	replace
115	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option)/  1;  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(option)/  1;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option)/  1;	  String    value    =    options.getStringValue(option)+    1;    	non-compiled	[CE]  	49	None	replace
116	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option)+  0;  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(option)+  0;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option)+  0;	  Option    currentToken    =    options.getOption(option)+    1;    	non-compiled	[CE]  	44	None	replace
117	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option)+  2;  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(option)+  2;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option)+  2;	  String    value    =    options.getValueForProcessing(option)+    1;    	non-compiled	[CE]  	46	None	replace
118	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts,  0);  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts,  0);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt,  expectedOpts,  0);	  Option    currentOption    =    options.getOption(opt,    expectedOpts);    	non-compiled	[CE]  	4	None	replace
119	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt)+  0;  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(opt)+  0;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(opt)+  0;	  Option    cmd    =    options.getOption(opt)+    1;    	non-compiled	[CE]  	22	None	replace
120	[BUG]  [BUGGY]  String  value  =  options.getPropertyValue(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getPropertyValue(option,  expectedOpts);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getPropertyValue(option,  expectedOpts);	  String    value    =    options.getPropertyValue(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
121	[BUG]  [BUGGY]  String  value  =  options.getProperty(option,  cmd);  [CE]  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getProperty(option,  cmd);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(option,  cmd);	  String    value    =    options.getProperty(cmd);    	non-compiled	[CE]  	1	None	replace
122	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option,  currentToken);  [CE]  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(option,  currentToken);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option,  currentToken);	  String    value    =    options.getStringValue(option,    expectedOpts);    	non-compiled	[CE]  	50	None	replace
123	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts,  currentToken);  [CE]  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts,  currentToken);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option,  expectedOpts,  currentToken);	  String    value    =    options.getStringValue(option,    expectedOpts);    	non-compiled	[CE]  	50	None	replace
124	[BUG]  [BUGGY]  String  value  =  options.getValue(option,  currentToken);  [CE]  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(option,  currentToken);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option,  currentToken);	  String    value    =    options.getValue(option,    expectedOpts);    	non-compiled	[CE]  	21	None	replace
125	[BUG]  [BUGGY]  Properties  properties  =  options.getProperties(option,  expectedOpts);  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getProperties(option,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperties(option,  expectedOpts);	  Properties    properties    =    options.getProperties(option);    	non-compiled	[CE]  	63	None	replace
126	[BUG]  [BUGGY]  String  value  =  options.getValue(currentToken);  [CE]  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(currentToken);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(currentToken);	  String    value    =    options.getValue(opt);    	non-compiled	[CE]  	20	None	replace
127	[BUG]  [BUGGY]  Option  value  =  options.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  value  =  options.getOption(option,  expectedOpts);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  value  =  options.getOption(option,  expectedOpts);	  Option    value    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
128	[BUG]  [BUGGY]  Option  value  =  options.getOption(option)+  1;  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  value  =  options.getOption(option)+  1;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  value  =  options.getOption(option)+  1;	  Option    value    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
129	[BUG]  [BUGGY]  String  value  =  option.getProperty(value);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  option.getProperty(value);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  option.getProperty(value);	  String    value    =    opt.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
130	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  expectedOpts  -  1);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(opt,  expectedOpts  -  1);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(opt,  expectedOpts  -  1);	  Option    cmd    =    options.getOption(opt,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
131	[BUG]  [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts,  currentToken);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperty(option,  expectedOpts,  currentToken);	  Properties    properties    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
132	[BUG]  [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts,  0);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperty(option,  expectedOpts,  0);	  Properties    properties    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
133	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts,  0);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option,  expectedOpts,  0);	  Option    option    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts  -  1);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option,  expectedOpts  -  1);	  Option    option    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
135	[BUG]  [BUGGY]  String  value  =  options.getStringValue(currentToken);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(currentToken);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(currentToken);	  String    value    =    options.getStringValue(opt);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
136	[BUG]  [BUGGY]  String  value  =  options.getStringValue(opt,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getStringValue(opt,  expectedOpts);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(opt,  expectedOpts);	  String    value    =    options.getStringValue(opt);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
137	[BUG]  [BUGGY]  Enumeration  <  Object>  e  =  options.getEnumeration(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  <  Object>  e  =  options.getEnumeration(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  <  Object>  e  =  options.getEnumeration(option);	  Enumeration    e    =    options.getEnumeration(option);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
138	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(opt,  currentToken);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(opt,  currentToken);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(opt,  currentToken);	  String    value    =    options.getValueForProcessing(opt);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
139	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  opt  =  options.getOption(option,  expectedOpts);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  opt  =  options.getOption(option,  expectedOpts);	  Option    opt    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
140	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  0);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option,  expectedOpts,  0);	  Option    currentToken    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
141	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts,  0);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option,  expectedOpts,  0);	  Option    currentOption    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
142	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option)+  0;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(option)+  0;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(option)+  0;	  Option    cmd    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
143	[BUG]  [BUGGY]  Option  currentOption  =  option.getOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  option.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  option.getOption(option);	  Option    currentOption    =    cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
144	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(opt,  expectedOpts,  true);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(opt,  expectedOpts,  true);	  Option    cmd    =    options.getOption(opt,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
145	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(opt,  option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt,  option);	  Option    currentOption    =    options.getOption(opt,    cmd);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
146	[BUG]  [BUGGY]  Option  currentToken  =  option.getOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  option.getOption(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  option.getOption(option);	  Option    currentToken    =    cmd.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
147	[BUG]  [BUGGY]  String  value  =  cmd.getString();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  cmd.getString();  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getString();	  String    value    =    options.getStringValue(cmd);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
148	[BUG]  [BUGGY]  String  value  =  option.getValue(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  option.getValue(opt);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  option.getValue(opt);	  String    value    =    cmd.getValue(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
149	[BUG]  [BUGGY]  String  value  =  options.getPropertyValue(cmd);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getPropertyValue(cmd);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getPropertyValue(cmd);	  String    value    =    options.getProperty(cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
150	[BUG]  [BUGGY]  Properties  properties  =  options.getOptions(option)+  1;  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getOptions(option)+  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getOptions(option)+  1;	  Properties    properties    =    options.getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
151	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  expectedOpts,  null);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  cmd  =  options.getOption(option,  expectedOpts,  null);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(option,  expectedOpts,  null);	  Option    cmd    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
152	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option)-  1;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(option)-  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option)-  1;	  Option    currentToken    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
153	[BUG]  [BUGGY]  char  value  =  options.getValue(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  char  value  =  options.getValue(opt);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	char  value  =  options.getValue(opt);	  String    value    =    options.getValue(opt);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
154	[BUG]  [BUGGY]  String  value  =  options.getValue(option)+  2;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValue(option)+  2;  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option)+  2;	  String    value    =    options.getValue(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
155	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts,  true);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option,  expectedOpts,  true);	  Option    currentOption    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
156	[BUG]  [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  null);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts,  null);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(option,  expectedOpts,  null);	  String    value    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
157	[BUG]  [BUGGY]  Enumeration  <  Object>  e  =  options.getEnumeration(opt);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  <  Object>  e  =  options.getEnumeration(opt);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  <  Object>  e  =  options.getEnumeration(opt);	  Enumeration    e    =    options.getEnumeration(opt);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	54	None	replace
158	[BUG]  [BUGGY]  Properties  properties  =  options.getProperties(option)+  1;  [CE]  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getProperties(option)+  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperties(option)+  1;	  Properties    properties    =    options.getProperties(option);    	non-compiled	[CE]  	63	None	replace
159	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option)-  1;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentOption  =  options.getOption(option)-  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option)-  1;	  Option    currentOption    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
160	[BUG]  [BUGGY]  Properties  properties  =  cmd.getProperties();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  cmd.getProperties();  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  cmd.getProperties();	  Properties    properties    =    cmd.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
161	[BUG]  [BUGGY]  String  value  =  option.getProperty(property);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  option.getProperty(property);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  option.getProperty(property);	  String    value    =    option.getProperty(cmd);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
162	[BUG]  [BUGGY]  String  value  =  opt.getProperty(cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  opt.getProperty(cmd);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  opt.getProperty(cmd);	  String    value    =    option.getProperty(cmd);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
163	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts,  buf);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts,  buf);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option,  expectedOpts,  buf);	  String    value    =    options.getValueForProcessing(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
164	[BUG]  [BUGGY]  char  value  =  options.getValueForProcessing(opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  char  value  =  options.getValueForProcessing(opt);  [BUGGY]        if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	char  value  =  options.getValueForProcessing(opt);	  String    value    =    options.getValueForProcessing(opt);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
165	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts,  currentToken);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option,  expectedOpts,  currentToken);	  Option    option    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
166	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts,  true);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option,  expectedOpts,  true);	  Option    option    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
167	[BUG]  [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts,  e);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts,  e);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperty(option,  expectedOpts,  e);	  Properties    properties    =    options.getProperty(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
168	[BUG]  [BUGGY]  Option  currentToken  =  opt.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  opt.getOption(cmd);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  opt.getOption(cmd);	  Option    currentToken    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
169	[BUG]  [BUGGY]  Enumeration  <?>  e  =  options.getEnumerationWithCapacity(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  <?>  e  =  options.getEnumerationWithCapacity(option);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  <?>  e  =  options.getEnumerationWithCapacity(option);	  Enumeration    <?>    e    =    options.getEnumeration();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
170	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)-  1;  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  option  =  options.getOption(option)-  1;  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option)-  1;	  Option    option    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
171	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  true);  [CE]  [FE]            AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  true);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option,  expectedOpts,  true);	  Option    currentToken    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  	43	None	replace
172	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  false);  [CE]  illegal  start  of  expression  [FE]              AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts,  false);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option,  expectedOpts,  false);	  Option    currentToken    =    options.getOption(option,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
173	[BUG]  [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration(options);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AlreadySelectedException      [CONTEXT]      if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);          [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration(options);  [BUGGY]      String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(     "yes     ".equalsIgnoreCase(value)  ||       "true     ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  <?>  e  =  options.getEnumeration(options);	  Enumeration    e    =    options.getEnumeration(options);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
