bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  value  =  options.getProperty(cmd);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getProperty(cmd);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(cmd);	  String    value    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  String  value  =  cmd.getValue(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  cmd.getValue(opt);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getValue(opt);	  String    value    =    cmd.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  String  value  =  cmd.getValue(option)+  1;  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  cmd.getValue(option)+  1;  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getValue(option)+  1;	  String    value    =    cmd.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentOption  =  options.getOption(opt,  expectedOpts);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt,  expectedOpts);	      Option    currentOption    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(opt);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentOption  =  cmd.getOption(opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  cmd.getOption(opt);	      Option    currentOption    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
6	[BUG]  [BUGGY]  Option  currentToken  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentToken  =  cmd.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  cmd.getOption(option);	      Option    currentToken    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentToken  =  options.getOption(opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(opt);	      Option    currentToken    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentToken  =  options.getOption(cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(cmd);	      Option    currentToken    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
9	[BUG]  [BUGGY]  Properties  properties  =  cmd.getProperty(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Properties  properties  =  cmd.getProperty(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  cmd.getProperty(option);	      Properties    properties    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Properties  properties  =  options.getProperty(option,  expectedOpts);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperty(option,  expectedOpts);	      Properties    properties    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  Properties  properties  =  options.getProperty(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Properties  properties  =  options.getProperty(opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperty(opt);	      Properties    properties    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  Option  option  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  option  =  cmd.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  cmd.getOption(option);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  option  =  options.getOption(cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(cmd);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(opt);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option)+  1;  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  cmd  =  options.getOption(option)+  1;  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(option)+  1;	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  opt.getOption(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  cmd  =  opt.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  opt.getOption(option);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  String  value  =  opt.getProperty(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  opt.getProperty(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  opt.getProperty(option);	  String    value    =    cmd.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentOption  =  cmd.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  cmd.getOption(option);	      Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentOption  =  options.getOption(cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(cmd);	      Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  String  value  =  options.getValue(opt);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getValue(opt);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(opt);	  String    value    =    options.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  String  value  =  options.getValue(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getValue(option,  expectedOpts);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option,  expectedOpts);	  String    value    =    options.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt)+  1;  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  cmd  =  options.getOption(opt)+  1;  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(opt)+  1;	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Options  cmd  =  options.getOption(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Options  cmd  =  options.getOption(option);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  Enumeration  e  =  options.getEnumeration(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Enumeration  e  =  options.getEnumeration(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  options.getEnumeration(option);	      Enumeration    e    =    options.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  Enumeration  e  =  cmd.getEnumeration();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Enumeration  e  =  cmd.getEnumeration();  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  cmd.getEnumeration();	      Enumeration    e    =    options.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Enumeration  <?>  e  =  options.getEnumeration();  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  <?>  e  =  options.getEnumeration();	      Enumeration    e    =    options.getEnumeration();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
27	[BUG]  [BUGGY]  Option  options  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  options  =  cmd.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  options  =  cmd.getOption(option);	      Option    options    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  Options  options  =  cmd.getOption(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Options  options  =  cmd.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Options  options  =  cmd.getOption(option);	      Option    options    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  Option  options  =  opt.getOption(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  options  =  opt.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  options  =  opt.getOption(option);	      Option    options    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
30	[BUG]  [BUGGY]  String  value  =  cmd.getValueForProcessing(opt);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  cmd.getValueForProcessing(opt);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getValueForProcessing(opt);	  String    value    =    cmd.getValueForProcessing(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  String  value  =  opt.getValueForProcessing(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  opt.getValueForProcessing(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  opt.getValueForProcessing(option);	  String    value    =    cmd.getValueForProcessing(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  String  value  =  cmd.getStringValue(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  cmd.getStringValue(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  cmd.getStringValue(option);	  String    value    =    options.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  String  value  =  options.getStringValue(cmd);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getStringValue(cmd);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(cmd);	  String    value    =    options.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  String  value  =  options.getStringValue(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getStringValue(opt);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(opt);	  String    value    =    options.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(opt);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getValueForProcessing(opt);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(opt);	  String    value    =    options.getValueForProcessing(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
36	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getValueForProcessing(option,  expectedOpts);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option,  expectedOpts);	  String    value    =    options.getValueForProcessing(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
37	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt)+  1;  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentOption  =  options.getOption(opt)+  1;  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt)+  1;	      Option    currentOption    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  String  value  =  option.getValue(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  option.getValue(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  option.getValue(option);	  String    value    =    cmd.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  String  value  =  opt.getValue(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  opt.getValue(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  opt.getValue(option);	  String    value    =    cmd.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  String  value  =  option.getValueForProcessing(cmd);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  option.getValueForProcessing(cmd);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  option.getValueForProcessing(cmd);	  String    value    =    cmd.getValueForProcessing(option);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getProperty(option,  expectedOpts);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getProperty(option,  expectedOpts);	  String    value    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  String  value  =  options.getPropertyValue(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getPropertyValue(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getPropertyValue(option);	  String    value    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentToken  =  options.getOption(option,  expectedOpts);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option,  expectedOpts);	      Option    currentToken    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
44	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(option)+  1;  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentToken  =  options.getOption(option)+  1;  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentToken  =  options.getOption(option)+  1;	      Option    currentToken    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  options  =  options.getOption(opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  options  =  options.getOption(opt);	      Option    options    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
46	[BUG]  [BUGGY]  String  value  =  options.getValueForProcessing(option)+  1;  [CE]  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getValueForProcessing(option)+  1;  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValueForProcessing(option)+  1;	  String    value    =    options.getValueForProcessing(option);    	non-compiled	[CE]  	14	None	replace
47	[BUG]  [BUGGY]  String  value  =  option.getProperty(cmd);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  option.getProperty(cmd);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  option.getProperty(cmd);	  String    value    =    cmd.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  Option  value  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  value  =  options.getOption(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  value  =  options.getOption(option);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option)+  1;  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getStringValue(option)+  1;  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option)+  1;	  String    value    =    options.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
50	[BUG]  [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getStringValue(option,  expectedOpts);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getStringValue(option,  expectedOpts);	  String    value    =    options.getStringValue(option);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
51	[BUG]  [BUGGY]  String  value  =  options.getValue(option)+  1;  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  options.getValue(option)+  1;  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  options.getValue(option)+  1;	  String    value    =    options.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentOption  =  options.getOption(option,  expectedOpts);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option,  expectedOpts);	      Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  expectedOpts);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  cmd  =  options.getOption(opt,  expectedOpts);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(opt,  expectedOpts);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
54	[BUG]  [BUGGY]  Enumeration  e  =  options.getEnumeration(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Enumeration  e  =  options.getEnumeration(opt);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  options.getEnumeration(opt);	      Enumeration    e    =    options.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
55	[BUG]  [BUGGY]  Enumeration  e  =  options.getEnumeration(options);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Enumeration  e  =  options.getEnumeration(options);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Enumeration  e  =  options.getEnumeration(options);	      Enumeration    e    =    options.getEnumeration();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  cmd  =  options.getOption(option,  expectedOpts);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  cmd  =  options.getOption(option,  expectedOpts);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  option  =  options.getOption(option,  expectedOpts);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option,  expectedOpts);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)+  1;  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  option  =  options.getOption(option)+  1;  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  option  =  options.getOption(option)+  1;	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(option)+  1;  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentOption  =  options.getOption(option)+  1;  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(option)+  1;	      Option    currentOption    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
60	[BUG]  [BUGGY]  String  value  =  option.getValueForProcessing(option);  [CE]  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  String  value  =  option.getValueForProcessing(option);  [BUGGY]      if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	String  value  =  option.getValueForProcessing(option);	  String    value    =    cmd.getValueForProcessing(option);    	non-compiled	[CE]  	4	None	replace
61	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt,  cmd);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  currentOption  =  options.getOption(opt,  cmd);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  currentOption  =  options.getOption(opt,  cmd);	      Option    currentOption    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
62	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Option  opt  =  options.getOption(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Option  opt  =  options.getOption(option);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
63	[BUG]  [BUGGY]  Properties  properties  =  options.getProperties(option);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Properties  properties  =  options.getProperties(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getProperties(option);	      Properties    properties    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  Properties  properties  =  options.getOptions(option);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    if  (!cmd.hasOption(option))  {  Option  opt  =  options.getOption(option);        [BUGGY]  Properties  properties  =  options.getOptions(option);  [BUGGY]    String  value  =  properties.getProperty(option);  if  (opt.hasArg())  {  if  (opt.getValues()  ==  null  ||  opt.getValues().length  ==  0)  {  opt.addValueForProcessing(value);  }  }  else  if  (!(   "yes   ".equalsIgnoreCase(value)  ||     "true   ".equalsIgnoreCase(value)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  Enumeration  e  Option  currentOption  opt  List  expectedOpts  String  currentToken  option  value  Properties  properties  	projects/Cli30/src/main/java/org/apache/commons/cli/DefaultParser.java	0.2721655269759087	157	157	9	replace	Properties  properties  =  options.getOptions(option);	      Properties    properties    =    options.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
