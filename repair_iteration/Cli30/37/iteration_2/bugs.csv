bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length!=  0)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments  ==  null  ||  arguments.length!=  0)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments  ==  null  ||  arguments.length!=  0)  {	  if(arguments    ==    null    ||    arguments.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments!=  null  ||  arguments.length  ==  0)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments!=  null  ||  arguments.length  ==  0)  {	  if(arguments    ==    null    ||    arguments.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments  ==  null  ||  arguments.length  >=  0)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments  ==  null  ||  arguments.length  >=  0)  {	  if(arguments    ==    null    ||    arguments.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.get(cmd);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.get(cmd);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)this.options.get(cmd);	      OptionGroup    group    =(OptionGroup)options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(cmd,  stopAtNonOption);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)options.get(cmd,  stopAtNonOption);	      OptionGroup    group    =(OptionGroup)options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(cmd  -  1);  [CE]  illegal  start  of  type  [FE]                    AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(cmd  -  1);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)options.get(cmd  -  1);	      OptionGroup    group    =(OptionGroup)options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(false);	      OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  stopAtNonOption);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(true,  stopAtNonOption);	      OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(false,  stopAtNonOption);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(false,  stopAtNonOption);	      OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  eatTheRest);  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true,  eatTheRest);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(true,  eatTheRest);	      OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  1)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  1)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments  ==  null  ||  arguments.length  <  1)  {	  if(arguments    ==    null    ||    arguments.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length!=  2)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments  ==  null  ||  arguments.length!=  2)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments  ==  null  ||  arguments.length!=  2)  {	  if(arguments    ==    null    ||    arguments.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  1  ||  arguments.length  <  2)  {  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  1  ||  arguments.length  <  2)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments  ==  null  ||  arguments.length  <  1  ||  arguments.length  <  2)  {	  if(arguments    ==    null    ||    arguments.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(options);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  cmd.getOptionGroup(options);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  stopAtNonOption);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(opt,  stopAtNonOption);	      OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(t);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(t);	      OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.clone();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)this.options.clone();  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)this.options.clone();	      OptionGroup    group    =(OptionGroup)options.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opts.clone();  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)opts.clone();  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)opts.clone();	      OptionGroup    group    =(OptionGroup)options.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)cmd.clone();  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)cmd.clone();  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)cmd.clone();	      OptionGroup    group    =(OptionGroup)options.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  cmd.getOptions();  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  cmd.getOptions();	      OptionGroup    group    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.opts.get(cmd);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)this.opts.get(cmd);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)this.opts.get(cmd);	      OptionGroup    group    =(OptionGroup)opts.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getGroup();  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  cmd.getGroup();  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  cmd.getGroup();	      OptionGroup    group    =    cmd.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getSelectedOptionGroup();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  cmd.getSelectedOptionGroup();  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  cmd.getSelectedOptionGroup();	      OptionGroup    group    =    cmd.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptions(true);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptions(true);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptions(true);	      OptionGroup    group    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt);  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(opt);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)options.get(opt);	      OptionGroup    group    =(OptionGroup)options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(option);  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)options.get(option);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)options.get(option);	      OptionGroup    group    =(OptionGroup)options.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length  ==  2)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments  ==  null  ||  arguments.length  ==  2)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments  ==  null  ||  arguments.length  ==  2)  {	  if(arguments    ==    null    ||    arguments.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(stopAtNonOption);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(stopAtNonOption);	      OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  Option  group  =(OptionGroup)options.clone();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  Option  group  =(OptionGroup)options.clone();  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	Option  group  =(OptionGroup)options.clone();	      OptionGroup    group    =(OptionGroup)options.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =  options.getOptionGroup(null);	      OptionGroup    group    =    options.getOptionGroup(true);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opts.get(cmd  -  1);  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)opts.get(cmd  -  1);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)opts.get(cmd  -  1);	      OptionGroup    group    =(OptionGroup)opts.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)opts.get(options);  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)opts.get(options);  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)opts.get(options);	      OptionGroup    group    =(OptionGroup)opts.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  if(arguments!=  null  ||  arguments.length  <  2)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments!=  null  ||  arguments.length  <  2)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments!=  null  ||  arguments.length  <  2)  {	  if(arguments!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.length  >  0)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments!=  null  &&  arguments.length  >  0)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments!=  null  &&  arguments.length  >  0)  {	  if(arguments!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
37	[BUG]  [BUGGY]  if(arguments!=  null  &&  arguments.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments!=  null  &&  arguments.length  ==  0)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments!=  null  &&  arguments.length  ==  0)  {	  if(arguments!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  2  ||  arguments.length  >  0)  {  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  2  ||  arguments.length  >  0)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments  ==  null  ||  arguments.length  <  2  ||  arguments.length  >  0)  {	  if(arguments    ==    null    ||    arguments.length    <    2)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  =  0)  {  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  if(arguments  ==  null  ||  arguments.length  <  =  0)  {  [BUGGY]    {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	if(arguments  ==  null  ||  arguments.length  <  =  0)  {	  if(arguments    ==    null    ||    arguments.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  OptionGroup  group  =(OptionGroup)this.opts.clone();  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException    [CONTEXT]    group.setSelected(null);  }  setOptions(options);  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;    [BUGGY]  OptionGroup  group  =(OptionGroup)this.opts.clone();  [BUGGY]    if  (arguments  ==  null)  {  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(getOptions(),  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  OptionGroup  group  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli30/src/main/java/org/apache/commons/cli/Parser.java	0.2038642798875755	167	168	9	replace	OptionGroup  group  =(OptionGroup)this.opts.clone();	      OptionGroup    group    =(OptionGroup)options.clone();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
