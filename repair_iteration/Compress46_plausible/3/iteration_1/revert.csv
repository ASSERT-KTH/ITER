projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.getValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getLongValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.FUNCTION){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);DateunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getChronology().dateToZipLong(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);DateunixTimeToZipLong(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getChronology().dateToZipLong(d.getTime()/10000);unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getChronology().dateToZipLong(d.getTime()/10000);returnnewZipLong(unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);UnsupportedDateTimeFormatunixTime=DateTimeUtils.getInstance(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.HOUR_OF_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.toZipLong());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"));unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){for(Dated:d.getTime()){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getVersion());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()==null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());ZipLongunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()==null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){returnnewZipLong(unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);DateunixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);((ZipLong)d).setTime(unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);((ZipLong)d.getTime()/2).append(unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);((ZipLong)d.getTime()/2).setTime(unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);ZipLongunixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=getAccessTime(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=newZipLong(DateUtils.currentTimeMillis());unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime!=null){returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);ZipLongunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);UnsupportedDateTimeFormatunixTime=DateTimeUtils.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);ZipLongunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getTime(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);DateunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);ZipLongunixTimeToZipLong(d.getTime()/100000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getPeriodType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.type);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getCharset());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,12);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);ZipLongunixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()<1000){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){if(bit0_modifyTimePresent){returnnewZipLong(dateToZipLong(d.getTime()+1000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong(d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);longunixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()<1000){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){returnnewZipLong(unixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getEndTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()<=0){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);((ZipLong)d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);longtime=d.getTime()/10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);DateunixTimeToZipLong(d.getTime()/100000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);longtime=d.getTime()%10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);((ZipLong)d.getTime()).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMonth());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){if(bit0_modifyTimePresent){returnunixLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getMonth());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getSize());
