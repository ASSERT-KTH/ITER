bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  /  CAPACITY];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[str.length()  /  CAPACITY];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  /  CAPACITY];	  buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  -  CAPACITY];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[str.length()  -  CAPACITY];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  -  CAPACITY];	  buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  -  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[str.length()  -  1];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  -  1];	  buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
4	[BUG]  [BUGGY]  Character.isWhitespace(buffer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  Character.isWhitespace(buffer);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer);	      Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  Character.isLetterOrDigit(str);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  Character.isLetterOrDigit(str);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isLetterOrDigit(str);	      Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
6	[BUG]  [BUGGY]  Character.isISOControl(str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  Character.isISOControl(str);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isISOControl(str);	      Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
7	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  nullText);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  Character.isWhitespace(buffer,  nullText);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  nullText);	      Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
8	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  ];  append(str);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[str.length()  ];  append(str);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  ];  append(str);	      buffer    =    new    char[str.length()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  ];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  char[]  buffer  =  new  char[str.length()  ];  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  ];	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  *  CAPACITY];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  char[]  buffer  =  new  char[str.length()  *  CAPACITY];  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  *  CAPACITY];	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  +  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  char[]  buffer  =  new  char[str.length()  +  1];  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  +  1];	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  *  1];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[str.length()  *  1];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  *  1];	  buffer    =    new    char[str.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  append(buffer,  0,  size);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  size);	      append(str);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  append(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  append(buffer,  0,  str.length());  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  str.length());	      append(str);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  append(buffer,  nullText);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  append(buffer,  nullText);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  nullText);	      append(str);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
16	[BUG]  [BUGGY]  append(buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  append(buffer);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer);	      append(str);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
17	[BUG]  [BUGGY]  int  size  =  str.length()  +  CAPACITY;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  int  size  =  str.length()  +  CAPACITY;  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.length()  +  CAPACITY;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
18	[BUG]  [BUGGY]  int  size  =  str.length()  -  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  int  size  =  str.length()  -  1;  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.length()  -  1;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
19	[BUG]  [BUGGY]  int  size  =  buffer.length();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  int  size  =  buffer.length();  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  buffer.length();	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
20	[BUG]  [BUGGY]  int  size  =  str.length()  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  int  size  =  str.length()  -  2;  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.length()  -  2;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
21	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  ];  append(buffer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  char[]  buffer  =  new  char[str.length()  ];  append(buffer);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  ];  append(buffer);	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  char[]  buffer  =  nullText.toCharArray();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  char[]  buffer  =  nullText.toCharArray();  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  nullText.toCharArray();	      char[]    buffer    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  char[]  buffer  =  this.str.toCharArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  char[]  buffer  =  this.str.toCharArray();  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  this.str.toCharArray();	      char[]    buffer    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
24	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  ];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  char[]  buffer  =  new  char[str.length()  ];  append(buffer,  0,  size);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  ];  append(buffer,  0,  size);	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  +  CAPACITY];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  +  CAPACITY];  append(buffer,  0,  size);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharBuffer  buffer  =  new  CharBuffer(str.length()  +  CAPACITY];  append(buffer,  0,  size);	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  buffer  =  new  char[size()  /  CAPACITY];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[size()  /  CAPACITY];  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  /  CAPACITY];	      buffer    =    new    char[size()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  buffer  =  new  char[size()  -  CAPACITY];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[size()  -  CAPACITY];  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  -  CAPACITY];	      buffer    =    new    char[size()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  buffer  =  new  char[size()  ];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[size()  ];  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  ];	      buffer    =    new    char[size()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  buffer  =  new  char[size()  +  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[size()  +  1];  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  +  1];	      buffer    =    new    char[size()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  buffer  =  new  char[size()  ];  append(str);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[size()  ];  append(str);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  ];  append(str);	      buffer    =    new    char[size()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
32	[BUG]  [BUGGY]  buffer  =  new  char[size()  /  CAPACITY];  append(str);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[size()  /  CAPACITY];  append(str);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  /  CAPACITY];  append(str);	      buffer    =    new    char[size()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
33	[BUG]  [BUGGY]  buffer  =  new  char[size()  -  CAPACITY];  append(str);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[size()  -  CAPACITY];  append(str);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  -  CAPACITY];  append(str);	      buffer    =    new    char[size()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  int  size  =  str.lastIndexOf('-',  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  int  size  =  str.lastIndexOf('-',  0);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.lastIndexOf('-',  0);	      int    size    =    str.lastIndexOf('-');    	non-compiled	[CE]  <identifier>  expected	15	None	replace
35	[BUG]  [BUGGY]  int  size  =  str.indexOf('-',  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  int  size  =  str.indexOf('-',  0);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.indexOf('-',  0);	      int    size    =    str.lastIndexOf('-');    	non-compiled	[CE]  <identifier>  expected	15	None	replace
36	[BUG]  [BUGGY]  int  size  =  str.lastIndexOf('-',  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  int  size  =  str.lastIndexOf('-',  1);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.lastIndexOf('-',  1);	      int    size    =    str.lastIndexOf('-');    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isWhitespace(str);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isWhitespace(str);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isJavaIdentifierPart(this)||  Character.isWhitespace(str);	      Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
38	[BUG]  [BUGGY]  Character.isWhitespace(buffer)?  null  :  buffer;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  Character.isWhitespace(buffer)?  null  :  buffer;  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer)?  null  :  buffer;	      Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
39	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  ];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[buffer.length()  ];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[buffer.length()  ];	  buffer    =    new    char[str.length()    ];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  append(buffer,  0,  CAPACITY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  append(buffer,  0,  CAPACITY);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  CAPACITY);	      append(str);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
41	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  1];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[str.length()  1];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  1];	  buffer    =    new    char[str.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  *  2];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  buffer  =  new  char[str.length()  *  2];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  *  2];	  buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  +  1];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  char[]  buffer  =  new  char[str.length()  +  1];  append(buffer,  0,  size);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  +  1];  append(buffer,  0,  size);	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  int  size  =  str.lastIndexOf('-',  -1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  int  size  =  str.lastIndexOf('-',  -1);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.lastIndexOf('-',  -1);	      int    size    =    str.lastIndexOf('-');    	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  append(str.substring(0,  str.length()  -  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  append(str.substring(0,  str.length()  -  1));  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str.substring(0,  str.length()  -  1));	      append(str);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  append(str.charAt(0));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  append(str.charAt(0));  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str.charAt(0));	      append(str);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
47	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  -  CAPACITY]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  append(buffer,  0,  str.length()  -  CAPACITY]);  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  str.length()  -  CAPACITY]);	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {    [BUGGY]  Character.isWhitespace(buffer,  0,  str.length());  [BUGGY]    buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  0,  str.length());	      Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
