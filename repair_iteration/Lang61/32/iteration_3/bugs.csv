bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  +  2];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[str.length()  +  2];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  +  2];	  buffer    =    new    char[str.length()    *    2];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
2	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  /  2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[str.length()  /  2];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  /  2];	  buffer    =    new    char[str.length()    *    2];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
3	[BUG]  [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Char[]  buffer  =  new  char[str.length()  +  CAPACITY];	  char[]    buffer    =    new    char[str.length()    ];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  Character.isISOControl(buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isISOControl(buffer);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isISOControl(buffer);	  Character.isISOControl(str);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  Character.isDigit(str);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isDigit(str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isDigit(str);	  Character.isISOControl(str);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  Character.isISOControl(buffer,  str);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isISOControl(buffer,  str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isISOControl(buffer,  str);	  Character.isISOControl(str);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  buffer  =  new  String[str.length()];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  String[str.length()];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  String[str.length()];	  buffer    =    new    char[str.length()    -    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  buffer  =  new  char[capacity()  ];  append(str);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[capacity()  ];  append(str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[capacity()  ];  append(str);	  buffer    =    new    char[size()    ];    append(str);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
9	[BUG]  [BUGGY]  Character.isLetterOrDigit(buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isLetterOrDigit(buffer);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isLetterOrDigit(buffer);	  Character.isLetterOrDigit(str);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  Character.isLetterOrDigit(buffer,  str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isLetterOrDigit(buffer,  str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isLetterOrDigit(buffer,  str);	  Character.isLetterOrDigit(str);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  Character.isLetter(buffer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isLetter(buffer);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isLetter(buffer);	  Character.isLetterOrDigit(str);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  append(str.charAt(0),  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str.charAt(0),  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str.charAt(0),  CAPACITY);	  append(str.charAt(0));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
13	[BUG]  [BUGGY]  append(buffer,  str.charAt(0));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  str.charAt(0));  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  str.charAt(0));	  append(str.charAt(0));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
14	[BUG]  [BUGGY]  append(str.charAt(0)  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str.charAt(0)  +  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str.charAt(0)  +  CAPACITY);	  append(str.charAt(0));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
15	[BUG]  [BUGGY]  buffer  =  new  char[size()  *  CAPACITY];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[size()  *  CAPACITY];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  *  CAPACITY];	  buffer    =    new    char[size()    -    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	28	None	replace
16	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[buffer.length()  +  1];	  buffer    =    new    char[buffer.length()    ];    	non-compiled	[CE]  <identifier>  expected	39	None	replace
17	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  2];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[buffer.length()  +  2];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[buffer.length()  +  2];	  buffer    =    new    char[buffer.length()    ];    	non-compiled	[CE]  <identifier>  expected	39	None	replace
18	[BUG]  [BUGGY]  char  size  =  str.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char  size  =  str.length();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char  size  =  str.length();	  int    size    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
19	[BUG]  [BUGGY]  int  size  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  str.length()  +  1;  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.length()  +  1;	  int    size    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
20	[BUG]  [BUGGY]  buffer  =  new  char[size()  *  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[size()  *  1];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  *  1];	  buffer    =    new    char[size()    +    1];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
21	[BUG]  [BUGGY]  Character.isWhitespace(str)?  null  :  buffer;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(str)?  null  :  buffer;  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(str)?  null  :  buffer;	  Character.isWhitespace(buffer)?    null    :    buffer;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
22	[BUG]  [BUGGY]  Character.isWhitespace(buffer)?  null  :  buffer[0];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer)?  null  :  buffer[0];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer)?  null  :  buffer[0];	  Character.isWhitespace(buffer)?    null    :    buffer;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
23	[BUG]  [BUGGY]  Character.isWhitespace(buffer)?  null  :  buffer.toCharArray();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer)?  null  :  buffer.toCharArray();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer)?  null  :  buffer.toCharArray();	  Character.isWhitespace(buffer)?    null    :    buffer;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
24	[BUG]  [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isWhitespace(str,  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isWhitespace(str,  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isJavaIdentifierPart(this)||  Character.isWhitespace(str,  CAPACITY);	  Character.isJavaIdentifierPart(this)||    Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
25	[BUG]  [BUGGY]  Character.isJavaIdentifierPart(this)&&  Character.isWhitespace(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isJavaIdentifierPart(this)&&  Character.isWhitespace(str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isJavaIdentifierPart(this)&&  Character.isWhitespace(str);	  Character.isJavaIdentifierPart(this)||    Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
26	[BUG]  [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isWhitespace(capacity);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isWhitespace(capacity);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isJavaIdentifierPart(this)||  Character.isWhitespace(capacity);	  Character.isJavaIdentifierPart(this)||    Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
27	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer);	  char[]    buffer    =    new    char[str.length()    ];    append(buffer);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
28	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  ];  append(buffer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  ];  append(buffer);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  new  char[str.length()  ];  append(buffer);	  char[]    buffer    =    new    char[str.length()    ];    append(buffer);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
29	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  +  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharBuffer  buffer  =  new  CharBuffer(str.length()  +  CAPACITY);	  char[]    buffer    =    new    char[str.length()    ];    append(buffer);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
30	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  buffer.length());  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  buffer.length());	  append(buffer);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
31	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  buffer.length()  -  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  buffer.length()  -  CAPACITY);	  append(buffer,    0,    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
32	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  buffer.length()  +  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  buffer.length()  +  CAPACITY);	  append(buffer,    0,    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
33	[BUG]  [BUGGY]  int  size  =  str.length()  -  CAPACITY;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  str.length()  -  CAPACITY;  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.length()  -  CAPACITY;	  int    size    =    str.length()    +    CAPACITY;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
34	[BUG]  [BUGGY]  int  size  =  str.length()  /  CAPACITY;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  str.length()  /  CAPACITY;  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.length()  /  CAPACITY;	  int    size    =    str.length()    +    CAPACITY;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  /  1];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[str.length()  /  1];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  /  1];	  buffer    =    new    char[str.length()    *    1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
36	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  ];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  ];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  new  char[str.length()  ];  append(buffer,  0,  size);	  CharSequence[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
37	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  1];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  1];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  new  char[str.length()  +  1];  append(buffer,  0,  size);	  CharSequence[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
38	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  ];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  ];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  new  char[str.length()  ];	  CharSequence[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
39	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  *  CAPACITY];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  *  CAPACITY];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  new  char[str.length()  *  CAPACITY];  append(buffer,  0,  size);	  CharSequence[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
40	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  0];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[str.length()  0];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  0];	  buffer    =    new    char[str.length()    1];    	non-compiled	[CE]  <identifier>  expected	41	None	replace
41	[BUG]  [BUGGY]  buffer  =  new  char[capacity()  ];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[capacity()  ];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[capacity()  ];	  buffer    =    new    char[size()    ];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
42	[BUG]  [BUGGY]  char[]  buffer  =  this.str.toCharArray(CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =  this.str.toCharArray(CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  this.str.toCharArray(CAPACITY);	  char[]    buffer    =    this.str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
43	[BUG]  [BUGGY]  int  size  =  str.lastIndexOf('-',  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  str.lastIndexOf('-',  2);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.lastIndexOf('-',  2);	  int    size    =    str.lastIndexOf('-',    -1);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
44	[BUG]  [BUGGY]  buffer  =  new  char[size()  *  CAPACITY];  append(str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[size()  *  CAPACITY];  append(str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  *  CAPACITY];  append(str);	  buffer    =    new    char[size()    /    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
45	[BUG]  [BUGGY]  if(str.length()  >  0)  {  buffer  =  new  char[str.length()  ];  append(str);  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str.length()  >  0)  {  buffer  =  new  char[str.length()  ];  append(str);  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  >  0)  {  buffer  =  new  char[str.length()  ];  append(str);  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }	  buffer    =    new    char[str.length()    ];    append(str);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  if(str.length()  >  0)  {  buffer  =  new  char[str.length()  ];  append(str);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str.length()  >  0)  {  buffer  =  new  char[str.length()  ];  append(str);  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  >  0)  {  buffer  =  new  char[str.length()  ];  append(str);  }	  buffer    =    new    char[str.length()    ];    append(str);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  str.length()  +  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  str.length()  +  CAPACITY);	  append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
48	[BUG]  [BUGGY]  append(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str,  0,  buffer.length());  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str,  0,  buffer.length());	  append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
49	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  ==  0)  {  char[]  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
50	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence  <?>  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence  <?>  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
51	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  1];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  1];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  1];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
52	[BUG]  [BUGGY]  Integer  size  =  str.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Integer  size  =  str.length();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Integer  size  =  str.length();	  int    size    =    str.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
53	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  0,  buffer.length());  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  0,  buffer.length());	  Character.isWhitespace(buffer);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  append(buffer,  0,  nullText);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  nullText);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  nullText);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
55	[BUG]  [BUGGY]  append(buffer,  nullText,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  nullText,  0);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  nullText,  0);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
56	[BUG]  [BUGGY]  append(buffer,  nullText,  buffer.length());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  nullText,  buffer.length());  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  nullText,  buffer.length());	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
57	[BUG]  [BUGGY]  append(buffer,  nullText,  pos);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  nullText,  pos);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  nullText,  pos);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
58	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  CharSequence[str.length()  +  CAPACITY];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence[]  buffer  =  new  CharSequence[str.length()  +  CAPACITY];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  new  CharSequence[str.length()  +  CAPACITY];  append(buffer,  0,  size);	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
59	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  +  1];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  +  1];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharBuffer  buffer  =  new  CharBuffer(str.length()  +  1];  append(buffer,  0,  size);	  CharBuffer    buffer    =    new    CharBuffer(str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
60	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharBuffer  buffer  =  new  CharBuffer(buffer.length()  +  CAPACITY];  append(buffer,  0,  size);	  CharBuffer    buffer    =    new    CharBuffer(str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
61	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  -  CAPACITY];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  -  CAPACITY];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharBuffer  buffer  =  new  CharBuffer(str.length()  -  CAPACITY];  append(buffer,  0,  size);	  CharBuffer    buffer    =    new    CharBuffer(str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
62	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  /  CAPACITY];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  /  CAPACITY];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharBuffer  buffer  =  new  CharBuffer(str.length()  /  CAPACITY];  append(buffer,  0,  size);	  CharBuffer    buffer    =    new    CharBuffer(str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
63	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  +  CAPACITY]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  str.length()  +  CAPACITY]);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  str.length()  +  CAPACITY]);	  append(buffer,    0,    str.length()    -    CAPACITY]);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
64	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  -  CAPACITY]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  buffer.length()  -  CAPACITY]);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  buffer.length()  -  CAPACITY]);	  append(buffer,    0,    str.length()    -    CAPACITY]);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
65	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  +  CAPACITY]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  buffer.length()  +  CAPACITY]);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  buffer.length()  +  CAPACITY]);	  append(buffer,    0,    str.length()    -    CAPACITY]);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
66	[BUG]  [BUGGY]  append(str,  0,  buffer.length()  -  CAPACITY]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str,  0,  buffer.length()  -  CAPACITY]);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str,  0,  buffer.length()  -  CAPACITY]);	  append(buffer,    0,    str.length()    -    CAPACITY]);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
67	[BUG]  [BUGGY]  Character.isWhitespace(str,  nullText);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(str,  nullText);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(str,  nullText);	  Character.isWhitespace(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
68	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  nullText,  buffer.length());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  nullText,  buffer.length());  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  nullText,  buffer.length());	  Character.isWhitespace(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
69	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  0,  buffer.length);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  0,  buffer.length);	  Character.isWhitespace(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  nullText,  pos);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  nullText,  pos);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  nullText,  pos);	  Character.isWhitespace(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
71	[BUG]  [BUGGY]  String[]  buffer  =  nullText.toCharArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  String[]  buffer  =  nullText.toCharArray();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	String[]  buffer  =  nullText.toCharArray();	  char[]    buffer    =    nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
72	[BUG]  [BUGGY]  int  size  =  buffer.length()  +  CAPACITY;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  buffer.length()  +  CAPACITY;  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  buffer.length()  +  CAPACITY;	  int    size    =    buffer.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
73	[BUG]  [BUGGY]  char  size  =  buffer.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char  size  =  buffer.length();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char  size  =  buffer.length();	  int    size    =    buffer.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
74	[BUG]  [BUGGY]  int  size  =  this.buffer.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  this.buffer.length();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  this.buffer.length();	  int    size    =    buffer.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
75	[BUG]  [BUGGY]  append(str.substring(0,  str.length()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str.substring(0,  str.length()));  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str.substring(0,  str.length()));	  append(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
76	[BUG]  [BUGGY]  append(str.substring(0,  str.length()  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str.substring(0,  str.length()  +  1));  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str.substring(0,  str.length()  +  1));	  append(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
77	[BUG]  [BUGGY]  append(str.substring(0,  str.length()  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str.substring(0,  str.length()  1));  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str.substring(0,  str.length()  1));	  append(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
78	[BUG]  [BUGGY]  append(buffer,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  size  -  1);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  size  -  1);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
79	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  buffer.length);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  buffer.length);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
80	[BUG]  [BUGGY]  append(buffer,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  size  +  1);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  size  +  1);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
81	[BUG]  [BUGGY]  buffer  =  new  String[str.length()  -  CAPACITY];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  String[str.length()  -  CAPACITY];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  String[str.length()  -  CAPACITY];	  buffer    =    new    char[str.length()    -    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
82	[BUG]  [BUGGY]  int  size  =  str.indexOf('-',  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  str.indexOf('-',  1);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.indexOf('-',  1);	  int    size    =    str.indexOf('-',    0);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
83	[BUG]  [BUGGY]  int  size  =  str.indexOf('-',  -1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  str.indexOf('-',  -1);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.indexOf('-',  -1);	  int    size    =    str.indexOf('-',    0);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
84	[BUG]  [BUGGY]  Character.isWhitespace(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(str,  0,  buffer.length());  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(str,  0,  buffer.length());	  Character.isWhitespace(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
85	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  0,  str.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  0,  str.length()  +  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  0,  str.length()  +  CAPACITY);	  Character.isWhitespace(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
86	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  0,  buffer.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  0,  buffer.length()  -  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  0,  buffer.length()  -  CAPACITY);	  Character.isWhitespace(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
87	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  *  2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =  new  char[str.length()  *  2];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  *  2];	  char[]    buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
88	[BUG]  [BUGGY]  if(str  ==  null)  {  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str  ==  null)  {  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str  ==  null)  {  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
89	[BUG]  [BUGGY]  if(str  ==  null)  {  if(str.length()  ==  0)  {  buffer[0]  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str  ==  null)  {  if(str.length()  ==  0)  {  buffer[0]  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str  ==  null)  {  if(str.length()  ==  0)  {  buffer[0]  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
90	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  CAPACITY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  CAPACITY);	  Character.isWhitespace(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
91	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  size);	  Character.isWhitespace(buffer);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
92	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  0);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  0);	  Character.isWhitespace(buffer);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
93	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  /  4];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[str.length()  /  4];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  /  4];	  buffer    =    new    char[str.length()    /    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
94	[BUG]  [BUGGY]  MutableString  str  =  str.toLowerCase();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  MutableString  str  =  str.toLowerCase();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	MutableString  str  =  str.toLowerCase();	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
95	[BUG]  [BUGGY]  CharTypes.checkArgument(str.length()  ==  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharTypes.checkArgument(str.length()  ==  0);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharTypes.checkArgument(str.length()  ==  0);	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
96	[BUG]  [BUGGY]  CharTypes.checkState(str.length()  ==  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharTypes.checkState(str.length()  ==  0);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharTypes.checkState(str.length()  ==  0);	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
97	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[buffer.length()  +  CAPACITY];	  buffer    =    new    char[buffer.length()    ];    	non-compiled	[CE]  <identifier>  expected	39	None	replace
98	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer);	  buffer    =    new    char[str.length()    ];    append(str);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
99	[BUG]  [BUGGY]  char[]  buffer  =  this.str.toCharArray()  +  CAPACITY;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =  this.str.toCharArray()  +  CAPACITY;  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  this.str.toCharArray()  +  CAPACITY;	  char[]    buffer    =    this.str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
100	[BUG]  [BUGGY]  char[]  buffer  =  this.str.getChars();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =  this.str.getChars();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  this.str.getChars();	  char[]    buffer    =    this.str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
101	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  -  1];  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  -  1];  append(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharBuffer  buffer  =  new  CharBuffer(str.length()  -  1];  append(buffer,  0,  size);	  CharBuffer    buffer    =    new    CharBuffer(str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
102	[BUG]  [BUGGY]  char[]  buffer  =  new  char[nullText.toCharArray()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =  new  char[nullText.toCharArray()  +  CAPACITY];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[nullText.toCharArray()  +  CAPACITY];	  char[]    buffer    =    nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
103	[BUG]  [BUGGY]  char[]  buffer  =  this.nullText.toCharArray();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =  this.nullText.toCharArray();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  this.nullText.toCharArray();	  char[]    buffer    =    nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
104	[BUG]  [BUGGY]  buffer  =  new  char[size()  +  1];  append(str);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[size()  +  1];  append(str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  +  1];  append(str);	  buffer    =    new    char[size()    ];    append(str);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
105	[BUG]  [BUGGY]  buffer  =  new  char[size()  +  2];  append(str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[size()  +  2];  append(str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  +  2];  append(str);	  buffer    =    new    char[size()    ];    append(str);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
106	[BUG]  [BUGGY]  Char[]  buffer  =  new  char[str.length()];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Char[]  buffer  =  new  char[str.length()];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Char[]  buffer  =  new  char[str.length()];	  char[]    buffer    =    new    char[str.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
107	[BUG]  [BUGGY]  append(buffer,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0);	  append(buffer);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
108	[BUG]  [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isWhitespace(buffer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isWhitespace(buffer);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isJavaIdentifierPart(this)||  Character.isWhitespace(buffer);	  Character.isJavaIdentifierPart(this)||    Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
109	[BUG]  [BUGGY]  append(buffer,  nullText,  CAPACITY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  nullText,  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  nullText,  CAPACITY);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
110	[BUG]  [BUGGY]  append(buffer,  nullText,  size);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  nullText,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  nullText,  size);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
111	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  +  2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =  new  char[str.length()  +  2];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  +  2];	  char[]    buffer    =    new    char[str.length()    ];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
112	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  -  1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  str.length()  -  1]);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  str.length()  -  1]);	  append(buffer,    0,    str.length()    -    CAPACITY]);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
113	[BUG]  [BUGGY]  buffer  =  new  char[size()  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[size()  1];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[size()  1];	  buffer    =    new    char[size()    +    1];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
114	[BUG]  [BUGGY]  buffer  =  new  char[capacity];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[capacity];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[capacity];	  buffer    =    new    char[size()    ];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
115	[BUG]  [BUGGY]  buffer  =  new  char[CAPACITY];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[CAPACITY];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[CAPACITY];	  buffer    =    new    char[size()    ];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
116	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  0,  str.length()  -  1);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  0,  str.length()  -  1);	  append(buffer,    0,    str.length()    -    CAPACITY]);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
117	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  nullText,  str);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  nullText,  str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  nullText,  str);	  Character.isWhitespace(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
118	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  str);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  str);	  Character.isWhitespace(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
119	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  buffer,  CAPACITY);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  buffer,  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  buffer,  CAPACITY);	  Character.isWhitespace(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
120	[BUG]  [BUGGY]  if(str.length()  <  =  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str.length()  <  =  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  <  =  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
121	[BUG]  [BUGGY]  if(str.length()  >  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str.length()  >  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  >  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
122	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  ];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  ];  append(buffer,  0,  size);  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  ==  0)  {  char[]  buffer  =  new  char[str.length()  ];  append(buffer,  0,  size);  }	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
123	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length()  +  CAPACITY];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharBuffer  buffer  =  new  CharBuffer(str.length()  +  CAPACITY];	  CharBuffer    buffer    =    new    CharBuffer(str.length()    +    CAPACITY];    append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
124	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  *  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =  new  char[str.length()  *  1];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  *  1];	  char[]    buffer    =    new    char[str.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
125	[BUG]  [BUGGY]  CharSequence[]  buffer  =  str.toCharArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence[]  buffer  =  str.toCharArray();  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  str.toCharArray();	  char[]    buffer    =    nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
126	[BUG]  [BUGGY]  char[]  buffer  =(this.str!=  null?  this.str.toCharArray()  :  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =(this.str!=  null?  this.str.toCharArray()  :  0);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =(this.str!=  null?  this.str.toCharArray()  :  0);	  char[]    buffer    =    this.str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
127	[BUG]  [BUGGY]  if(str.length()  >  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  if(str.length()  >  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	if(str.length()  >  0)  {  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  size);  }  else  {  buffer  =  new  char[buffer.length()  ];  }	  if(str.length()    ==    0)    {    char[]    buffer    =    new    char[str.length()    +    CAPACITY];    append(buffer,    0,    size);    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
128	[BUG]  [BUGGY]  int  size  =  str.lastIndexOf('-',  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  str.lastIndexOf('-',  4);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.lastIndexOf('-',  4);	  int    size    =    str.lastIndexOf('-',    1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
129	[BUG]  [BUGGY]  append(str,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str,  0,  size);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
130	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];	  char[]    buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
131	[BUG]  [BUGGY]  int  size  =  str.indexOf('-',  0)+  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  int  size  =  str.indexOf('-',  0)+  1;  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	int  size  =  str.indexOf('-',  0)+  1;	  int    size    =    str.indexOf('-',    0);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
132	[BUG]  [BUGGY]  append(str,  0,  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str,  0,  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str,  0,  CAPACITY);	  append(buffer,    0,    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
133	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  0,  size);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  0,  size);	  Character.isWhitespace(buffer);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
134	[BUG]  [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isDigit(str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isJavaIdentifierPart(this)||  Character.isDigit(str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isJavaIdentifierPart(this)||  Character.isDigit(str);	  Character.isJavaIdentifierPart(this)||    Character.isWhitespace(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
135	[BUG]  [BUGGY]  append(buffer,  nullText,  str);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  nullText,  str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  nullText,  str);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
136	[BUG]  [BUGGY]  append(str,  nullText);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str,  nullText);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str,  nullText);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
137	[BUG]  [BUGGY]  append(buffer,  str);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(buffer,  str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(buffer,  str);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
138	[BUG]  [BUGGY]  Character.isWhitespace(buffer,  0,  str.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer,  0,  str.length()  -  CAPACITY);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer,  0,  str.length()  -  CAPACITY);	  Character.isWhitespace(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
139	[BUG]  [BUGGY]  Character.isWhitespace(buffer)?  null  :  buffer.charAt(0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isWhitespace(buffer)?  null  :  buffer.charAt(0);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isWhitespace(buffer)?  null  :  buffer.charAt(0);	  Character.isWhitespace(buffer)?    null    :    buffer;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
140	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  +  1];  append(str);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  buffer  =  new  char[str.length()  +  1];  append(str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	buffer  =  new  char[str.length()  +  1];  append(str);	  buffer    =    new    char[str.length()    ];    append(str);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
141	[BUG]  [BUGGY]  ensureCapacity(buffer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  ensureCapacity(buffer);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	ensureCapacity(buffer);	  append(buffer);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
142	[BUG]  [BUGGY]  append(str.charAt(0),  buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  append(str.charAt(0),  buffer);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	append(str.charAt(0),  buffer);	  append(str.charAt(0));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
143	[BUG]  [BUGGY]  Character.isLetter(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  Character.isLetter(str);  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	Character.isLetter(str);	  Character.isLetterOrDigit(str);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
144	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {      [BUGGY]  char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  str.length());  [BUGGY]      buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	125	125	2	replace	char[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(buffer,  0,  str.length());	  char[]    buffer    =    new    char[str.length()    ];    append(buffer);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
