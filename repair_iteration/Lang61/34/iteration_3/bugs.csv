bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  CharTypes.checkState(buffer.length()  ==  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(buffer.length()  ==  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(buffer.length()  ==  0);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
2	[BUG]  [BUGGY]  CharTypes.checkState(buffer.length()!=  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(buffer.length()!=  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(buffer.length()!=  0);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
3	[BUG]  [BUGGY]  CharTypes.checkState(buffer.length()  ==  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(buffer.length()  ==  CAPACITY);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(buffer.length()  ==  CAPACITY);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
4	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length();  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length();	  return    new    String(buffer,    0,    buffer.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
5	[BUG]  [BUGGY]  return(String)str.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)str.clone();  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)str.clone();	  return(String)buffer.clone();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
6	[BUG]  [BUGGY]  return(String)buffer.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)buffer.toString();  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)buffer.toString();	  return(String)buffer.clone();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
7	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  +  CAPACITY];	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
8	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  ];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  ];  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  ];	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
9	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  +  1];	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
10	[BUG]  [BUGGY]  return  new  String(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(str,  0,  buffer.length());  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(str,  0,  buffer.length());	  return    new    String(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
11	[BUG]  [BUGGY]  return  new  String(nullText,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(nullText,  0,  buffer.length());  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(nullText,  0,  buffer.length());	  return    new    String(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
12	[BUG]  [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length()  /  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length()  /  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(buffer,  0,  buffer.length()  /  1);	  return    new    StrBuilder(buffer,    0,    buffer.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
13	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  new  char[capacity];  append(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharSequence  <?>  buffer  =  new  char[capacity];  append(str);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharSequence  <?>  buffer  =  new  char[capacity];  append(str);	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
14	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  new  char[Capacity];  append(str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharSequence  <?>  buffer  =  new  char[Capacity];  append(str);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharSequence  <?>  buffer  =  new  char[Capacity];  append(str);	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
15	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  new  char[CAPACITY];  append(str);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharSequence  <?>  buffer  =  new  char[CAPACITY];  append(str);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharSequence  <?>  buffer  =  new  char[CAPACITY];  append(str);	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
16	[BUG]  [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length()  -  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(buffer,  0,  buffer.length()  -  CAPACITY);	  return    new    StrBuilder(buffer,    0,    buffer.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
17	[BUG]  [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length()  /  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length()  /  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(buffer,  0,  buffer.length()  /  CAPACITY);	  return    new    StrBuilder(buffer,    0,    buffer.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
18	[BUG]  [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length(),  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length(),  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(buffer,  0,  buffer.length(),  CAPACITY);	  return    new    StrBuilder(buffer,    0,    buffer.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
19	[BUG]  [BUGGY]  Append(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  Append(buffer,  0,  buffer.length());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	Append(buffer,  0,  buffer.length());	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
20	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  buffer.length()  -  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  buffer.length()  -  1);	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
21	[BUG]  [BUGGY]  CharTypes.checkState(buffer  >=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(buffer  >=  null);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(buffer  >=  null);	  CharTypes.checkState(buffer!=    null);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  CharTypes.checkState(buffer  >>  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(buffer  >>  null);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(buffer  >>  null);	  CharTypes.checkState(buffer!=    null);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length()  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length()  /  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length()  /  1);	  return    new    String(buffer,    0,    buffer.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
24	[BUG]  [BUGGY]  append(str,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(str,  0,  size);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(str,  0,  size);	  if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
25	[BUG]  [BUGGY]  append(buffer,  nullText,  buffer.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  nullText,  buffer.length());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  nullText,  buffer.length());	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
26	[BUG]  [BUGGY]  append(buffer,  0,  nullText);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  nullText);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
27	[BUG]  [BUGGY]  append(buffer,  nullText,  pos);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  nullText,  pos);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  nullText,  pos);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
28	[BUG]  [BUGGY]  append(buffer,  nullText,  str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  nullText,  str);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  nullText,  str);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
29	[BUG]  [BUGGY]  append(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  str.length());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  str.length());	  append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
30	[BUG]  [BUGGY]  append0(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append0(buffer,  0,  str.length());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append0(buffer,  0,  str.length());	  append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
31	[BUG]  [BUGGY]  append(str,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(str,  0,  buffer.length()  -  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(str,  0,  buffer.length()  -  1);	  append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
32	[BUG]  [BUGGY]  append(str,  0,  buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(str,  0,  buffer.length()  +  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(str,  0,  buffer.length()  +  1);	  append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
33	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  buffer.length()  +  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  buffer.length()  +  1);	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
34	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  append(buffer,  0,  size);  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  CAPACITY);	  System.arraycopy(buffer,    0,    buffer,    0,    initialCapacity);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  initialCapacity  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  initialCapacity  -  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  initialCapacity  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    initialCapacity);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
37	[BUG]  [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
38	[BUG]  [BUGGY]  if(capacity  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
39	[BUG]  [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[Capacity];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[Capacity];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[Capacity];  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
40	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  buffer.length()  -  2);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  buffer.length()  -  2);	  append(buffer,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
41	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  buffer.length()  +  2);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  buffer.length()  +  2);	  append(buffer,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
42	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  str.length()  +  CAPACITY);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  str.length()  +  CAPACITY);	  append(str,    0,    buffer.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  buffer.length()  -  CAPACITY);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  buffer.length()  -  CAPACITY);	  append(str,    0,    buffer.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  parent!=  null?  parent.toString()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  parent!=  null?  parent.toString()  :  null;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	parent!=  null?  parent.toString()  :  null;	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
45	[BUG]  [BUGGY]  parent!=  null?  parent.getParent()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  parent!=  null?  parent.getParent()  :  null;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	parent!=  null?  parent.getParent()  :  null;	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
46	[BUG]  [BUGGY]  Append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  Append(buffer,  0,  size);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	Append(buffer,  0,  size);	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
47	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  new  char[capacity];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharSequence  <?>  buffer  =  new  char[capacity];  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharSequence  <?>  buffer  =  new  char[capacity];	  if(capacity    >=    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
48	[BUG]  [BUGGY]  CharTypes.checkState(capacity  >=  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(capacity  >=  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(capacity  >=  0);	  if(capacity    >=    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
49	[BUG]  [BUGGY]  CharSequence  <  Object>  buffer  =  getCharSequence(str);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharSequence  <  Object>  buffer  =  getCharSequence(str);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharSequence  <  Object>  buffer  =  getCharSequence(str);	  if(capacity    >=    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
50	[BUG]  [BUGGY]  CharTypes.checkState(capacity  ==  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(capacity  ==  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(capacity  ==  1);	  CharTypes.checkState(capacity    ==    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  CharTypes.checkState(capacity!=  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(capacity!=  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(capacity!=  0);	  CharTypes.checkState(capacity    ==    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
52	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length()  *  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length()  *  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length()  *  CAPACITY);	  return    new    String(buffer,    0,    buffer.length()    -    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  buffer.length);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  buffer.length);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
54	[BUG]  [BUGGY]  append(buffer,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  size  -  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  size  -  1);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
55	[BUG]  [BUGGY]  append(buffer,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  size  +  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  size  +  1);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
56	[BUG]  [BUGGY]  append(buffer,  0,  size,  buffer.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  size,  buffer.length);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  size,  buffer.length);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
57	[BUG]  [BUGGY]  buffer  =  new  char[capacity];  append(str);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[capacity];  append(str);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[capacity];  append(str);	  if(capacity    ==    0)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
58	[BUG]  [BUGGY]  buffer  =  new  char[CAPACITY];  append(str);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[CAPACITY];  append(str);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[CAPACITY];  append(str);	  if(capacity    ==    0)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
59	[BUG]  [BUGGY]  buffer  =  new  char[capacity];  append(initialCapacity);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[capacity];  append(initialCapacity);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[capacity];  append(initialCapacity);	  if(capacity    ==    0)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
60	[BUG]  [BUGGY]  return(char)buffer.toCharArray()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(char)buffer.toCharArray()  +  1;  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(char)buffer.toCharArray()  +  1;	  return(char)buffer.toCharArray();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
61	[BUG]  [BUGGY]  return(char)buffer.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(char)buffer.toString();  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(char)buffer.toString();	  return(char)buffer.toCharArray();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
62	[BUG]  [BUGGY]  if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(size    >    0)    {    if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
63	[BUG]  [BUGGY]  if(size  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(size  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(size  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(size    >    0)    {    if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
64	[BUG]  [BUGGY]  if(initialCapacity  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(initialCapacity  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(initialCapacity  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(size    >    0)    {    if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
65	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(size  >  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(size  >  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(size  >  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(size    >    0)    {    if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
66	[BUG]  [BUGGY]  while(buffer!=  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  while(buffer!=  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	while(buffer!=  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }	  if(buffer!=    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
67	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }	  if(buffer!=    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
68	[BUG]  [BUGGY]  while(buffer!=  null)  {  buffer  =  new  char[size()  /  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  while(buffer!=  null)  {  buffer  =  new  char[size()  /  1];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	while(buffer!=  null)  {  buffer  =  new  char[size()  /  1];  append(str);  }	  if(buffer!=    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
69	[BUG]  [BUGGY]  return(String)buffer.toUpperCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)buffer.toUpperCase();  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)buffer.toUpperCase();	  return(String)buffer.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  return(String)buffer.toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)buffer.toLowerCase(Locale.ENGLISH);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)buffer.toLowerCase(Locale.ENGLISH);	  return(String)buffer.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
71	[BUG]  [BUGGY]  return(String)buffer.toLowerCase(Locale.US);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)buffer.toLowerCase(Locale.US);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)buffer.toLowerCase(Locale.US);	  return(String)buffer.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
72	[BUG]  [BUGGY]  return(Character)buffer.toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(Character)buffer.toCharArray();  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(Character)buffer.toCharArray();	  return(String)buffer.toCharArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
73	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length()  /  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length()  /  2);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length()  /  2);	  return    new    String(buffer,    0,    buffer.length()    /    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
74	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length()  /  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length()  /  4);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length()  /  4);	  return    new    String(buffer,    0,    buffer.length()    /    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
75	[BUG]  [BUGGY]  buffer  =  new  char[size()  ];  append(str);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[size()  ];  append(str);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[size()  ];  append(str);	  buffer    =    new    char[size()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
76	[BUG]  [BUGGY]  buffer  =  new  char[size()  /  CAPACITY];  append(str);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[size()  /  CAPACITY];  append(str);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[size()  /  CAPACITY];  append(str);	  buffer    =    new    char[size()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
77	[BUG]  [BUGGY]  buffer  =  new  char[size()  -  CAPACITY];  append(str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[size()  -  CAPACITY];  append(str);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[size()  -  CAPACITY];  append(str);	  buffer    =    new    char[size()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  /  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  /  2);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  size  /  2);	  System.arraycopy(buffer,    0,    buffer,    0,    size    -    2);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
79	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  /  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  buffer.length()  /  CAPACITY);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  buffer.length()  /  CAPACITY);	  append(buffer,    0,    buffer.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
80	[BUG]  [BUGGY]  append(buffer,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  size);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  size);	  append(capacity,    size);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
81	[BUG]  [BUGGY]  append(initialCapacity,  buffer.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(initialCapacity,  buffer.length);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(initialCapacity,  buffer.length);	  append(capacity,    size);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
82	[BUG]  [BUGGY]  append(initialCapacity,  buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(initialCapacity,  buffer);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(initialCapacity,  buffer);	  append(capacity,    size);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
83	[BUG]  [BUGGY]  append(initialCapacity,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(initialCapacity,  size);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(initialCapacity,  size);	  append(capacity,    size);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
84	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
85	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
86	[BUG]  [BUGGY]  return(String)str.toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)str.toLowerCase();  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)str.toLowerCase();	  return(String)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
87	[BUG]  [BUGGY]  return(String)str.substring(0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)str.substring(0,  str.length()  -  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)str.substring(0,  str.length()  -  1);	  return(String)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
88	[BUG]  [BUGGY]  append(buffer,  pos);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  pos);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  pos);	  append(buffer);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
89	[BUG]  [BUGGY]  append('n',  buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append('n',  buffer);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append('n',  buffer);	  append('n');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
90	[BUG]  [BUGGY]  append('n',  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append('n',  buffer.length()  +  CAPACITY);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append('n',  buffer.length()  +  CAPACITY);	  append('n');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
91	[BUG]  [BUGGY]  append('n',  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append('n',  buffer.length()  -  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append('n',  buffer.length()  -  1);	  append('n');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  size  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  size  -  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	System.arraycopy(buffer,  0,  buffer,  1,  size  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  /  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  /  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  size  /  1);	  System.arraycopy(buffer,    0,    buffer,    0,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
94	[BUG]  [BUGGY]  append(new  String(buffer,  0,  buffer.length()  +  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(new  String(buffer,  0,  buffer.length()  +  1));  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(new  String(buffer,  0,  buffer.length()  +  1));	  append(new    String(buffer,    0,    buffer.length()));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
95	[BUG]  [BUGGY]  append(new  String(buffer,  0,  buffer.length()  -  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(new  String(buffer,  0,  buffer.length()  -  1));  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(new  String(buffer,  0,  buffer.length()  -  1));	  append(new    String(buffer,    0,    buffer.length()));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
96	[BUG]  [BUGGY]  append(new  String(buffer,  0,  buffer.length()  +  2));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(new  String(buffer,  0,  buffer.length()  +  2));  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(new  String(buffer,  0,  buffer.length()  +  2));	  append(new    String(buffer,    0,    buffer.length()));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
97	[BUG]  [BUGGY]  append(new  String(buffer,  0,  buffer.length()  -  2));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(new  String(buffer,  0,  buffer.length()  -  2));  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(new  String(buffer,  0,  buffer.length()  -  2));	  append(new    String(buffer,    0,    buffer.length()));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
98	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  buffer.length  -  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  buffer.length  -  1);	  append(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
99	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  2];  append(buffer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  +  2];  append(buffer);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  +  2];  append(buffer);	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    2];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
100	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  ];  append(buffer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  ];  append(buffer);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  ];  append(buffer);	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    2];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
101	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  0];  append(buffer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  0];  append(buffer);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  0];  append(buffer);	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    2];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  initialCapacity  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  initialCapacity  +  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  initialCapacity  +  1);	  System.arraycopy(buffer,    0,    buffer,    0,    size    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
103	[BUG]  [BUGGY]  return  new  StrBuilder(buff,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(buff,  0,  buffer.length());  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(buff,  0,  buffer.length());	  return    new    StrBuilder(buffer,    0,    buffer.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
104	[BUG]  [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(buffer,  0,  buffer.length();  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(buffer,  0,  buffer.length();	  return    new    StrBuilder(buffer,    0,    buffer.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
105	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
106	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
107	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
108	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	while(buffer!=  null  &&  buffer.length  >  0)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    String[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
109	[BUG]  [BUGGY]  if(size  ==  0)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(size  ==  0)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(size  ==  0)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    String[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
110	[BUG]  [BUGGY]  while(buffer!=  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  while(buffer!=  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	while(buffer!=  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    String[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
111	[BUG]  [BUGGY]  if(size  ==  0)  {  if(buffer  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(size  ==  0)  {  if(buffer  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(size  ==  0)  {  if(buffer  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    String[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
112	[BUG]  [BUGGY]  return  new  StrBuilder(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(buffer,  0,  str.length());  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(buffer,  0,  str.length());	  return    new    StrBuilder(buffer,    0,    buffer.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
113	[BUG]  [BUGGY]  return  new  StrBuilder(str,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(str,  0,  buffer.length()  -  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(str,  0,  buffer.length()  -  1);	  return    new    StrBuilder(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
114	[BUG]  [BUGGY]  return  new  StrBuilder(str,  0,  buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(str,  0,  buffer.length()  +  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(str,  0,  buffer.length()  +  1);	  return    new    StrBuilder(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
115	[BUG]  [BUGGY]  return  new  StrBuilder(str,  0,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(str,  0,  buffer.length()  +  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(str,  0,  buffer.length()  +  CAPACITY);	  return    new    StrBuilder(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
116	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  CharacterSequence.valueOf(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharSequence  <?>  buffer  =  CharacterSequence.valueOf(str);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharSequence  <?>  buffer  =  CharacterSequence.valueOf(str);	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
117	[BUG]  [BUGGY]  CharSequence  <?>  newCharSequence  =  CharacterSequence(str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharSequence  <?>  newCharSequence  =  CharacterSequence(str);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharSequence  <?>  newCharSequence  =  CharacterSequence(str);	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
118	[BUG]  [BUGGY]  append( ";null ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append( ";null ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append( ";null ");	  append(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
119	[BUG]  [BUGGY]  append( ";negative ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append( ";negative ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append( ";negative ");	  append(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
120	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  +  1];  append(buffer);	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
121	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length(),  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length(),  size);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length(),  size);	  return    new    String(buffer,    0,    buffer.length(),    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
122	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length(),  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length(),  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length(),  1);	  return    new    String(buffer,    0,    buffer.length(),    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
123	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length()  +  1,  CAPACITY);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length()  +  1,  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length()  +  1,  CAPACITY);	  return    new    String(buffer,    0,    buffer.length(),    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
124	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length(),  4);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length(),  4);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length(),  4);	  return    new    String(buffer,    0,    buffer.length(),    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
125	[BUG]  [BUGGY]  while(buffer!=  null)  {  buffer  =  new  char[size()  +  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  while(buffer!=  null)  {  buffer  =  new  char[size()  +  1];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	while(buffer!=  null)  {  buffer  =  new  char[size()  +  1];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
126	[BUG]  [BUGGY]  parent  =  str.getParent();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  parent  =  str.getParent();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	parent  =  str.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
127	[BUG]  [BUGGY]  parent  =  buffer.getParent();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  parent  =  buffer.getParent();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	parent  =  buffer.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
128	[BUG]  [BUGGY]  returns  new  StrBuilder(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  returns  new  StrBuilder(buffer,  0,  buffer.length());  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	returns  new  StrBuilder(buffer,  0,  buffer.length());	  return    new    StrBuilder(buffer,    0,    buffer.length()    +    2);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
129	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
130	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
131	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  /  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  str.length()  /  CAPACITY);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  str.length()  /  CAPACITY);	  append(str,    0,    buffer.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
132	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  str.length()  -  CAPACITY);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  str.length()  -  CAPACITY);	  append(str,    0,    buffer.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
133	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(str);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(str);  }	  if(buffer!=    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
134	[BUG]  [BUGGY]  if(buffer!=  null)  {  append(str);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  append(str);  }	  append(str);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
135	[BUG]  [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  size);  }	  append(str);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
136	[BUG]  [BUGGY]  append('n'  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append('n'  +  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append('n'  +  1);	  append('n');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
137	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  2];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  2];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  2];  append(buffer);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
138	[BUG]  [BUGGY]  append(buffer,  nullText,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  nullText,  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  nullText,  0);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
139	[BUG]  [BUGGY]  parent  =  str.getNext();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  parent  =  str.getNext();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	parent  =  str.getNext();	  parent    =    parent.getParent();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
140	[BUG]  [BUGGY]  Integer  initialCapacity  =  getInitialCapacity();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  Integer  initialCapacity  =  getInitialCapacity();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	Integer  initialCapacity  =  getInitialCapacity();	  if(str    ==    null)    {    if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
141	[BUG]  [BUGGY]  Integer  initialCapacity  =  getNumberInitialCapacity();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  Integer  initialCapacity  =  getNumberInitialCapacity();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	Integer  initialCapacity  =  getNumberInitialCapacity();	  if(str    ==    null)    {    if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
142	[BUG]  [BUGGY]  Integer  initialCapacity  =  getImmediateCapacity();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  Integer  initialCapacity  =  getImmediateCapacity();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	Integer  initialCapacity  =  getImmediateCapacity();	  if(str    ==    null)    {    if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
143	[BUG]  [BUGGY]  Integer  initialCapacity  =  getINITIALIZED_CAPACITY();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  Integer  initialCapacity  =  getINITIALIZED_CAPACITY();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	Integer  initialCapacity  =  getINITIALIZED_CAPACITY();	  if(str    ==    null)    {    if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
144	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[size()  ];  append(str);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[size()  ];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[size()  ];  append(str);  }	  if(buffer!=    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
145	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
146	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[buffer.length()];  append(buffer);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
147	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
148	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  2];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  +  2];  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  +  2];	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    2];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
149	[BUG]  [BUGGY]  if(size  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(size  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(size  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
150	[BUG]  [BUGGY]  if(size  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(size  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(size  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
151	[BUG]  [BUGGY]  if(initialCapacity  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(initialCapacity  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(initialCapacity  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  }	  if(size    >    0)    {    if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
152	[BUG]  [BUGGY]  append(new  String(buffer,  0,  str.length()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(new  String(buffer,  0,  str.length()));  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(new  String(buffer,  0,  str.length()));	  append(new    String(buffer,    0,    buffer.length()));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
153	[BUG]  [BUGGY]  return(String)buffer.toArray(new  StringBuffer[buffer.length()  ]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)buffer.toArray(new  StringBuffer[buffer.length()  ]);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)buffer.toArray(new  StringBuffer[buffer.length()  ]);	  return(String)buffer.clone();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
154	[BUG]  [BUGGY]  return(String)buffer.toArray(new  StringBuffer());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)buffer.toArray(new  StringBuffer());  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)buffer.toArray(new  StringBuffer());	  return(String)buffer.clone();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
155	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }	  if(str!=    null)    {    if(buffer    ==    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
156	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }	  if(str!=    null)    {    if(buffer    ==    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
157	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }	  if(str!=    null)    {    if(buffer    ==    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
158	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  }	  if(str!=    null)    {    if(buffer    ==    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
159	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  initialCapacity);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  initialCapacity);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	System.arraycopy(buffer,  0,  buffer,  1,  initialCapacity);	  System.arraycopy(buffer,    0,    buffer,    0,    initialCapacity);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
160	[BUG]  [BUGGY]  return(char)buffer.toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(char)buffer.toLowerCase();  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(char)buffer.toLowerCase();	  return(String)buffer.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
161	[BUG]  [BUGGY]  if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
162	[BUG]  [BUGGY]  if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  append(buffer,  0,  size);  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  append(buffer,  0,  size);  }  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  append(buffer,  0,  size);  }  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
163	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  ];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  ];  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  ];  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  -  1  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  -  1  +  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  size  -  1  +  1);	  System.arraycopy(buffer,    0,    buffer,    0,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
165	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length(),  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length(),  2);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length(),  2);	  return    new    String(buffer,    0,    buffer.length(),    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
166	[BUG]  [BUGGY]  if(capacity  >=  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >=  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >=  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
167	[BUG]  [BUGGY]  if(capacity  ==  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  ==  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  ==  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
168	[BUG]  [BUGGY]  if(capacity  <  =  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  <  =  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  <  =  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
169	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    String[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
170	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  String[size()  +  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  String[size()  +  1];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  String[size()  +  1];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    String[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
171	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  String[size()  +  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  String[size()  +  1];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  String[size()  +  1];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    String[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
172	[BUG]  [BUGGY]  if(buffer!=  null)  {  append(nullText);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  append(nullText);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  append(nullText);  }	  append(nullText);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
173	[BUG]  [BUGGY]  if(buffer!=  null)  {  append(nullText);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  append(nullText);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  append(nullText);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  append(nullText);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
174	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(str);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
175	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
176	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[size()  ];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[size()  ];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[size()  ];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
177	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[size()  /  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[size()  /  1];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[size()  /  1];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
178	[BUG]  [BUGGY]  append(initialCapacity,  buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(initialCapacity,  buffer,  0,  size);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(initialCapacity,  buffer,  0,  size);	  if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
179	[BUG]  [BUGGY]  append(nullText,  0,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(nullText,  0,  size);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(nullText,  0,  size);	  if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
180	[BUG]  [BUGGY]  append(initialCapacity,  0,  size);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(initialCapacity,  0,  size);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(initialCapacity,  0,  size);	  if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
181	[BUG]  [BUGGY]  return(char)buffer.toCharArray()  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(char)buffer.toCharArray()  +  2;  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(char)buffer.toCharArray()  +  2;	  return(char)buffer.toCharArray();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
182	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
183	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
184	[BUG]  [BUGGY]  append(buffer,  0,  pos);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  pos);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  pos);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
185	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  2];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  2];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  2];  append(buffer);  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
186	[BUG]  [BUGGY]  if(capacity  >  0)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >  0)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >  0)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    >=    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
187	[BUG]  [BUGGY]  if(capacity  >=  size)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >=  size)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >=  size)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    >=    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
188	[BUG]  [BUGGY]  if(capacity  >=  0)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >=  0)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >=  0)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    >=    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
189	[BUG]  [BUGGY]  return(String)str.substring(0,  buffer.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)str.substring(0,  buffer.length()  -  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)str.substring(0,  buffer.length()  -  CAPACITY);	  return(String)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
190	[BUG]  [BUGGY]  buffer  =  new  char[size()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[size()  +  CAPACITY];  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[size()  +  CAPACITY];	  if(buffer    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
191	[BUG]  [BUGGY]  if(capacity!=  0)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity!=  0)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity!=  0)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity!=    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
192	[BUG]  [BUGGY]  if(capacity  >=  1)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >=  1)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >=  1)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity!=    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
193	[BUG]  [BUGGY]  append(buffer,  0,  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  1);	  append(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
194	[BUG]  [BUGGY]  if(capacity  ==  0)  {  buffer  =  new  char[CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  ==  0)  {  buffer  =  new  char[CAPACITY];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  ==  0)  {  buffer  =  new  char[CAPACITY];  append(str);  }	  if(capacity    ==    0)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
195	[BUG]  [BUGGY]  if(capacity  >=  0)  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >=  0)  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >=  0)  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    ==    0)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
196	[BUG]  [BUGGY]  if(capacity  >=  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >=  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >=  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
197	[BUG]  [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
198	[BUG]  [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
199	[BUG]  [BUGGY]  append(buffer,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0);	  append(buffer);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
200	[BUG]  [BUGGY]  CharTypes.checkState(buffer!=  null  &&  buffer.length()  >  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(buffer!=  null  &&  buffer.length()  >  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(buffer!=  null  &&  buffer.length()  >  0);	  CharTypes.checkState(buffer!=    null);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
201	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  size];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  size];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  size];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
202	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  size];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  size];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  size];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
203	[BUG]  [BUGGY]  if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(size  >  0)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
204	[BUG]  [BUGGY]  if(capacity  >=  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >=  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >=  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
205	[BUG]  [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[CAPACITY];  append(str);  }	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
206	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[str.length()  +  CAPACITY];	  buffer    =    new    char[size()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
207	[BUG]  [BUGGY]  buffer  =  new  char[size()  ];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[size()  ];  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[size()  ];	  buffer    =    new    char[size()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
208	[BUG]  [BUGGY]  buffer  =  new  char[size()  +  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[size()  +  1];  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[size()  +  1];	  buffer    =    new    char[size()    +    CAPACITY];    append(str);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
209	[BUG]  [BUGGY]  return(String)str.substring(0,  str.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return(String)str.substring(0,  str.length()  -  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return(String)str.substring(0,  str.length()  -  CAPACITY);	  return(String)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
210	[BUG]  [BUGGY]  System.arraycopy(str,  0,  buffer,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  System.arraycopy(str,  0,  buffer,  0,  size  -  1);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	System.arraycopy(str,  0,  buffer,  0,  size  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
211	[BUG]  [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }	  if(str    ==    null)    {    if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
212	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(str  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  if(str  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  if(str  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(str    ==    null)    {    if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
213	[BUG]  [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }	  if(str    ==    null)    {    if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
214	[BUG]  [BUGGY]  Appends(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  Appends(buffer,  0,  size);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	Appends(buffer,  0,  size);	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
215	[BUG]  [BUGGY]  append(initialCapacity,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(initialCapacity,  buffer.length());  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(initialCapacity,  buffer.length());	  append(capacity,    size);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
216	[BUG]  [BUGGY]  CharTypes.checkState(buffer.length  ==  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(buffer.length  ==  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(buffer.length  ==  0);	  CharTypes.checkState(buffer    ==    null);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
217	[BUG]  [BUGGY]  CharTypes.checkState(buffer.length!=  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(buffer.length!=  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(buffer.length!=  0);	  CharTypes.checkState(buffer    ==    null);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
218	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
219	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
220	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer);  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
221	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(str!=  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  if(str!=  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  if(str!=  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }	  if(str!=    null)    {    if(buffer    ==    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
222	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    String[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
223	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str!=  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str!=  null)  {  buffer  =  new  String[size()  +  CAPACITY];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    String[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
224	[BUG]  [BUGGY]  CharTypes.checkState(capacity  <  =  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkState(capacity  <  =  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkState(capacity  <  =  0);	  CharTypes.checkState(capacity    ==    0);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
225	[BUG]  [BUGGY]  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    >=    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
226	[BUG]  [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(str    ==    null)    {    if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
227	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer);  }	  if(str    ==    null)    {    if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
228	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }	  if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
229	[BUG]  [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }	  if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
230	[BUG]  [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  }	  if(buffer    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
231	[BUG]  [BUGGY]  MutableTokenBuffer  token  =  new  MutableTokenBuffer(buffer,  size  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  MutableTokenBuffer  token  =  new  MutableTokenBuffer(buffer,  size  -  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	MutableTokenBuffer  token  =  new  MutableTokenBuffer(buffer,  size  -  1);	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
232	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(buffer,  size  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(buffer,  size  -  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(buffer,  size  -  1);	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
233	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(capacity);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(capacity);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(capacity);	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
234	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(capacity);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(capacity);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(capacity);	  if(capacity    >    0)    {    if(buffer    ==    null)    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
235	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
236	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  -  1];  }  else  {  buffer  =  new  char[buffer.length()  -  1];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  -  1];  }  else  {  buffer  =  new  char[buffer.length()  -  1];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  -  1];  }  else  {  buffer  =  new  char[buffer.length()  -  1];  append(buffer);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
237	[BUG]  [BUGGY]  if(capacity!=  0)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity!=  0)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity!=  0)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
238	[BUG]  [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
239	[BUG]  [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  append(buffer,  0,  size);  }  }	  if(buffer!=    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
240	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(str);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
241	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  -  1];  }  else  {  buffer  =  new  char[buffer.length()  -  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  -  1];  }  else  {  buffer  =  new  char[buffer.length()  -  1];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  -  1];  }  else  {  buffer  =  new  char[buffer.length()  -  1];  append(str);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
242	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  2];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  2];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  2];  append(str);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
243	[BUG]  [BUGGY]  append(buffer,  0,  inCapacity);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(buffer,  0,  inCapacity);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(buffer,  0,  inCapacity);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
244	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  append(str);  }  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  append(str);  }	  if(buffer    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
245	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer,  0,  size);  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
246	[BUG]  [BUGGY]  append(new  String(buffer,  0,  buffer.length()  +  CAPACITY));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append(new  String(buffer,  0,  buffer.length()  +  CAPACITY));  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append(new  String(buffer,  0,  buffer.length()  +  CAPACITY));	  append(new    String(buffer,    0,    buffer.length()));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
247	[BUG]  [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  if(buffer!=  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }	  if(buffer!=    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
248	[BUG]  [BUGGY]  if(capacity  ==  0)  {  buffer  =  new  char[CAPACITY];  append(str);  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  ==  0)  {  buffer  =  new  char[CAPACITY];  append(str);  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  ==  0)  {  buffer  =  new  char[CAPACITY];  append(str);  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    ==    0)    {    buffer    =    new    char[capacity];    append(str);    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
249	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  else  {  buffer  =  new  char[buffer.length()  ];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  else  {  buffer  =  new  char[buffer.length()  ];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  else  {  buffer  =  new  char[buffer.length()  ];  append(buffer);  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
250	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer);  }  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer);  }  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(buffer);  }  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(buffer);    }    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
251	[BUG]  [BUGGY]  return  new  StrBuilder(buffer,  1,  buffer.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  StrBuilder(buffer,  1,  buffer.length());  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  StrBuilder(buffer,  1,  buffer.length());	  return    new    StrBuilder(buffer,    0,    buffer.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
252	[BUG]  [BUGGY]  if(capacity  ==  0)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  ==  0)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  ==  0)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(capacity    ==    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
253	[BUG]  [BUGGY]  if(capacity  ==  0)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(capacity  ==  0)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[CAPACITY];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(capacity  ==  0)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[CAPACITY];  append(str);  }	  if(capacity    ==    0)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
254	[BUG]  [BUGGY]  CharTypes.checkArgument(buffer.length()  >  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkArgument(buffer.length()  >  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkArgument(buffer.length()  >  0);	  if(str    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
255	[BUG]  [BUGGY]  CharTypes.checkArgument(buffer.length()  ==  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  CharTypes.checkArgument(buffer.length()  ==  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	CharTypes.checkArgument(buffer.length()  ==  0);	  if(str    ==    null)    {    buffer    =    new    char[capacity];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
256	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(str    ==    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
257	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }	  if(str    ==    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
258	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  }	  if(str    ==    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
259	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length()  -  1,  CAPACITY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  return  new  String(buffer,  0,  buffer.length()  -  1,  CAPACITY);  [BUGGY]        [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	return  new  String(buffer,  0,  buffer.length()  -  1,  CAPACITY);	  return    new    String(buffer,    0,    buffer.length(),    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
260	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
261	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  2];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  2];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  2];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
262	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
263	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
264	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
265	[BUG]  [BUGGY]  append( "; ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append( "; ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append( "; ");	  append(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
266	[BUG]  [BUGGY]  append( ";null: ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append( ";null: ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append( ";null: ");	  append(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
267	[BUG]  [BUGGY]  append0(buffer,  0,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  append0(buffer,  0,  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	append0(buffer,  0,  0);	  append(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
268	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  append(buffer);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    append(buffer);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
269	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
270	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  append(buffer,  0,  size);  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    append(buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
271	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(str!=  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  if(buffer!=  null)  {  if(str!=  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	if(buffer!=  null)  {  if(str!=  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  append(str);  }	  if(str!=    null)    {    buffer    =    new    char[CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
272	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }      [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	128	128	2	replace	buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
