bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  +  CAPACITY];	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  buffer  =  new  char[buffer.length()];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()];	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  +  1];	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
4	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(str.length()    >    0)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
5	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(str.length()    >    0)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
6	[BUG]  [BUGGY]  int  size  =  buffer.length();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  int  size  =  buffer.length();  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	int  size  =  buffer.length();	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
7	[BUG]  [BUGGY]  int  size  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  int  size  =  str.length()  +  1;  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	int  size  =  str.length()  +  1;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
8	[BUG]  [BUGGY]  int  size  =  str.length()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  int  size  =  str.length()  -  1;  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	int  size  =  str.length()  -  1;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
9	[BUG]  [BUGGY]  char  size  =  str.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  char  size  =  str.length();  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	char  size  =  str.length();	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
10	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  size];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  buffer  =  new  char[buffer.length()  +  size];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  +  size];	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
11	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  2];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  buffer  =  new  char[buffer.length()  +  2];  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  +  2];	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
12	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  0,  buffer.length());  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  buffer.length());	  append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  append(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(str,  0,  buffer.length());  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  0,  buffer.length());	  append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
15	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  0,  str.length()  +  1);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  str.length()  +  1);	  append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
16	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  0,  str.length()  -  1);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  str.length()  -  1);	  append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
18	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length()  -  1);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharBuffer  buffer  =  new  CharBuffer(buffer.length()  -  1);	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length());  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharBuffer  buffer  =  new  CharBuffer(buffer.length());	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  1];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  size];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  size];  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  size];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  append(buffer,  str.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  str.length()  -  CAPACITY);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  str.length()  -  CAPACITY);	  append(buffer,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  append(buffer,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  str.length()  +  1);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  str.length()  +  1);	  append(buffer,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  append(buffer,  str.length()  /  CAPACITY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  str.length()  /  CAPACITY);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  str.length()  /  CAPACITY);	  append(buffer,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
25	[BUG]  [BUGGY]  append(buffer,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  str.length());  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  str.length());	  append(buffer,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
26	[BUG]  [BUGGY]  Builder.append(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  Builder.append(buffer,  0,  str.length());  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(buffer,  0,  str.length());	      if(str.length()    >    0)    {    buffer    =    new    char[buffer.length()    +    0];    }    else    {    buffer    =    new    char[buffer.length()    +    0];    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
27	[BUG]  [BUGGY]  ensureCapacity(buffer,  size);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  ensureCapacity(buffer,  size);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  size);	  ensureCapacity(buffer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  ensureCapacity(buffer,  buffer.length());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  ensureCapacity(buffer,  buffer.length());  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  buffer.length());	  ensureCapacity(buffer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
29	[BUG]  [BUGGY]  ensureCapacity(str);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  ensureCapacity(str);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(str);	  ensureCapacity(buffer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
30	[BUG]  [BUGGY]  ensureCapacity(buffer,  pos);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  ensureCapacity(buffer,  pos);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  pos);	  ensureCapacity(buffer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
31	[BUG]  [BUGGY]  Append(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  Append(str,  0,  buffer.length());  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(str,  0,  buffer.length());	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  CharTypes.appendCompletedField(str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  CharTypes.appendCompletedField(str);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedField(str);	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  append(str,  buffer);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(str,  buffer);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer);	  append(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
34	[BUG]  [BUGGY]  append(buffer,  0,  str.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  0,  str.length);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  str.length);	  append(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
35	[BUG]  [BUGGY]  append(buffer,  nullText);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  nullText);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  nullText);	  append(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
36	[BUG]  [BUGGY]  append(buffer,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  str.length()  -  1);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  str.length()  -  1);	  append(buffer);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
37	[BUG]  [BUGGY]  pendency(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  pendency(buffer,  0,  buffer.length());  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	pendency(buffer,  0,  buffer.length());	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  str.length());  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  str.length());	      if(str.length()    >    0)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
39	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length());  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length());	      if(str.length()    >    0)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
40	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  -  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  0,  str.length()  -  2);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  str.length()  -  2);	  append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  if(str  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  if(str!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  if(str!=  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str!=  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str!=  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  size);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
48	[BUG]  [BUGGY]  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(buffer,  0,  size);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  size);	  append(buffer);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
49	[BUG]  [BUGGY]  parent  =  parent.getParent();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  parent  =  parent.getParent();  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent  =  parent.getParent();	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
51	[BUG]  [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
52	[BUG]  [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
53	[BUG]  [BUGGY]  ensureCapacity(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  ensureCapacity(buffer,  0,  size);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  0,  size);	  ensureCapacity(buffer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
54	[BUG]  [BUGGY]  if(buffer  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
55	[BUG]  [BUGGY]  if(buffer  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
56	[BUG]  [BUGGY]  if(buffer  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  2];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  2];  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  2];  }	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
57	[BUG]  [BUGGY]  if(str.length()  >  0)  {  buffer  =  new  char[str.length()  +  1];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str.length()  >  0)  {  buffer  =  new  char[str.length()  +  1];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str.length()  >  0)  {  buffer  =  new  char[str.length()  +  1];  }  else  {  buffer  =  new  char[str.length()  +  1];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
58	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  1];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
59	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  size];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  size];  }  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[str.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  size];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
64	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
65	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
66	[BUG]  [BUGGY]  append(str,  buffer.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(str,  buffer.length()  -  CAPACITY);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer.length()  -  CAPACITY);	  append(buffer,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
67	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
68	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
69	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  else  {  buffer  =  new  char[buffer.length()  ];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
71	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  else  {  buffer  =  new  char[buffer.length()  ];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  else  {  buffer  =  new  char[buffer.length()  ];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
72	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
73	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
74	[BUG]  [BUGGY]  CharTypes.appendQuoted(buffer,  str);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  CharTypes.appendQuoted(buffer,  str);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendQuoted(buffer,  str);	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
75	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  str);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  CharTypes.appendCompletedChunk(buffer,  str);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  str);	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
76	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length());  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  0,  str.length());	  if(buffer!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
77	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  -  CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  -  CAPACITY];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  -  CAPACITY];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  /  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  /  CAPACITY];  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  /  CAPACITY];  }	      if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  append(str,  nullText);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  append(str,  nullText);  [BUGGY]    }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  nullText);	  append(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
80	[BUG]  [BUGGY]  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];    [BUGGY]  }  [BUGGY]    append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	}	      if(buffer!=    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
