bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2	[BUG]  [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  2];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  2];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  2];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
3	[BUG]  [BUGGY]  safeGet(buffer,  size)>  1)  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeGet(buffer,  size)>  1)  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  size)>  1)  {  buffer  =  new  char[buffer.length()  +  1];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
4	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  +  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  +  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
5	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length());	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
6	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  +  2);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  +  2);	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
7	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  -  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  -  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
8	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  buffer.length()  +  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  buffer.length()  +  CAPACITY);	  if(str!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
9	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[str.length()  +  CAPACITY];	  if(buffer    ==    null)    {    buffer    =    new    char[str.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[str.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
10	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  +  size];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[str.length()  +  size];  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[str.length()  +  size];	  if(buffer    ==    null)    {    buffer    =    new    char[str.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[str.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
11	[BUG]  [BUGGY]  nisip  =  str.charAt(str.length()  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  nisip  =  str.charAt(str.length()  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	nisip  =  str.charAt(str.length()  -  1);	  if(buffer    ==    null)    {    buffer    =    new    char[str.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[str.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
12	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  +  1];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[str.length()  +  1];  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[str.length()  +  1];	  if(buffer    ==    null)    {    buffer    =    new    char[str.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[str.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
13	[BUG]  [BUGGY]  ensureCapacity(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  0,  buffer.length);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  0,  buffer.length);	  ensureCapacity(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
14	[BUG]  [BUGGY]  ensureCapacity(buffer,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  0,  size  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  0,  size  -  1);	  ensureCapacity(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
15	[BUG]  [BUGGY]  ensureCapacity(buffer,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  0,  size  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  0,  size  +  1);	  ensureCapacity(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
16	[BUG]  [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
17	[BUG]  [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
18	[BUG]  [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
19	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  buffer.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  buffer.length());	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
20	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str,  0,  buffer.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str,  0,  buffer.length());	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
21	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  buffer.length()  -  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  buffer.length()  -  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
22	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  0,  buffer.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  0,  buffer.length());	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
23	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  ];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[str.length()  ];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[str.length()  ];	  buffer    =    new    char[buffer.length()];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  ensureCapacity(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  0,  buffer.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  0,  buffer.length());	  ensureCapacity(buffer,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
25	[BUG]  [BUGGY]  ensureCapacity(buffer,  buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  buffer.length()  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  buffer.length()  +  1);	  ensureCapacity(buffer,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
26	[BUG]  [BUGGY]  ensureCapacity(buffer,  str.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  str.length());	  ensureCapacity(buffer,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
27	[BUG]  [BUGGY]  ensureCapacity(buffer,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  buffer.length()  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  buffer.length()  -  1);	  ensureCapacity(buffer,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
28	[BUG]  [BUGGY]  parent!=  null?  parent.toString()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent!=  null?  parent.toString()  :  null;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent!=  null?  parent.toString()  :  null;	  if(str!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
29	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  buffer.length();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent!=  null  &&  parent  ==  buffer.length();  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent!=  null  &&  parent  ==  buffer.length();	  if(str!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
30	[BUG]  [BUGGY]  Append(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Append(buffer,  0,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(buffer,  0,  str.length());	  Append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
31	[BUG]  [BUGGY]  Append(str,  0,  buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Append(str,  0,  buffer.length()  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(str,  0,  buffer.length()  +  1);	  Append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
32	[BUG]  [BUGGY]  Append(str,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Append(str,  0,  buffer.length()  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(str,  0,  buffer.length()  -  1);	  Append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
33	[BUG]  [BUGGY]  Append(str,  0,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Append(str,  0,  buffer.length()  +  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(str,  0,  buffer.length()  +  CAPACITY);	  Append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
34	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  *  size];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  *  size];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  *  size];	  buffer    =    new    char[buffer.length()    +    size];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  Append(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Append(buffer,  0,  buffer.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(buffer,  0,  buffer.length());	  if(str    ==    null)    {    append(buffer);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
36	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  ];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
37	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharBuffer  buffer  =  new  CharBuffer(str.length());	  CharBuffer    buffer    =    new    CharBuffer(buffer.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
38	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length()  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharBuffer  buffer  =  new  CharBuffer(buffer.length()  +  1);	  CharBuffer    buffer    =    new    CharBuffer(buffer.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
39	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length()  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer.length()  +  2);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharBuffer  buffer  =  new  CharBuffer(buffer.length()  +  2);	  CharBuffer    buffer    =    new    CharBuffer(buffer.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
40	[BUG]  [BUGGY]  appendNullText(buffer,  nullText);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  appendNullText(buffer,  nullText);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	appendNullText(buffer,  nullText);	  append(str,    nullText);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
41	[BUG]  [BUGGY]  scan(buffer,  nullText);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  scan(buffer,  nullText);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	scan(buffer,  nullText);	  append(str,    nullText);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  size  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  size  +  1);	  System.arraycopy(buffer,    0,    buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size  -  2);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  size  -  2);	  System.arraycopy(buffer,    0,    buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
45	[BUG]  [BUGGY]  CharTypes.appendQuoted(buffer,  0,  str.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendQuoted(buffer,  0,  str.length);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendQuoted(buffer,  0,  str.length);	  CharTypes.appendQuoted(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
46	[BUG]  [BUGGY]  CharTypes.appendQuoted(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendQuoted(buffer,  0,  buffer.length);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendQuoted(buffer,  0,  buffer.length);	  CharTypes.appendQuoted(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
47	[BUG]  [BUGGY]  CharTypes.appendQuoted(buffer,  nullText);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendQuoted(buffer,  nullText);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendQuoted(buffer,  nullText);	  CharTypes.appendQuoted(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
48	[BUG]  [BUGGY]  CharTypes.appendQuoted(buffer,  0,  str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendQuoted(buffer,  0,  str);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendQuoted(buffer,  0,  str);	  CharTypes.appendQuoted(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
49	[BUG]  [BUGGY]  String  size  =  str.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  String  size  =  str.length();  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	String  size  =  str.length();	  char    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
50	[BUG]  [BUGGY]  char  size  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  char  size  =  str.length()  +  1;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	char  size  =  str.length()  +  1;	  char    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  char  size  =  str.length()  +  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  char  size  =  str.length()  +  2;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	char  size  =  str.length()  +  2;	  char    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
52	[BUG]  [BUGGY]  parent  ==  null  ||  buffer.length()  ==  CAPACITY;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent  ==  null  ||  buffer.length()  ==  CAPACITY;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent  ==  null  ||  buffer.length()  ==  CAPACITY;	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
53	[BUG]  [BUGGY]  parent  ==  null  ||  buffer.length()!=  CAPACITY;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent  ==  null  ||  buffer.length()!=  CAPACITY;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent  ==  null  ||  buffer.length()!=  CAPACITY;	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
54	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  buffer.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  0,  buffer.length());	  CharTypes.appendCompletedChunk(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
55	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length()  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  0,  str.length()  -  1);	  CharTypes.appendCompletedChunk(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
56	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length()  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  0,  str.length()  +  1);	  CharTypes.appendCompletedChunk(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
57	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length()  -  2);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  0,  str.length()  -  2);	  CharTypes.appendCompletedChunk(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
58	[BUG]  [BUGGY]  pend(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  pend(buffer,  0,  buffer.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	pend(buffer,  0,  buffer.length());	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
59	[BUG]  [BUGGY]  pend(buffer,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  pend(buffer,  0,  buffer.length()  -  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	pend(buffer,  0,  buffer.length()  -  1);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
60	[BUG]  [BUGGY]  parent  ==  null  ||  buffer.length()  ==  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent  ==  null  ||  buffer.length()  ==  0;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent  ==  null  ||  buffer.length()  ==  0;	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
61	[BUG]  [BUGGY]  append(str,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  buffer.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer.length());	  append(buffer,    str.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
62	[BUG]  [BUGGY]  append(buffer,  buffer.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  buffer.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  buffer.length());	  append(buffer,    str.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
63	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
64	[BUG]  [BUGGY]  parent  ==  null  ||  buffer.length()  ==  CAPACITY)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent  ==  null  ||  buffer.length()  ==  CAPACITY)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent  ==  null  ||  buffer.length()  ==  CAPACITY)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
65	[BUG]  [BUGGY]  parent  ==  null  ||  buffer.length()  ==  CAPACITY)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent  ==  null  ||  buffer.length()  ==  CAPACITY)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent  ==  null  ||  buffer.length()  ==  CAPACITY)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
66	[BUG]  [BUGGY]  ensureCapacity(str,  pos);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(str,  pos);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(str,  pos);	  ensureCapacity(buffer,    pos);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
67	[BUG]  [BUGGY]  ensureCapacity(buffer,  buffer.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  buffer.length);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  buffer.length);	  ensureCapacity(buffer,    pos);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
68	[BUG]  [BUGGY]  ensureCapacity(capacity);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(capacity);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(capacity);	  ensureCapacity(str);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
69	[BUG]  [BUGGY]  ensureCapacity(buff);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buff);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buff);	  ensureCapacity(str);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
70	[BUG]  [BUGGY]  int  size  =  buffer.length()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  int  size  =  buffer.length()  +  1;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	int  size  =  buffer.length()  +  1;	  int    size    =    buffer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  int  size  =  buffer.length()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  int  size  =  buffer.length()  -  1;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	int  size  =  buffer.length()  -  1;	  int    size    =    buffer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
72	[BUG]  [BUGGY]  char  size  =  buffer.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  char  size  =  buffer.length();  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	char  size  =  buffer.length();	  int    size    =    buffer.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
73	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  buffer.length);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  buffer.length);	  append(buffer,    0,    str.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
74	[BUG]  [BUGGY]  append(str,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  0,  buffer.length);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  0,  buffer.length);	  append(buffer,    0,    str.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
75	[BUG]  [BUGGY]  append(buffer,  0,  str.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  str.length  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  str.length  -  1);	  append(buffer,    0,    str.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
76	[BUG]  [BUGGY]  append(buffer,  0,  str.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  str.length  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  str.length  +  1);	  append(buffer,    0,    str.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
77	[BUG]  [BUGGY]  CharTypes.appendCompletedField(buffer,  str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedField(buffer,  str);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedField(buffer,  str);	  CharTypes.appendCompletedField(str);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
78	[BUG]  [BUGGY]  CharTypes.appendCompletedField(buffer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedField(buffer);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedField(buffer);	  CharTypes.appendCompletedField(str);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
79	[BUG]  [BUGGY]  CharTypes.appendEndCompletedField(buffer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendEndCompletedField(buffer);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendEndCompletedField(buffer);	  CharTypes.appendCompletedField(str);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
80	[BUG]  [BUGGY]  CharTypes.appendCompletedField(buff,  str);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedField(buff,  str);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedField(buff,  str);	  CharTypes.appendCompletedField(str);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
81	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  str.length);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  0,  str.length);	  CharTypes.appendCompletedChunk(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
82	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  nullText);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedChunk(buffer,  nullText);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  nullText);	  CharTypes.appendCompletedChunk(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
83	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  newLine);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedChunk(buffer,  newLine);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  newLine);	  CharTypes.appendCompletedChunk(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
84	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  buffer,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedChunk(buffer,  buffer,  size);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  buffer,  size);	  CharTypes.appendCompletedChunk(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
85	[BUG]  [BUGGY]  Builder.append(buffer,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.append(buffer,  0,  buffer.length()  -  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(buffer,  0,  buffer.length()  -  1);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    ];    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
86	[BUG]  [BUGGY]  Builder.append(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.append(str);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(str);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    ];    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
87	[BUG]  [BUGGY]  Builder.append(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.append(buffer,  0,  buffer.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(buffer,  0,  buffer.length());	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    ];    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
88	[BUG]  [BUGGY]  Builder.this.append(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.this.append(buffer,  0,  buffer.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.this.append(buffer,  0,  buffer.length());	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    ];    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
89	[BUG]  [BUGGY]  append(str,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  buffer.length()  +  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer.length()  +  CAPACITY);	  append(str,    buffer.length()    -    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
90	[BUG]  [BUGGY]  append(buffer,  buffer.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  buffer.length()  -  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  buffer.length()  -  CAPACITY);	  append(str,    buffer.length()    -    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
91	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  buffer.length()  -  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  buffer.length()  -  CAPACITY);	  append(str,    buffer.length()    -    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
92	[BUG]  [BUGGY]  parent!=  null  ||  buffer.length()  ==  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent!=  null  ||  buffer.length()  ==  0;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent!=  null  ||  buffer.length()  ==  0;	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
93	[BUG]  [BUGGY]  parent!=  null  ||  buffer.length()  ==  CAPACITY;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent!=  null  ||  buffer.length()  ==  CAPACITY;  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent!=  null  ||  buffer.length()  ==  CAPACITY;	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
94	[BUG]  [BUGGY]  ||  str.length()  >  0)  {  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ||  str.length()  >  0)  {  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	||  str.length()  >  0)  {  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()];  }	  if(str.length()    >    0)    {    buffer    =    new    char[str.length()    +    1];    }    else    {    buffer    =    new    char[str.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
95	[BUG]  [BUGGY]  ||  str.length()  >  0)  {  buffer  =  new  char[str.length()  +  1];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ||  str.length()  >  0)  {  buffer  =  new  char[str.length()  +  1];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	||  str.length()  >  0)  {  buffer  =  new  char[str.length()  +  1];  }  else  {  buffer  =  new  char[str.length()  +  1];  }	  if(str.length()    >    0)    {    buffer    =    new    char[str.length()    +    1];    }    else    {    buffer    =    new    char[str.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
96	[BUG]  [BUGGY]  ||  str.length()  >  0)  {  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ||  str.length()  >  0)  {  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	||  str.length()  >  0)  {  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()  +  1];  }	  if(str.length()    >    0)    {    buffer    =    new    char[str.length()    +    1];    }    else    {    buffer    =    new    char[str.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
97	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  str.length()  -  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  str.length()  -  CAPACITY);	  append(buffer,    str.length()    -    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
98	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  *  2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  *  2];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  *  2];	  buffer    =    new    char[buffer.length()    +    2];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
99	[BUG]  [BUGGY]  append(buffer,  str.length()  *  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  str.length()  *  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  str.length()  *  CAPACITY);	  append(buffer,    str.length()    /    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
100	[BUG]  [BUGGY]  append(buffer,  0,  str.length()  /  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  str.length()  /  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  str.length()  /  CAPACITY);	  append(buffer,    str.length()    /    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
101	[BUG]  [BUGGY]  append(buffer,  buffer.length()  /  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  buffer.length()  /  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  buffer.length()  /  CAPACITY);	  append(buffer,    str.length()    /    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
102	[BUG]  [BUGGY]  pendency(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  pendency(buffer,  0,  str.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	pendency(buffer,  0,  str.length());	  pendency(buffer,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
103	[BUG]  [BUGGY]  pendency(buffer,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  pendency(buffer,  0,  buffer.length()  -  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	pendency(buffer,  0,  buffer.length()  -  1);	  pendency(buffer,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
104	[BUG]  [BUGGY]  pendency(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  pendency(str,  0,  buffer.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	pendency(str,  0,  buffer.length());	  pendency(buffer,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
105	[BUG]  [BUGGY]  Builder.append(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.append(str,  0,  buffer.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(str,  0,  buffer.length());	  Builder.append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
106	[BUG]  [BUGGY]  Builder.append(buffer,  0,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.append(buffer,  0,  str.length()  +  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(buffer,  0,  str.length()  +  1);	  Builder.append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
107	[BUG]  [BUGGY]  append(buffer,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  size  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  size  -  1);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
108	[BUG]  [BUGGY]  append(buffer,  0,  size,  str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  size,  str);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  size,  str);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
109	[BUG]  [BUGGY]  Builder.this.append(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.this.append(buffer,  0,  str.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.this.append(buffer,  0,  str.length());	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
110	[BUG]  [BUGGY]  append(str,  buffer,  0,  size);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  buffer,  0,  size);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer,  0,  size);	  append(str,    buffer);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
111	[BUG]  [BUGGY]  append(str,  buffer,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  buffer,  0);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer,  0);	  append(str,    buffer);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
112	[BUG]  [BUGGY]  append0(str,  buffer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append0(str,  buffer);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append0(str,  buffer);	  append(str,    buffer);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
113	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  -  CAPACITY];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  -  CAPACITY];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  -  CAPACITY];	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
114	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  *  CAPACITY];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  *  CAPACITY];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  *  CAPACITY];	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
115	[BUG]  [BUGGY]  append(buffer,  nullText,  str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  nullText,  str);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  nullText,  str);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
116	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  *  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  *  1];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  *  1];	  buffer    =    new    char[buffer.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
117	[BUG]  [BUGGY]  parent  =  str.getParent();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent  =  str.getParent();  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent  =  str.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
118	[BUG]  [BUGGY]  parent  =  str.getNext();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent  =  str.getNext();  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent  =  str.getNext();	  parent    =    parent.getParent();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
119	[BUG]  [BUGGY]  append(str,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  0,  buffer.length()  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  0,  buffer.length()  -  1);	  append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
120	[BUG]  [BUGGY]  append(str,  0,  buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  0,  buffer.length()  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  0,  buffer.length()  +  1);	  append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
121	[BUG]  [BUGGY]  append(str,  0,  buffer.length()  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  0,  buffer.length()  -  2);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  0,  buffer.length()  -  2);	  append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
122	[BUG]  [BUGGY]  ensureCapacity(buffer,  initialCapacity);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  initialCapacity);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  initialCapacity);	  ensureCapacity(buffer,    size);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
123	[BUG]  [BUGGY]  ensureCapacity(buffer,  size  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  size  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  size  -  1);	  ensureCapacity(buffer,    size);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
124	[BUG]  [BUGGY]  ensureCapacity(buffer,  size  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  size  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  size  +  1);	  ensureCapacity(buffer,    size);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
125	[BUG]  [BUGGY]  Append(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Append(str);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(str);	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    2];    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
126	[BUG]  [BUGGY]  Builder.append(buffer,  0,  buffer.length()  /  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.append(buffer,  0,  buffer.length()  /  CAPACITY);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(buffer,  0,  buffer.length()  /  CAPACITY);	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    /    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
127	[BUG]  [BUGGY]  Builder.append(buffer,  0,  buffer.length()  /  CAPACITY]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.append(buffer,  0,  buffer.length()  /  CAPACITY]);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(buffer,  0,  buffer.length()  /  CAPACITY]);	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    /    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
128	[BUG]  [BUGGY]  append(str,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  buffer.length()  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer.length()  -  1);	  append(buffer,    str.length());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
129	[BUG]  [BUGGY]  append0(buffer,  str.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append0(buffer,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append0(buffer,  str.length());	  append(buffer,    str.length());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
130	[BUG]  [BUGGY]  safeAdd(buffer,  0,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeAdd(buffer,  0,  buffer.length()  +  CAPACITY);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeAdd(buffer,  0,  buffer.length()  +  CAPACITY);	  if(str!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
131	[BUG]  [BUGGY]  safeAdd(buffer,  0,  buffer.length(),  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeAdd(buffer,  0,  buffer.length(),  0);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeAdd(buffer,  0,  buffer.length(),  0);	  if(str!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
132	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  buffer.length()  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  buffer.length()  -  1);	  append(buffer,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
133	[BUG]  [BUGGY]  nisip  =  str.charAt(buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  nisip  =  str.charAt(buffer.length()  -  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	nisip  =  str.charAt(buffer.length()  -  1);	  if(str!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
134	[BUG]  [BUGGY]  nisip  =  str.charAt(pos);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  nisip  =  str.charAt(pos);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	nisip  =  str.charAt(pos);	  if(str!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
135	[BUG]  [BUGGY]  nisip  =  str.charAt(buffer.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  nisip  =  str.charAt(buffer.length()  -  2);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	nisip  =  str.charAt(buffer.length()  -  2);	  if(str!=    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
136	[BUG]  [BUGGY]  ensureCapacity(buffer,  nullText);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  nullText);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  nullText);	  append(buffer,    nullText);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
137	[BUG]  [BUGGY]  safeGet(buffer,  0,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeGet(buffer,  0,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  0,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
138	[BUG]  [BUGGY]  CharTypes.appendQuoted(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendQuoted(buffer,  0,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendQuoted(buffer,  0,  str.length());	  CharTypes.appendQuoted(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
139	[BUG]  [BUGGY]  CharTypes.appendQuoted(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendQuoted(buffer,  0,  size);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendQuoted(buffer,  0,  size);	  CharTypes.appendQuoted(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
140	[BUG]  [BUGGY]  Integer  size  =  str.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Integer  size  =  str.length();  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Integer  size  =  str.length();	  int    size    =    str.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
141	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[buffer.length()];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer!=  null)  {  buffer  =  new  char[buffer.length()];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    -    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
142	[BUG]  [BUGGY]  CharTypes.appendCompletedField(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedField(buffer,  0,  size);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedField(buffer,  0,  size);	  CharTypes.appendCompletedField(str);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
143	[BUG]  [BUGGY]  CharTypes.appendCompleted(buffer,  str);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompleted(buffer,  str);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompleted(buffer,  str);	  CharTypes.appendCompletedField(str);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
144	[BUG]  [BUGGY]  Append(str,  0,  buffer.length()  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Append(str,  0,  buffer.length()  -  2);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(str,  0,  buffer.length()  -  2);	  Append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
145	[BUG]  [BUGGY]  if(str  ==  null)  {  append(nullText);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str  ==  null)  {  append(nullText);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  append(nullText);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }	  if(str!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
146	[BUG]  [BUGGY]  if(str  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	  if(str!=    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
147	[BUG]  [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(str.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  buffer  =  new  MutableStringBuffer(str.length());	  if(str.length()    >    0)    {    buffer    =    new    char[str.length()    +    1];    }    else    {    buffer    =    new    char[str.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
148	[BUG]  [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()];  }	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
149	[BUG]  [BUGGY]  if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()];  }	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
150	[BUG]  [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
151	[BUG]  [BUGGY]  append(str,  buffer,  size);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  buffer,  size);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer,  size);	  append(str,    buffer);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
152	[BUG]  [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(buffer.length());  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  buffer  =  new  MutableStringBuffer(buffer.length());	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    ];    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
153	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  +  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  +  size);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length()  +  size);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    ];    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
154	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  size);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  size);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
155	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
156	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length(),  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length(),  size);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer.length(),  size);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
157	[BUG]  [BUGGY]  Builder.append(buffer,  0,  buffer.length()  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.append(buffer,  0,  buffer.length()  -  2);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(buffer,  0,  buffer.length()  -  2);	  Builder.append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
158	[BUG]  [BUGGY]  Append(buffer,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Append(buffer,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(buffer,  str.length());	  append(buffer,    str.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
159	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  str.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  str.length);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  str.length);	  System.arraycopy(buffer,    0,    buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
160	[BUG]  [BUGGY]  ensureCapacity(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  0,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  0,  str.length());	  append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
161	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  2];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  2];	  buffer    =    new    char[buffer.length()    +    2];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
162	[BUG]  [BUGGY]  append(buffer,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  0,  size  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  size  +  1);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
163	[BUG]  [BUGGY]  safeGet(buffer,  0,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeGet(buffer,  0,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  0,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
164	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  buffer.length()  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  buffer.length()  -  2);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  buffer.length()  -  2);	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
165	[BUG]  [BUGGY]  safeGet(buffer,  0,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeGet(buffer,  0,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeGet(buffer,  0,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
166	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  buffer.length())  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent!=  null  &&  parent  ==  buffer.length())  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent!=  null  &&  parent  ==  buffer.length())  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
167	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  buffer.length())  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent!=  null  &&  parent  ==  buffer.length())  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent!=  null  &&  parent  ==  buffer.length())  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
168	[BUG]  [BUGGY]  ensureCapacity(pos,  buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(pos,  buffer);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(pos,  buffer);	  ensureCapacity(buffer,    pos);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
169	[BUG]  [BUGGY]  if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
170	[BUG]  [BUGGY]  if(str!=  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str!=  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str!=  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
171	[BUG]  [BUGGY]  if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  append(buffer);  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
172	[BUG]  [BUGGY]  if(str  ==  null)  {  append('n');  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str  ==  null)  {  append('n');  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  append('n');  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }	  if(str    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
173	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  1];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  1];	  buffer    =    new    char[buffer.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
174	[BUG]  [BUGGY]  buffer  =  new  char[Buffer.length()];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[Buffer.length()];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[Buffer.length()];	  buffer    =    new    char[buffer.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
175	[BUG]  [BUGGY]  ensureCapacity(buffer,  0,  initialCapacity);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  0,  initialCapacity);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  0,  initialCapacity);	  ensureCapacity(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
176	[BUG]  [BUGGY]  appendNullText(buffer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  appendNullText(buffer);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	appendNullText(buffer);	  append(str,    nullText);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
177	[BUG]  [BUGGY]  pendency(buffer,  0,  buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  pendency(buffer,  0,  buffer.length()  +  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	pendency(buffer,  0,  buffer.length()  +  1);	  pendency(buffer,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
178	[BUG]  [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedChunk(buffer,  0,  buffer.length()  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedChunk(buffer,  0,  buffer.length()  -  1);	  CharTypes.appendCompletedChunk(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
179	[BUG]  [BUGGY]  validateCapacity(buffer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  validateCapacity(buffer);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	validateCapacity(buffer);	  ensureCapacity(str);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
180	[BUG]  [BUGGY]  ensureCapacity(buffer,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  buffer.length()  +  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  buffer.length()  +  CAPACITY);	  ensureCapacity(buffer,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
181	[BUG]  [BUGGY]  ensureCapacity(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
182	[BUG]  [BUGGY]  safeAccess(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  safeAccess(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	safeAccess(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  1];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
183	[BUG]  [BUGGY]  append(str,  0,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  0,  buffer.length()  +  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  0,  buffer.length()  +  CAPACITY);	  append(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
184	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  [Delete]  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	[Delete]	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    ];    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
185	[BUG]  [BUGGY]  parent.append(nullText);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent.append(nullText);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent.append(nullText);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    ];    }    else    {    buffer    =    new    char[buffer.length()    ];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
186	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  *  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  *  CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  *  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  *  CAPACITY];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  *  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  *  CAPACITY];  }	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
187	[BUG]  [BUGGY]  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()  +  1];  }	  if(str.length()    >    0)    {    buffer    =    new    char[str.length()    +    1];    }    else    {    buffer    =    new    char[str.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
188	[BUG]  [BUGGY]  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[str.length()];  }  else  {  buffer  =  new  char[str.length()];  }	  if(str.length()    >    0)    {    buffer    =    new    char[str.length()    +    1];    }    else    {    buffer    =    new    char[str.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
189	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  +  1];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[str.length()  +  1];  }  else  {  buffer  =  new  char[str.length()  +  1];  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[str.length()  +  1];  }  else  {  buffer  =  new  char[str.length()  +  1];  }	  if(str.length()    >    0)    {    buffer    =    new    char[str.length()    +    1];    }    else    {    buffer    =    new    char[str.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
190	[BUG]  [BUGGY]  CharTypes.appendQuoted(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendQuoted(buffer,  0,  buffer.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendQuoted(buffer,  0,  buffer.length());	  if(str!=    null)    {    append(buffer);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
191	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  +  1];  }	  buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()];    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
192	[BUG]  [BUGGY]  Append(str,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Append(str,  buffer.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Append(str,  buffer.length());	  append(buffer,    str.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
193	[BUG]  [BUGGY]  append(str,  nullText,  buffer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  nullText,  buffer);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  nullText,  buffer);	  append(str,    nullText);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
194	[BUG]  [BUGGY]  if(str!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	  if(str    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length());    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
195	[BUG]  [BUGGY]  trim(buffer,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  trim(buffer,  str.length()  -  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	trim(buffer,  str.length()  -  1);	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    2];    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
196	[BUG]  [BUGGY]  trim(buffer,  str.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  trim(buffer,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	trim(buffer,  str.length());	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    2];    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
197	[BUG]  [BUGGY]  parent  =  str.next();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  parent  =  str.next();  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	parent  =  str.next();	  parent    =    parent.getParent();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
198	[BUG]  [BUGGY]  append(str,  buffer,  pos);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  buffer,  pos);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer,  pos);	  append(str,    buffer);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
199	[BUG]  [BUGGY]  ensureCapacity(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    1];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
200	[BUG]  [BUGGY]  Builder.append(buffer,  0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Builder.append(buffer,  0,  str.length()  -  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Builder.append(buffer,  0,  str.length()  -  1);	  Builder.append(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
201	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  str.length()  -  1);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(buffer,  0,  str.length()  -  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
202	[BUG]  [BUGGY]  Character.isLetter(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Character.isLetter(str);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Character.isLetter(str);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
203	[BUG]  [BUGGY]  Characters.isLetter(str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Characters.isLetter(str);  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Characters.isLetter(str);	  if(str    ==    null)    {    buffer    =    new    char[buffer.length()];    }    else    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
204	[BUG]  [BUGGY]  ensureCapacity(buffer,  pos  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  pos  +  1);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  pos  +  1);	  ensureCapacity(buffer,    pos);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
205	[BUG]  [BUGGY]  Appends(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  Appends(str,  0,  buffer.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	Appends(str,  0,  buffer.length());	  if(buffer    ==    null)    {    append(str);    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
206	[BUG]  [BUGGY]  ensureCapacity(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  ensureCapacity(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer,  size)>  0)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }	  safeGet(buffer,    size)>    0)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
207	[BUG]  [BUGGY]  append0(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append0(buffer,  0,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append0(buffer,  0,  str.length());	  append(buffer,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
208	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
209	[BUG]  [BUGGY]  buffer  =  new  char[buffer.length()  +  4];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  buffer  =  new  char[buffer.length()  +  4];  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	buffer  =  new  char[buffer.length()  +  4];	  buffer    =    new    char[buffer.length()    +    size];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
210	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(str  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }	  if(buffer    ==    null)    {    buffer    =    new    char[buffer.length()    +    CAPACITY];    }    else    {    buffer    =    new    char[buffer.length()    +    size];    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
211	[BUG]  [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharBuffer  buffer  =  new  CharBuffer(buffer,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharBuffer  buffer  =  new  CharBuffer(buffer,  str.length());	  CharBuffer    buffer    =    new    CharBuffer(buffer.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
212	[BUG]  [BUGGY]  CharTypes.appendCompletedField(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedField(buffer,  0,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedField(buffer,  0,  str.length());	  CharTypes.appendCompletedField(str);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
213	[BUG]  [BUGGY]  CharTypes.appendCompletedText(buffer,  str);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendCompletedText(buffer,  str);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendCompletedText(buffer,  str);	  CharTypes.appendCompletedField(str);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
214	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }	  }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
215	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer  ==  null)  {  buffer  =  new  char[capacity];  System.arraycopy(buffer,  0,  buffer,  0,  size);  }	  }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
216	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }  [BUGGY]      append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer!=  null)  {  buffer  =  new  char[capacity];  }  else  {  buffer  =  new  char[capacity];  }	  }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
217	[BUG]  [BUGGY]  CharTypes.appendQuoted(buffer,  pos);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  CharTypes.appendQuoted(buffer,  pos);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	CharTypes.appendQuoted(buffer,  pos);	  CharTypes.appendQuoted(buffer,    str);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
218	[BUG]  [BUGGY]  append(str,  0,  str.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  0,  str.length());  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  0,  str.length());	  append(buffer,    0,    str.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
219	[BUG]  [BUGGY]  append(str,  buffer.length()  /  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(str,  buffer.length()  /  CAPACITY);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(str,  buffer.length()  /  CAPACITY);	  append(buffer,    str.length()    /    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
220	[BUG]  [BUGGY]  append(buffer,  str.length()  /  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  append(buffer,  str.length()  /  2);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  str.length()  /  2);	  append(buffer,    str.length()    /    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
221	[BUG]  [BUGGY]  System.arraycopy(str,  0,  buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];      [BUGGY]  System.arraycopy(str,  0,  buffer,  0,  size);  [BUGGY]      }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	System.arraycopy(str,  0,  buffer,  0,  size);	  System.arraycopy(buffer,    0,    buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
