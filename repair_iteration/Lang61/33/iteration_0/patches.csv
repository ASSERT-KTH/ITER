bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  append(buffer,  str);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]  append(buffer,  str);  [BUGGY]  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  str);	append(str);  	non-compiled	[CE]  <identifier>  expected	65	None	replace
2	[BUG]  [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }	append(str);  	non-compiled	[CE]  <identifier>  expected	65	None	replace
3	[BUG]  [BUGGY]  append(buffer);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]  append(buffer);  [BUGGY]  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer);	append(str);  	non-compiled	[CE]  <identifier>  expected	65	None	replace
4	[BUG]  [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]  if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }  [BUGGY]  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	if(buffer!=  null)  {  append(str);  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length());  }	append(str);  	non-compiled	[CE]  <identifier>  expected	65	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    [BUGGY]  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	  	append(str);  	non-compiled	[CE]  <identifier>  expected	65	None	replace
6	[BUG]  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
7	[BUG]  [BUGGY]    if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
8	[BUG]  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
9	[BUG]  [BUGGY]    if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
10	[BUG]  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
11	[BUG]  [BUGGY]  ensureCapacity(buffer);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]  ensureCapacity(buffer);  [BUGGY]  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	ensureCapacity(buffer);	append(str);  	non-compiled	[CE]  <identifier>  expected	65	None	replace
12	[BUG]  [BUGGY]  append(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]  append(buffer,  0,  str.length());  [BUGGY]  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  0,  str.length());	append(str);  	non-compiled	[CE]  <identifier>  expected	65	None	replace
13	[BUG]  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
14	[BUG]  [BUGGY]    if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(buffer  ==  null)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
15	[BUG]  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(buffer!=  null)  {  buffer  =  new  char[buffer.length()  +  CAPACITY];  }  else  {  buffer  =  new  char[buffer.length()  +  size];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
16	[BUG]  [BUGGY]    int  size  =  str.length();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    int  size  =  str.length();  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    int  size  =  str.length();		non-compiled	[CE]  <identifier>  expected	66	None	add
17	[BUG]  [BUGGY]    if(str.length()  >  0)  {  buffer  =  new  char[buffer.length()  +  0];  }  else  {  buffer  =  new  char[buffer.length()  +  0];  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(str.length()  >  0)  {  buffer  =  new  char[buffer.length()  +  0];  }  else  {  buffer  =  new  char[buffer.length()  +  0];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(str.length()  >  0)  {  buffer  =  new  char[buffer.length()  +  0];  }  else  {  buffer  =  new  char[buffer.length()  +  0];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
18	[BUG]  [BUGGY]    if(str.length()  >  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]    if(str.length()  >  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }  [BUGGY]  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	    if(str.length()  >  0)  {  buffer  =  new  char[buffer.length()  +  1];  }  else  {  buffer  =  new  char[buffer.length()  +  1];  }		non-compiled	[CE]  <identifier>  expected	66	None	add
19	[BUG]  [BUGGY]  append(buffer,  str.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  StrBuilder(String  str)  {  super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]  append(buffer,  str.length()  +  CAPACITY);  [BUGGY]  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	126	126	2	replace	append(buffer,  str.length()  +  CAPACITY);	append(str);  	non-compiled	[CE]  <identifier>  expected	65	None	replace
