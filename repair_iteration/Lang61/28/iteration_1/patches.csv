bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  continue  thisBuf[i  +  strLen];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  thisBuf[i  +  strLen];  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  thisBuf[i  +  strLen];	  continue    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  continue  thisBuf[i  +  len];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  thisBuf[i  +  len];  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  thisBuf[i  +  len];	  continue    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  continue(thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue(thisBuf[i  +  j]);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue(thisBuf[i  +  j]);	  continue    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  continue  i  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  i  +  1;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  i  +  1;	  continue    i;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
5	[BUG]  [BUGGY]  continue  i  +  len;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  i  +  len;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  i  +  len;	  continue    i;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  continue  i  +  size;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  i  +  size;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  i  +  size;	  continue    i;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  continue  i  +  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  i  +  2;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  i  +  2;	  continue    i;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i,  len);  outer  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  i,  len);  outer  =  buffer[i  +  j];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i  +  j];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i,  strLen);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i,  strLen);  outer  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  buffer,  i,  strLen);  outer  =  buffer[i  +  j];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(i)).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(i)).append('n');	      ((    char)str.charAt(j)).append('n');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
13	[BUG]  [BUGGY]  ((  String)str.charAt(j)).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  String)str.charAt(j)).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  String)str.charAt(j)).append('n');	      ((    char)str.charAt(j)).append('n');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
14	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append('n',  startIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append('n',  startIndex);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append('n',  startIndex);	      ((    char)str.charAt(j)).append('n');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
15	[BUG]  [BUGGY]  if(j  >  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(j  >  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(j  >  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  if(j  >  0  ||  str.charAt(j)  ==  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(j  >  0  ||  str.charAt(j)  ==  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(j  >  0  ||  str.charAt(j)  ==  thisBuf[i  +  j])  {  continue  outer;  }	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  îndreptTo(len,  strLen)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  îndreptTo(len,  strLen)>  thisBuf[i  +  j])  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	îndreptTo(len,  strLen)>  thisBuf[i  +  j])  {	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  if(j  >  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(j  >  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(j  >  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('n');  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  len]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  size  -  j);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  size  -  j);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  size  -  j);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
23	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf.length  -  startIndex);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf.length  -  startIndex);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf.length  -  startIndex);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
24	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  size  -  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  size  -  i);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  size  -  i);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
25	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  len  -  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  len  -  startIndex);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  len  -  startIndex);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
26	[BUG]  [BUGGY]  chars[i]  =  str.charAt(j  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  chars[i]  =  str.charAt(j  +  1);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	chars[i]  =  str.charAt(j  +  1);	      chars[i]    =    str.charAt(j);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
27	[BUG]  [BUGGY]  chars[i]  =  str.charAt(i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  chars[i]  =  str.charAt(i);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	chars[i]  =  str.charAt(i);	      chars[i]    =    str.charAt(j);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
28	[BUG]  [BUGGY]  chars[i]  =  str.charAt(i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  chars[i]  =  str.charAt(i  +  1);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	chars[i]  =  str.charAt(i  +  1);	      chars[i]    =    str.charAt(j);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
29	[BUG]  [BUGGY]  chars[i]  =  thisBuf.charAt(j);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  chars[i]  =  thisBuf.charAt(j);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	chars[i]  =  thisBuf.charAt(j);	      chars[i]    =    str.charAt(j);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
30	[BUG]  [BUGGY]  chars[]  buf  =  buffer.toCharArray();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  chars[]  buf  =  buffer.toCharArray();  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	chars[]  buf  =  buffer.toCharArray();	      chars[]    buf    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
31	[BUG]  [BUGGY]  chars[]  buf  =  thisBuf.toCharArray();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  chars[]  buf  =  thisBuf.toCharArray();  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	chars[]  buf  =  thisBuf.toCharArray();	      chars[]    buf    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
32	[BUG]  [BUGGY]  continue  thisBuf.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  thisBuf.length  -  1;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  thisBuf.length  -  1;	  continue    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  continue  thisBuf.length  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  thisBuf.length  +  1;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  thisBuf.length  +  1;	  continue    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  continue  thisBuf.length  +  j;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  thisBuf.length  +  j;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  thisBuf.length  +  j;	  continue    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i    +    1,    strLen);    len    =    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
36	[BUG]  [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i    +    1,    strLen);    len    =    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
37	[BUG]  [BUGGY]  if(i  >  startIndex)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  startIndex)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  startIndex)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i    +    1,    strLen);    len    =    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
38	[BUG]  [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  len);  len  =  i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  len);  len  =  i;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  len);  len  =  i;  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i    +    1,    strLen);    len    =    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
39	[BUG]  [BUGGY]  continue  outer(i,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer(i,  size  -  startIndex);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer(i,  size  -  startIndex);	  continue    outer:    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  continue  outer(i,  size  -  strLen);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer(i,  size  -  strLen);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer(i,  size  -  strLen);	  continue    outer:    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  continue  outer(i,  len);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer(i,  len);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer(i,  len);	  continue    outer:    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  continue  i--;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  i--;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  i--;	  continue    outer--;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
43	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j])  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j])  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)  ==  thisBuf[i  +  j])  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j])  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j])  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j])  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)  ==  thisBuf[i  +  j])  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
47	[BUG]  [BUGGY]  if(i  >  startIndex)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  startIndex)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  startIndex)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  buffer[i];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  buffer[i];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  buffer[i];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buf[i  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buf[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buf[i  +  j];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  strLen[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  strLen[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  strLen[i  +  j];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
52	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buf,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buf,  i  +  1,  strLen);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buf,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    buf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
53	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buf,  startIndex  +  1,  strLen);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buf,  startIndex  +  1,  strLen);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buf,  startIndex  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    buf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
54	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  startIndex  +  1,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  startIndex  +  1,  strLen);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buf,  i,  thisBuf,  startIndex  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    buf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
55	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex,  buf,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex,  buf,  i  +  1,  len);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(thisBuf,  startIndex,  buf,  i  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    buf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
56	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  1]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  j]).append('n');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  j]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  j]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]).append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  strLen]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i,  len);  outer  =  buffer[i];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i,  len);  outer  =  buffer[i];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  i,  len);  outer  =  buffer[i];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
60	[BUG]  [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i,  len);  outer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i,  len);  outer  =  buffer[i];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i,  len);  outer  =  buffer[i];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
61	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append(thisBuf[i  +  j]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  len]).append(thisBuf[i  +  j]).append('n');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	8	None	replace
62	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append(thisBuf[i  +  1]).append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append(thisBuf[i  +  1]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  1]).append(thisBuf[i  +  1]).append('n');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	8	None	replace
63	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  j]).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  j]).append(thisBuf[i  +  j]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  j]).append(thisBuf[i  +  j]).append('n');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]).append(thisBuf[i  +  j]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  strLen]).append(thisBuf[i  +  j]).append('n');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf,  0,  size);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf,  0,  size);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
66	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  len);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  len);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
67	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  thisBuf.length,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  thisBuf.length,  thisBuf,  0,  len);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  thisBuf.length,  thisBuf,  0,  len);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
68	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  strLen]).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  strLen]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  strLen]).append('n');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	7	None	replace
69	[BUG]  [BUGGY]  str  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  str  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	str  =  buffer[i  +  j];	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    str    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
70	[BUG]  [BUGGY]  CharSequence  str  =  str.charAt(j)  ==  thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  CharSequence  str  =  str.charAt(j)  ==  thisBuf[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	CharSequence  str  =  str.charAt(j)  ==  thisBuf[i  +  j];	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    str    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
71	[BUG]  [BUGGY]  CharSequence  str  =  str.charAt(j)  >>  thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  CharSequence  str  =  str.charAt(j)  >>  thisBuf[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	CharSequence  str  =  str.charAt(j)  >>  thisBuf[i  +  j];	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    str    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
72	[BUG]  [BUGGY]  CharSequence  str  =  str.charAt(j)!=  thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  CharSequence  str  =  str.charAt(j)!=  thisBuf[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	CharSequence  str  =  str.charAt(j)!=  thisBuf[i  +  j];	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    str    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
73	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('-');  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('-');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  j]).append('-');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	7	None	replace
74	[BUG]  [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i  +  j];  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i  +  j];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i  +  j];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i,  size);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i,  size);  outer  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  buffer,  i,  size);  outer  =  buffer[i  +  j];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
76	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  i]).append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  i]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  i]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
77	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  j]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(i)).append(buffer[i  +  j]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex]).append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  len,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  len,  size  -  startIndex);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  len,  size  -  startIndex);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
80	[BUG]  [BUGGY]  continue  outer(i,  size  -  startIndex  +  strLen);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer(i,  size  -  startIndex  +  strLen);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer(i,  size  -  startIndex  +  strLen);	  continue    outer:    	non-compiled	[CE]  <identifier>  expected	10	None	replace
81	[BUG]  [BUGGY]  continue  outer(i  +  len,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer(i  +  len,  size  -  startIndex);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer(i  +  len,  size  -  startIndex);	  continue    outer:    	non-compiled	[CE]  <identifier>  expected	10	None	replace
82	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  len);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    buf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
83	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  i  +  1,  strLen);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buf,  i,  thisBuf,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    buf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
84	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  strLen);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    buf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
85	[BUG]  [BUGGY]  chars[]  buf  =  str.toCharArray(i);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  chars[]  buf  =  str.toCharArray(i);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	chars[]  buf  =  str.toCharArray(i);	      chars[]    buf    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
86	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  char[]  buf  =  buffer.toCharArray();  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	char[]  buf  =  buffer.toCharArray();	      chars[]    buf    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
87	[BUG]  [BUGGY]  continue  thisBuf[i  +  startIndex];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  thisBuf[i  +  startIndex];  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  thisBuf[i  +  startIndex];	  continue    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
88	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(startIndex,  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).insert(startIndex,  len);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).insert(startIndex,  len);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
89	[BUG]  [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  buf,  i,  len);  buffer[i]  =  str;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  buf,  i,  len);  buffer[i]  =  str;  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  buf,  i,  len);  buffer[i]  =  str;  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
90	[BUG]  [BUGGY]  ((  char)str.charAt(j)).reset();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).reset();  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).reset();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
91	[BUG]  [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
92	[BUG]  [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
93	[BUG]  [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  outer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  outer  =  buffer[i];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  outer  =  buffer[i];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
94	[BUG]  [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  size);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  size);  outer  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  size);  outer  =  buffer[i  +  j];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
95	[BUG]  [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i    +    1,    strLen);    len    =    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i];	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
97	[BUG]  [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
98	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex]).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex]).append(thisBuf[i  +  j]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex]).append(thisBuf[i  +  j]).append('n');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	8	None	replace
99	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  len]).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  len]).append(thisBuf[i  +  j]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(i)).append(buffer[i  +  len]).append(thisBuf[i  +  j]).append('n');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	8	None	replace
100	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
101	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
102	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
103	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
104	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append('-');  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append('-');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append('-');	      ((    char)str.charAt(j)).append('n');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
105	[BUG]  [BUGGY]  chars[i]  =  str.charAt(j  +  startIndex);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  chars[i]  =  str.charAt(j  +  startIndex);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	chars[i]  =  str.charAt(j  +  startIndex);	      chars[i]    =    str.charAt(j);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
106	[BUG]  [BUGGY]  continue  i  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  i  -  1;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  i  -  1;	  continue    i;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
107	[BUG]  [BUGGY]  ||(str.charAt(j)  ==  thisBuf[i  +  j]  &&  buffer[i  +  j]!=  null))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ||(str.charAt(j)  ==  thisBuf[i  +  j]  &&  buffer[i  +  j]!=  null))  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	||(str.charAt(j)  ==  thisBuf[i  +  j]  &&  buffer[i  +  j]!=  null))  {	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    str    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
108	[BUG]  [BUGGY]  char[]  buf  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  char[]  buf  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	char[]  buf  =  buffer[i  +  j];	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    str    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
109	[BUG]  [BUGGY]  ||(str.charAt(j)  ==  thisBuf[i  +  j]  &&  size  <  =  0))  {  str  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ||(str.charAt(j)  ==  thisBuf[i  +  j]  &&  size  <  =  0))  {  str  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	||(str.charAt(j)  ==  thisBuf[i  +  j]  &&  size  <  =  0))  {  str  =  buffer[i  +  j];	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    str    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
110	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  continue  outer;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  continue  outer;  }	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
111	[BUG]  [BUGGY]  if(str.charAt(j)  >=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)  >=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)  >=  thisBuf[i  +  j])  {  continue  outer;  }	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
112	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  len);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  len);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
113	[BUG]  [BUGGY]  if(i  >  0)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  0)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  0)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
114	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  size  -  startIndex);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(buffer,  i  +  strLen,  size  -  startIndex);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
115	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  i  +  1,  strLen);  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    buf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
116	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append('n');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	7	None	replace
117	[BUG]  [BUGGY]  if(j  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i  +  j];  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(j  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i  +  j];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(j  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  i,  len);  outer  =  buffer[i  +  j];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
118	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  1]).append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  1]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  1]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
119	[BUG]  [BUGGY]  if(j  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(j  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(j  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  len  =  i;  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    buf,    i    +    1,    strLen);    len    =    i;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
120	[BUG]  [BUGGY]  continue  outer:  len;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  outer:  len;  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  outer:  len;	  continue    outer--;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
121	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  size  +=  strLen;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  size  +=  strLen;  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j])  {  size  +=  strLen;  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
122	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  str  =  buffer[i  +  j];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  str  =  buffer[i  +  j];  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j])  {  str  =  buffer[i  +  j];  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
123	[BUG]  [BUGGY]  ||  str.charAt(j)  ==  thisBuf[i  +  j])  {  str  =  buffer[i  +  j];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ||  str.charAt(j)  ==  thisBuf[i  +  j])  {  str  =  buffer[i  +  j];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	||  str.charAt(j)  ==  thisBuf[i  +  j])  {  str  =  buffer[i  +  j];  }	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    str    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
124	[BUG]  [BUGGY]  ||  str.charAt(j)  ==  thisBuf[i  +  j])  {  str  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ||  str.charAt(j)  ==  thisBuf[i  +  j])  {  str  =  buffer[i  +  j];  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	||  str.charAt(j)  ==  thisBuf[i  +  j])  {  str  =  buffer[i  +  j];	      if(str.charAt(j)    ==    thisBuf[i    +    j])    {    str    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
125	[BUG]  [BUGGY]  if(i  >  startIndex)  {  outer:  buffer[i  +  j]  =  str;  }  else  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  break;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  startIndex)  {  outer:  buffer[i  +  j]  =  str;  }  else  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  break;  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  startIndex)  {  outer:  buffer[i  +  j]  =  str;  }  else  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  break;  }	  continue    outer:    	non-compiled	[CE]  <identifier>  expected	10	None	replace
126	[BUG]  [BUGGY]  if(i  >  startIndex)  {  outer:  buffer[i  +  j]  =  str;  }  else  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  size  +=  strLen;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  startIndex)  {  outer:  buffer[i  +  j]  =  str;  }  else  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  size  +=  strLen;  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  startIndex)  {  outer:  buffer[i  +  j]  =  str;  }  else  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  size  +=  strLen;  }	  continue    outer:    	non-compiled	[CE]  <identifier>  expected	10	None	replace
127	[BUG]  [BUGGY]  if(i  >  startIndex)  {  outer:  buffer[i  +  j]  =  str;  }  else  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  return  i;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(i  >  startIndex)  {  outer:  buffer[i  +  j]  =  str;  }  else  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  return  i;  }  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(i  >  startIndex)  {  outer:  buffer[i  +  j]  =  str;  }  else  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  return  i;  }	  continue    outer:    	non-compiled	[CE]  <identifier>  expected	10	None	replace
128	[BUG]  [BUGGY]  ((  char)str.charAt(i  +  1)).append(thisBuf[i  +  1]).append('n');  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(i  +  1)).append(thisBuf[i  +  1]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(i  +  1)).append(thisBuf[i  +  1]).append('n');	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
129	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append(thisBuf[i  +  j]).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append(thisBuf[i  +  j]).append('n');	      ((    char)str.charAt(j)).append(buffer[i    +    j]).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	8	None	replace
130	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  ((  char)str.charAt(j  +  1)).append('n');  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	((  char)str.charAt(j  +  1)).append('n');	      ((    char)str.charAt(j)).append('n');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
131	[BUG]  [BUGGY]  continue  chars[i  +  j];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  continue  chars[i  +  j];  [BUGGY]    }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	continue  chars[i  +  j];	  continue    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
132	[BUG]  [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
133	[BUG]  [BUGGY]  if(strLen  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  if(strLen  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  }  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	if(strLen  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  }	      if(i    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
134	[BUG]  [BUGGY]  chars[i]  =  str.charAt(i  +  j);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {    [BUGGY]  chars[i]  =  str.charAt(i  +  j);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1781	1781	2	replace	chars[i]  =  str.charAt(i  +  j);	      chars[i]    =    str.charAt(j);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
