bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).append(thisBuf[i  +  strLen]);	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).append(buffer[i  +  j]);	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  1]);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).append(thisBuf[i  +  1]);	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >=  len)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >=  len)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    endIndex    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  endIndex  >=  size)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  endIndex  >=  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  endIndex  >=  size)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    endIndex    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  chars[]  buf  =  thisBuf.get(j);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =  thisBuf.get(j);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =  thisBuf.get(j);	      chars[]    buf    =    thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
7	[BUG]  [BUGGY]  chars[]  buf  =  thisBuf.get(i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =  thisBuf.get(i  +  1);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =  thisBuf.get(i  +  1);	      chars[]    buf    =    thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
8	[BUG]  [BUGGY]  chars[]  buf  =  thisBuf.get(i,  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =  thisBuf.get(i,  strLen);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =  thisBuf.get(i,  strLen);	      chars[]    buf    =    thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
9	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  strLen])  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  strLen])  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if  (str.charAt(j)  ==  thisBuf[i  +  strLen])  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  size)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  size)  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  int  strLen  =  size  -  i;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  size  -  i;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  size  -  i;	      int    strLen    =    thisBuf.length    -    i;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
12	[BUG]  [BUGGY]  int  strLen  =  i  -  thisBuf.length;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  i  -  thisBuf.length;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  i  -  thisBuf.length;	      int    strLen    =    thisBuf.length    -    i;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
13	[BUG]  [BUGGY]  int  strLen  =  j  -  i;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  j  -  i;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  j  -  i;	      int    strLen    =    thisBuf.length    -    i;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
14	[BUG]  [BUGGY]  ((  String)str.charAt(j)).reset();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  String)str.charAt(j)).reset();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  String)str.charAt(j)).reset();	      ((    char)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
15	[BUG]  [BUGGY]  ((  char)thisBuf[j]).reset();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)thisBuf[j]).reset();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)thisBuf[j]).reset();	      ((    char)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
16	[BUG]  [BUGGY]  ((  char)str.charAt(j)).setCurrentLength(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).setCurrentLength(i);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).setCurrentLength(i);	      ((    char)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
17	[BUG]  [BUGGY]  if  (str.charAt(j)  >=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if  (str.charAt(j)  >=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if  (str.charAt(j)  >=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  char[]  buf  =(char[])str.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])str.clone();  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])str.clone();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(i);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])thisBuf.get(i);  size  +=  strLen;  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])thisBuf.get(i);  size  +=  strLen;	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  ((  char[])thisBuf[i]).append(str[j]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char[])thisBuf[i]).append(str[j]);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char[])thisBuf[i]).append(str[j]);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >=  size)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >=  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >=  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
22	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  ==  size)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  ==  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  ==  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  size)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  =  size)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  =  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  =  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
25	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(j);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =(char)thisBuf.get(j);  size  +=  strLen;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =(char)thisBuf.get(j);  size  +=  strLen;	      chars[]    buf    =(char)thisBuf.get(i);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(i);  size  +=  len;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =(char)thisBuf.get(i);  size  +=  len;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =(char)thisBuf.get(i);  size  +=  len;	      chars[]    buf    =(char)thisBuf.get(i);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(i);  size  +=  j;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =(char)thisBuf.get(i);  size  +=  j;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =(char)thisBuf.get(i);  size  +=  j;	      chars[]    buf    =(char)thisBuf.get(i);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  ((  char)str.charAt(j)).setLength(0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).setLength(0);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).setLength(0);	      ((    char)str.charAt(j)).setLength(i);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
29	[BUG]  [BUGGY]  ((  char)str.charAt(j)).setLength(i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).setLength(i  +  1);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).setLength(i  +  1);	      ((    char)str.charAt(j)).setLength(i);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
30	[BUG]  [BUGGY]  ((  String)str.charAt(j)).setLength(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  String)str.charAt(j)).setLength(i);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  String)str.charAt(j)).setLength(i);	      ((    char)str.charAt(j)).setLength(i);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  ((  char)thisBuf[j]).setLength(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)thisBuf[j]).setLength(i);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)thisBuf[j]).setLength(i);	      ((    char)str.charAt(j)).setLength(i);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  int  strLen  =  size  -  j;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  size  -  j;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  size  -  j;	      int    strLen    =    thisBuf.length    -    j;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
33	[BUG]  [BUGGY]  int  strLen  =  j  -  thisBuf.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  j  -  thisBuf.length;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  j  -  thisBuf.length;	      int    strLen    =    thisBuf.length    -    j;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
34	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  -  j  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  thisBuf.length  -  j  +  1;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  thisBuf.length  -  j  +  1;	      int    strLen    =    thisBuf.length    -    j;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  -  strLen;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  thisBuf.length  -  strLen;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  thisBuf.length  -  strLen;	      int    strLen    =    thisBuf.length    -    j;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
36	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  thisBuf.length();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  thisBuf.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
37	[BUG]  [BUGGY]  char  strLen  =  str.length();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char  strLen  =  str.length();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char  strLen  =  str.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
38	[BUG]  [BUGGY]  int  strLen  =  i.length();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  i.length();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  i.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
39	[BUG]  [BUGGY]  int  strLen  =  j.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  j.length();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  j.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
40	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])thisBuf.get(j);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])thisBuf.get(j);	      char[]    buf    =(char[])thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  1);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])thisBuf.get(i  +  1);	      char[]    buf    =(char[])thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  len);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])thisBuf.get(i  +  len);	      char[]    buf    =(char[])thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(j);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =(char)thisBuf.get(j);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =(char)thisBuf.get(j);	      chars[]    buf    =(char)thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  1);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =(char)thisBuf.get(i  +  1);	      chars[]    buf    =(char)thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[j  +  i];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])thisBuf[j  +  i];  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])thisBuf[j  +  i];	      char[]    buf    =(char[])thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
46	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[i  +  len];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])thisBuf[i  +  len];  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])thisBuf[i  +  len];	      char[]    buf    =(char[])thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
47	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =  thisBuf.toCharArray();	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
48	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =  buffer.toCharArray();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =  buffer.toCharArray();	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
49	[BUG]  [BUGGY]  char[]  buf  =  thisBuf,  str.toCharArray();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =  thisBuf,  str.toCharArray();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =  thisBuf,  str.toCharArray();	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
50	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
52	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  +  j];  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])thisBuf[buffer[i  +  j];	      char[]    buf    =(char[])thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
53	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  size)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
54	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  >  size)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  >  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  >  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
55	[BUG]  [BUGGY]  char[]  buf  =  str.toCharArray(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =  str.toCharArray(i);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =  str.toCharArray(i);	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
56	[BUG]  [BUGGY]  char[]  buf  =  str.toCharArray(j);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =  str.toCharArray(j);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =  str.toCharArray(j);	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
57	[BUG]  [BUGGY]  ((  char)str.charAt(j)).setLength(i  +  len);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).setLength(i  +  len);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).setLength(i  +  len);	      ((    char)str.charAt(j)).setLength(i);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
58	[BUG]  [BUGGY]  ((  char)str.charAt(j)).resetLength();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).resetLength();  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).resetLength();	      ((    char)str.charAt(j)).setLength(i);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  ((  char)strLen).append(thisBuf[i]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)strLen).append(thisBuf[i]);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)strLen).append(thisBuf[i]);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
60	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])buffer.get(i);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])buffer.get(i);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
61	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  j);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])thisBuf.get(i  +  j);	      char[]    buf    =(char[])thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
62	[BUG]  [BUGGY]  int  strLen  =  len  -  j;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  len  -  j;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  len  -  j;	      int    strLen    =    thisBuf.length    -    j;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
63	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).append(thisBuf[i  +  len]);	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
64	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(i)).append(thisBuf[i  +  j]);	      ((    char)str.charAt(j)).append(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
65	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(startIndex,  len);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).insert(startIndex,  len);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).insert(startIndex,  len);	      ((    char)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
66	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  startIndex);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  startIndex);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).computeValue(thisBuf,  startIndex);	      ((    char)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
67	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(startIndex  +  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).insert(startIndex  +  len);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).insert(startIndex  +  len);	      ((    char)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
68	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  j;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  str.length()  +  j;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  str.length()  +  j;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  startIndex;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  str.length()  -  startIndex;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  str.length()  -  startIndex;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
70	[BUG]  [BUGGY]  chars[]  buf  =  buffer.get(i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =  buffer.get(i);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =  buffer.get(i);	      chars[]    buf    =    thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
71	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.get(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =  thisBuf.get(i);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =  thisBuf.get(i);	      chars[]    buf    =    thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
72	[BUG]  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >  size)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >  size)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    endIndex    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
73	[BUG]  [BUGGY]  char[]  buf  =(char)thisBuf.get(i);  size  +=  len;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char)thisBuf.get(i);  size  +=  len;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char)thisBuf.get(i);  size  +=  len;	      chars[]    buf    =(char)thisBuf.get(i);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
74	[BUG]  [BUGGY]  int  strLen  =  len  -  i;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  len  -  i;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  len  -  i;	      int    strLen    =    thisBuf.length    -    i;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
75	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  len);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  len);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =(char)thisBuf.get(i  +  len);	      chars[]    buf    =(char)thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
76	[BUG]  [BUGGY]  len  =  thisBuf.length  -  j;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  len  =  thisBuf.length  -  j;  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	len  =  thisBuf.length  -  j;	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
77	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.toCharArray(j,  i);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =  thisBuf.toCharArray(j,  i);  size  +=  strLen;  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =  thisBuf.toCharArray(j,  i);  size  +=  strLen;	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
78	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.toCharArray(j,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =  thisBuf.toCharArray(j,  i);  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =  thisBuf.toCharArray(j,  i);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
79	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  size)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  size)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
80	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  j];  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	char[]  buf  =(char[])thisBuf[i  *  j];	      char[]    buf    =(char[])thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
81	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  >  size)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  >  size)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  >  size)  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
82	[BUG]  [BUGGY]  if(str.charAt(j)  >=  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)  >=  thisBuf[i  +  j])  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)  >=  thisBuf[i  +  j])  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
83	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  len)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
84	[BUG]  [BUGGY]  chars[]  buf  =  thisBuf.get(i  +  j);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =  thisBuf.get(i  +  j);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =  thisBuf.get(i  +  j);	      chars[]    buf    =    thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
85	[BUG]  [BUGGY]  ((  char)str.charAt(j)).setLength(i  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).setLength(i  +  2);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).setLength(i  +  2);	      ((    char)str.charAt(j)).setLength(i);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
86	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >  len)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >  len)  {  [BUGGY]    continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
87	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  i);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  i);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).computeValue(buffer,  i);	      ((    char)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
88	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  len);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  len);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).addToString(buffer,  i  +  len);	      ((    char)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
89	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  j);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	((  char)str.charAt(j)).addToString(buffer,  i  +  j);	      ((    char)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
90	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  j);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  j);  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	chars[]  buf  =(char)thisBuf.get(i  +  j);	      chars[]    buf    =(char)thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
91	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {    [BUGGY]  int  strLen  =  thisBuf.length;  [BUGGY]    if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1780	1780	2	replace	int  strLen  =  thisBuf.length;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
