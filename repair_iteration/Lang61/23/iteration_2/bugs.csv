bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  thisBuf  =  buf.toCharArray();  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buf.toCharArray();  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buf.toCharArray();	  char[]    thisBuf    =    buf;    	non-compiled	[CE]  ')'  expected	11	None	replace
2	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray();  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  buffer.toCharArray();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  buffer.toCharArray();	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  ')'  expected	17	None	replace
3	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  thisBuf.toCharArray();	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  ')'  expected	17	None	replace
4	[BUG]  [BUGGY]  char[]  buf  =  this.buffer.toCharArray();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  this.buffer.toCharArray();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  this.buffer.toCharArray();	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length;  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  strLen  =  thisBuf.length;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  strLen  =  thisBuf.length;	      	non-compiled	[CE]  ')'  expected	5	None	replace
6	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  -  strLen;  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  strLen  =  thisBuf.length  -  strLen;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  strLen  =  thisBuf.length  -  strLen;	      	non-compiled	[CE]  ')'  expected	5	None	replace
7	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  -  startIndex;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  strLen  =  thisBuf.length  -  startIndex;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  strLen  =  thisBuf.length  -  startIndex;	      	non-compiled	[CE]  ')'  expected	5	None	replace
8	[BUG]  [BUGGY]  int  size  =  str.length()  -  1;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  size  =  str.length()  -  1;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  size  =  str.length()  -  1;	      int    size    =    str.length();    	non-compiled	[CE]  ')'  expected	15	None	replace
9	[BUG]  [BUGGY]  int  size  =  str.length()  +  1;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  size  =  str.length()  +  1;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  size  =  str.length()  +  1;	      int    size    =    str.length();    	non-compiled	[CE]  ')'  expected	15	None	replace
10	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(strLen);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])thisBuf.get(strLen);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])thisBuf.get(strLen);	      char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  ')'  expected	10	None	replace
11	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(startIndex  +  strLen);  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])thisBuf.get(startIndex  +  strLen);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])thisBuf.get(startIndex  +  strLen);	      char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  ')'  expected	10	None	replace
12	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(startIndex  +  1);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])thisBuf.get(startIndex  +  1);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])thisBuf.get(startIndex  +  1);	      char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  ')'  expected	10	None	replace
13	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(buffer,  startIndex);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])thisBuf.get(buffer,  startIndex);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])thisBuf.get(buffer,  startIndex);	      char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  ')'  expected	10	None	replace
14	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray();  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  str.toCharArray();  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  str.toCharArray();	  char[]    thisBuf    =    buffer.toCharArray();    	non-compiled	[CE]  ')'  expected	1	None	replace
15	[BUG]  [BUGGY]  int  len  =  str.length()  -  1;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  len  =  str.length()  -  1;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  len  =  str.length()  -  1;	      int    len    =    str.length();    	non-compiled	[CE]  ')'  expected	13	None	replace
16	[BUG]  [BUGGY]  int  len  =  str.length()  +  1;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  len  =  str.length()  +  1;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  len  =  str.length()  +  1;	      int    len    =    str.length();    	non-compiled	[CE]  ')'  expected	13	None	replace
17	[BUG]  [BUGGY]  int  len  =  str.length()  -  startIndex;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  len  =  str.length()  -  startIndex;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  len  =  str.length()  -  startIndex;	      int    len    =    str.length();    	non-compiled	[CE]  ')'  expected	13	None	replace
18	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  strLen);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  strLen);  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  strLen);	  char[]    thisBuf    =    buffer.toCharArray(startIndex);    	non-compiled	[CE]  ')'  expected	12	None	replace
19	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen);  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen);	  char[]    thisBuf    =    buffer.toCharArray(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex);  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  str.toCharArray(startIndex);	  char[]    thisBuf    =    buffer.toCharArray(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  +  1];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  new  char[strLen  +  1];  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  new  char[strLen  +  1];	  char[]    thisBuf    =    new    char[strLen];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[size];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  new  char[size];  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  new  char[size];	  char[]    thisBuf    =    new    char[strLen];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  +  strLen];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  new  char[strLen  +  strLen];  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  new  char[strLen  +  strLen];	  char[]    thisBuf    =    new    char[strLen];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  strLen];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  strLen];  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  new  char[strLen  *  strLen];	  char[]    thisBuf    =    new    char[strLen];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  strLen  =  str.length()  -  1;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  strLen  =  str.length()  -  1;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  strLen  =  str.length()  +  1;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  strLen  =  str.length()  +  1;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  startIndex;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  strLen  =  str.length()  -  startIndex;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  strLen  =  str.length()  -  startIndex;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(strLen);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  str.toCharArray(strLen);  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  str.toCharArray(strLen);	  char[]    thisBuf    =    buffer.toCharArray(strLen);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(strLen  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(strLen  +  1);  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buffer.toCharArray(strLen  +  1);	  char[]    thisBuf    =    buffer.toCharArray(strLen);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  char[]  thisBuf  =  buf.toCharArray(strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buf.toCharArray(strLen);  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buf.toCharArray(strLen);	  char[]    thisBuf    =    buffer.toCharArray(strLen);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])this.buffer.get(strLen);	      char[]    buf    =(char[])this.buffer.get(startIndex);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  1);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])this.buffer.get(startIndex  +  1);	      char[]    buf    =(char[])this.buffer.get(startIndex);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
33	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  strLen);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])this.buffer.get(startIndex  +  strLen);	      char[]    buf    =(char[])this.buffer.get(startIndex);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
34	[BUG]  [BUGGY]  char[]  buffer  =  getChars();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buffer  =  getChars();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buffer  =  getChars();	      char[]    buffer    =    getBuffer();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
35	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buffer  =  getChars(startIndex);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buffer  =  getChars(startIndex);	      char[]    buffer    =    getBuffer();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
36	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex,  strLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buffer  =  getChars(startIndex,  strLen);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buffer  =  getChars(startIndex,  strLen);	      char[]    buffer    =    getBuffer();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
37	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  -  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  Integer  strLen  =  str.length()  -  1;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	Integer  strLen  =  str.length()  -  1;	      Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
38	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  Integer  strLen  =  str.length()  +  1;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	Integer  strLen  =  str.length()  +  1;	      Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  Integer  strLen  =  this.str.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  Integer  strLen  =  this.str.length();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	Integer  strLen  =  this.str.length();	      Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])thisBuf.clone();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])thisBuf.clone();	      char[]    buf    =(char[])str.clone();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
41	[BUG]  [BUGGY]  char[]  buf  =(char[])separator.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])separator.clone();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])separator.clone();	      char[]    buf    =(char[])str.clone();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
42	[BUG]  [BUGGY]  char[]  buf  =(char[])strLen.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])strLen.clone();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])strLen.clone();	      char[]    buf    =(char[])str.clone();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
43	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])str.getChars(startIndex);	      char[]    buf    =(char[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])str.getValue();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])str.getValue();	      char[]    buf    =(char[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
45	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer,  startIndex;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buffer,  startIndex;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buffer,  startIndex;	  char[]    thisBuf    =    buffer,    strLen;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  char[]  thisBuf  =  buf,  startIndex;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buf,  startIndex;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buf,  startIndex;	  char[]    thisBuf    =    buffer,    strLen;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
47	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer,  0,  strLen;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buffer,  0,  strLen;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buffer,  0,  strLen;	  char[]    thisBuf    =    buffer,    strLen;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
48	[BUG]  [BUGGY]  char[]  buf  =  buffer.getBuffer();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  buffer.getBuffer();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  buffer.getBuffer();	      char[]    buf    =    str.getBuffer();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.getBuffer();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  thisBuf.getBuffer();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  thisBuf.getBuffer();	      char[]    buf    =    str.getBuffer();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
50	[BUG]  [BUGGY]  char[]  buf  =  this.buffer.getBuffer();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  this.buffer.getBuffer();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  this.buffer.getBuffer();	      char[]    buf    =    str.getBuffer();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
51	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.toCharArray();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])buffer.toCharArray();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])buffer.toCharArray();	      char[]    buf    =(char[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  -  startIndex;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  Integer  strLen  =  str.length()  -  startIndex;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	Integer  strLen  =  str.length()  -  startIndex;	      Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer,  startIndex);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buffer,  startIndex);  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buffer,  startIndex);	  char[]    thisBuf    =    buffer,    strLen;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])buffer.clone();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])buffer.clone();	      char[]    buf    =(char[])str.clone();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(buffer,  startIndex);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(buffer,  startIndex);  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buffer.toCharArray(buffer,  startIndex);	  char[]    thisBuf    =    buffer.toCharArray(strLen);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  int  size  =  str.length()  -  startIndex;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  size  =  str.length()  -  startIndex;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  size  =  str.length()  -  startIndex;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
57	[BUG]  [BUGGY]  int  size  =  strLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  size  =  strLen;  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  size  =  strLen;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
58	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[size  -  1];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  new  char[size  -  1];  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  new  char[size  -  1];	  char[]    thisBuf    =    buf;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  int  len  =  thisBuf.length  -  startIndex;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  len  =  thisBuf.length  -  startIndex;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  len  =  thisBuf.length  -  startIndex;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
60	[BUG]  [BUGGY]  int  len  =  thisBuf.length  -  strLen;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  len  =  thisBuf.length  -  strLen;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  len  =  thisBuf.length  -  strLen;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(buffer);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])thisBuf.get(buffer);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])thisBuf.get(buffer);	      char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  char[]  buffer  =  getBuffer().toCharArray();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buffer  =  getBuffer().toCharArray();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buffer  =  getBuffer().toCharArray();	      char[]    buffer    =    getBuffer();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  size);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  size);  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  size);	  char[]    thisBuf    =    buffer.toCharArray(startIndex);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  size];  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  size];  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  new  char[strLen  *  size];	  char[]    thisBuf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
65	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  new  char[strLen  -  1];  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  new  char[strLen  -  1];	  char[]    thisBuf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.toCharArray();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])this.buffer.toCharArray();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])this.buffer.toCharArray();	      char[]    buf    =(char[])str.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  char[]  buf  =  thisBuf;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  thisBuf;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  thisBuf;	  char[]    thisBuf    =    buf;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  char[]  thisBuf  =  strBuf,  buffer.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  thisBuf  =  strBuf,  buffer.length;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  thisBuf  =  strBuf,  buffer.length;	  char[]    thisBuf    =    buffer,    strLen;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
69	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(startIndex);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])buffer.get(startIndex);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])buffer.get(startIndex);	      char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
70	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(strIndex);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])buffer.get(strIndex);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])buffer.get(strIndex);	      char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
71	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =(char[])this.buffer.clone();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =(char[])this.buffer.clone();	      char[]    buf    =(char[])str.clone();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
72	[BUG]  [BUGGY]  char[]  buf  =  new  char[strLen];  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  new  char[strLen];  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  new  char[strLen];	  char[]    thisBuf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex,  startIndex);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buffer  =  getChars(startIndex,  startIndex);  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buffer  =  getChars(startIndex,  startIndex);	      char[]    buffer    =    getBuffer();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
74	[BUG]  [BUGGY]  int  j  =  startIndex  +  strLen;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  int  j  =  startIndex  +  strLen;  [BUGGY]    int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	int  j  =  startIndex  +  strLen;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
75	[BUG]  [BUGGY]  char[]  buf  =  this.separator.getBuffer();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  this.separator.getBuffer();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  this.separator.getBuffer();	      char[]    buf    =    str.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
76	[BUG]  [BUGGY]  char[]  buf  =  this.str.getBuffer();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }    [BUGGY]  char[]  buf  =  this.str.getBuffer();  [BUGGY]    char[]  thisBuf  =  buffer;  int  len  =  thisBuf.length  -  strLen;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.47140452079103173	1775	1775	2	replace	char[]  buf  =  this.str.getBuffer();	      char[]    buf    =    str.getBuffer();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
