bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(str,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  size  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  size  -  1);	  super(str,    0,    size);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  super(str,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  size  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  size  +  1);	  super(str,    0,    size);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  super(str,  0,  size,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  size,  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  size,  1);	  super(str,    0,    size);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  super(str.substring(0,  str.length()  -  1));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.substring(0,  str.length()  -  1));  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.substring(0,  str.length()  -  1));	  super(nullText);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
5	[BUG]  [BUGGY]  super(str.substring(0,  str.length()  -  2));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.substring(0,  str.length()  -  2));  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.substring(0,  str.length()  -  2));	  super(nullText);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
6	[BUG]  [BUGGY]  super(nullText,  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  false);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  false);	  super(str,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  super(str,  false,  nullText);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  false,  nullText);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  false,  nullText);	  super(str,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  *  CAPACITY];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[size()  *  CAPACITY];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[size()  *  CAPACITY];	  this.buffer    =    new    char[size()    /    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
9	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  /  2];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[size()  /  2];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[size()  /  2];	  this.buffer    =    new    char[size()    /    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
10	[BUG]  [BUGGY]  this.buffer  =  new  char[str.length()  -  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[str.length()  -  1];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[str.length()  -  1];	  this.buffer    =    new    char[str.length()    *    1];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
11	[BUG]  [BUGGY]  this.buffer  =  new  char[str.length()  /  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[str.length()  /  1];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[str.length()  /  1];	  this.buffer    =    new    char[str.length()    *    1];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
12	[BUG]  [BUGGY]  super(str.toCharArray(),  0,  size  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toCharArray(),  0,  size  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toCharArray(),  0,  size  +  1);	  super(str.toCharArray(),    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
13	[BUG]  [BUGGY]  super(str.toCharArray(),  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toCharArray(),  0,  buffer.length);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toCharArray(),  0,  buffer.length);	  super(str.toCharArray(),    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
14	[BUG]  [BUGGY]  super(str.toCharArray(),  0,  size,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toCharArray(),  0,  size,  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toCharArray(),  0,  size,  1);	  super(str.toCharArray(),    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
15	[BUG]  [BUGGY]  this(str,  0,  nullText.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  0,  nullText.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  0,  nullText.length());	  this(nullText,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
16	[BUG]  [BUGGY]  this(nullText,  0,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(nullText,  0,  str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(nullText,  0,  str.length()  +  1);	  this(nullText,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
17	[BUG]  [BUGGY]  super(str.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.length());	  super(str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
18	[BUG]  [BUGGY]  super(str.length(),  CAPACITY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.length(),  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.length(),  CAPACITY);	  super(str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
19	[BUG]  [BUGGY]  super(str.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.length()  -  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.length()  -  CAPACITY);	  super(str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
20	[BUG]  [BUGGY]  super(str.length()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.length()  +  1);	  super(str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
21	[BUG]  [BUGGY]  super(nullText,  0,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  0,  str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  0,  str.length()  +  1);	  super(nullText,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
22	[BUG]  [BUGGY]  super(str,  0,  nullText.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  nullText.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  nullText.length());	  super(nullText,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
23	[BUG]  [BUGGY]  super(str.toString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toString());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toString());	  super(str.toCharArray()    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
24	[BUG]  [BUGGY]  super(str,  str.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  str.toCharArray());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  str.toCharArray());	  super(str.toCharArray()    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
25	[BUG]  [BUGGY]  this.str  =  String.valueOf(str.toLowerCase());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  String.valueOf(str.toLowerCase());  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  String.valueOf(str.toLowerCase());	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
26	[BUG]  [BUGGY]  this.str  =  String.valueOf(str.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  String.valueOf(str.length());  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  String.valueOf(str.length());	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
27	[BUG]  [BUGGY]  this.buffer  =  new  char[str.length()  -  CAPACITY];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[str.length()  -  CAPACITY];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[str.length()  -  CAPACITY];	  this.buffer    =    new    char[size()    -    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  this(String.valueOf(str),  0,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(String.valueOf(str),  0,  str.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(String.valueOf(str),  0,  str.length());	  this(str,    0,    str.length()    +    2);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
29	[BUG]  [BUGGY]  this(str,  0,  str.length()  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  0,  str.length()  -  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  0,  str.length()  -  2);	  this(str,    0,    str.length()    +    2);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
30	[BUG]  [BUGGY]  this(str,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  0,  buffer.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  0,  buffer.length()  -  1);	  this(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
31	[BUG]  [BUGGY]  this.str  = " ";  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  = " ";  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  = " ";	  this.str    =    nullText;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
32	[BUG]  [BUGGY]  this.buffer  =  new  char[str.length()  +  2];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[str.length()  +  2];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[str.length()  +  2];	  this.buffer    =    new    char[str.length()    ];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
33	[BUG]  [BUGGY]  this.buffer  =  new  char[str.length()  +  4];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[str.length()  +  4];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[str.length()  +  4];	  this.buffer    =    new    char[str.length()    ];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
34	[BUG]  [BUGGY]  super(str,  0,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  buffer.length()  +  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  buffer.length()  +  CAPACITY);	  super(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
35	[BUG]  [BUGGY]  super(str,  0,  buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  buffer.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  buffer.length()  +  1);	  super(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
36	[BUG]  [BUGGY]  super(str,  0,  buffer.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  buffer.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  buffer.length()  -  1);	  super(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
37	[BUG]  [BUGGY]  super(str,  0,  buffer.length()  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  buffer.length()  +  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  buffer.length()  +  2);	  super(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
38	[BUG]  [BUGGY]  super(str,  nullText,  0,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  0,  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  0,  1);	  super(str,    nullText,    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
39	[BUG]  [BUGGY]  super(str,  nullText,  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  2);	  super(str,    nullText,    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
40	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  +  2];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[size()  +  2];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[size()  +  2];	  this.buffer    =    new    char[size()    ];    	non-compiled	[CE]  <identifier>  expected	38	None	replace
41	[BUG]  [BUGGY]  this.str  =  new  String(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  new  String(buffer,  0,  str.length());  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  new  String(buffer,  0,  str.length());	  this.str    =    new    String(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
42	[BUG]  [BUGGY]  this.str  =  new  String(buffer,  0,  str.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  new  String(buffer,  0,  str.length);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  new  String(buffer,  0,  str.length);	  this.str    =    new    String(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
43	[BUG]  [BUGGY]  this.str  =  new  String(buffer,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  new  String(buffer,  0,  size  -  1);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  new  String(buffer,  0,  size  -  1);	  this.str    =    new    String(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
44	[BUG]  [BUGGY]  this.str  =  new  String(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  new  String(buffer,  0,  buffer.length);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  new  String(buffer,  0,  buffer.length);	  this.str    =    new    String(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
45	[BUG]  [BUGGY]  this.buffer  =  new  String[str.length()  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  String[str.length()  +  1];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  String[str.length()  +  1];	  this.buffer    =    new    String[str.length()];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
46	[BUG]  [BUGGY]  this.buffer  =  new  String[str.length()  +  2];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  String[str.length()  +  2];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  String[str.length()  +  2];	  this.buffer    =    new    String[str.length()];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
47	[BUG]  [BUGGY]  this.buffer  =  new  String[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  String[str.length()  +  CAPACITY];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  String[str.length()  +  CAPACITY];	  this.buffer    =    new    String[str.length()];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
48	[BUG]  [BUGGY]  this.buffer  =  new  String[str.length()  +  4];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  String[str.length()  +  4];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  String[str.length()  +  4];	  this.buffer    =    new    String[str.length()];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
49	[BUG]  [BUGGY]  this.str  =  str.substring(0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  str.substring(0,  str.length()  -  1);	  this.str    =    str.trim();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
50	[BUG]  [BUGGY]  this.str  =  str.substring(0,  str.length()  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  str.substring(0,  str.length()  -  2);	  this.str    =    str.trim();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
51	[BUG]  [BUGGY]  this.str  =  str.toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  str.toLowerCase();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  str.toLowerCase();	  this.str    =    str.trim();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
52	[BUG]  [BUGGY]  super(str.toLowerCase()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toLowerCase()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toLowerCase()  +  1);	  super(str.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
53	[BUG]  [BUGGY]  super(str.toLowerCase(),  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toLowerCase(),  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toLowerCase(),  true);	  super(str.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
54	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  *  1];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[size()  *  1];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[size()  *  1];	  this.buffer    =    new    char[size()    +    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
55	[BUG]  [BUGGY]  super(str,  0,  this.buffer,  nullText);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  this.buffer,  nullText);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  this.buffer,  nullText);	  super(str,    0,    nullText);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
56	[BUG]  [BUGGY]  super(str,  0,  str.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  str.length()  -  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  str.length()  -  CAPACITY);	  super(str,    0,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
57	[BUG]  [BUGGY]  super(str,  0,  str.length(),  CAPACITY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  str.length(),  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  str.length(),  CAPACITY);	  super(str,    0,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
58	[BUG]  [BUGGY]  super(str,  true,  nullText);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  true,  nullText);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  true,  nullText);	  super(str,    true);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  super(str,  true,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  true,  0);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  true,  0);	  super(str,    true);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
60	[BUG]  [BUGGY]  super(str.toCharArray(),  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toCharArray(),  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toCharArray(),  2);	  super(str.toCharArray(),    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  super(str.toCharArray(),  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toCharArray(),  4);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toCharArray(),  4);	  super(str.toCharArray(),    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
62	[BUG]  [BUGGY]  super(str.toCharArray(),  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toCharArray(),  0);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toCharArray(),  0);	  super(str.toCharArray(),    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  super(str,  nullText,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  0,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  0,  size);	  super(str,    nullText,    size);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
64	[BUG]  [BUGGY]  super(str,  nullText,  size  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  size  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  size  +  1);	  super(str,    nullText,    size);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
65	[BUG]  [BUGGY]  super(str,  nullText,  buffer.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  buffer.length);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  buffer.length);	  super(str,    nullText,    size);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
66	[BUG]  [BUGGY]  super(str,  nullText,  buffer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  buffer);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  buffer);	  super(str,    nullText,    pos);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
67	[BUG]  [BUGGY]  super(str,  nullText,  buffer,  pos);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  buffer,  pos);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  buffer,  pos);	  super(str,    nullText,    pos);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
68	[BUG]  [BUGGY]  super(str.toString(),  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toString(),  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toString(),  true);	  super(str.toCharArray(),    true);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
69	[BUG]  [BUGGY]  super(str.toCharArray(),  nullText);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toCharArray(),  nullText);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toCharArray(),  nullText);	  super(str.toCharArray(),    true);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
70	[BUG]  [BUGGY]  this(str.toCharArray(),  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str.toCharArray(),  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str.toCharArray(),  true);	  super(str.toCharArray(),    true);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
71	[BUG]  [BUGGY]  this(str,  0,  str.length(),  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  0,  str.length(),  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  0,  str.length(),  CAPACITY);	  this(str,    0,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
72	[BUG]  [BUGGY]  this(str,  0,  str.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  0,  str.length()  -  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  0,  str.length()  -  CAPACITY);	  this(str,    0,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
73	[BUG]  [BUGGY]  super(str,  nullText,  0,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  0,  0);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  0,  0);	  super(str,    nullText,    0);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
74	[BUG]  [BUGGY]  super(nullText,  nullText,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  nullText,  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  nullText,  true);	  super(str,    nullText,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
75	[BUG]  [BUGGY]  super(str,  newLine,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  newLine,  false);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  newLine,  false);	  super(str,    nullText,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
76	[BUG]  [BUGGY]  super(nullText,  str,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  str,  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  str,  true);	  super(str,    nullText,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
77	[BUG]  [BUGGY]  this(str,  0,  buffer.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  0,  buffer.length()  +  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  0,  buffer.length()  +  CAPACITY);	  this(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
78	[BUG]  [BUGGY]  this(str,  0,  buffer.length()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  0,  buffer.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  0,  buffer.length()  +  1);	  this(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
79	[BUG]  [BUGGY]  super(str.toString(),  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toString(),  false);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toString(),  false);	  super(str.toCharArray(),    false);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
80	[BUG]  [BUGGY]  this(str.toCharArray(),  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str.toCharArray(),  false);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str.toCharArray(),  false);	  super(str.toCharArray(),    false);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
81	[BUG]  [BUGGY]  char  size  =  str.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  char  size  =  str.length();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	char  size  =  str.length();	  int    size    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
82	[BUG]  [BUGGY]  Integer  size  =  str.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  Integer  size  =  str.length();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	Integer  size  =  str.length();	  int    size    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
83	[BUG]  [BUGGY]  super(str,  0,  str.length()  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  str.length()  -  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  str.length()  -  2);	  super(str,    0,    str.length()    +    2);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
84	[BUG]  [BUGGY]  this.buffer  =  new  StringBuffer(32);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  StringBuffer(32);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  StringBuffer(32);	  this.buffer    =    new    StringBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
85	[BUG]  [BUGGY]  int  size  =  this.str.length()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  int  size  =  this.str.length()  +  1;  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	int  size  =  this.str.length()  +  1;	  int    size    =    this.str.length();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
86	[BUG]  [BUGGY]  int  size  =  this.str.length()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  int  size  =  this.str.length()  -  1;  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	int  size  =  this.str.length()  -  1;	  int    size    =    this.str.length();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
87	[BUG]  [BUGGY]  char  size  =  this.str.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  char  size  =  this.str.length();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	char  size  =  this.str.length();	  int    size    =    this.str.length();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
88	[BUG]  [BUGGY]  super(buffer,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(buffer,  0,  size  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(buffer,  0,  size  -  1);	  super(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
89	[BUG]  [BUGGY]  super(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(buffer,  0,  buffer.length);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(buffer,  0,  buffer.length);	  super(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
90	[BUG]  [BUGGY]  super(buffer,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(buffer,  0,  buffer.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(buffer,  0,  buffer.length());	  super(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
91	[BUG]  [BUGGY]  super(str,  this.nullText,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  this.nullText,  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  this.nullText,  true);	  super(str,    nullText,    true);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
92	[BUG]  [BUGGY]  super(str,  newLine,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  newLine,  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  newLine,  true);	  super(str,    nullText,    true);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
93	[BUG]  [BUGGY]  super(str,  0,  str.length()  /  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  str.length()  /  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  str.length()  /  1);	  super(str,    0,    str.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
94	[BUG]  [BUGGY]  int  size  =  str.length()  *  CAPACITY;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  int  size  =  str.length()  *  CAPACITY;  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	int  size  =  str.length()  *  CAPACITY;	  int    size    =    str.length()    +    CAPACITY;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
95	[BUG]  [BUGGY]  int  size  =  str.length()  /  CAPACITY;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  int  size  =  str.length()  /  CAPACITY;  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	int  size  =  str.length()  /  CAPACITY;	  int    size    =    str.length()    +    CAPACITY;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
96	[BUG]  [BUGGY]  this.buffer  =  new  String[str.length()  *  CAPACITY];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  String[str.length()  *  CAPACITY];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  String[str.length()  *  CAPACITY];	  this.buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
97	[BUG]  [BUGGY]  this.buffer  =  new  char[str.length()  *  2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[str.length()  *  2];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[str.length()  *  2];	  this.buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
98	[BUG]  [BUGGY]  super(str,  0,  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  1);	  super(str,    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
99	[BUG]  [BUGGY]  super(str,  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  2);	  super(str,    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
100	[BUG]  [BUGGY]  super(str.toUpperCase()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toUpperCase()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toUpperCase()  +  1);	  super(str.toUpperCase());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
101	[BUG]  [BUGGY]  super(str.toUpperCase(),  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toUpperCase(),  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toUpperCase(),  true);	  super(str.toUpperCase());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
102	[BUG]  [BUGGY]  super(buffer,  0,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(buffer,  0,  str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(buffer,  0,  str.length()  +  1);	  super(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
103	[BUG]  [BUGGY]  super(str.getValue()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.getValue()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.getValue()  +  1);	  super(str.getValue());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
104	[BUG]  [BUGGY]  super(str.getLineno());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.getLineno());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.getLineno());	  super(str.getValue());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
105	[BUG]  [BUGGY]  super(str.substring(0,  str.length()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.substring(0,  str.length()));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.substring(0,  str.length()));	  super(str.substring(1));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
106	[BUG]  [BUGGY]  super(str.substring(2));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.substring(2));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.substring(2));	  super(str.substring(1));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
107	[BUG]  [BUGGY]  super(str,  0,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  0);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  0);	  super(str,    0L);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
108	[BUG]  [BUGGY]  this.buffer  =  new  char[str.length()  /  CAPACITY];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[str.length()  /  CAPACITY];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[str.length()  /  CAPACITY];	  this.buffer    =    new    char[size()    /    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
109	[BUG]  [BUGGY]  super(str,  0,  CAPACITY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  CAPACITY);	  super(str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
110	[BUG]  [BUGGY]  super(str.toCharArray(),  0,  size  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toCharArray(),  0,  size  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toCharArray(),  0,  size  -  1);	  super(str.toCharArray(),    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
111	[BUG]  [BUGGY]  this(buffer,  0,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(buffer,  0,  str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(buffer,  0,  str.length()  +  1);	  this(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
112	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  1];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[size()  1];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[size()  1];	  this.buffer    =    new    char[size()    +    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
113	[BUG]  [BUGGY]  super(String.valueOf(str),  0,  str.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(String.valueOf(str),  0,  str.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(String.valueOf(str),  0,  str.length());	  super(str,    0,    str.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
114	[BUG]  [BUGGY]  this.buffer  =  buffer;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  buffer;  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  buffer;	  this.buffer    =    str;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
115	[BUG]  [BUGGY]  this.buffer  =  new  charBuffer();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  charBuffer();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  charBuffer();	  this.buffer    =    new    StringBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
116	[BUG]  [BUGGY]  super(str.substring(0,  str.length()  -  1),  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.substring(0,  str.length()  -  1),  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.substring(0,  str.length()  -  1),  true);	  super(str.toCharArray(),    true);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
117	[BUG]  [BUGGY]  this.str  =  str  ==  null?  null  :  str.trim();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  str  ==  null?  null  :  str.trim();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  str  ==  null?  null  :  str.trim();	  this.str    =    str.trim();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
118	[BUG]  [BUGGY]  this.str  =  str.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  str.trim().toLowerCase();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  str.trim().toLowerCase();	  this.str    =    str.trim();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
119	[BUG]  [BUGGY]  super(str,  0,  buffer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  buffer);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  buffer);	  super(str,    0,    nullText);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
120	[BUG]  [BUGGY]  super(str.substring(0,  str.length()  -  1),  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.substring(0,  str.length()  -  1),  false);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.substring(0,  str.length()  -  1),  false);	  super(str.toCharArray(),    false);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
121	[BUG]  [BUGGY]  super(nullText.toCharArray(),  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText.toCharArray(),  false);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText.toCharArray(),  false);	  super(str.toCharArray(),    false);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
122	[BUG]  [BUGGY]  super(String.valueOf(str),  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(String.valueOf(str),  false);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(String.valueOf(str),  false);	  super(str.toCharArray(),    false);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
123	[BUG]  [BUGGY]  super(String.valueOf(str));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(String.valueOf(str));	  super(str.toCharArray()    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
124	[BUG]  [BUGGY]  this(str,  0,  buffer.length()  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  0,  buffer.length()  +  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  0,  buffer.length()  +  2);	  this(str,    0,    buffer.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
125	[BUG]  [BUGGY]  this.str  =  str  ==  null?  null  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  str  ==  null?  null  :  str.toCharArray();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  str  ==  null?  null  :  str.toCharArray();	  this.str    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
126	[BUG]  [BUGGY]  this.str  =  str!=  null?  null  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  str!=  null?  null  :  str.toCharArray();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  str!=  null?  null  :  str.toCharArray();	  this.str    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
127	[BUG]  [BUGGY]  super(nullText,  str);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  str);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  str);	  super(nullText);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
128	[BUG]  [BUGGY]  super(nullText,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  true);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  true);	  super(str,    nullText,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
129	[BUG]  [BUGGY]  super(buffer,  nullText,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(buffer,  nullText,  false);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(buffer,  nullText,  false);	  super(str,    nullText,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
130	[BUG]  [BUGGY]  this.str  =  String.valueOf(str  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  String.valueOf(str  +  1);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  String.valueOf(str  +  1);	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
131	[BUG]  [BUGGY]  this.str  =  String.valueOf(buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  String.valueOf(buffer);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  String.valueOf(buffer);	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
132	[BUG]  [BUGGY]  super(str,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  buffer.length);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  buffer.length);	  super(str,    0,    size);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
133	[BUG]  [BUGGY]  super(str,  false,  CAPACITY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  false,  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  false,  CAPACITY);	  super(str,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
134	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  -  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[size()  -  1];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[size()  -  1];	  this.buffer    =    new    char[size()    -    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
135	[BUG]  [BUGGY]  super(nullText,  0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  0,  str.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  0,  str.length()  -  1);	  super(nullText,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
136	[BUG]  [BUGGY]  super(nullText,  0,  str.length()  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  0,  str.length()  +  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  0,  str.length()  +  2);	  super(nullText,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
137	[BUG]  [BUGGY]  this(nullText,  0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(nullText,  0,  str.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(nullText,  0,  str.length()  -  1);	  this(nullText,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
138	[BUG]  [BUGGY]  super(buffer,  0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(buffer,  0,  str.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(buffer,  0,  str.length()  -  1);	  super(buffer,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
139	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  +  4];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[size()  +  4];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[size()  +  4];	  this.buffer    =    new    char[size()    ];    	non-compiled	[CE]  <identifier>  expected	38	None	replace
140	[BUG]  [BUGGY]  this.buffer  =  new  char[str.size()];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  char[str.size()];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  char[str.size()];	  this.buffer    =    new    char[size()    +    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
141	[BUG]  [BUGGY]  super(nullText,  str,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  str,  false);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  str,  false);	  super(str,    nullText,    false);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
142	[BUG]  [BUGGY]  super(str,  0xFFFF);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0xFFFF);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0xFFFF);	  super(str,    0L);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
143	[BUG]  [BUGGY]  super(str.length()  +  CAPACITY,  0,  size);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.length()  +  CAPACITY,  0,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.length()  +  CAPACITY,  0,  size);	  super(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
144	[BUG]  [BUGGY]  this(str,  0,  size);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  0,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  0,  size);	  super(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
145	[BUG]  [BUGGY]  this.buffer  =  new  StringBuffer(str.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  StringBuffer(str.length());  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  StringBuffer(str.length());	  this.buffer    =    new    StringBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
146	[BUG]  [BUGGY]  super(str,  nullText,  0,  CAPACITY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  0,  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  0,  CAPACITY);	  super(str,    nullText,    0);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
147	[BUG]  [BUGGY]  super(str.substring(0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.substring(0,  str.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.substring(0,  str.length()  -  1);	  super(str.substring(1));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
148	[BUG]  [BUGGY]  this(str,  1,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this(str,  1,  str.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this(str,  1,  str.length());	  this(str,    0,    str.length()    +    2);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
149	[BUG]  [BUGGY]  this.buffer  =  str.trim();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  str.trim();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  str.trim();	  this.buffer    =    str;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
150	[BUG]  [BUGGY]  this.buffer  =  str.toCharArray();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  str.toCharArray();  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  str.toCharArray();	  this.buffer    =    str;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
151	[BUG]  [BUGGY]  super(str,  0,  str.length()  *  CAPACITY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  str.length()  *  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  str.length()  *  CAPACITY);	  super(str,    0,    str.length()    +    CAPACITY);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
152	[BUG]  [BUGGY]  super(str,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  null);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  null);	  super(str,    true);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
153	[BUG]  [BUGGY]  super(nullText,  0,  str.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(nullText,  0,  str.length()  +  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(nullText,  0,  str.length()  +  CAPACITY);	  super(nullText,    0,    str.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
154	[BUG]  [BUGGY]  this.str  =  str  ==  null?  null  :  String.valueOf(str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  str  ==  null?  null  :  String.valueOf(str);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  str  ==  null?  null  :  String.valueOf(str);	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
155	[BUG]  [BUGGY]  this.buffer  =  new  String(str.length()  *  CAPACITY];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.buffer  =  new  String(str.length()  *  CAPACITY];  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.buffer  =  new  String(str.length()  *  CAPACITY];	  this.buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
156	[BUG]  [BUGGY]  super(str,  nullText,  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  CAPACITY);	  super(str,    nullText,    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
157	[BUG]  [BUGGY]  super(str,  nullText,  buffer.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  buffer.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  buffer.length());	  super(str,    nullText,    size);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
158	[BUG]  [BUGGY]  super(str,  0,  this.pos);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  0,  this.pos);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  0,  this.pos);	  super(str,    0,    nullText);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
159	[BUG]  [BUGGY]  this.str  =  new  String(buffer,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  this.str  =  new  String(buffer,  0,  size  +  1);  [BUGGY]      super();  if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	this.str  =  new  String(buffer,  0,  size  +  1);	  this.str    =    new    String(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
160	[BUG]  [BUGGY]  super(str,  nullText,  0,  pos);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  nullText,  0,  pos);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  nullText,  0,  pos);	  super(str,    nullText,    pos);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
161	[BUG]  [BUGGY]  super(str,  false,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str,  false,  0);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str,  false,  0);	  super(str,    false);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
162	[BUG]  [BUGGY]  super(str.toCharArray(),  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {      [BUGGY]  super(str.toCharArray(),  3);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	121	121	2	replace	super(str.toCharArray(),  3);	  super(str.toCharArray(),    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
