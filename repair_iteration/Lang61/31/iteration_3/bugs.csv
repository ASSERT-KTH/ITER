bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String[]  buffer  =(str  ==  null?  null  :  str.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(str  ==  null?  null  :  str.toCharArray());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(str  ==  null?  null  :  str.toCharArray());	  char[]    buffer    =(str    ==    null?    null    :    str.toCharArray());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
2	[BUG]  [BUGGY]  int  size  =  this.str.length()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  int  size  =  this.str.length()  +  1;  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	int  size  =  this.str.length()  +  1;	  int    size    =    this.str.length();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
3	[BUG]  [BUGGY]  int  size  =  this.str.length()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  int  size  =  this.str.length()  -  1;  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	int  size  =  this.str.length()  -  1;	  int    size    =    this.str.length();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
4	[BUG]  [BUGGY]  char  size  =  this.str.length();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char  size  =  this.str.length();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char  size  =  this.str.length();	  int    size    =    this.str.length();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
5	[BUG]  [BUGGY]  int  size  =  str.length()  *  CAPACITY;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  int  size  =  str.length()  *  CAPACITY;  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	int  size  =  str.length()  *  CAPACITY;	  int    size    =    str.length()    +    CAPACITY;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
6	[BUG]  [BUGGY]  int  size  =  str.length()  /  CAPACITY;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  int  size  =  str.length()  /  CAPACITY;  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	int  size  =  str.length()  /  CAPACITY;	  int    size    =    str.length()    +    CAPACITY;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
7	[BUG]  [BUGGY]  append(str.substring(0,  str.length()  -  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str.substring(0,  str.length()  -  1));	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
8	[BUG]  [BUGGY]  CharTypes.checkState(buffer  ==  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharTypes.checkState(buffer  ==  null);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharTypes.checkState(buffer  ==  null);	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
9	[BUG]  [BUGGY]  CharTypes.checkState(buffer!=  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharTypes.checkState(buffer!=  null);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharTypes.checkState(buffer!=  null);	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
10	[BUG]  [BUGGY]  append(initialCapacity,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(initialCapacity,  0,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(initialCapacity,  0,  size);	  append(capacity,    0,    size);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
11	[BUG]  [BUGGY]  append(capacity,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(capacity,  0,  size  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(capacity,  0,  size  -  1);	  append(capacity,    0,    size);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
12	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  +  4];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  new  char[str.length()  +  4];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[str.length()  +  4];	  char[]    buffer    =    new    char[str.length()];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  if(str  ==  null  ||  buffer.charAt(str.length()  -  1)!=  '0')  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  buffer.charAt(str.length()  -  1)!=  '0')  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  buffer.charAt(str.length()  -  1)!=  '0')  {	  if(buffer    ==    null    ||    buffer.charAt(str.length()    -    1)!=    '0')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
14	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.charAt(str.length())!=  '0')  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(buffer  ==  null  ||  buffer.charAt(str.length())!=  '0')  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer.charAt(str.length())!=  '0')  {	  if(buffer    ==    null    ||    buffer.charAt(str.length()    -    1)!=    '0')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
15	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.charAt(str.length()  +  1)!=  '0')  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(buffer  ==  null  ||  buffer.charAt(str.length()  +  1)!=  '0')  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer.charAt(str.length()  +  1)!=  '0')  {	  if(buffer    ==    null    ||    buffer.charAt(str.length()    -    1)!=    '0')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
16	[BUG]  [BUGGY]  safeGet(str)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  safeGet(str)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	safeGet(str)  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
17	[BUG]  [BUGGY]  CharTypes.checkState(str  ==  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharTypes.checkState(str  ==  null);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharTypes.checkState(str  ==  null);	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
18	[BUG]  [BUGGY]  CharTypes.checkState(str!=  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharTypes.checkState(str!=  null);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharTypes.checkState(str!=  null);	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
19	[BUG]  [BUGGY]  buffer  =  new  char[size()];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  buffer  =  new  char[size()];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[size()];	  buffer    =    new    char[size()    -    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  -  CAPACITY];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  buffer  =  new  char[str.length()  -  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[str.length()  -  CAPACITY];	  buffer    =    new    char[size()    -    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  buffer  =  new  char[size()  *  CAPACITY];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  buffer  =  new  char[size()  *  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[size()  *  CAPACITY];	  buffer    =    new    char[size()    -    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  size);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  size);	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    else    {    System.arraycopy(buffer,    0,    buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
23	[BUG]  [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    else    {    System.arraycopy(buffer,    0,    buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
24	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.replace(str,  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  1);	  String    str    =(String)this.nullText.replace(str,    0);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
25	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  0,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.replace(str,  0,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  0,  size);	  String    str    =(String)this.nullText.replace(str,    0);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
26	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  -1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.replace(str,  -1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  -1);	  String    str    =(String)this.nullText.replace(str,    0);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
27	[BUG]  [BUGGY]  String  str  =(String)this.nullText.getValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.getValue();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.getValue();	  String    str    =(String)this.nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  String  str  =(String)str.toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)str.toCharArray();	  String    str    =(String)this.nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  String[]  buffer  =(str  ==  null)?  null  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(str  ==  null)?  null  :  str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(str  ==  null)?  null  :  str.toCharArray();	  char[]    buffer    =(str    ==    null)?    null    :    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
30	[BUG]  [BUGGY]  CharSequence[]  buffer  =(str  ==  null)?  null  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence[]  buffer  =(str  ==  null)?  null  :  str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence[]  buffer  =(str  ==  null)?  null  :  str.toCharArray();	  char[]    buffer    =(str    ==    null)?    null    :    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
31	[BUG]  [BUGGY]  if(str  ==  null  ||  buffer.length()!=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  buffer.length()!=  0)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  buffer.length()!=  0)  {	  if(buffer    ==    null    ||    buffer.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  this.buffer  =  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.buffer  =  new  char[str.length()  +  CAPACITY];	  if(str!=    null)    {    init();    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
33	[BUG]  [BUGGY]  init();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  init();  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	init();	  if(str!=    null)    {    init();    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
34	[BUG]  [BUGGY]  this.buffer  =  new  char[str.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.buffer  =  new  char[str.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.buffer  =  new  char[str.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());	  if(str!=    null)    {    init();    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
35	[BUG]  [BUGGY]  String[]  buffer  =  nullText.toCharArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =  nullText.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  nullText.toCharArray();	  char[]    buffer    =    nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
36	[BUG]  [BUGGY]  append(str,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str,  0,  size  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str,  0,  size  -  1);	  append(str,    0,    size);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
37	[BUG]  [BUGGY]  append(str,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str,  0,  buffer.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str,  0,  buffer.length());	  append(str,    0,    size);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
38	[BUG]  [BUGGY]  append(str,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str,  0,  size  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str,  0,  size  +  1);	  append(str,    0,    size);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
39	[BUG]  [BUGGY]  char[]  buffer  =(char[])str.toUpperCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char[])str.toUpperCase();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char[])str.toUpperCase();	  char[]    buffer    =(char[])str.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
40	[BUG]  [BUGGY]  char[]  buffer  =(char[])str.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char[])str.toString();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char[])str.toString();	  char[]    buffer    =(char[])str.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
41	[BUG]  [BUGGY]  this.buffer  =  new  char[size()];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.buffer  =  new  char[size()];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.buffer  =  new  char[size()];	  if(str    ==    null)    {    buffer    =    new    char[size()    -    1];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
42	[BUG]  [BUGGY]  luate(str,  pos)  {  buffer  =  new  char[size()];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  pos)  {  buffer  =  new  char[size()];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  pos)  {  buffer  =  new  char[size()];  }	  if(str    ==    null)    {    buffer    =    new    char[size()    -    1];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
43	[BUG]  [BUGGY]  Builder.this.append(str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Builder.this.append(str);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Builder.this.append(str);	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
44	[BUG]  [BUGGY]  Builder.this.append(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Builder.this.append(buffer,  0,  str.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Builder.this.append(buffer,  0,  str.length());	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
45	[BUG]  [BUGGY]  Builder.append(str);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Builder.append(str);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Builder.append(str);	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
46	[BUG]  [BUGGY]  String[]  buffer  =  new  String[str.length()  *  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =  new  String[str.length()  *  1];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  new  String[str.length()  *  1];	  String[]    buffer    =    new    String[str.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
47	[BUG]  [BUGGY]  char  size  =  str.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char  size  =  str.length();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char  size  =  str.length();	  int    size    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
48	[BUG]  [BUGGY]  int  size  =  string.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  int  size  =  string.length();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	int  size  =  string.length();	  int    size    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
49	[BUG]  [BUGGY]  if(str  ==  null  ||  buffer.length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  buffer.length()  <  =  0)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  buffer.length()  <  =  0)  {	  if(buffer    ==    null    ||    buffer.length()    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
50	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  /  CAPACITY];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.buffer  =  new  char[size()  /  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.buffer  =  new  char[size()  /  CAPACITY];	  this.buffer    =    new    char[size()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  -  CAPACITY];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.buffer  =  new  char[size()  -  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.buffer  =  new  char[size()  -  CAPACITY];	  this.buffer    =    new    char[size()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.buffer  =  new  char[size()  +  1];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.buffer  =  new  char[size()  +  1];	  this.buffer    =    new    char[size()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  String[]  buffer  =(String[])str.getChars();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(String[])str.getChars();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(String[])str.getChars();	  char[]    buffer    =(char[])str.getChars();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
54	[BUG]  [BUGGY]  luate(str,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  0);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  0);	  luate(str);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
55	[BUG]  [BUGGY]  luate(buffer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(buffer);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(buffer);	  luate(str);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
56	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
57	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence  <?>  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence  <?>  buffer  =  new  char[str.length()  +  CAPACITY];	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
58	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  new  char[str.length()  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence  <?>  buffer  =  new  char[str.length()  +  1];  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence  <?>  buffer  =  new  char[str.length()  +  1];	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
59	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  1];  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence[]  buffer  =  new  char[str.length()  +  1];	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
60	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  nullText;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	  this.str    =    nullText;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
61	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  nullText;  }	  this.str    =    nullText;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
62	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  else  {  System.arraycopy(str,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  else  {  System.arraycopy(str,  0,  buffer,  0,  str.length());  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  nullText;  }  else  {  System.arraycopy(str,  0,  buffer,  0,  str.length());  }	  this.str    =    nullText;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
63	[BUG]  [BUGGY]  String[]  buffer  =(String[])str.toArray(new  String[str.size()  ]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(String[])str.toArray(new  String[str.size()  ]);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(String[])str.toArray(new  String[str.size()  ]);	  String[]    buffer    =(String[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
64	[BUG]  [BUGGY]  String[]  buffer  =(String[])str.toArray(new  String[str.length()  ]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(String[])str.toArray(new  String[str.length()  ]);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(String[])str.toArray(new  String[str.length()  ]);	  String[]    buffer    =(String[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
65	[BUG]  [BUGGY]  String[]  buffer  =(String[])str.clone();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(String[])str.clone();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(String[])str.clone();	  String[]    buffer    =(String[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
66	[BUG]  [BUGGY]  buffer  =  new  char[size()  /  2];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  buffer  =  new  char[size()  /  2];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[size()  /  2];	  buffer    =    new    char[size()    /    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
67	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(str  ==  null)?  null  :  str.clone();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(str  ==  null)?  null  :  str.clone();	  String    str    =(String)str.clone();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  String  str  =(String)str.toLowerCase();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)str.toLowerCase();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)str.toLowerCase();	  String    str    =(String)str.clone();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  newLine;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	  this.str    =    newLine;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
70	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  buffer  =  nullText;  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  newLine;  }  else  {  buffer  =  nullText;  }	  this.str    =    newLine;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
71	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  append(str);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  newLine;  }  else  {  append(str);  }	  this.str    =    newLine;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
72	[BUG]  [BUGGY]  String[]  buffer  =  this.str.toCharArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =  this.str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  this.str.toCharArray();	  char[]    buffer    =    this.str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
73	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  buffer;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	  this.str    =    buffer;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
74	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  buffer;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }	  this.str    =    buffer;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
75	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  buffer;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.str    =    buffer;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
76	[BUG]  [BUGGY]  append(buffer,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(buffer,  0,  size  -  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(buffer,  0,  size  -  1);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
77	[BUG]  [BUGGY]  append(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(buffer,  0,  buffer.length);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(buffer,  0,  buffer.length);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
78	[BUG]  [BUGGY]  append(buffer,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(buffer,  0,  size  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(buffer,  0,  size  +  1);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
79	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  -  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.buffer  =  new  char[size()  -  1];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.buffer  =  new  char[size()  -  1];	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
80	[BUG]  [BUGGY]  buffer  =  new  char[size()  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  buffer  =  new  char[size()  +  1];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[size()  +  1];	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
81	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  nullText.charAt(pos);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence  <?>  buffer  =  nullText.charAt(pos);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence  <?>  buffer  =  nullText.charAt(pos);	  if(str    ==    null)    {    for(int    pos    =    0;    pos    <    size;    pos++)    {    buffer[pos]    =    pos;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
82	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  new  char[size()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence  <?>  buffer  =  new  char[size()  +  CAPACITY];  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence  <?>  buffer  =  new  char[size()  +  CAPACITY];	  if(str    ==    null)    {    for(int    pos    =    0;    pos    <    size;    pos++)    {    buffer[pos]    =    pos;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
83	[BUG]  [BUGGY]  CharSequence  <?>  buffer  =  new  char[size];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence  <?>  buffer  =  new  char[size];  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence  <?>  buffer  =  new  char[size];	  if(str    ==    null)    {    for(int    pos    =    0;    pos    <    size;    pos++)    {    buffer[pos]    =    pos;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
84	[BUG]  [BUGGY]  char[]  buffer  =  new  char[size()  -  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  new  char[size()  -  1];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[size()  -  1];	  char[]    buffer    =    new    char[size()    1];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
85	[BUG]  [BUGGY]  luate(str,  0,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  0,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  0,  size);	  luate(str,    pos,    size);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
86	[BUG]  [BUGGY]  luate(str,  initialCapacity,  size);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  initialCapacity,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  initialCapacity,  size);	  luate(str,    pos,    size);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
87	[BUG]  [BUGGY]  luate(str,  offset,  size);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  offset,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  offset,  size);	  luate(str,    pos,    size);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
88	[BUG]  [BUGGY]  luate(buffer,  pos,  size);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(buffer,  pos,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(buffer,  pos,  size);	  luate(str,    pos,    size);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
89	[BUG]  [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Char[]  buffer  =  new  char[str.length()  +  CAPACITY];	  char[]    buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
90	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  *  2];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  new  char[str.length()  *  2];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[str.length()  *  2];	  char[]    buffer    =    new    char[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
91	[BUG]  [BUGGY]  String[]  buffer  =  new  String[str.length()  -  CAPACITY];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =  new  String[str.length()  -  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  new  String[str.length()  -  CAPACITY];	  String[]    buffer    =    new    String[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
92	[BUG]  [BUGGY]  String[]  buffer  =  new  String[str.length()  /  CAPACITY];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =  new  String[str.length()  /  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  new  String[str.length()  /  CAPACITY];	  String[]    buffer    =    new    String[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
93	[BUG]  [BUGGY]  String[]  buffer  =  new  String[str.length()  *  2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =  new  String[str.length()  *  2];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  new  String[str.length()  *  2];	  String[]    buffer    =    new    String[str.length()    *    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
94	[BUG]  [BUGGY]  this.str  =  str.substring(0,  str.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  str.substring(0,  str.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str.substring(0,  str.length());	  this.str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
95	[BUG]  [BUGGY]  this.str  =  str.substring(0,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  str.substring(0,  str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str.substring(0,  str.length()  +  1);	  this.str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
96	[BUG]  [BUGGY]  String  str  =(String)this.nullText.toUpperCase();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.toUpperCase();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.toUpperCase();	  String    str    =(String)this.nullText.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
97	[BUG]  [BUGGY]  this.str  =  str.substring(0,  str.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str.substring(0,  str.length()  -  2);	  this.str    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
98	[BUG]  [BUGGY]  this.str  =  str.toLowerCase();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  str.toLowerCase();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str.toLowerCase();	  this.str    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
99	[BUG]  [BUGGY]  luate(str,  size()  /  CAPACITY]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  size()  /  CAPACITY]);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  size()  /  CAPACITY]);	  if(str    ==    null)    {    buffer    =    new    char[size()    /    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
100	[BUG]  [BUGGY]  luate(str,  size()  /  CAPACITY));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  size()  /  CAPACITY));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  size()  /  CAPACITY));	  if(str    ==    null)    {    buffer    =    new    char[size()    /    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
101	[BUG]  [BUGGY]  if(str  ==  null  ||  buffer  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  buffer  ==  null)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  buffer  ==  null)  {	  if(buffer    ==    null    ||    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
102	[BUG]  [BUGGY]  if(str  ==  null  ||  buffer!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  buffer!=  null)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  buffer!=  null)  {	  if(buffer    ==    null    ||    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
103	[BUG]  [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  1];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Char[]  buffer  =  new  char[str.length()  +  1];	  Char[]    buffer    =    new    char[str.length()];    	non-compiled	[CE]  <identifier>  expected	62	None	replace
104	[BUG]  [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  2];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Char[]  buffer  =  new  char[str.length()  +  2];	  Char[]    buffer    =    new    char[str.length()];    	non-compiled	[CE]  <identifier>  expected	62	None	replace
105	[BUG]  [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  4];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Char[]  buffer  =  new  char[str.length()  +  4];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Char[]  buffer  =  new  char[str.length()  +  4];	  Char[]    buffer    =    new    char[str.length()];    	non-compiled	[CE]  <identifier>  expected	62	None	replace
106	[BUG]  [BUGGY]  String[]  buffer  =(String[])str.toUpperCase();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(String[])str.toUpperCase();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(String[])str.toUpperCase();	  char[]    buffer    =(char)str.toUpperCase();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
107	[BUG]  [BUGGY]  char[]  buffer  =(char)str.toUpperCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char)str.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.toUpperCase(Locale.ENGLISH);	  char[]    buffer    =(char)str.toUpperCase();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
108	[BUG]  [BUGGY]  ensureCapacity(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  ensureCapacity(str);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	ensureCapacity(str);	  safeAdd(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
109	[BUG]  [BUGGY]  validate(str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  validate(str);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	validate(str);	  safeAdd(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
110	[BUG]  [BUGGY]  String[]  buffer  =(String[])str.toLowerCase();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(String[])str.toLowerCase();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(String[])str.toLowerCase();	  char[]    buffer    =(char)str.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
111	[BUG]  [BUGGY]  char[]  buffer  =  new  char[size()  +  2];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  new  char[size()  +  2];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[size()  +  2];	  char[]    buffer    =    new    char[size()    ];    	non-compiled	[CE]  <identifier>  expected	40	None	replace
112	[BUG]  [BUGGY]  char[]  buffer  =  new  char[size()  *  2];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  new  char[size()  *  2];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[size()  *  2];	  char[]    buffer    =    new    char[size()    ];    	non-compiled	[CE]  <identifier>  expected	40	None	replace
113	[BUG]  [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence[]  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    ++i)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
114	[BUG]  [BUGGY]  char[]  buffer  =(char)str.getKey();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char)str.getKey();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.getKey();	  char[]    buffer    =(char)str.getValue();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
115	[BUG]  [BUGGY]  String[]  buffer  =(String[])str.getValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(String[])str.getValue();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(String[])str.getValue();	  char[]    buffer    =(char)str.getValue();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
116	[BUG]  [BUGGY]  String[]  buffer  =(String[])str.toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(String[])str.toString();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(String[])str.toString();	  char[]    buffer    =(char)str.toString();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
117	[BUG]  [BUGGY]  safeGet(str)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  safeGet(str)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	safeGet(str)  {  throw  new  IllegalStateException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
118	[BUG]  [BUGGY]  Builder.this.append(buffer,  0,  size  /  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Builder.this.append(buffer,  0,  size  /  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Builder.this.append(buffer,  0,  size  /  CAPACITY);	  if(str    ==    null)    {    buffer    =    new    char[size()    /    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
119	[BUG]  [BUGGY]  Builder.this.append(str,  0,  size  /  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Builder.this.append(str,  0,  size  /  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Builder.this.append(str,  0,  size  /  CAPACITY);	  if(str    ==    null)    {    buffer    =    new    char[size()    /    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
120	[BUG]  [BUGGY]  String  str  =(String)this.nullText.get(0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.get(0);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.get(0);	  String    str    =(String)this.nullText.get();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
121	[BUG]  [BUGGY]  String  str  =(String)str.get();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)str.get();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)str.get();	  String    str    =(String)this.nullText.get();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
122	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  buffer  =  new  char[str.length()  +  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[str.length()  +  CAPACITY];	  buffer    =    new    char[size()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
123	[BUG]  [BUGGY]  append(buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(buffer,  0,  str.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(buffer,  0,  str.length());	  append(str);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
124	[BUG]  [BUGGY]  append(str,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str,  0);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str,  0);	  append(str);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
125	[BUG]  [BUGGY]  append0(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append0(str);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append0(str);	  append(str);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  str.length());	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
127	[BUG]  [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  CAPACITY);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  CAPACITY);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  CAPACITY);  }	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
128	[BUG]  [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  1);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  1);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  1);  }	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
129	[BUG]  [BUGGY]  parent  ==  null?  parent.getChars(0,  str):  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  parent  ==  null?  parent.getChars(0,  str):  0;  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	parent  ==  null?  parent.getChars(0,  str):  0;	  if(str    ==    null)    {    buffer    =    new    char[size()];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
130	[BUG]  [BUGGY]  parent  ==  null?  parent.getParent()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  parent  ==  null?  parent.getParent()  :  null;  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	parent  ==  null?  parent.getParent()  :  null;	  if(str    ==    null)    {    buffer    =    new    char[size()];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  CAPACITY);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  CAPACITY);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  CAPACITY);	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    else    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  -  CAPACITY);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	System.arraycopy(buffer,  0,  buffer,  0,  str.length()  -  CAPACITY);	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    else    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
133	[BUG]  [BUGGY]  init(str);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  init(str);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	init(str);	  if(str    ==    null)    {    init();    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
134	[BUG]  [BUGGY]  this.str  =  String.valueOf(str.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  String.valueOf(str.length());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  String.valueOf(str.length());	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
135	[BUG]  [BUGGY]  this.str  =  String.valueOf(str.substring(1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  String.valueOf(str.substring(1));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  String.valueOf(str.substring(1));	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
136	[BUG]  [BUGGY]  this.str  =  String.valueOf(str.charAt(0));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  String.valueOf(str.charAt(0));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  String.valueOf(str.charAt(0));	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
137	[BUG]  [BUGGY]  append(str.substring(0,  str.length()  -  2));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str.substring(0,  str.length()  -  2));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str.substring(0,  str.length()  -  2));	  if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
138	[BUG]  [BUGGY]  char[]  buffer  =(char[])str.getKey();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char[])str.getKey();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char[])str.getKey();	  char[]    buffer    =(char[])str.getValue();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
139	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.replace(str,  buffer);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  buffer);	  String    str    =(String)this.nullText.replace(str,    nullText);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
140	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  this.buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.replace(str,  this.buffer);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  this.buffer);	  String    str    =(String)this.nullText.replace(str,    nullText);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
141	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  newLine);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.replace(str,  newLine);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  newLine);	  String    str    =(String)this.nullText.replace(str,    nullText);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
142	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null  ||  str.length()  >  0)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null  ||  str.length()  >  0)  {	  if(str!=    null    &&    str.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
143	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(buffer  ==  null  ||  buffer.length()  >  0)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer.length()  >  0)  {	  if(str!=    null    &&    str.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
144	[BUG]  [BUGGY]  if(str!=  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
145	[BUG]  [BUGGY]  if(str  ==  null  &&  str.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  &&  str.length()  >  0)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  &&  str.length()  >  0)  {	  if(str!=    null    &&    str.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
146	[BUG]  [BUGGY]  char[]  buffer  =  this.str.getChars();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  this.str.getChars();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  this.str.getChars();	  char[]    buffer    =    this.str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
147	[BUG]  [BUGGY]  Integer  size  =  str.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Integer  size  =  str.length();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Integer  size  =  str.length();	  int    size    =    str.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
148	[BUG]  [BUGGY]  float  size  =  str.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  float  size  =  str.length();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	float  size  =  str.length();	  int    size    =    str.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
149	[BUG]  [BUGGY]  append(buffer,  nullText);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(buffer,  nullText);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(buffer,  nullText);	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
150	[BUG]  [BUGGY]  append(buffer,  0,  str.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(buffer,  0,  str.length);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(buffer,  0,  str.length);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
151	[BUG]  [BUGGY]  if(str!=  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    else    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
152	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  new  char[CAPACITY];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  new  char[CAPACITY];  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  new  char[CAPACITY];  }	  if(str    ==    null)    {    for(int    pos    =    0;    pos    <    size;    pos++)    {    buffer[pos]    =    pos;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
153	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  0;  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  0;  }	  if(str    ==    null)    {    for(int    pos    =    0;    pos    <    size;    pos++)    {    buffer[pos]    =    pos;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
154	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  new  char[capacity];  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  new  char[capacity];  }	  if(str    ==    null)    {    for(int    pos    =    0;    pos    <    size;    pos++)    {    buffer[pos]    =    pos;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
155	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()  >=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(buffer  ==  null  ||  buffer.length()  >=  0)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer.length()  >=  0)  {	  if(buffer    ==    null    ||    buffer.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
156	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  *  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  *  CAPACITY];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  *  CAPACITY];  }	  if(str    ==    null)    {    buffer    =    new    char[size()    /    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
157	[BUG]  [BUGGY]  String  str  =(char)this.nullText.toCharArray();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(char)this.nullText.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(char)this.nullText.toCharArray();	  String    str    =(String)this.nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
158	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(nullText);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
159	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(nullText);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
160	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(CAPACITY);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(CAPACITY);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(CAPACITY);  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(nullText);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
161	[BUG]  [BUGGY]  append(buffer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(buffer);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(buffer);	  append(str);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
162	[BUG]  [BUGGY]  if(str!=  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    else    {    System.arraycopy(buffer,    0,    buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
163	[BUG]  [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  CAPACITY);  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  CAPACITY);  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length()  +  CAPACITY);  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    else    {    System.arraycopy(buffer,    0,    buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
164	[BUG]  [BUGGY]  if(str  ==  null)  {  init();  }  else  {  buffer  =  new  char[CAPACITY];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  init();  }  else  {  buffer  =  new  char[CAPACITY];  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  init();  }  else  {  buffer  =  new  char[CAPACITY];  }	  if(str    ==    null)    {    init();    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
165	[BUG]  [BUGGY]  if(str  ==  null)  {  init();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  init();  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  init();  }	  if(str!=    null)    {    init();    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
166	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  newLine;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }	  this.str    =    newLine;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
167	[BUG]  [BUGGY]  append0(capacity,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append0(capacity,  0,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append0(capacity,  0,  size);	  append(capacity,    0,    size);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
168	[BUG]  [BUGGY]  this.str  =  str  ==  null?  null  :  str.trim();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  str  ==  null?  null  :  str.trim();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str  ==  null?  null  :  str.trim();	  this.str    =    str.trim();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
169	[BUG]  [BUGGY]  append(str,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str,  0,  buffer.length);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str,  0,  buffer.length);	  append(str,    0,    size);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
170	[BUG]  [BUGGY]  this.str  =  String.valueOf(buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  String.valueOf(buffer);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  String.valueOf(buffer);	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
171	[BUG]  [BUGGY]  this.str  =  String.valueOf(str  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  String.valueOf(str  +  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  String.valueOf(str  +  1);	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
172	[BUG]  [BUGGY]  char[]  buffer  =(char)str.getChars();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char)str.getChars();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.getChars();	  char[]    buffer    =(char)str.getValue();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
173	[BUG]  [BUGGY]  String  str  =(String)this.str.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.str.clone();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.str.clone();	  String    str    =(String)str.clone();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
174	[BUG]  [BUGGY]  safeGet(buffer,  size  -  CAPACITY));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  safeGet(buffer,  size  -  CAPACITY));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	safeGet(buffer,  size  -  CAPACITY));	  if(str    ==    null)    {    buffer    =    new    char[size()    -    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
175	[BUG]  [BUGGY]  safeGet(buffer,  0,  size  -  CAPACITY));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  safeGet(buffer,  0,  size  -  CAPACITY));  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	safeGet(buffer,  0,  size  -  CAPACITY));	  if(str    ==    null)    {    buffer    =    new    char[size()    -    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
176	[BUG]  [BUGGY]  this.pos  =  str.indexOf('  ')+  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.pos  =  str.indexOf('  ')+  1;  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.pos  =  str.indexOf('  ')+  1;	  if(str    ==    null)    {    buffer    =    new    char[size()    -    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
177	[BUG]  [BUGGY]  safeGet(buffer,  0,  size  -  CAPACITY);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  safeGet(buffer,  0,  size  -  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	safeGet(buffer,  0,  size  -  CAPACITY);	  if(str    ==    null)    {    buffer    =    new    char[size()    -    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
178	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()];  }	  if(str!=    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
179	[BUG]  [BUGGY]  char[]  buffer  =(str  ==  null)?  nullText  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(str  ==  null)?  nullText  :  str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(str  ==  null)?  nullText  :  str.toCharArray();	  char[]    buffer    =(str    ==    null)?    null    :    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
180	[BUG]  [BUGGY]  char[]  buffer  =(str!=  null)?  null  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(str!=  null)?  null  :  str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(str!=  null)?  null  :  str.toCharArray();	  char[]    buffer    =(str    ==    null)?    null    :    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
181	[BUG]  [BUGGY]  append(str,  pos,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str,  pos,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str,  pos,  size);	  luate(str,    pos,    size);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
182	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  this.pos);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.replace(str,  this.pos);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  this.pos);	  String    str    =(String)this.nullText.replace(str,    nullText);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
183	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  *  CAPACITY];  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  *  CAPACITY];  }  else  {  buffer  =  nullText;  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  *  CAPACITY];  }  else  {  buffer  =  nullText;  }	  if(str    ==    null)    {    buffer    =    new    char[size()    /    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
184	[BUG]  [BUGGY]  char[]  buffer  =  this.nullText.toCharArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  this.nullText.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  this.nullText.toCharArray();	  char[]    buffer    =    nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
185	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  -  1];  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  -  1];  }  else  {  buffer  =  nullText;  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  -  1];  }  else  {  buffer  =  nullText;  }	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
186	[BUG]  [BUGGY]  char[]  buffer  =(str  ==  null?  nullText  :  str.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(str  ==  null?  nullText  :  str.toCharArray());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(str  ==  null?  nullText  :  str.toCharArray());	  char[]    buffer    =(str    ==    null?    null    :    str.toCharArray());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
187	[BUG]  [BUGGY]  char[]  buffer  =(str  ==  null?  null  :  str.toCharArray())+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(str  ==  null?  null  :  str.toCharArray())+  1;  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(str  ==  null?  null  :  str.toCharArray())+  1;	  char[]    buffer    =(str    ==    null?    null    :    str.toCharArray());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
188	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
189	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
190	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(buffer[i]);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(buffer[i]);  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
191	[BUG]  [BUGGY]  Char[]  buffer  =(char[])str.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Char[]  buffer  =(char[])str.clone();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Char[]  buffer  =(char[])str.clone();	  char[]    buffer    =(char[])str.clone();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
192	[BUG]  [BUGGY]  char[]  buffer  =(char[])str.getData();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char[])str.getData();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char[])str.getData();	  char[]    buffer    =(char[])str.clone();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
193	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  +  size];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  new  char[str.length()  +  size];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[str.length()  +  size];	  char[]    buffer    =    new    char[str.length()];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
194	[BUG]  [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(str);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	MutableStringBuffer  buffer  =  new  MutableStringBuffer(str);	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
195	[BUG]  [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(str.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(str.length());  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	MutableStringBuffer  buffer  =  new  MutableStringBuffer(str.length());	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
196	[BUG]  [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(str.length()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(str.length()  +  1);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	MutableStringBuffer  buffer  =  new  MutableStringBuffer(str.length()  +  1);	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
197	[BUG]  [BUGGY]  if(str!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
198	[BUG]  [BUGGY]  if(str  ==  null)  {  throw  new  IllegalStateException( "CAPACITY  is  less  than  1: "  +  str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  throw  new  IllegalStateException( "CAPACITY  is  less  than  1: "  +  str);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  throw  new  IllegalStateException( "CAPACITY  is  less  than  1: "  +  str);  }	  if(str    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
199	[BUG]  [BUGGY]  if(str  ==  null)  {  throw  new  IllegalStateException( "CAPACITY  is  less  than  1: ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  throw  new  IllegalStateException( "CAPACITY  is  less  than  1: ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  throw  new  IllegalStateException( "CAPACITY  is  less  than  1: ");  }	  if(str    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
200	[BUG]  [BUGGY]  buffer  =  new  char[str.length()  /  CAPACITY];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  buffer  =  new  char[str.length()  /  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[str.length()  /  CAPACITY];	  buffer    =    new    char[size()    /    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
201	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  nullText;  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	  this.str    =    nullText;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
202	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  nullText;  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  nullText;  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }	  this.str    =    nullText;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
203	[BUG]  [BUGGY]  char[]  buffer  =  new  char[size()  +  size  ];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  new  char[size()  +  size  ];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[size()  +  size  ];	  char[]    buffer    =    new    char[size()    ];    	non-compiled	[CE]  <identifier>  expected	40	None	replace
204	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()  <  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(buffer  ==  null  ||  buffer.length()  <  0)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer.length()  <  0)  {	  if(buffer    ==    null    ||    buffer.length()    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
205	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  1];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  1];  }	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
206	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  *  1];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  *  1];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  *  1];  }	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
207	[BUG]  [BUGGY]  safeGet(buffer,  size  -  1))  {  buffer  =  new  char[size()];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  safeGet(buffer,  size  -  1))  {  buffer  =  new  char[size()];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	safeGet(buffer,  size  -  1))  {  buffer  =  new  char[size()];  }	  if(str    ==    null)    {    buffer    =    new    char[size()    -    1];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
208	[BUG]  [BUGGY]  this.str  =  str  ==  null?  null  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  str  ==  null?  null  :  str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str  ==  null?  null  :  str.toCharArray();	  this.str    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
209	[BUG]  [BUGGY]  this.str  =  str!=  null?  null  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  str!=  null?  null  :  str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str!=  null?  null  :  str.toCharArray();	  this.str    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
210	[BUG]  [BUGGY]  String[]  buffer  =(char[])str.toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String[]  buffer  =(char[])str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(char[])str.toCharArray();	  String[]    buffer    =(String[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
211	[BUG]  [BUGGY]  String  str  =(String)this.str.get();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.str.get();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.str.get();	  String    str    =(String)this.nullText.get();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
212	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
213	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
214	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  }	  if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
215	[BUG]  [BUGGY]  char[]  buffer  =(char[])str.getEmptyChars();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char[])str.getEmptyChars();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char[])str.getEmptyChars();	  char[]    buffer    =(char[])str.getChars();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
216	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    ++i)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
217	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    ++i)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
218	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(buffer[i]);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(buffer[i]);  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    ++i)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
219	[BUG]  [BUGGY]  if(buffer  ==  null  ||  str.length()!=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(buffer  ==  null  ||  str.length()!=  0)  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  str.length()!=  0)  {	  if(buffer    ==    null    ||    buffer.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
220	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    ++i)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
221	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
222	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
223	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
224	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    new    char[capacity];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
225	[BUG]  [BUGGY]  append0(str,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append0(str,  0,  size);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append0(str,  0,  size);	  append(buffer,    0,    size);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
226	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  +  6];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  new  char[str.length()  +  6];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[str.length()  +  6];	  char[]    buffer    =    new    char[str.length()];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
227	[BUG]  [BUGGY]  char[]  buffer  =(str  ==  null)?  this.str.toCharArray()  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(str  ==  null)?  this.str.toCharArray()  :  str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(str  ==  null)?  this.str.toCharArray()  :  str.toCharArray();	  char[]    buffer    =    this.str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
228	[BUG]  [BUGGY]  char[]  buffer  =(str  ==  null)?  this.str.toCharArray()  :  new  char[str.length()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(str  ==  null)?  this.str.toCharArray()  :  new  char[str.length()  +  CAPACITY];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(str  ==  null)?  this.str.toCharArray()  :  new  char[str.length()  +  CAPACITY];	  char[]    buffer    =    this.str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
229	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  System.arraycopy(str,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  System.arraycopy(str,  0,  buffer,  0,  str.length());  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  buffer;  }  else  {  System.arraycopy(str,  0,  buffer,  0,  str.length());  }	  this.str    =    buffer;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
230	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  buffer;  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  buffer;  }  else  {  buffer  =  new  char[capacity];  append(str);  }	  this.str    =    buffer;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
231	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
232	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  init();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  init();  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {  init();  }	  if(str    ==    null)    {    init();    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
233	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  init();  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  init();  }  else  {  buffer  =  nullText;  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {  init();  }  else  {  buffer  =  nullText;  }	  if(str    ==    null)    {    init();    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
234	[BUG]  [BUGGY]  this.str  =  str.toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  str.toString();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str.toString();	  this.str    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
235	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(0));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(0));  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(0));  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
236	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(str.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
237	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }	  if(str!=    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
238	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  }	  if(str!=    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
239	[BUG]  [BUGGY]  String  str  =(str  ==  null?  null  :  str.clone());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(str  ==  null?  null  :  str.clone());  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(str  ==  null?  null  :  str.clone());	  String    str    =(String)str.clone();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
240	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.replace(str,  2);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  2);	  String    str    =(String)this.nullText.replace(str,    0);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
241	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(nullText);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
242	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()!=  0)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }	  if(str    ==    null)    {    for(int    i    =    0;    i    <    str.length();    i++)    {    buffer[i]    =    new    String(nullText);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(str,  0,  buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  System.arraycopy(str,  0,  buffer,  0,  size);  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	System.arraycopy(str,  0,  buffer,  0,  size);	  if(str    ==    null)    {    System.arraycopy(buffer,    0,    buffer,    0,    str.length());    }    else    {    System.arraycopy(buffer,    0,    buffer,    0,    size);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
244	[BUG]  [BUGGY]  Char[]  buffer  =(char)str.toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  Char[]  buffer  =(char)str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Char[]  buffer  =(char)str.toCharArray();	  char[]    buffer    =(char)str.toCharArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
245	[BUG]  [BUGGY]  super.setText(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  super.setText(str);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	super.setText(str);	  safeAdd(str);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
246	[BUG]  [BUGGY]  append(str,  0,  capacity);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str,  0,  capacity);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str,  0,  capacity);	  append(capacity,    0,    size);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
247	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  }  else  {  buffer  =  nullText;  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  String[size()  +  CAPACITY];  }  else  {  buffer  =  nullText;  }	  if(str!=    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
248	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  String[size()];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  String[size()];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  String[size()];  }	  if(str    ==    null)    {    buffer    =    new    char[size()    -    1];    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
249	[BUG]  [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  System.arraycopy(str,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  this.str  =  newLine;  }  else  {  System.arraycopy(str,  0,  buffer,  0,  str.length());  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  this.str  =  newLine;  }  else  {  System.arraycopy(str,  0,  buffer,  0,  str.length());  }	  this.str    =    newLine;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
250	[BUG]  [BUGGY]  char[]  buffer  =(char)str.getBytes();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char)str.getBytes();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.getBytes();	  char[]    buffer    =(char)str.getValue();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
251	[BUG]  [BUGGY]  if(str.length()  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str.length()  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str.length()  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  append(str);  }	  luate(str);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
252	[BUG]  [BUGGY]  if(str.length()  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str.length()  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str.length()  >  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  }	  luate(str);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
253	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str.length()  ==  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str.length()  ==  0)  {  if(buffer  ==  null)  {  buffer  =  new  char[capacity];  append(str);  }	  luate(str);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
254	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()];  append(str);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()];  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()];  append(str);  }	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
255	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  -  1];  append(str);  }	  if(str    ==    null)    {    buffer    =    new    char[size()    +    1];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
256	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()];  }  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  buffer  =  new  char[size()];  }	  if(str    ==    null)    {    buffer    =    new    char[size()    -    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
257	[BUG]  [BUGGY]  if(str  ==  null)  {  init();  }  else  {  buffer  =  new  String(str.length()  +  CAPACITY);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  init();  }  else  {  buffer  =  new  String(str.length()  +  CAPACITY);  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  init();  }  else  {  buffer  =  new  String(str.length()  +  CAPACITY);  }	  if(str!=    null)    {    init();    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
258	[BUG]  [BUGGY]  CharSequence[]  buffer  =  str.toCharArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence[]  buffer  =  str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence[]  buffer  =  str.toCharArray();	  char[]    buffer    =    nullText.toCharArray();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
259	[BUG]  [BUGGY]  char[]  buffer  =(str  ==  null)?  new  char[0]  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(str  ==  null)?  new  char[0]  :  str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(str  ==  null)?  new  char[0]  :  str.toCharArray();	  char[]    buffer    =(str    ==    null)?    null    :    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
260	[BUG]  [BUGGY]  char[]  buffer  =(char)str.toUpperCase()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =(char)str.toUpperCase()  +  1;  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.toUpperCase()  +  1;	  char[]    buffer    =(char)str.toUpperCase();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
261	[BUG]  [BUGGY]  String  str  =(String)this.nullText.remove();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  String  str  =(String)this.nullText.remove();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.remove();	  String    str    =(String)this.nullText.get();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
262	[BUG]  [BUGGY]  luate(str,  pos,  initialCapacity);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  pos,  initialCapacity);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  pos,  initialCapacity);	  luate(str,    pos,    size);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
263	[BUG]  [BUGGY]  luate(str,  pos,  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  pos,  1);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  pos,  1);	  luate(str,    pos,    size);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
264	[BUG]  [BUGGY]  luate(str,  pos,  CAPACITY);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  luate(str,  pos,  CAPACITY);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  pos,  CAPACITY);	  luate(str,    pos,    size);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
265	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  str;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  str;  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  str;  }	  if(str    ==    null)    {    for(int    pos    =    0;    pos    <    size;    pos++)    {    buffer[pos]    =    pos;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
266	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  0;  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  0;  }	  if(str    ==    null)    {    for(int    pos    =    0;    pos    <    size;    pos++)    {    buffer[pos]    =    pos;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
267	[BUG]  [BUGGY]  appendNull();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  appendNull();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	appendNull();	  append(str);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
268	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  char[]  buffer  =  new  char[str.length()  1];  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[str.length()  1];	  char[]    buffer    =    new    char[size()    1];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
269	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
270	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()!=  0)  {  throw  new  IllegalStateException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
271	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  <  0)  {  throw  new  IllegalStateException( " ");  }	  if(str    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
272	[BUG]  [BUGGY]  if(str  ==  null  ||  buffer.charAt(str.length())!=  '0')  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  if(str  ==  null  ||  buffer.charAt(str.length())!=  '0')  {  [BUGGY]      buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  buffer.charAt(str.length())!=  '0')  {	  if(buffer    ==    null    ||    buffer.charAt(str.length()    -    1)!=    '0')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
273	[BUG]  [BUGGY]  this.str  =  str  ==  null?  null  :  String.valueOf(str);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  this.str  =  str  ==  null?  null  :  String.valueOf(str);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str  ==  null?  null  :  String.valueOf(str);	  this.str    =    String.valueOf(str);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
274	[BUG]  [BUGGY]  CharSequence[]  buffer  =(char[])str.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  CharSequence[]  buffer  =(char[])str.clone();  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	CharSequence[]  buffer  =(char[])str.clone();	  char[]    buffer    =(char[])str.clone();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
275	[BUG]  [BUGGY]  append(str,  0,  pos);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  StrBuilder(String  str)  {  super();      [BUGGY]  append(str,  0,  pos);  [BUGGY]      if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str,  0,  pos);	  append(str,    0,    size);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
