bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer.length()  ==  0)  {	  if(str    ==    null    ||    buffer.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  if(buffer  ==  null  ||  str.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(buffer  ==  null  ||  str.length()  ==  0)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    buffer.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  buffer  =  new  char[size()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  buffer  =  new  char[size()  +  CAPACITY];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[size()  +  CAPACITY];	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  this.buffer  =  new  char[size()  +  CAPACITY];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  this.buffer  =  new  char[size()  +  CAPACITY];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.buffer  =  new  char[size()  +  CAPACITY];	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  buffer  =  new  char[size()  /  CAPACITY];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  buffer  =  new  char[size()  /  CAPACITY];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[size()  /  CAPACITY];	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  buffer  =  new  char[size()  -  CAPACITY];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  buffer  =  new  char[size()  -  CAPACITY];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	buffer  =  new  char[size()  -  CAPACITY];	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()!=  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(buffer  ==  null  ||  buffer.length()!=  0)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer.length()!=  0)  {	  if(str    ==    null    ||    str.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
8	[BUG]  [BUGGY]  String  str  =(String)this.nullText.toCharArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String  str  =(String)this.nullText.toCharArray();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.toCharArray();	      String    str    =(String)this.nullText.clone();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  String  str  =(String)str.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String  str  =(String)str.clone();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)str.clone();	      String    str    =(String)this.nullText.clone();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
10	[BUG]  [BUGGY]  String  str  =(String)this.nullText.toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String  str  =(String)this.nullText.toLowerCase();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.toLowerCase();	      String    str    =(String)this.nullText.clone();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =  new  char[str.length()];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[str.length()];	      char[]    buffer    =    new    char[str.length()    +    2];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  char[]  buffer  =  new  char[str.length()  *  CAPACITY];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =  new  char[str.length()  *  CAPACITY];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[str.length()  *  CAPACITY];	      char[]    buffer    =    new    char[str.length()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  char[]  buffer  =  this.str.toCharArray();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =  this.str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  this.str.toCharArray();	      char[]    buffer    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  String[]  buffer  =  str.toCharArray();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String[]  buffer  =  str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  str.toCharArray();	      char[]    buffer    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  String[]  buffer  =(String[])str.toCharArray();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String[]  buffer  =(String[])str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =(String[])str.toCharArray();	      char[]    buffer    =(char)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
16	[BUG]  [BUGGY]  char[]  buffer  =(char)str.getValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char)str.getValue();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.getValue();	      char[]    buffer    =(char)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
17	[BUG]  [BUGGY]  char[]  buffer  =(char)str.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char)str.toString();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.toString();	      char[]    buffer    =(char)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
18	[BUG]  [BUGGY]  this.str  =  nullText;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  this.str  =  nullText;  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  nullText;	      this.str    =    str;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
19	[BUG]  [BUGGY]  this.str  =  str.substring(0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  this.str  =  str.substring(0,  str.length()  -  1);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str.substring(0,  str.length()  -  1);	      this.str    =    str;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
20	[BUG]  [BUGGY]  this.str  =  str.trim();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  this.str  =  str.trim();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str.trim();	      this.str    =    str;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
21	[BUG]  [BUGGY]  this.str  =  str.toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  this.str  =  str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  str.toCharArray();	      this.str    =    str;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
22	[BUG]  [BUGGY]  String[]  buffer  =  new  String[str.length()  +  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String[]  buffer  =  new  String[str.length()  +  1];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  new  String[str.length()  +  1];	      String[]    buffer    =    new    String[str.length()    ];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  String[]  buffer  =  new  String[str.length()  +  2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String[]  buffer  =  new  String[str.length()  +  2];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  new  String[str.length()  +  2];	      String[]    buffer    =    new    String[str.length()    ];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  String[]  buffer  =  new  String[str.length()  +  4];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String[]  buffer  =  new  String[str.length()  +  4];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  new  String[str.length()  +  4];	      String[]    buffer    =    new    String[str.length()    ];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  append(str);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  append(str);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str);	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
26	[BUG]  [BUGGY]  append(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  append(buffer,  0,  size);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(buffer,  0,  size);	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  append(capacity,  0,  size);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  append(capacity,  0,  size);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(capacity,  0,  size);	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  append(str,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  append(str,  0,  size);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	append(str,  0,  size);	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(str.charAt(i));  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  ++i)  {  buffer[i]  =  new  String(str.charAt(i));  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  pos;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  pos;  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  pos  =  0;  pos  <  size;  pos++)  {  buffer[pos]  =  pos;  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  for(int  i  =  0;  i  <  str.length();  i++)  {  buffer[i]  =  new  String(nullText);  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  String[]  buffer  =  new  String[str.length()  *  CAPACITY];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String[]  buffer  =  new  String[str.length()  *  CAPACITY];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  new  String[str.length()  *  CAPACITY];	      String[]    buffer    =    new    String[str.length()    +    CAPACITY];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  <  =  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
35	[BUG]  [BUGGY]  char[]  buffer  =(char[])str.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char[])str.clone();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char[])str.clone();	      char[]    buffer    =(char[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
36	[BUG]  [BUGGY]  char[]  buffer  =(char[])str.getValue();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char[])str.getValue();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char[])str.getValue();	      char[]    buffer    =(char[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
37	[BUG]  [BUGGY]  safeAdd(str);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  safeAdd(str);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	safeAdd(str);	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  luate(str);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  luate(str);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str);	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  luate(str,  pos,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  luate(str,  pos,  size);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	luate(str,  pos,  size);	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
40	[BUG]  [BUGGY]  char[]  buffer  =  new  char[size()  ];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =  new  char[size()  ];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[size()  ];	      char[]    buffer    =    new    char[size()    +    1];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
41	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  <  0)  {	  if(str    ==    null    ||    str.length()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
42	[BUG]  [BUGGY]  int  size  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  int  size  =  str.length()  +  1;  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	int  size  =  str.length()  +  1;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
43	[BUG]  [BUGGY]  int  size  =  str.length()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  int  size  =  str.length()  -  1;  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	int  size  =  str.length()  -  1;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  int  size  =  this.str.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  int  size  =  this.str.length();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	int  size  =  this.str.length();	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  int  size  =  str.length()  +  CAPACITY;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  int  size  =  str.length()  +  CAPACITY;  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	int  size  =  str.length()  +  CAPACITY;	      int    size    =    str.length();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
46	[BUG]  [BUGGY]  char[]  buffer  =(char[])str.getChars();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char[])str.getChars();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char[])str.getChars();	      char[]    buffer    =(char[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
47	[BUG]  [BUGGY]  String[]  buffer  =  new  String[str.length()  +  0];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String[]  buffer  =  new  String[str.length()  +  0];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String[]  buffer  =  new  String[str.length()  +  0];	      String[]    buffer    =    new    String[str.length()    ];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  char[]  buffer  =  new  char[size()  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =  new  char[size()  1];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  new  char[size()  1];	      char[]    buffer    =    new    char[size()    +    1];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
49	[BUG]  [BUGGY]  char[]  buffer  =  nullText.toCharArray();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =  nullText.toCharArray();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =  nullText.toCharArray();	      char[]    buffer    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
50	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
52	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(buffer  ==  null  ||  buffer!=  null)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer!=  null)  {	  if(str!=    null)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
53	[BUG]  [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  size);  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  System.arraycopy(buffer,  0,  buffer,  0,  str.length());  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.charAt(str.length()  -  1)!=  '0')  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(buffer  ==  null  ||  buffer.charAt(str.length()  -  1)!=  '0')  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer.charAt(str.length()  -  1)!=  '0')  {	  if(buffer    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
57	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  nullText;  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  nullText;  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
58	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  }  else  {  buffer  =  nullText;  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  }  else  {  buffer  =  nullText;  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()];  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()];  }  else  {  buffer  =  nullText;  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()];  }  else  {  buffer  =  nullText;  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  char[]  buffer  =(char)str.toCharArray()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char)str.toCharArray()  +  1;  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.toCharArray()  +  1;	      char[]    buffer    =(char)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
61	[BUG]  [BUGGY]  char[]  buffer  =(char)str.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char)str.clone();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.clone();	      char[]    buffer    =(char)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
62	[BUG]  [BUGGY]  Char[]  buffer  =  new  char[str.length()];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  Char[]  buffer  =  new  char[str.length()];  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	Char[]  buffer  =  new  char[str.length()];	      char[]    buffer    =    new    char[str.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  String  str  =(String)this.nullText.get();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String  str  =(String)this.nullText.get();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.get();	      String    str    =(String)this.nullText.clone();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
64	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String  str  =(String)this.nullText.replace(str,  0);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  0);	      String    str    =(String)this.nullText.clone();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
65	[BUG]  [BUGGY]  this.str  =  buffer;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  this.str  =  buffer;  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  buffer;	      this.str    =    str;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
66	[BUG]  [BUGGY]  this.str  =  newLine;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  this.str  =  newLine;  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  newLine;	      this.str    =    str;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
67	[BUG]  [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  append(str);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  append(str);  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  buffer  =  new  char[size()  +  CAPACITY];  append(str);  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  +  CAPACITY];  }  else  {  buffer  =  new  char[capacity];  append(str);  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
69	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  append(str);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  append(str);  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  +  1];  append(str);  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    append(str);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
70	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  else  {  buffer  =  nullText;  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  else  {  buffer  =  nullText;  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
71	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  -  1];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  -  1];  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  -  1];  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    else    {    buffer    =    nullText;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
72	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null  ||  str.length()  ==  0)  {	  if(str!=    null)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
73	[BUG]  [BUGGY]  if(str!=  null  &&  str.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str!=  null  &&  str.length()  >  0)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null  &&  str.length()  >  0)  {	  if(str!=    null)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
74	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null  ||  str.length()  >  0)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null  ||  str.length()  >  0)  {	  if(str    ==    null    ||    str.length()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
75	[BUG]  [BUGGY]  char[]  buffer  =(str  ==  null)?  null  :  str.toCharArray();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(str  ==  null)?  null  :  str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(str  ==  null)?  null  :  str.toCharArray();	      char[]    buffer    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
76	[BUG]  [BUGGY]  char[]  buffer  =(str  ==  null?  null  :  str.toCharArray());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(str  ==  null?  null  :  str.toCharArray());  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(str  ==  null?  null  :  str.toCharArray());	      char[]    buffer    =    str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
77	[BUG]  [BUGGY]  if(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
78	[BUG]  [BUGGY]  if(str  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
79	[BUG]  [BUGGY]  if(str  ==  null)  {  init();  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  init();  }  else  {  buffer  =  nullText;  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  init();  }  else  {  buffer  =  nullText;  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
80	[BUG]  [BUGGY]  if(str!=  null)  {  init();  }  else  {  buffer  =  nullText;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str!=  null)  {  init();  }  else  {  buffer  =  nullText;  }  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str!=  null)  {  init();  }  else  {  buffer  =  nullText;  }	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
81	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  /  CAPACITY];  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
82	[BUG]  [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  -  CAPACITY];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(str  ==  null)  {  buffer  =  new  char[size()  -  CAPACITY];  }  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(str  ==  null)  {  buffer  =  new  char[size()  -  CAPACITY];  }	      if(str    ==    null)    {    buffer    =    new    char[size()    +    CAPACITY];    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
83	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  if(buffer  ==  null  ||  buffer.length()  <  =  0)  {  [BUGGY]    buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	if(buffer  ==  null  ||  buffer.length()  <  =  0)  {	  if(buffer    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
84	[BUG]  [BUGGY]  this.str  =  String.valueOf(str);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  this.str  =  String.valueOf(str);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	this.str  =  String.valueOf(str);	      this.str    =    str;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
85	[BUG]  [BUGGY]  char[]  buffer  =(char[])str.toLowerCase();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char[])str.toLowerCase();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char[])str.toLowerCase();	      char[]    buffer    =(char[])str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
86	[BUG]  [BUGGY]  char[]  buffer  =(char)str.toUpperCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char)str.toUpperCase();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.toUpperCase();	      char[]    buffer    =(char)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
87	[BUG]  [BUGGY]  char[]  buffer  =(char)str.toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  char[]  buffer  =(char)str.toLowerCase();  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	char[]  buffer  =(char)str.toLowerCase();	      char[]    buffer    =(char)str.toCharArray();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
88	[BUG]  [BUGGY]  String  str  =(String)this.nullText.replace(str,  nullText);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  StrBuilder(String  str)  {  super();    [BUGGY]  String  str  =(String)this.nullText.replace(str,  nullText);  [BUGGY]    if  (str  ==  null)  {  buffer  =  new  char[CAPACITY];  }  else  {  buffer  =  new  char[str.length()  +  CAPACITY];  append(str);  }  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  <init>  [RETURN_TYPE]  String)  String  str  [VARIABLES]  String  newLine  nullText  str  boolean  int  CAPACITY  initialCapacity  mark  pos  size  long  serialVersionUID  char[]  buffer  	projects/Lang61/src/java/org/apache/commons/lang/text/StrBuilder.java	0.2182178902359924	122	122	2	replace	String  str  =(String)this.nullText.replace(str,  nullText);	      String    str    =(String)this.nullText.clone();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
