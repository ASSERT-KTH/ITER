bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(',').append(c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(',').append(c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(',').append(c);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
2	[BUG]  [BUGGY]  sb.append(','  +  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(','  +  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(','  +  quote);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
3	[BUG]  [BUGGY]  sb.append(',').append(quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(',').append(quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(',').append(quote);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
4	[BUG]  [BUGGY]  sb.append(',').append(backslashEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(',').append(backslashEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(',').append(backslashEscape);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
5	[BUG]  [BUGGY]  return  s.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  s.toString()  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  s.toString()  +  1;	  return    c.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
6	[BUG]  [BUGGY]  return  c.toString()  +  2;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  2;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  2;	  return    c.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
7	[BUG]  [BUGGY]  n   ";  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  n   ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	n   ";	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
8	[BUG]  [BUGGY]  n  =  sb.toString();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  n  =  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	n  =  sb.toString();	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
9	[BUG]  [BUGGY]  n  =  sb.toString()  + ";n ";  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  n  =  sb.toString()  + ";n ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	n  =  sb.toString()  + ";n ";	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
10	[BUG]  [BUGGY]  n  =  sb.substring(0,  sb.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  n  =  sb.substring(0,  sb.length()  -  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	n  =  sb.substring(0,  sb.length()  -  1);	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
11	[BUG]  [BUGGY]  n  =  sb.substring(0,  sb.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  n  =  sb.substring(0,  sb.length()  -  2);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	n  =  sb.substring(0,  sb.length()  -  2);	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
12	[BUG]  [BUGGY]  n  =  sb.substring(0,  sb.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  n  =  sb.substring(0,  sb.length()  -  4);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	n  =  sb.substring(0,  sb.length()  -  4);	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
13	[BUG]  [BUGGY]  return  db.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  db.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  db.toString();	  return    sb.toString()    +    2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
14	[BUG]  [BUGGY]  return  c.toString()  +  quote  +  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  quote  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  quote  +  1;	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
15	[BUG]  [BUGGY]  return  c.toString()  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  backslashEscape;	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
16	[BUG]  [BUGGY]  return  s.toString()  +  quote;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  s.toString()  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  s.toString()  +  quote;	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
17	[BUG]  [BUGGY]  return  c.toString()  +  quote  +  2;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  quote  +  2;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  quote  +  2;	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
18	[BUG]  [BUGGY]  return  c.toString()  +  quote  +  4;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  quote  +  4;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  quote  +  4;	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
19	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  2));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  2));  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  2));  return  sb.toString();	  return    b.toString();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
20	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  sb.append(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  sb.append(s.substring(0,  s.length()  -  1));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  sb.append(s.substring(0,  s.length()  -  1));	  return    b.toString();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
21	[BUG]  [BUGGY]  return  sb.toString()  + ",   ",  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",   ",  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",   ",  +  quote;	  return    sb.toString()    +   ",   ",    +    c;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
22	[BUG]  [BUGGY]  return  sb.toString()  + ",n ",  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",n ",  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",n ",  +  c;	  return    sb.toString()    +   ",   ",    +    c;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
23	[BUG]  [BUGGY]  return  sb.toString()  + ",n, ",  +  c;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",n, ",  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",n, ",  +  c;	  return    sb.toString()    +   ",   ",    +    c;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
24	[BUG]  [BUGGY]  return  sb.toString()  + ",','  +  quote;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",','  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",','  +  quote;	  return    sb.toString()    +   ",   ",    +    c;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
25	[BUG]  [BUGGY]  return  sb.toString()  + "   "  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "   "  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "   "  +  backslashEscape;	  return    sb.toString()    +   "       "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
26	[BUG]  [BUGGY]  return  sb.toString()  + "   "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "   "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "   "  +  doublequoteEscape;	  return    sb.toString()    +   "       "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
27	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  backslashEscape;	  return    sb.toString()    +   ":   "    +    singlequoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
28	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quotes;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quotes;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quotes;	  return    sb.toString()    +   ":   "    +    singlequoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
29	[BUG]  [BUGGY]  return  sb.toString()  + ".html "  +  quote;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".html "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".html "  +  quote;	  return    sb.toString()    +   ".html   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ".html "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ".html "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ".html "  +  c;	  return    sb.toString()    +   ".html   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  return  c.toString()  + ".html "  +  sb;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + ".html "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + ".html "  +  sb;	  return    sb.toString()    +   ".html   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  return  sb.toString()  + ".html ",  c;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".html ",  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".html ",  c;	  return    sb.toString()    +   ".html   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  return  c  + ".html "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c  + ".html "  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c  + ".html "  +  sb.toString();	  return    sb.toString()    +   ".html   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  return  sb.toString()  + "/.html "  +  c;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "/.html "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "/.html "  +  c;	  return    sb.toString()    +   ".html   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ".   "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ".   "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ".   "  +  quote;	  return    c.toString()    +   ".       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ".   "  +  sb;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ".   "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ".   "  +  sb;	  return    c.toString()    +   ".       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ". "  +  sb;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ". "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ". "  +  sb;	  return    c.toString()    +   ".       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  return  sb.toString()  +  backslashEscape  +  quote;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  backslashEscape  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  backslashEscape  +  quote;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +  doublequoteEscape;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +  this.backslashEscape;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  endEscape;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +  endEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +  endEscape;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +   ",  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +   ",  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +   ",  backslashEscape;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  3;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +  3;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +  3;	  return    sb.toString()    +    quote    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  5;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +  5;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +  5;	  return    sb.toString()    +    quote    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  6;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +  6;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +  6;	  return    sb.toString()    +    quote    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  sb.append(';');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(';');  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(';');	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
47	[BUG]  [BUGGY]  sb.append( ";nn ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( ";nn ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( ";nn ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
48	[BUG]  [BUGGY]  sb.append( ";n ",  c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( ";n ",  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( ";n ",  c);	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
49	[BUG]  [BUGGY]  sb.append( ";negative ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( ";negative ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( ";negative ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
50	[BUG]  [BUGGY]  return  sb.toString()  +  quoteEscape,  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quoteEscape,  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quoteEscape,  backslashEscape;	  return    sb.toString()    +    quoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
51	[BUG]  [BUGGY]  return  sb.toString()  +  quoteEscape,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quoteEscape,  backslashEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quoteEscape,  backslashEscape);	  return    sb.toString()    +    quoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  return  sb.toString()  +  quoteEscape.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quoteEscape.charAt(0);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quoteEscape.charAt(0);	  return    sb.toString()    +    quoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  return  sb.toString()  +  quoteEscape.charAt(c);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quoteEscape.charAt(c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quoteEscape.charAt(c);	  return    sb.toString()    +    quoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
54	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ": ";  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ": ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ": ";	  return    sb.toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  return  sb.toString()  + ",: ";  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: ";	  return    sb.toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": ";  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": ";	  return    sb.toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  return  sb.toString()  + ",  quote: ";  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  quote: ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  quote: ";	  return    sb.toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ": ";  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ": ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ": ";	  return    sb.toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  sb.append('N');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append('N');  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append('N');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
60	[BUG]  [BUGGY]  sb.append('#');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append('#');  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append('#');	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
61	[BUG]  [BUGGY]  sb.append('n',  c);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append('n',  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append('n',  c);	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
62	[BUG]  [BUGGY]  sb.append('n'  +  quote);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append('n'  +  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append('n'  +  quote);	  sb.append('n');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
63	[BUG]  [BUGGY]  return  sb.toString()  /  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  /  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  /  1;	  return    sb.toString()    *    1;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
64	[BUG]  [BUGGY]  return  sb.toString()  *  2;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  *  2;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  *  2;	  return    sb.toString()    *    1;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
65	[BUG]  [BUGGY]  return  sb.toString(),  c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString(),  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString(),  c);	  return    sb.toString()    *    1;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
66	[BUG]  [BUGGY]  return  sb.toString()  *  4;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  *  4;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  *  4;	  return    sb.toString()    *    1;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
67	[BUG]  [BUGGY]  return  sb.toString()  -  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  -  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  -  1;	  return    sb.toString()    *    1;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
68	[BUG]  [BUGGY]  return  sb.toString()  + ".js "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".js "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".js "  +  c;	  return    sb.toString()    +   ".n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
69	[BUG]  [BUGGY]  return  sb.toString()  + ".null "  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".null "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".null "  +  c;	  return    sb.toString()    +   ".n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
70	[BUG]  [BUGGY]  return  sb.toString()  + ".backslash "  +  c;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".backslash "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".backslash "  +  c;	  return    sb.toString()    +   ".n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
71	[BUG]  [BUGGY]  return  sb.toString()  + ".xml "  +  c;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".xml "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".xml "  +  c;	  return    sb.toString()    +   ".n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
72	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
73	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
74	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
75	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendHexJavaScriptRepresentation(sb,  quote);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
76	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendHexJavaScriptRepresentation(sb,  c,  1);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
77	[BUG]  [BUGGY]  return  sb.toString()  + "( "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "( "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "( "  +  quote;	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
78	[BUG]  [BUGGY]  return  c.toString()  + "( "  +  sb;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + "( "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + "( "  +  sb;	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
79	[BUG]  [BUGGY]  return  sb.toString()  + ",( "  +  quote;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",( "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",( "  +  quote;	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
80	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ "( "  +  c;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ "( "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ "( "  +  c;	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
81	[BUG]  [BUGGY]  return  sb.toString()  + "(' "  +  c;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "(' "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "(' "  +  c;	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
82	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ "( "  +  c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ "( "  +  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ "( "  +  c);	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
83	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
84	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  +  1));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
85	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb  =  new  StringBuilder(s.substring(0,  s.length()));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb  =  new  StringBuilder(s.substring(0,  s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
86	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  1));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  1));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  1));	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
87	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
88	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  2));  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  2));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  2));	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
89	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  quoteEscape;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  quoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  quoteEscape;	  return    sb.toString()    +   ":   "    +    quoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
90	[BUG]  [BUGGY]  return  sb.substring(0,  sb.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.substring(0,  sb.length()  -  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.substring(0,  sb.length()  -  1);	  return    sb.getString();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
91	[BUG]  [BUGGY]  return  c.getString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.getString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.getString();	  return    sb.getString();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
92	[BUG]  [BUGGY]  return  sb.substring(0,  sb.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.substring(0,  sb.length()  -  2);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.substring(0,  sb.length()  -  2);	  return    sb.getString();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
93	[BUG]  [BUGGY]  return  sb.substring(0,  sb.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.substring(0,  sb.length()  -  4);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.substring(0,  sb.length()  -  4);	  return    sb.getString();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
94	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  c.toString();	  return    c.toString()    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
95	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ": "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ": "  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ": "  +  sb.toString();	  return    c.toString()    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
96	[BUG]  [BUGGY]  return  sb.toString()  + ".: "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".: "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".: "  +  c.toString();	  return    c.toString()    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
97	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  c.toString();	  return    c.toString()    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
98	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString())+ ": "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString())+ ": "  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString())+ ": "  +  sb.toString();	  return    c.toString()    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
99	[BUG]  [BUGGY]  sb.append(']');  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(']');  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(']');	  sb.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
100	[BUG]  [BUGGY]  sb.append( "[] ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "[] ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "[] ");	  sb.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
101	[BUG]  [BUGGY]  sb.append('[');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append('[');  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append('[');	  sb.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
102	[BUG]  [BUGGY]  sb.append( "] ").append(c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "] ").append(c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "] ").append(c);	  sb.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
103	[BUG]  [BUGGY]  sb.append( "]n ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "]n ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "]n ");	  sb.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
104	[BUG]  [BUGGY]  return  c.toString()  + ",' "  +  sb;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + ",' "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + ",' "  +  sb;	  return    sb.toString()    +   ",'   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
105	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ",' "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ",' "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ",' "  +  c;	  return    sb.toString()    +   ",'   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
106	[BUG]  [BUGGY]  return  sb.toString()  + "',' "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "',' "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "',' "  +  quote;	  return    sb.toString()    +   ",'   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
107	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",' "  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",' "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",' "  +  c;	  return    sb.toString()    +   ",'   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
108	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",: "  +  c;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",: "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",: "  +  c;	  return    sb.toString()    +    quote    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
109	[BUG]  [BUGGY]  return  c.toString()  +  quote  + ": "  +  sb;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  quote  + ": "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  quote  + ": "  +  sb;	  return    sb.toString()    +    quote    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
110	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ".: "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ".: "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ".: "  +  c;	  return    sb.toString()    +    quote    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
111	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ": "  +  c,  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ": "  +  c,  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ": "  +  c,  backslashEscape;	  return    sb.toString()    +    quote    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
112	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",  c: "  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",  c: "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",  c: "  +  c;	  return    sb.toString()    +    quote    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
113	[BUG]  [BUGGY]  return  sb.toString()  + ",null "  +  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null "  +  quote;	  return    sb.toString()    +   ",n   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
114	[BUG]  [BUGGY]  return  sb.toString()  + ",null ",  quote;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null ",  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null ",  quote;	  return    sb.toString()    +   ",n   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
115	[BUG]  [BUGGY]  return  sb.toString()  + ",null, "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null, "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null, "  +  quote;	  return    sb.toString()    +   ",n   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
116	[BUG]  [BUGGY]  return  sb.toString()  *  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  *  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  *  doublequoteEscape;	  return    sb.toString()    +    doublequoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
117	[BUG]  [BUGGY]  return  sb.toString()  +  singlequoteEscape;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  singlequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  singlequoteEscape;	  return    sb.toString()    +    doublequoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
118	[BUG]  [BUGGY]  return  sb.toString()  +  quotes;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quotes;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quotes;	  return    sb.toString()    +    doublequoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
119	[BUG]  [BUGGY]  return  sb.toString()  + ". ";  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ". ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ". ";	  return    sb.toString()    +   "       ";    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
120	[BUG]  [BUGGY]  return  sb.toString()  + "= ";  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "= ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "= ";	  return    sb.toString()    +   "       ";    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
121	[BUG]  [BUGGY]  return  sb.toString()  + ",  quote= ";  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  quote= ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  quote= ";	  return    sb.toString()    +   "       ";    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
122	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString())+ ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString())+ ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString())+ ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
123	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString())+ ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString())+ ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(str.toString())+ ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
124	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString())+ ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString())+ ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString())+ ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
125	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(suffix.toString())+ ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(suffix.toString())+ ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(suffix.toString())+ ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
126	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString())+ ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString())+ ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString())+ ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
127	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sbu.toString())+ ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sbu.toString())+ ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sbu.toString())+ ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
128	[BUG]  [BUGGY]  return  text.toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  text.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  text.toString();	  return    text.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
129	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString())+ ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString())+ ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(str.toString())+ ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
130	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString())+ ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString())+ ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString())+ ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
131	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString())+ ": "  +  sb;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString())+ ": "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString())+ ": "  +  sb;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
132	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
133	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()));  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()));  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
134	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s.substring(0,  s.length()));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb  =  new  StringBuilder(s.substring(0,  s.length()));  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb  =  new  StringBuilder(s.substring(0,  s.length()));  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
135	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
136	[BUG]  [BUGGY]  if(s.length()  ==  0)  {  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(s.length()  ==  0)  {  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(s.length()  ==  0)  {  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  }	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
137	[BUG]  [BUGGY]  sb.append(s.substring(0,  s.length()  -  1));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(s.substring(0,  s.length()  -  1));  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(s.substring(0,  s.length()  -  1));  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
138	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  +  1));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  +  1));  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  +  1));  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
139	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
140	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s.length());  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb  =  new  StringBuilder(s.length());  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb  =  new  StringBuilder(s.length());  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
141	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1);  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1);  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  1);  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
142	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length());  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length());  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(str.length());  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
143	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length();  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length();  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length();  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
144	[BUG]  [BUGGY]  return  sb.toString()  + ",  quote: "  +  quote;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  quote: "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  quote: "  +  quote;	  return    sb.toString()    +   ".:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
145	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ".: "  +  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ".: "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ".: "  +  quote;	  return    sb.toString()    +   ".:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
146	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ".: "  +  quote;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ".: "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ".: "  +  quote;	  return    sb.toString()    +   ".:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
147	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ".: "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ".: "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ".: "  +  quote;	  return    sb.toString()    +   ".:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
148	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ", "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ", "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ", "  +  quote;	  return    c.toString()    +   ",       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
149	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ", "  +  sb;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ", "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ", "  +  sb;	  return    c.toString()    +   ",       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
150	[BUG]  [BUGGY]  return  sb.toString()  + "., "  +  c;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "., "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "., "  +  c;	  return    c.toString()    +   ",       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
151	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ",   "  +  sb;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ",   "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ",   "  +  sb;	  return    c.toString()    +   ",       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
152	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + "   "  +  sb;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + "   "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + "   "  +  sb;	  return    c.toString()    +   "       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
153	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + "   "  +  sb;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + "   "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + "   "  +  sb;	  return    c.toString()    +   "       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
154	[BUG]  [BUGGY]  return  sb.toString()  + ",null "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null "  +  c;	  return    sb.toString()    +   ",n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
155	[BUG]  [BUGGY]  return  sb.toString()  + ",null ",  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null ",  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null ",  c;	  return    sb.toString()    +   ",n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
156	[BUG]  [BUGGY]  return  c.toString()  + ",n   "  +  sb;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + ",n   "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + ",n   "  +  sb;	  return    sb.toString()    +   ",n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
157	[BUG]  [BUGGY]  return  sb.toString()  + ",native "  +  c;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",native "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",native "  +  c;	  return    sb.toString()    +   ",n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
158	[BUG]  [BUGGY]  return  sb.toString()  + ",null "  +  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null "  +  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null "  +  quote);	  return    sb.toString()    +   ",n   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
159	[BUG]  [BUGGY]  return  sb.toString()  + ",null "  +  c);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null "  +  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null "  +  c);	  return    sb.toString()    +   ",n   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
160	[BUG]  [BUGGY]  return  sb.toString()  + ",null ",  c);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null ",  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null ",  c);	  return    sb.toString()    +   ",n   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
161	[BUG]  [BUGGY]  return  sb.toString()  + ",native "  +  c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",native "  +  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",native "  +  c);	  return    sb.toString()    +   ",n   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
162	[BUG]  [BUGGY]  return  sb  + ": "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb  + ": "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb  + ": "  +  c.toString();	  return    c    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
163	[BUG]  [BUGGY]  return  c  + ": "  +  quote.toString();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c  + ": "  +  quote.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c  + ": "  +  quote.toString();	  return    c    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
164	[BUG]  [BUGGY]  return  sb  + ".: "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb  + ".: "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb  + ".: "  +  c.toString();	  return    c    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
165	[BUG]  [BUGGY]  return  sb  + ",: "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb  + ",: "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb  + ",: "  +  c.toString();	  return    c    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
166	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  8;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +  8;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +  8;	  return    sb.toString()    +    quote    +    4;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
167	[BUG]  [BUGGY]  return  sb.toString()  + ", "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ", "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ", "  +  c.toString();	  return    c.toString()    +   ",   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
168	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ", "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ", "  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ", "  +  sb.toString();	  return    c.toString()    +   ",   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
169	[BUG]  [BUGGY]  return  sb.toString()  + "., "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "., "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "., "  +  c.toString();	  return    c.toString()    +   ",   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
170	[BUG]  [BUGGY]  return  sb.toString()  + ",  backslashEscape: "  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  backslashEscape: "  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  backslashEscape: "  +  backslashEscape;	  return    sb.toString()    +   ":   "    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
171	[BUG]  [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  sb.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
172	[BUG]  [BUGGY]  appendSinglequoteEscape(sb,  c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendSinglequoteEscape(sb,  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendSinglequoteEscape(sb,  c);	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
173	[BUG]  [BUGGY]  if(c!=  null)  {  if(c.length()  ==  0)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  if(c.length()  ==  0)  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  if(c.length()  ==  0)  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
174	[BUG]  [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  sb.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
175	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  AppendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  AppendSinglequoteEscape(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  c.toString();  }  else  {  AppendSinglequoteEscape(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
176	[BUG]  [BUGGY]  return  sb.toString()  + ",n ";  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",n ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",n ";	  return    sb.toString()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
177	[BUG]  [BUGGY]  return  sb.toString()  + ",, ";  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",, ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",, ";	  return    sb.toString()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
178	[BUG]  [BUGGY]  return  sb.toString()  + ", ",  c);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ", ",  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ", ",  c);	  return    sb.toString()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
179	[BUG]  [BUGGY]  sb.append( "null ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "null ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "null ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
180	[BUG]  [BUGGY]  sb.append( "   ");  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "   ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "   ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
181	[BUG]  [BUGGY]  sb.append( "# ");  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "# ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "# ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
182	[BUG]  [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
183	[BUG]  [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuffer  sb  =  new  StringBuffer(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuffer  sb  =  new  StringBuffer(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuffer  sb  =  new  StringBuffer(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
184	[BUG]  [BUGGY]  if(c!=  null)  {  if(c.length()  >  0)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  if(c.length()  >  0)  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  if(c.length()  >  0)  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
185	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString()  +  quote);  return  sb.toString()  + ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString()    +    quote);    return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
186	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(str.toString()  +  quote);  return  sb.toString()  + ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString()    +    quote);    return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
187	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString()  +  quote);  return  sb.toString()  + ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString()    +    quote);    return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
188	[BUG]  [BUGGY]  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString()    +    quote);    return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
189	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  +  quote);  return  sb.toString()  + ",: "  +  c;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  +  quote);  return  sb.toString()  + ",: "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString()  +  quote);  return  sb.toString()  + ",: "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString()    +    quote);    return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
190	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString()    +    quote);    return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
191	[BUG]  [BUGGY]  return  sb.toString()  +  quote  *  4;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  *  4;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  *  4;	  return    sb.toString()    +    quote    *    2;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
192	[BUG]  [BUGGY]  return  sb.toString()  +  quote  /  2;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  /  2;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  /  2;	  return    sb.toString()    +    quote    *    2;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
193	[BUG]  [BUGGY]  return  sb.toString()  +  quote  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  *  2  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  *  2  +  1;	  return    sb.toString()    +    quote    *    2;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
194	[BUG]  [BUGGY]  return  sb.toString()  +  quoteEscape  *  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quoteEscape  *  2;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quoteEscape  *  2;	  return    sb.toString()    +    quote    *    2;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
195	[BUG]  [BUGGY]  return  sb.toString()  +  quote  *  3;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  *  3;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  *  3;	  return    sb.toString()    +    quote    *    2;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
196	[BUG]  [BUGGY]  sb.append(':');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(':');  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(':');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
197	[BUG]  [BUGGY]  sb.append('$');  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append('$');  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append('$');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
198	[BUG]  [BUGGY]  sb.append('+');  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append('+');  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append('+');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
199	[BUG]  [BUGGY]  if(sbu.length()  ==  0)  {  return  sbu.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sbu.length()  ==  0)  {  return  sbu.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sbu.length()  ==  0)  {  return  sbu.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }	  return    sbu.toString();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
200	[BUG]  [BUGGY]  return  sbu.toString()  +  quote;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sbu.toString()  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sbu.toString()  +  quote;	  return    sbu.toString();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
201	[BUG]  [BUGGY]  if(sbu.length()  ==  0)  {  return  sbu.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sbu.toString());  sb.append(sbu.toString());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sbu.length()  ==  0)  {  return  sbu.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sbu.toString());  sb.append(sbu.toString());  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sbu.length()  ==  0)  {  return  sbu.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sbu.toString());  sb.append(sbu.toString());  }	  return    sbu.toString();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
202	[BUG]  [BUGGY]  if(sbu.length()  ==  0)  {  return  sbu.toString();  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sbu.length()  ==  0)  {  return  sbu.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sbu.length()  ==  0)  {  return  sbu.toString();  }	  return    sbu.toString();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
203	[BUG]  [BUGGY]  if(sbu.length()  ==  0)  {  return  sbu.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sbu.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sbu.length()  ==  0)  {  return  sbu.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sbu.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sbu.length()  ==  0)  {  return  sbu.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sbu.toString());  appendHexJavaScriptRepresentation(sb,  c);  }	  return    sbu.toString();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
204	[BUG]  [BUGGY]  return  sb.toString()  + "null "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "null "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "null "  +  c;	  return    sb.toString()    +   "n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
205	[BUG]  [BUGGY]  return  sb.toString()  + "# "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "# "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "# "  +  c;	  return    sb.toString()    +   "n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
206	[BUG]  [BUGGY]  return  c.toString()  +  sb;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  sb;	  return    sb.toString()    +    c;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
207	[BUG]  [BUGGY]  return  sb.toString()  *  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  *  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  *  c;	  return    sb.toString()    +    c;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
208	[BUG]  [BUGGY]  return  sb.toString()  +  quoted;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quoted;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quoted;	  return    sb.toString()    +    c;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
209	[BUG]  [BUGGY]  return  sb.toString()  + "  null. ";  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "  null. ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "  null. ";	  return    sb.toString()    +   "null   ";    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
210	[BUG]  [BUGGY]  return  sb.toString()  + ".null ";  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".null ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".null ";	  return    sb.toString()    +   "null   ";    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
211	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	AppendHexJavaScriptRepresentation(sb,  c);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
212	[BUG]  [BUGGY]  appendJavaScriptRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendJavaScriptRepresentation(sb,  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendJavaScriptRepresentation(sb,  c);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
213	[BUG]  [BUGGY]  appendDelimiterRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendDelimiterRepresentation(sb,  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendDelimiterRepresentation(sb,  c);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
214	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendHexJavaScriptRepresentation(c,  sb,  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendHexJavaScriptRepresentation(c,  sb,  quote);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
215	[BUG]  [BUGGY]  sb.append(c.toString()  +  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(c.toString()  +  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c.toString()  +  quote);	  sb.append(c.toString());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
216	[BUG]  [BUGGY]  sb.append(c.toString()  + "n ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(c.toString()  + "n ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c.toString()  + "n ");	  sb.append(c.toString());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
217	[BUG]  [BUGGY]  sb.append(c.substring(0,  c.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(c.substring(0,  c.length()  -  1));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c.substring(0,  c.length()  -  1));	  sb.append(c.toString());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
218	[BUG]  [BUGGY]  sb.append(c.toString()  + ", ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(c.toString()  + ", ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c.toString()  + ", ");	  sb.append(c.toString());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
219	[BUG]  [BUGGY]  sb.append(c.toString()  + ": ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(c.toString()  + ": ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c.toString()  + ": ");	  sb.append(c.toString());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
220	[BUG]  [BUGGY]  sb.append(c.getText());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(c.getText());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c.getText());	  sb.append(c.toString());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
221	[BUG]  [BUGGY]  return  sb.toString()  + ",n "  +  quote);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",n "  +  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",n "  +  quote);	  return    sb.toString()    +   ",   "    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
222	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",' "  +  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",' "  +  quote);	  return    sb.toString()    +   ",   "    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
223	[BUG]  [BUGGY]  return  sb.toString()  + ",n ",  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",n ",  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",n ",  quote);	  return    sb.toString()    +   ",   "    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
224	[BUG]  [BUGGY]  return  sb.toString()  + ",   "  +  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",   "  +  backslashEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",   "  +  backslashEscape);	  return    sb.toString()    +   ",   "    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
225	[BUG]  [BUGGY]  return  sb.toString()  + ".* "  +  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".* "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".* "  +  quote;	  return    sb.toString()    +   ".       "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
226	[BUG]  [BUGGY]  return  sb.toString()  + ".n "  +  quote;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".n "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".n "  +  quote;	  return    sb.toString()    +   ".       "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
227	[BUG]  [BUGGY]  return  sb.toString()  + ".   "  +  quoteEscape;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".   "  +  quoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".   "  +  quoteEscape;	  return    sb.toString()    +   ".       "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
228	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  quote  +  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",' "  +  quote  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",' "  +  quote  +  1;	  return    sb.toString()    +   ",'   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
229	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",' "  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",' "  +  backslashEscape;	  return    sb.toString()    +   ",'   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
230	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  quote  + "' ";  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",' "  +  quote  + "' ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",' "  +  quote  + "' ";	  return    sb.toString()    +   ",'   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
231	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",' "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",' "  +  doublequoteEscape;	  return    sb.toString()    +   ",'   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
232	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",' "  +  c);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",' "  +  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",' "  +  c);	  return    sb.toString()    +    quote    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
233	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",n "  +  c);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",n "  +  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",n "  +  c);	  return    sb.toString()    +    quote    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
234	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",, "  +  c);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",, "  +  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",, "  +  c);	  return    sb.toString()    +    quote    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
235	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",   "  +  c,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",   "  +  c,  backslashEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",   "  +  c,  backslashEscape);	  return    sb.toString()    +    quote    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
236	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString());  return  sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
237	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString());  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(str.toString());  return  sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
238	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString());  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.toString());  return  sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
239	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  return  sb.toString()  + ",  quote: "  +  quote;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  return  sb.toString()  + ",  quote: "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString());  return  sb.toString()  + ",  quote: "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
240	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(suffix.toString());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(suffix.toString());  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(suffix.toString());  return  sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
241	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
242	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString());  return  sb.toString()  + ",: "  +  quote;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.toString());  return  sb.toString()  + ",: "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(str.toString());  return  sb.toString()  + ",: "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
243	[BUG]  [BUGGY]  return  c.toString()  + ".* "  +  sb;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + ".* "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + ".* "  +  sb;	  return    sb.toString()    +   ".*   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
244	[BUG]  [BUGGY]  return  c  + ".* "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c  + ".* "  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c  + ".* "  +  sb.toString();	  return    sb.toString()    +   ".*   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
245	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ".* "  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ".* "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ".* "  +  c;	  return    sb.toString()    +   ".*   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
246	[BUG]  [BUGGY]  return  sb.toString()  + ".* ",  c;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".* ",  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".* ",  c;	  return    sb.toString()    +   ".*   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
247	[BUG]  [BUGGY]  sb.append(SHORT_Escape.toString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(SHORT_Escape.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(SHORT_Escape.toString());	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
248	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote);  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote);  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote);  return  sb.toString();	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
249	[BUG]  [BUGGY]  return  SHORT_Escape.toString()  +  quote;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  SHORT_Escape.toString()  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  SHORT_Escape.toString()  +  quote;	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
250	[BUG]  [BUGGY]  return  c.toString()  + "= "  +  sb;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + "= "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + "= "  +  sb;	  return    sb.toString()    +   "=   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
251	[BUG]  [BUGGY]  return  sb.toString()  + "=' "  +  c;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "=' "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "=' "  +  c;	  return    sb.toString()    +   "=   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
252	[BUG]  [BUGGY]  return  sb.toString()  + "/ "  +  quote;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "/ "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "/ "  +  quote;	  return    sb.toString()    +   "/   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
253	[BUG]  [BUGGY]  return  c.toString()  + "/ "  +  sb;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + "/ "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + "/ "  +  sb;	  return    sb.toString()    +   "/   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
254	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + "/ "  +  c;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + "/ "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + "/ "  +  c;	  return    sb.toString()    +   "/   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
255	[BUG]  [BUGGY]  return  sb.toString()  + "/ ",  c;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "/ ",  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "/ ",  c;	  return    sb.toString()    +   "/   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
256	[BUG]  [BUGGY]  return  sb.toString()  + "/ ".concat(c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "/ ".concat(c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "/ ".concat(c);	  return    sb.toString()    +   "/   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
257	[BUG]  [BUGGY]  return  sb.toString()  + ",/ "  +  quote;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",/ "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",/ "  +  quote;	  return    sb.toString()    +   "/   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
258	[BUG]  [BUGGY]  return  sb.toString()  + "/. "  +  quote;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "/. "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "/. "  +  quote;	  return    sb.toString()    +   "/   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
259	[BUG]  [BUGGY]  return  sb.toString()  + ",null ",  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null ",  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null ",  quote);	  return    sb.toString()    +   ",null   ";    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
260	[BUG]  [BUGGY]  return  sbuf.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sbuf.toString()  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sbuf.toString()  +  1;	  return    strEscape.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
261	[BUG]  [BUGGY]  return  backslashEscape.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  backslashEscape.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  backslashEscape.toString();	  return    strEscape.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
262	[BUG]  [BUGGY]  return  c.toString()  + ",' "  +  sb);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + ",' "  +  sb);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + ",' "  +  sb);	  return    sb.toString()    +   ",'   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
263	[BUG]  [BUGGY]  return  sb.toString()  + "',' "  +  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "',' "  +  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "',' "  +  quote);	  return    sb.toString()    +   ",'   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
264	[BUG]  [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ",   ");  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ",   ");  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    sb.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
265	[BUG]  [BUGGY]  if(c  ==  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c  ==  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ",   ");  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c  ==  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ",   ");  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    sb.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
266	[BUG]  [BUGGY]  if(c  ==  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c  ==  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ",   ");  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c  ==  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ",   ");  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    sb.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
267	[BUG]  [BUGGY]  return  sb.toString()  + "= "  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "= "  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "= "  +  backslashEscape;	  return    sb.toString()    +   "=   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
268	[BUG]  [BUGGY]  return  sb.toString()  + "= "  +  quote  +  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "= "  +  quote  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "= "  +  quote  +  1;	  return    sb.toString()    +   "=   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
269	[BUG]  [BUGGY]  return  sb.toString()  + "=' "  +  quote;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "=' "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "=' "  +  quote;	  return    sb.toString()    +   "=   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
270	[BUG]  [BUGGY]  return  sb.toString()  + "= "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "= "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "= "  +  doublequoteEscape;	  return    sb.toString()    +   "=   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
271	[BUG]  [BUGGY]  return  sb.toString()  + "= "  +  quoteEscape;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "= "  +  quoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "= "  +  quoteEscape;	  return    sb.toString()    +   "=   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
272	[BUG]  [BUGGY]  return  sb.toString()  + ",n ",  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",n ",  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",n ",  quote;	  return    sb.toString()    +   ",   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
273	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ", "  +  quote;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ", "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ", "  +  quote;	  return    sb.toString()    +   ",   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
274	[BUG]  [BUGGY]  sb.append(backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(backslashEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(backslashEscape);	  sb.append(doublequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
275	[BUG]  [BUGGY]  sb.append(backslashEscape,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(backslashEscape,  doublequoteEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(backslashEscape,  doublequoteEscape);	  sb.append(doublequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
276	[BUG]  [BUGGY]  sb.append(BackslashEscape.charAt(backslashEscape));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(BackslashEscape.charAt(backslashEscape));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(BackslashEscape.charAt(backslashEscape));	  sb.append(doublequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
277	[BUG]  [BUGGY]  sb.append(BackslashEscape.START_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(BackslashEscape.START_SCRIPT);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(BackslashEscape.START_SCRIPT);	  sb.append(doublequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
278	[BUG]  [BUGGY]  sb.append(BackslashEscape.END_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(BackslashEscape.END_SCRIPT);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(BackslashEscape.END_SCRIPT);	  sb.append(doublequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
279	[BUG]  [BUGGY]  return  sb.toString()  + ",  backslashEscape: "  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  backslashEscape: "  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  backslashEscape: "  +  this.backslashEscape;	  return    sb.toString()    +   ":   "    +    this.backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
280	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  this.backslashEscape;	  return    sb.toString()    +   ":   "    +    this.backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
281	[BUG]  [BUGGY]  return  this.backslashEscape  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  this.backslashEscape  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  this.backslashEscape  +  sb.toString();	  return    sb.toString()    +   ":   "    +    this.backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
282	[BUG]  [BUGGY]  return  this.backslashEscape  + ": "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  this.backslashEscape  + ": "  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  this.backslashEscape  + ": "  +  sb.toString();	  return    sb.toString()    +   ":   "    +    this.backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
283	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  AppendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  AppendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  c.toString();  }  else  {  AppendHexJavaScriptRepresentation(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
284	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
285	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
286	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  4);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  4);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  4);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
287	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb  =  new  StringBuilder(s.length()  +  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb  =  new  StringBuilder(s.length()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
288	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
289	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ",: "  +  quote;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ",: "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ",: "  +  quote;	  return    sb.toString()    +   ",:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
290	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  quote  +  1;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  quote  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  quote  +  1;	  return    sb.toString()    +   ",:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
291	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  quote  + "n ";  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  quote  + "n ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  quote  + "n ";	  return    sb.toString()    +   ",:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
292	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  quote  + ";  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  quote  + ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  quote  + ";	  return    sb.toString()    +   ",:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
293	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",n "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",n "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",n "  +  c;	  return    sb.toString()    +    quote    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
294	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",, "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",, "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",, "  +  c;	  return    sb.toString()    +    quote    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
295	[BUG]  [BUGGY]  return  backslashEscape.toString()  +  sb;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  backslashEscape.toString()  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  backslashEscape.toString()  +  sb;	  return    sb.toString()    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
296	[BUG]  [BUGGY]  return  sb.toString()  *  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  *  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  *  backslashEscape;	  return    sb.toString()    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
297	[BUG]  [BUGGY]  return  backslashEscape.toString()  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  backslashEscape.toString()  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  backslashEscape.toString()  +  sb.toString();	  return    sb.toString()    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
298	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( ",n ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( ",n ");	  sb.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
299	[BUG]  [BUGGY]  sb.append( ",' ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( ",' ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( ",' ");	  sb.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
300	[BUG]  [BUGGY]  return  sb.toString()  + ",# ";  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",# ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",# ";	  return    sb.toString()    +   "#   ";    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
301	[BUG]  [BUGGY]  return  sb.toString()  + "# ",  quote;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "# ",  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "# ",  quote;	  return    sb.toString()    +   "#   ";    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
302	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ "# ";  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ "# ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ "# ";	  return    sb.toString()    +   "#   ";    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
303	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + "# ";  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + "# ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + "# ";	  return    sb.toString()    +   "#   ";    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
304	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  +  '#';  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  +  '#';  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  +  '#';	  return    sb.toString()    +   "#   ";    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
305	[BUG]  [BUGGY]  return  sb.toString()  + ".# ";  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".# ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".# ";	  return    sb.toString()    +   "#   ";    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
306	[BUG]  [BUGGY]  if(c  ==  null)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c  ==  null)  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c  ==  null)  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
307	[BUG]  [BUGGY]  if(c!=  null  ||  c.length()  ==  0)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  ||  c.length()  ==  0)  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  ||  c.length()  ==  0)  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
308	[BUG]  [BUGGY]  ||(c!=  null  &&  c.length()  >  0))  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  ||(c!=  null  &&  c.length()  >  0))  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	||(c!=  null  &&  c.length()  >  0))  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
309	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString()  +  quote;  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  c.toString()  +  quote;  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  c.toString()  +  quote;  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
310	[BUG]  [BUGGY]  if(c!=  null)  {  return  s.toString();  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  s.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  s.toString();  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
311	[BUG]  [BUGGY]  sb.append(strEscape.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(strEscape.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(strEscape.toString());	  return    strEscape.toString();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
312	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape.toString());	  return    strEscape.toString();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
313	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);  return  sb.toString();	  return    strEscape.toString();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
314	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ": "  +  sb;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ": "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ": "  +  sb;	  return    c.toString()    +   ":   "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
315	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString());  return  sb.toString()  + ": "  +  quote;	  return    c.toString()    +   ":   "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
316	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ": "  +  sb;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ": "  +  sb;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(c.toString()  +  quote);  return  sb.toString()  + ": "  +  sb;	  return    c.toString()    +   ":   "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
317	[BUG]  [BUGGY]  return  sb.toString()  + ".: "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".: "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".: "  +  c;	  return    c.toString()    +   ":   "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
318	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + ";n ";  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quote  + ";n ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote  + ";n ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
319	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + ",  backslashEscape= ";  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quote  + ",  backslashEscape= ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote  + ",  backslashEscape= ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
320	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + "= ";  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quote  + "= ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote  + "= ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
321	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + "   ";  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quote  + "   ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote  + "   ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
322	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + ",  backslashEscape   ";  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quote  + ",  backslashEscape   ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote  + ",  backslashEscape   ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
323	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + ", ";  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quote  + ", ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote  + ", ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
324	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + ",null ";  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quote  + ",null ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote  + ",null ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
325	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  doublequoteEscape  + "n   ";  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  doublequoteEscape  + "n   ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  doublequoteEscape  + "n   ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
326	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + ";   ";  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quote  + ";   ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote  + ";   ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
327	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  doublequoteEscape  +   "null ";  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  doublequoteEscape  +   "null ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  doublequoteEscape  +   "null ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
328	[BUG]  [BUGGY]  if(c  ==  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c  ==  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c  ==  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
329	[BUG]  [BUGGY]  if(c  ==  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c  ==  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c  ==  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
330	[BUG]  [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  AppendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  AppendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  sb.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  AppendHexJavaScriptRepresentation(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
331	[BUG]  [BUGGY]  return  this.singlequoteEscape.toString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  this.singlequoteEscape.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  this.singlequoteEscape.toString();	  return    strEscape.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
332	[BUG]  [BUGGY]  return  sbuf.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sbuf.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sbuf.toString();	  return    strEscape.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
333	[BUG]  [BUGGY]  return  s.toString();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  s.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  s.toString();	  return    strEscape.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
334	[BUG]  [BUGGY]  sb.append(',').append(charAt(i));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(',').append(charAt(i));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(',').append(charAt(i));	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
335	[BUG]  [BUGGY]  sb.append(',').append(doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(',').append(doublequoteEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(',').append(doublequoteEscape);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
336	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  doublequoteEscape;	  return    sb.toString()    +   ":   "    +    quoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
337	[BUG]  [BUGGY]  sb.append( ";null ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( ";null ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( ";null ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
338	[BUG]  [BUGGY]  sb.append( ";n: ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( ";n: ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( ";n: ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
339	[BUG]  [BUGGY]  return  sb.toString()  + "/. "  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "/. "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "/. "  +  c;	  return    sb.toString()    +   "/   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
340	[BUG]  [BUGGY]  return  sbe.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sbe.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sbe.toString();	  return    sb.toString()    +    2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
341	[BUG]  [BUGGY]  return  TextUtilities.toString(text.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  TextUtilities.toString(text.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  TextUtilities.toString(text.toString());	  return    text.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
342	[BUG]  [BUGGY]  return  TextUtilities.toString(text,  sb.toString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  TextUtilities.toString(text,  sb.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  TextUtilities.toString(text,  sb.toString());	  return    text.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
343	[BUG]  [BUGGY]  return  TextUtilities.toString(text.toString(),  sb);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  TextUtilities.toString(text.toString(),  sb);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  TextUtilities.toString(text.toString(),  sb);	  return    text.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
344	[BUG]  [BUGGY]  return  TextUtilities.toString(sb,  text.toString());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  TextUtilities.toString(sb,  text.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  TextUtilities.toString(sb,  text.toString());	  return    text.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
345	[BUG]  [BUGGY]  return  sb.toString()  + "n "  +  quote;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "n "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "n "  +  quote;	  return    sb.toString()    +   "       "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
346	[BUG]  [BUGGY]  return  sb.toString()  + ",navigation "  +  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",navigation "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",navigation "  +  quote;	  return    sb.toString()    +   ",n   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
347	[BUG]  [BUGGY]  return  sb.toString()  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  this.backslashEscape;	  return    sb.toString()    +    quoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
348	[BUG]  [BUGGY]  return  sb.toString()  +  shortquoteEscape;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  shortquoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  shortquoteEscape;	  return    sb.toString()    +    quoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
349	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()),  s.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()),  s.length());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()),  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
350	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(1,  s.length()));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(1,  s.length()));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(1,  s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
351	[BUG]  [BUGGY]  sb.append(c.toCharArray());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(c.toCharArray());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c.toCharArray());	  sb.append(c.toString());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
352	[BUG]  [BUGGY]  sb.append(c.toString()  + ";n ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(c.toString()  + ";n ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c.toString()  + ";n ");	  sb.append(c.toString());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
353	[BUG]  [BUGGY]  return  sb.toString()  + ",   "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",   "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",   "  +  doublequoteEscape;	  return    sb.toString()    +   ",   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
354	[BUG]  [BUGGY]  return  sb.toString()  + ",   "  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",   "  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",   "  +  backslashEscape;	  return    sb.toString()    +   ",   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
355	[BUG]  [BUGGY]  c  =  c.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  c  =  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	c  =  c.toString();	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
356	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString()  + "n ";  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  c.toString()  + "n ";  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  c.toString()  + "n ";  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
357	[BUG]  [BUGGY]  return  s.toString()  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  s.toString()  + ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  s.toString()  + ": "  +  c;	  return    c.toString()    +   ":   "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
358	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  c;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  c;	  return    c.toString()    +   ":   "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
359	[BUG]  [BUGGY]  return  c.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + ": "  +  quote;	  return    c.toString()    +   ":   "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
360	[BUG]  [BUGGY]  return  sb.toString()  + ".: "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".: "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".: "  +  doublequoteEscape;	  return    sb.toString()    +   ".:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
361	[BUG]  [BUGGY]  return  sb.toString()  + ".: "  +  doublequote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".: "  +  doublequote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".: "  +  doublequote;	  return    sb.toString()    +   ".:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
362	[BUG]  [BUGGY]  return  sb.toString()  + "( "  +  c  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "( "  +  c  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "( "  +  c  +  quote;	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
363	[BUG]  [BUGGY]  return  sb.toString()  + "( "  +  c  +  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "( "  +  c  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "( "  +  c  +  1;	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
364	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  return  strEscape.toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  return  strEscape.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length());  return  strEscape.toString();	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
365	[BUG]  [BUGGY]  return  sb.toString()  + "= "  +  doublequote;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "= "  +  doublequote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "= "  +  doublequote;	  return    sb.toString()    +   "=   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
366	[BUG]  [BUGGY]  return  sb.toString()  + "= " "  +  quote;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "= " "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "= " "  +  quote;	  return    sb.toString()    +   "=   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
367	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString())+ ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString())+ ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape.toString())+ ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
368	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": "  +  doublequoteEscape;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
369	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString());  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape.toString());  return  sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
370	[BUG]  [BUGGY]  sb  =  new  StringBuilder(strEscape.toString());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb  =  new  StringBuilder(strEscape.toString());  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb  =  new  StringBuilder(strEscape.toString());  return  sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
371	[BUG]  [BUGGY]  sb  =  new  StringBuilder(singlequoteEscape.toString());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb  =  new  StringBuilder(singlequoteEscape.toString());  return  sb.toString()  + ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb  =  new  StringBuilder(singlequoteEscape.toString());  return  sb.toString()  + ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
372	[BUG]  [BUGGY]  if(singlequoteEscape!=  null)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(singlequoteEscape!=  null)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(singlequoteEscape!=  null)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
373	[BUG]  [BUGGY]  if(sb!=  null)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sb!=  null)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sb!=  null)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
374	[BUG]  [BUGGY]  if(c!=  null)  {  return  s.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  s.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  s.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
375	[BUG]  [BUGGY]  return  sb.toString()  +  quote  *  2  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  *  2  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  *  2  +  backslashEscape;	  return    sb.toString()    +    quote    *    2;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
376	[BUG]  [BUGGY]  return  sb.toString()  +  quote  *  2  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  *  2  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  *  2  +  this.backslashEscape;	  return    sb.toString()    +    quote    *    2;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
377	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.length());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.length());	  return    sb.getString();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
378	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString());	  return    sb.getString();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
379	[BUG]  [BUGGY]  return  sb.substring(0,  sb.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.substring(0,  sb.length()  -  3);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.substring(0,  sb.length()  -  3);	  return    sb.getString();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
380	[BUG]  [BUGGY]  return  sb.toString()  + "#n ";  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "#n ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "#n ";	  return    sb.toString()    +   "#   ";    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
381	[BUG]  [BUGGY]  return  sb.toString()  + "# ",  c);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "# ",  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "# ",  c);	  return    sb.toString()    +   "#   ";    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
382	[BUG]  [BUGGY]  return  sb.toString()  + "# ",  c;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "# ",  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "# ",  c;	  return    sb.toString()    +   "#   ";    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
383	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sbu.toString());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sbu.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sbu.toString());	  return    sbu.toString();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
384	[BUG]  [BUGGY]  return  sbu.toString()  + "n ";  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sbu.toString()  + "n ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sbu.toString()  + "n ";	  return    sbu.toString();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
385	[BUG]  [BUGGY]  return  SHORT_Escape.toString()  +  sb.charAt(sb.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  SHORT_Escape.toString()  +  sb.charAt(sb.length()  -  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  SHORT_Escape.toString()  +  sb.charAt(sb.length()  -  1);	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
386	[BUG]  [BUGGY]  return  SHORT_Escape.toString()  +  sb.substring(0,  sb.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  SHORT_Escape.toString()  +  sb.substring(0,  sb.length()  -  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  SHORT_Escape.toString()  +  sb.substring(0,  sb.length()  -  1);	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
387	[BUG]  [BUGGY]  return  SHORT_Escape.toString(sb);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  SHORT_Escape.toString(sb);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  SHORT_Escape.toString(sb);	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
388	[BUG]  [BUGGY]  return  SHORT_Escape.toString()  +  sb.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  SHORT_Escape.toString()  +  sb.charAt(0);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  SHORT_Escape.toString()  +  sb.charAt(0);	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
389	[BUG]  [BUGGY]  return  sb.toString()  + ",null, "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null, "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null, "  +  c;	  return    sb.toString()    +   ",n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
390	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
391	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendHexJavaScriptRepresentation(sb,  c,  HEAD_OF_EXPR);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
392	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  2);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  2);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendHexJavaScriptRepresentation(sb,  c,  2);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
393	[BUG]  [BUGGY]  return  sb.toString()  + ".   "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".   "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".   "  +  doublequoteEscape;	  return    sb.toString()    +   ".       "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
394	[BUG]  [BUGGY]  return  sb.toString()  + ",',',  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",',',  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",',',  +  c;	  return    sb.toString()    +   ",   ",    +    c;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
395	[BUG]  [BUGGY]  return  c.toString()  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  doublequoteEscape;	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
396	[BUG]  [BUGGY]  return  c.toString()  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  sb.toString();	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
397	[BUG]  [BUGGY]  return  c.toString()  +  quoteEscape;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  quoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  quoteEscape;	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
398	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",' "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",' "  +  c.toString();	  return    c.toString()    +   ",   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
399	[BUG]  [BUGGY]  return  s.toString()  + ": "  +  c.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  s.toString()  + ": "  +  c.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  s.toString()  + ": "  +  c.toString();	  return    c.toString()    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
400	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape.toString()  +  quote);  return  sb.toString()  + ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString()    +    quote);    return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
401	[BUG]  [BUGGY]  return  escape.toString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  escape.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  escape.toString();	  return    c.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
402	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString());	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
403	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  3);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  3);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  3);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
404	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString())+ ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString())+ ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape.toString())+ ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
405	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + "'.   "  +  c;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + "'.   "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + "'.   "  +  c;	  return    sb.toString()    +    quote    +   ".       "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
406	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  this.doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  this.doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  this.doublequoteEscape;	  return    sb.toString()    +   ":   "    +    doublequote;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
407	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  this.doublequote;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  this.doublequote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  this.doublequote;	  return    sb.toString()    +   ":   "    +    doublequote;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
408	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ": "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ": "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ": "  +  doublequoteEscape;	  return    sb.toString()    +    quote    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
409	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ": "  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ": "  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ": "  +  backslashEscape;	  return    sb.toString()    +    quote    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
410	[BUG]  [BUGGY]  return  sb.toString()  + ",   "  +  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",   "  +  doublequoteEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",   "  +  doublequoteEscape);	  return    sb.toString()    +   ",   "    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
411	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
412	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1)+  1);  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1)+  1);  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1)+  1);  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
413	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ";n ";  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ";n ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ";n ";	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
414	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()).append( ";n ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()).append( ";n ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString()).append( ";n ");	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
415	[BUG]  [BUGGY]  return  sb.toString()  + ".: ";  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".: ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".: ";	  return    sb.toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
416	[BUG]  [BUGGY]  return  sb.toString()  + ": "+suffixEscape;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "+suffixEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "+suffixEscape;	  return    sb.toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
417	[BUG]  [BUGGY]  return  sb.toString()  + ",null, "  +  c);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",null, "  +  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",null, "  +  c);	  return    sb.toString()    +   ",n   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
418	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ".* "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ".* "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ".* "  +  c;	  return    sb.toString()    +   ".*   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
419	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  doublequote;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  doublequote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  doublequote;	  return    sb.toString()    +   ",:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
420	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  singlequoteEscape;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",: "  +  singlequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",: "  +  singlequoteEscape;	  return    sb.toString()    +   ",:   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
421	[BUG]  [BUGGY]  sb.append( "[ ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "[ ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "[ ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
422	[BUG]  [BUGGY]  sb.append( "mv.reportUnsupportedOperation() ");  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "mv.reportUnsupportedOperation() ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "mv.reportUnsupportedOperation() ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
423	[BUG]  [BUGGY]  sb.append( ", ",  c);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( ", ",  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( ", ",  c);	  sb.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
424	[BUG]  [BUGGY]  return  sb.toString()  +  doublequoteEscape  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  doublequoteEscape  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  doublequoteEscape  +  backslashEscape;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
425	[BUG]  [BUGGY]  return  sb.toString()  +  singlequoteEscape  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  singlequoteEscape  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  singlequoteEscape  +  backslashEscape;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
426	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  singlequoteEscape;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +  singlequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +  singlequoteEscape;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
427	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  DoublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +  DoublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +  DoublequoteEscape;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
428	[BUG]  [BUGGY]  sb.append(BackslashEscape.charAt(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(BackslashEscape.charAt(singlequoteEscape));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(BackslashEscape.charAt(singlequoteEscape));	  sb.append(doublequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
429	[BUG]  [BUGGY]  sb.append(booleanquoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(booleanquoteEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(booleanquoteEscape);	  sb.append(doublequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
430	[BUG]  [BUGGY]  sb.append(BackslashEscape.hashCode(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(BackslashEscape.hashCode(singlequoteEscape));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(BackslashEscape.hashCode(singlequoteEscape));	  sb.append(doublequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
431	[BUG]  [BUGGY]  sb.append('?');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append('?');  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append('?');	  sb.append('ufffd');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
432	[BUG]  [BUGGY]  sb.append( "] "  +  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "] "  +  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "] "  +  quote);	  sb.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
433	[BUG]  [BUGGY]  sb.append( "  }   ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "  }   ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "  }   ");	  sb.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
434	[BUG]  [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null)  {  return  sb.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null)  {  return  sb.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
435	[BUG]  [BUGGY]  if(c  ==  null)  {  return  c.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c  ==  null)  {  return  c.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c  ==  null)  {  return  c.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
436	[BUG]  [BUGGY]  return  sb.toString()  + ",';  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",';  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",';	  return    sb.toString()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
437	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ".null "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ".null "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ".null "  +  c;	  return    sb.toString()    +   ".n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
438	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ".no "  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ".no "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ".no "  +  c;	  return    sb.toString()    +   ".n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
439	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  sb);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.appendHexJavaScriptRepresentation(c,  sb);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.appendHexJavaScriptRepresentation(c,  sb);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
440	[BUG]  [BUGGY]  sb.appendHexJavaScriptRepresentation(c);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.appendHexJavaScriptRepresentation(c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.appendHexJavaScriptRepresentation(c);	  appendHexJavaScriptRepresentation(c,    sb);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
441	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ",null ";  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ",null ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ",null ";	  return    sb.toString()    +   ",null   ";    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
442	[BUG]  [BUGGY]  return  sb.toString()  + ".. "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".. "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".. "  +  c;	  return    c.toString()    +   ".       "    +    sb;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
443	[BUG]  [BUGGY]  return  strEscape.toString()  +  sb.charAt(sb.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  strEscape.toString()  +  sb.charAt(sb.length()  -  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  strEscape.toString()  +  sb.charAt(sb.length()  -  1);	  return    strEscape.toString();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
444	[BUG]  [BUGGY]  sb.append(singlequoteEscape.toString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(singlequoteEscape.toString());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(singlequoteEscape.toString());	  return    strEscape.toString();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
445	[BUG]  [BUGGY]  return  strEscape.toString()  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  strEscape.toString()  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  strEscape.toString()  +  sb.toString();	  return    strEscape.toString();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
446	[BUG]  [BUGGY]  sb.append(singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(singlequoteEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(singlequoteEscape);	  return    strEscape.toString();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
447	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.charAt(0));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.charAt(0));  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.charAt(0));  return  sb.toString();	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
448	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length()  +  1);  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length()  +  1);  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(str.length()  +  1);  return  sb.toString();	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
449	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.length());  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.length());  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.length());  return  sb.toString();	  return    SHORT_Escape.toString();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
450	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ": "  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ": "  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ": "  +  this.backslashEscape;	  return    sb.toString()    +    quote    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
451	[BUG]  [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  '/')  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  '/')  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.charAt(c.length()  -  1)!=  '/')  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
452	[BUG]  [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.length()  >  0)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
453	[BUG]  [BUGGY]  if(c!=  END_SCRIPT)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  END_SCRIPT)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  END_SCRIPT)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
454	[BUG]  [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)!=  '/')  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)!=  '/')  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)!=  '/')  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
455	[BUG]  [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  'n')  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  'n')  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.charAt(c.length()  -  1)!=  'n')  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendSinglequoteEscape(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
456	[BUG]  [BUGGY]  return  sb  + ": "  +  quote.toString();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb  + ": "  +  quote.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb  + ": "  +  quote.toString();	  return    c    +   ":   "    +    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
457	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + "., "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + "., "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + "., "  +  c;	  return    sb.toString()    +    quote    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
458	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(separator.toString())+ ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(separator.toString())+ ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(separator.toString())+ ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
459	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(suffixEscape.toString())+ ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(suffixEscape.toString())+ ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(suffixEscape.toString())+ ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
460	[BUG]  [BUGGY]  sb.append(c.charAt(0));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(c.charAt(0));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c.charAt(0));	  sb.append(c.toString());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
461	[BUG]  [BUGGY]  sb.append( ": ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( ": ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( ": ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
462	[BUG]  [BUGGY]  sb.append(doublequoteEscape,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(doublequoteEscape,  backslashEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(doublequoteEscape,  backslashEscape);	  sb.append(doublequoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
463	[BUG]  [BUGGY]  return  sb.toString(),  c  *  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString(),  c  *  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString(),  c  *  1;	  return    sb.toString()    *    1;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
464	[BUG]  [BUGGY]  if(sb.length()  ==  0)  {  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sb.length()  ==  0)  {  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sb.length()  ==  0)  {  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  }	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
465	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  }	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
466	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  1));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  1));  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  1));  return  sb.toString();	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
467	[BUG]  [BUGGY]  return  sb.toString()  + ".xml "  +  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ".xml "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ".xml "  +  quote;	  return    sb.toString()    +   ".       "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
468	[BUG]  [BUGGY]  if(c  ==  null)  {  if(c!=  null)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c  ==  null)  {  if(c!=  null)  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c  ==  null)  {  if(c!=  null)  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    sb.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
469	[BUG]  [BUGGY]  return  sb.toString()  +  quotes  +  4;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quotes  +  4;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quotes  +  4;	  return    sb.toString()    +    quote    +    4;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
470	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1);  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1);  return  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1);  return  sb.toString();	  return    b.toString();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
471	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1,  s.length()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1,  s.length()));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1,  s.length()));	  return    b.toString();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
472	[BUG]  [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.length()  >  0)  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
473	[BUG]  [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  '/')  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  '/')  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.charAt(c.length()  -  1)!=  '/')  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
474	[BUG]  [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  '0')  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  '0')  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.charAt(c.length()  -  1)!=  '0')  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
475	[BUG]  [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  'n')  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.charAt(c.length()  -  1)!=  'n')  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.charAt(c.length()  -  1)!=  'n')  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
476	[BUG]  [BUGGY]  if(c!=  null  &&  c.endsWith( ".java "))  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.endsWith( ".java "))  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.endsWith( ".java "))  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
477	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",' "  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",' "  +  this.backslashEscape;	  return    sb.toString()    +   ",'   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
478	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + "., "  +  c);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + "., "  +  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + "., "  +  c);	  return    sb.toString()    +    quote    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
479	[BUG]  [BUGGY]  return  sb.toString()  +  doublequoteEscape  +  2;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  doublequoteEscape  +  2;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  doublequoteEscape  +  2;	  return    sb.toString()    +    quote    +    2;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
480	[BUG]  [BUGGY]  return  sb.toString()  +  quoteEscape  +  2;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quoteEscape  +  2;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quoteEscape  +  2;	  return    sb.toString()    +    quote    +    2;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
481	[BUG]  [BUGGY]  return  this.singlequoteEscape.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  this.singlequoteEscape.toString()  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  this.singlequoteEscape.toString()  +  1;	  return    strEscape.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
482	[BUG]  [BUGGY]  return  backslashEscape.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  backslashEscape.toString()  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  backslashEscape.toString()  +  1;	  return    strEscape.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
483	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +   ", "  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  +   ", "  +  backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  +   ", "  +  backslashEscape;	  return    sb.toString()    +    quote    +    backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
484	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ".html ";  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ".html ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ".html ";	  return    sb.toString()    +   ".html   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
485	[BUG]  [BUGGY]  return  sb.toString()  + "; ";  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "; ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "; ";	  return    sb.toString()    +   "       ";    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
486	[BUG]  [BUGGY]  return  sb.toString()  + " ",  c);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + " ",  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + " ",  c);	  return    sb.toString()    +   "       ";    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
487	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(separator.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(separator.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(separator.toString()  +  quote);  return  sb.toString()  + ": "  +  c;	  StringBuilder    sb    =    new    StringBuilder(sb.toString()    +    quote);    return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
488	[BUG]  [BUGGY]  return  sb.toString()  + ",no "  +  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",no "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",no "  +  quote;	  return    sb.toString()    +   ",n   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
489	[BUG]  [BUGGY]  return  sb.toString()  + ",negative "  +  quote;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",negative "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",negative "  +  quote;	  return    sb.toString()    +   ",n   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
490	[BUG]  [BUGGY]  return  sb.toString()  + ",  doublequote= "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  doublequote= "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  doublequote= "  +  quote;	  return    sb.toString()    +   ",n   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
491	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length());  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(str.length());	  return    sbu.toString();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
492	[BUG]  [BUGGY]  return  sb.toString()  + ",no "  +  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",no "  +  quote);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",no "  +  quote);	  return    sb.toString()    +   ",n   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
493	[BUG]  [BUGGY]  return  sb.toString()  + ",  backslashEscape: "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  backslashEscape: "  +  doublequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  backslashEscape: "  +  doublequoteEscape;	  return    sb.toString()    +   ":   "    +    doublequoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
494	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  sb.toString();	  return    sb.toString()    +   ":   "    +    doublequoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
495	[BUG]  [BUGGY]  return  c.charAt(sb.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.charAt(sb.length()  -  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.charAt(sb.length()  -  1);	  return    sb.getString();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
496	[BUG]  [BUGGY]  return  sb.toString()  + ", "  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ", "  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ", "  +  this.backslashEscape;	  return    sb.toString()    +   ",   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
497	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString();  }	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
498	[BUG]  [BUGGY]  if(sb.length()  ==  0)  {  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sb.length()  ==  0)  {  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sb.length()  ==  0)  {  StringBuilder  sb  =  new  StringBuilder(s.length());  return  sb.toString();  }	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
499	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  return  sb.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  return  sb.toString();  }	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    return    sb.toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
500	[BUG]  [BUGGY]  sb.append(',').append(Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(',').append(Character.toLowerCase(c));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(',').append(Character.toLowerCase(c));	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
501	[BUG]  [BUGGY]  sb.append(',').append(Character.toUpperCase(c));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append(',').append(Character.toUpperCase(c));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(',').append(Character.toUpperCase(c));	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
502	[BUG]  [BUGGY]  return  char.toString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  char.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  char.toString();	  return    c.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
503	[BUG]  [BUGGY]  return  ch.toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  ch.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  ch.toString();	  return    c.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
504	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  quotes;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",' "  +  quotes;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",' "  +  quotes;	  return    sb.toString()    +   ",'   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
505	[BUG]  [BUGGY]  return  sb.toString()  +  quoteEscape  +  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quoteEscape  +  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quoteEscape  +  1;	  return    sb.toString()    +    quote    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
506	[BUG]  [BUGGY]  return  sb.toString()  +  quote  *  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  *  1;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  *  1;	  return    sb.toString()    +    quote    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
507	[BUG]  [BUGGY]  return  sb.toString()  + ", "  +  this.backslashEscape);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ", "  +  this.backslashEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ", "  +  this.backslashEscape);	  return    sb.toString()    +   ",   "    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
508	[BUG]  [BUGGY]  null  =  sb.toString();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  null  =  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	null  =  sb.toString();	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
509	[BUG]  [BUGGY]  n  =  sb.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  n  =  sb.length();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	n  =  sb.length();	  return    sb.toString()    +   ";n   ";    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
510	[BUG]  [BUGGY]  sb.append( "; ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  sb.append( "; ");  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append( "; ");	  sb.append(   ";n   ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
511	[BUG]  [BUGGY]  return  sb.toString()  + ",  backslashescape: "  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  backslashescape: "  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  backslashescape: "  +  this.backslashEscape;	  return    sb.toString()    +   ":   "    +    this.backslashEscape;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
512	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  2));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  2));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  2));	  StringBuilder    sb    =    new    StringBuilder(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
513	[BUG]  [BUGGY]  return  sb.toString()  *  quote  *  2;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  *  quote  *  2;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  *  quote  *  2;	  return    sb.toString()    +    quote    *    2;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
514	[BUG]  [BUGGY]  return  c.toString()  + "( "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  + "( "  +  sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  + "( "  +  sb.toString();	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
515	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + "( "  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + "( "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + "( "  +  c;	  return    sb.toString()    +   "(   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
516	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + "= "  +  c;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + "= "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + "= "  +  c;	  return    sb.toString()    +   "=   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
517	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + "   "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + "   "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + "   "  +  c;	  return    sb.toString()    +   "n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
518	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(separator.toString())+ ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(separator.toString())+ ": "  +  quote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	StringBuilder  sb  =  new  StringBuilder(separator.toString())+ ": "  +  quote;	  StringBuilder    sb    =    new    StringBuilder(sb.toString())+   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
519	[BUG]  [BUGGY]  return  c.toString()  +  sb.substring(0,  sb.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  sb.substring(0,  sb.length()  -  1);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  sb.substring(0,  sb.length()  -  1);	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
520	[BUG]  [BUGGY]  return  c.toString()  +  sb.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  c.toString()  +  sb.toLowerCase();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString()  +  sb.toLowerCase();	  return    c.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
521	[BUG]  [BUGGY]  return  this.sb.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  this.sb.toString();  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  this.sb.toString();	  return    sb.toString()    +    2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
522	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ": "  +  quote;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ": "  +  quote;  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ": "  +  quote;  }	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
523	[BUG]  [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  +  quote;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  +  quote;  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(sb.length()  >  0)  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  +  quote;  }	  StringBuilder    sb    =    new    StringBuilder(sb.toString());    return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
524	[BUG]  [BUGGY]  return  sb.toString()  + ",' ";  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",' ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",' ";	  return    sb.toString()    +   ",   ";    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
525	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	appendHexJavaScriptRepresentation(sb,  c,  doublequoteEscape);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
526	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  c  + "n   ";  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  c  + "n   ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  c  + "n   ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
527	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + ";  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": "  +  quote  + ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote  + ";	  return    sb.toString()    +   ":   "    +    quote    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
528	[BUG]  [BUGGY]  return  sb.toString()  + ",negative "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",negative "  +  c;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",negative "  +  c;	  return    sb.toString()    +   ",n   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
529	[BUG]  [BUGGY]  return  sb.toString()  + ",  backslashEscape: "  +  singlequoteEscape;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  backslashEscape: "  +  singlequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  backslashEscape: "  +  singlequoteEscape;	  return    sb.toString()    +   ":   "    +    singlequoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
530	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ": "  +  singlequoteEscape;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ": "  +  singlequoteEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ": "  +  singlequoteEscape;	  return    sb.toString()    +   ":   "    +    singlequoteEscape;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
531	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r')  {  if(c!=  null)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  'n'  ||  c!=  'r')  {  if(c!=  null)  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  'n'  ||  c!=  'r')  {  if(c!=  null)  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
532	[BUG]  [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)!=  'n')  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)!=  'n')  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)!=  'n')  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
533	[BUG]  [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)  ==  '/')  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)  ==  '/')  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)  ==  '/')  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
534	[BUG]  [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)!=  ':')  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)!=  ':')  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  null  &&  c.length()  >  0)  {  if(c.charAt(c.length()  -  1)!=  ':')  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
535	[BUG]  [BUGGY]  return  sb.toString()  + ",  quoted: ";  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ",  quoted: ";  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ",  quoted: ";	  return    sb.toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
536	[BUG]  [BUGGY]  return  sb.toString()  + ": ",  c);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + ": ",  c);  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": ",  c);	  return    sb.toString()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
537	[BUG]  [BUGGY]  return  TextUtilities.toString(text.substring(0,  sb.length()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  TextUtilities.toString(text.substring(0,  sb.length()));  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  TextUtilities.toString(text.substring(0,  sb.length()));	  return    text.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
538	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ": "  +  doublequote;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  +  quote  + ": "  +  doublequote;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote  + ": "  +  doublequote;	  return    sb.toString()    +   ":   "    +    doublequote;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
539	[BUG]  [BUGGY]  return  sb.toString()  + "= "  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  return  sb.toString()  + "= "  +  this.backslashEscape;  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "= "  +  this.backslashEscape;	  return    sb.toString()    +   "=   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
540	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(c!=  null)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(c!=  null)  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  'n'  ||  c  ==  'r')  {  if(c!=  null)  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
541	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  if(c!=  null)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  if(c!=  null)  {  return  c.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  if(c!=  null)  {  return  c.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
542	[BUG]  [BUGGY]  if(c!=  'n'  ||  c!=  'r')  {  if(c!=  null)  {  return  sb.toString();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);      [BUGGY]  if(c!=  'n'  ||  c!=  'r')  {  if(c!=  null)  {  return  sb.toString();  }  [BUGGY]      }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	if(c!=  'n'  ||  c!=  'r')  {  if(c!=  null)  {  return  sb.toString();  }	  if(c!=    null)    {    return    c.toString();    }    else    {    StringBuilder    sb    =    new    StringBuilder(sb.toString());    appendHexJavaScriptRepresentation(sb,    c);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
