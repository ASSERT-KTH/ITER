bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  sb.toString()  +  quote;  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  sb.toString()  +  quote;  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  quote;	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
2	[BUG]  [BUGGY]  return  sb.toString()  + "n ";  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  sb.toString()  + "n ";  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "n ";	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
3	[BUG]  [BUGGY]  sb.append(c);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  sb.append(c);  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	sb.append(c);	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
4	[BUG]  [BUGGY]  return  sb.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  sb.toString()  +  1;  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  +  1;	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
5	[BUG]  [BUGGY]  return  c.toString();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  c.toString();  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  c.toString();	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
6	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  sb.toString()  + ": "  +  quote;  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  quote;	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]    [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	  	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
8	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  sb.toString()  + ": "  +  c;  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ": "  +  c;	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
9	[BUG]  [BUGGY]  return  sb.toString()  + ", "  +  c;  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  sb.toString()  + ", "  +  c;  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ", "  +  c;	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
10	[BUG]  [BUGGY]  return  sb.toString()  + "   "  +  c;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  sb.toString()  + "   "  +  c;  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + "   "  +  c;	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
11	[BUG]  [BUGGY]  return  sb.toString()  + ", "  +  c);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  sb.toString()  + ", "  +  c);  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ", "  +  c);	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
12	[BUG]  [BUGGY]  return  sb.toString()  + ". "  +  c;  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);  [BUGGY]  return  sb.toString()  + ". "  +  c;  [BUGGY]  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	return  sb.toString()  + ". "  +  c;	return  sb.toString();  	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
