bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] appendHexJavaScriptRepresentation(sb, c); [FE] ComparisonFailure [CONTEXT] } else {    if (c > 0x1f && c <= 0x7f) { sb.append(c); } else {    [BUGGY] appendHexJavaScriptRepresentation(sb, c); [BUGGY] } } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } else {    if (c > 0x1f && c <= 0x7f) { sb.append(c); } else {    [BUGGY] [BUGGY] appendHexJavaScriptRepresentation(sb, c); } } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1051	1051	1	add	
3	[BUG] [BUGGY] appendHexJavaScriptRepresentation(c, sb); [FE] ComparisonFailure [CONTEXT] private static void appendHexJavaScriptRepresentation( StringBuilder sb, char c) { try { [BUGGY] appendHexJavaScriptRepresentation(c, sb); [BUGGY] } catch (IOException ex) {  throw new RuntimeException(ex); } } [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  StringBuilder sb char c [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean StringBuilder sb char c CodeConsumer cc consumer IOException ex CharsetEncoder outputCharsetEncoder char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1160	1160	1	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private static void appendHexJavaScriptRepresentation( StringBuilder sb, char c) { try { [BUGGY] [BUGGY] appendHexJavaScriptRepresentation(c, sb); } catch (IOException ex) {  throw new RuntimeException(ex); } } [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  StringBuilder sb char c [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean StringBuilder sb char c CodeConsumer cc consumer IOException ex CharsetEncoder outputCharsetEncoder char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1160	1160	1	add	
5	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] private static void appendHexJavaScriptRepresentation( StringBuilder sb, char c) { try { appendHexJavaScriptRepresentation(c, sb); } catch (IOException ex) {  throw new RuntimeException(ex); [BUGGY] } [BUGGY] } [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  StringBuilder sb char c [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean StringBuilder sb char c CodeConsumer cc consumer IOException ex CharsetEncoder outputCharsetEncoder char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1164	1164	1	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private static void appendHexJavaScriptRepresentation( StringBuilder sb, char c) { try { appendHexJavaScriptRepresentation(c, sb); } catch (IOException ex) {  throw new RuntimeException(ex); [BUGGY] [BUGGY] } } [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  StringBuilder sb char c [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean StringBuilder sb char c CodeConsumer cc consumer IOException ex CharsetEncoder outputCharsetEncoder char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1164	1164	1	add	
7	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] private static void appendHexJavaScriptRepresentation( StringBuilder sb, char c) { try { appendHexJavaScriptRepresentation(c, sb); } catch (IOException ex) {  throw new RuntimeException(ex); } [BUGGY] } [BUGGY]  [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  StringBuilder sb char c [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean StringBuilder sb char c CodeConsumer cc consumer IOException ex CharsetEncoder outputCharsetEncoder char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private static void appendHexJavaScriptRepresentation( StringBuilder sb, char c) { try { appendHexJavaScriptRepresentation(c, sb); } catch (IOException ex) {  throw new RuntimeException(ex); } [BUGGY] [BUGGY] } [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  StringBuilder sb char c [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean StringBuilder sb char c CodeConsumer cc consumer IOException ex CharsetEncoder outputCharsetEncoder char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1165	1165	1	add	
9	[BUG] [BUGGY] if (Character.isSupplementaryCodePoint(codePoint)) { [FE] ComparisonFailure [CONTEXT] private static void appendHexJavaScriptRepresentation( int codePoint, Appendable out) throws IOException { [BUGGY] if (Character.isSupplementaryCodePoint(codePoint)) { [BUGGY]     char[] surrogates = Character.toChars(codePoint); appendHexJavaScriptRepresentation(surrogates[0], out); appendHexJavaScriptRepresentation(surrogates[1], out); return; } out.append("\\u") [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  int codePoint Appendable out [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean Appendable out CodeConsumer cc consumer CharsetEncoder outputCharsetEncoder int codePoint char[] HEX_CHARS surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private static void appendHexJavaScriptRepresentation( int codePoint, Appendable out) throws IOException { [BUGGY] [BUGGY] if (Character.isSupplementaryCodePoint(codePoint)) {     char[] surrogates = Character.toChars(codePoint); appendHexJavaScriptRepresentation(surrogates[0], out); appendHexJavaScriptRepresentation(surrogates[1], out); return; } out.append("\\u") [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  int codePoint Appendable out [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean Appendable out CodeConsumer cc consumer CharsetEncoder outputCharsetEncoder int codePoint char[] HEX_CHARS surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1177	1177	1	add	
11	[BUG] [BUGGY] out.append("\\u") .append(HEX_CHARS[(codePoint >>> 12) & 0xf]) .append(HEX_CHARS[(codePoint >>> 8) & 0xf]) [FE] ComparisonFailure [CONTEXT] if (Character.isSupplementaryCodePoint(codePoint)) {     char[] surrogates = Character.toChars(codePoint); appendHexJavaScriptRepresentation(surrogates[0], out); appendHexJavaScriptRepresentation(surrogates[1], out); return; } [BUGGY] out.append("\\u")  .append(HEX_CHARS[(codePoint >>> 12) & 0xf])    .append(HEX_CHARS[(codePoint >>> 8) & 0xf]) [BUGGY] .append(HEX_CHARS[(codePoint >>> 12) & 0xf]) .append(HEX_CHARS[(codePoint >>> 8) & 0xf]) .append(HEX_CHARS[(codePoint >>> 4) & 0xf]) .append(HEX_CHARS[codePoint & 0xf]); } [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  int codePoint Appendable out [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean Appendable out CodeConsumer cc consumer CharsetEncoder outputCharsetEncoder int codePoint char[] HEX_CHARS surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (Character.isSupplementaryCodePoint(codePoint)) {     char[] surrogates = Character.toChars(codePoint); appendHexJavaScriptRepresentation(surrogates[0], out); appendHexJavaScriptRepresentation(surrogates[1], out); return; } [BUGGY] [BUGGY] out.append("\\u")  .append(HEX_CHARS[(codePoint >>> 12) & 0xf])    .append(HEX_CHARS[(codePoint >>> 8) & 0xf]) .append(HEX_CHARS[(codePoint >>> 12) & 0xf]) .append(HEX_CHARS[(codePoint >>> 8) & 0xf]) .append(HEX_CHARS[(codePoint >>> 4) & 0xf]) .append(HEX_CHARS[codePoint & 0xf]); } [CLASS] CodeGenerator Context [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void  int codePoint Appendable out [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context currentContext lhsContext rhsContext boolean Appendable out CodeConsumer cc consumer CharsetEncoder outputCharsetEncoder int codePoint char[] HEX_CHARS surrogates  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.7071067811865475	1187	1189	1	add	
14	[BUG] [BUGGY] if (outputCharsetEncoder != null) { [FE] ComparisonFailure [CONTEXT] } else if (s.regionMatches(false, i + 1, START_COMMENT, 0, START_COMMENT.length())) { sb.append("<\\"); } else { sb.append(c); } break; default:   [BUGGY] if (outputCharsetEncoder != null) { [BUGGY] if (outputCharsetEncoder.canEncode(c)) { sb.append(c); } else {  appendHexJavaScriptRepresentation(sb, c); } } else {    [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1034	1034	1	replace	
15	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } else if (s.regionMatches(false, i + 1, START_COMMENT, 0, START_COMMENT.length())) { sb.append("<\\"); } else { sb.append(c); } break; default:   [BUGGY] [BUGGY] if (outputCharsetEncoder != null) { if (outputCharsetEncoder.canEncode(c)) { sb.append(c); } else {  appendHexJavaScriptRepresentation(sb, c); } } else {    [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1034	1034	1	add	
16	[BUG] [BUGGY] if (c > 0x1f && c <= 0x7f) { [FE] ComparisonFailure [CONTEXT] if (outputCharsetEncoder.canEncode(c)) { sb.append(c); } else {  appendHexJavaScriptRepresentation(sb, c); } } else {    [BUGGY] if (c > 0x1f && c <= 0x7f) { [BUGGY] sb.append(c); } else {    appendHexJavaScriptRepresentation(sb, c); } } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	replace	
17	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (outputCharsetEncoder.canEncode(c)) { sb.append(c); } else {  appendHexJavaScriptRepresentation(sb, c); } } else {    [BUGGY] [BUGGY] if (c > 0x1f && c <= 0x7f) { sb.append(c); } else {    appendHexJavaScriptRepresentation(sb, c); } } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1045	1045	1	add	
18	[BUG] [BUGGY] sb.append(c); [FE] ComparisonFailure [CONTEXT] sb.append(c); } else {  appendHexJavaScriptRepresentation(sb, c); } } else {    if (c > 0x1f && c <= 0x7f) { [BUGGY] sb.append(c); [BUGGY] } else {    appendHexJavaScriptRepresentation(sb, c); } } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	replace	
19	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] sb.append(c); } else {  appendHexJavaScriptRepresentation(sb, c); } } else {    if (c > 0x1f && c <= 0x7f) { [BUGGY] [BUGGY] sb.append(c); } else {    appendHexJavaScriptRepresentation(sb, c); } } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2672612419124244	1046	1046	1	add	
20	[BUG] [BUGGY] if (childCount != ((n.getParent() != null &&  n.getParent().getType() == Token.OBJECTLIT) ? 1 : 0)) { [FE] ComparisonFailure [CONTEXT]  Node next = first.getNext(); if (next != null) { add("("); addList(next); add(")"); } break; case Token.STRING: [BUGGY] if (childCount !=   ((n.getParent() != null &&       n.getParent().getType() == Token.OBJECTLIT) ? 1 : 0)) { [BUGGY] ((n.getParent() != null && n.getParent().getType() == Token.OBJECTLIT) ? 1 : 0)) { throw new IllegalStateException( "Unexpected String children: " + n.getParent().toStringTree()); } add(jsString(n.getString(), outputCharsetEncoder)); break; case Token.DELPROP: Preconditions.checkState(childCount == 1); [CLASS] CodeGenerator Context [METHOD] add [RETURN_TYPE] void  Node n Context context [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context rhsContext boolean ambiguousElseClause funcNeedsParens hasElse needsParens preferLineBreaks preserveBlock double d Node body c catchblock first fn last n next parameters CodeConsumer cc consumer String key name o opstr regexp CharsetEncoder outputCharsetEncoder int childCount p postProp precedence type char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	628	630	1	replace	
21	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  Node next = first.getNext(); if (next != null) { add("("); addList(next); add(")"); } break; case Token.STRING: [BUGGY] [BUGGY] if (childCount !=   ((n.getParent() != null &&       n.getParent().getType() == Token.OBJECTLIT) ? 1 : 0)) { ((n.getParent() != null && n.getParent().getType() == Token.OBJECTLIT) ? 1 : 0)) { throw new IllegalStateException( "Unexpected String children: " + n.getParent().toStringTree()); } add(jsString(n.getString(), outputCharsetEncoder)); break; case Token.DELPROP: Preconditions.checkState(childCount == 1); [CLASS] CodeGenerator Context [METHOD] add [RETURN_TYPE] void  Node n Context context [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context rhsContext boolean ambiguousElseClause funcNeedsParens hasElse needsParens preferLineBreaks preserveBlock double d Node body c catchblock first fn last n next parameters CodeConsumer cc consumer String key name o opstr regexp CharsetEncoder outputCharsetEncoder int childCount p postProp precedence type char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	628	630	1	add	
22	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (childCount != ((n.getParent() != null && n.getParent().getType() == Token.OBJECTLIT) ? 1 : 0)) { throw new IllegalStateException( "Unexpected String children: " + n.getParent().toStringTree()); } [CLASS] CodeGenerator Context [METHOD] add [RETURN_TYPE] void  Node n Context context [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context rhsContext boolean ambiguousElseClause funcNeedsParens hasElse needsParens preferLineBreaks preserveBlock double d Node body c catchblock first fn last n next parameters CodeConsumer cc consumer String key name o opstr regexp CharsetEncoder outputCharsetEncoder int childCount p postProp precedence type char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	634	634	1	replace	
23	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (childCount != ((n.getParent() != null && n.getParent().getType() == Token.OBJECTLIT) ? 1 : 0)) { throw new IllegalStateException( "Unexpected String children: " + n.getParent().toStringTree()); } [CLASS] CodeGenerator Context [METHOD] add [RETURN_TYPE] void  Node n Context context [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context rhsContext boolean ambiguousElseClause funcNeedsParens hasElse needsParens preferLineBreaks preserveBlock double d Node body c catchblock first fn last n next parameters CodeConsumer cc consumer String key name o opstr regexp CharsetEncoder outputCharsetEncoder int childCount p postProp precedence type char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	634	634	1	add	
24	[BUG] [BUGGY] break; [FE] ComparisonFailure [CONTEXT] break; case Token.STRING: if (childCount != ((n.getParent() != null && n.getParent().getType() == Token.OBJECTLIT) ? 1 : 0)) { throw new IllegalStateException( "Unexpected String children: " + n.getParent().toStringTree()); } add(jsString(n.getString(), outputCharsetEncoder)); [BUGGY] break; [BUGGY]  case Token.DELPROP: Preconditions.checkState(childCount == 1); add("delete "); add(first); break; case Token.OBJECTLIT: { boolean needsParens = (context == Context.START_OF_EXPR); if (needsParens) { [CLASS] CodeGenerator Context [METHOD] add [RETURN_TYPE] void  Node n Context context [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context rhsContext boolean ambiguousElseClause funcNeedsParens hasElse needsParens preferLineBreaks preserveBlock double d Node body c catchblock first fn last n next parameters CodeConsumer cc consumer String key name o opstr regexp CharsetEncoder outputCharsetEncoder int childCount p postProp precedence type char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	635	635	1	replace	
25	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] break; case Token.STRING: if (childCount != ((n.getParent() != null && n.getParent().getType() == Token.OBJECTLIT) ? 1 : 0)) { throw new IllegalStateException( "Unexpected String children: " + n.getParent().toStringTree()); } add(jsString(n.getString(), outputCharsetEncoder)); [BUGGY] [BUGGY] break; case Token.DELPROP: Preconditions.checkState(childCount == 1); add("delete "); add(first); break; case Token.OBJECTLIT: { boolean needsParens = (context == Context.START_OF_EXPR); if (needsParens) { [CLASS] CodeGenerator Context [METHOD] add [RETURN_TYPE] void  Node n Context context [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context rhsContext boolean ambiguousElseClause funcNeedsParens hasElse needsParens preferLineBreaks preserveBlock double d Node body c catchblock first fn last n next parameters CodeConsumer cc consumer String key name o opstr regexp CharsetEncoder outputCharsetEncoder int childCount p postProp precedence type char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	635	635	1	add	
26	[BUG] [BUGGY] switch (s.charAt(i)) { [FE] ComparisonFailure [CONTEXT] static String jsString(String s, CharsetEncoder outputCharsetEncoder) { int singleq = 0, doubleq = 0;  for (int i = 0; i < s.length(); i++) { [BUGGY] switch (s.charAt(i)) { [BUGGY] case '"': doubleq++; break; case '\'': singleq++; break; } } String doublequote, singlequote; char quote; if (singleq < doubleq) {  quote = '\''; [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	944	944	1	replace	
27	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] static String jsString(String s, CharsetEncoder outputCharsetEncoder) { int singleq = 0, doubleq = 0;  for (int i = 0; i < s.length(); i++) { [BUGGY] [BUGGY] switch (s.charAt(i)) { case '"': doubleq++; break; case '\'': singleq++; break; } } String doublequote, singlequote; char quote; if (singleq < doubleq) {  quote = '\''; [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	944	944	1	add	
28	[BUG] [BUGGY] char c = s.charAt(i); [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { StringBuilder sb = new StringBuilder(s.length() + 2); sb.append(quote); for (int i = 0; i < s.length(); i++) { [BUGGY] char c = s.charAt(i); [BUGGY] switch (c) { case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; case '\'': sb.append(singlequoteEscape); break; case '>': // Break --> into --\> or ]]> into ]]\> if (i >= 2 && [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	replace	
29	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { StringBuilder sb = new StringBuilder(s.length() + 2); sb.append(quote); for (int i = 0; i < s.length(); i++) { [BUGGY] [BUGGY] char c = s.charAt(i); switch (c) { case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; case '\'': sb.append(singlequoteEscape); break; case '>': // Break --> into --\> or ]]> into ]]\> if (i >= 2 && [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	996	996	1	add	
30	[BUG] [BUGGY] switch (c) { [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { StringBuilder sb = new StringBuilder(s.length() + 2); sb.append(quote); for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); [BUGGY] switch (c) { [BUGGY] case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; case '\'': sb.append(singlequoteEscape); break; case '>': // Break --> into --\> or ]]> into ]]\> if (i >= 2 && ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') || [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	replace	
31	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { StringBuilder sb = new StringBuilder(s.length() + 2); sb.append(quote); for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); [BUGGY] [BUGGY] switch (c) { case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; case '\'': sb.append(singlequoteEscape); break; case '>': // Break --> into --\> or ]]> into ]]\> if (i >= 2 && ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') || [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.2581988897471611	997	997	1	add	
32	[BUG] [BUGGY] int singleq = 0, doubleq = 0; [FE] ComparisonFailure [CONTEXT] static String jsString(String s, CharsetEncoder outputCharsetEncoder) { [BUGGY] int singleq = 0, doubleq = 0; [BUGGY]   for (int i = 0; i < s.length(); i++) { switch (s.charAt(i)) { case '"': doubleq++; break; case '\'': singleq++; break; } } String doublequote, singlequote; [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	replace	
33	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] static String jsString(String s, CharsetEncoder outputCharsetEncoder) { [BUGGY] [BUGGY] int singleq = 0, doubleq = 0;  for (int i = 0; i < s.length(); i++) { switch (s.charAt(i)) { case '"': doubleq++; break; case '\'': singleq++; break; } } String doublequote, singlequote; [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	940	940	1	add	
34	[BUG] [BUGGY] for (int i = 0; i < s.length(); i++) { [FE] ComparisonFailure [CONTEXT] static String jsString(String s, CharsetEncoder outputCharsetEncoder) { int singleq = 0, doubleq = 0;  [BUGGY] for (int i = 0; i < s.length(); i++) { [BUGGY] switch (s.charAt(i)) { case '"': doubleq++; break; case '\'': singleq++; break; } } String doublequote, singlequote; char quote; if (singleq < doubleq) {  [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	replace	
35	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] static String jsString(String s, CharsetEncoder outputCharsetEncoder) { int singleq = 0, doubleq = 0;  [BUGGY] [BUGGY] for (int i = 0; i < s.length(); i++) { switch (s.charAt(i)) { case '"': doubleq++; break; case '\'': singleq++; break; } } String doublequote, singlequote; char quote; if (singleq < doubleq) {  [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	943	943	1	add	
36	[BUG] [BUGGY] if (singleq < doubleq) { [FE] ComparisonFailure [CONTEXT]  for (int i = 0; i < s.length(); i++) { switch (s.charAt(i)) { case '"': doubleq++; break; case '\'': singleq++; break; } } String doublequote, singlequote; char quote; [BUGGY] if (singleq < doubleq) { [BUGGY]  quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  quote = '\"'; doublequote = "\\\""; singlequote = "\'"; } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	952	952	1	replace	
37	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  for (int i = 0; i < s.length(); i++) { switch (s.charAt(i)) { case '"': doubleq++; break; case '\'': singleq++; break; } } String doublequote, singlequote; char quote; [BUGGY] [BUGGY] if (singleq < doubleq) {  quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  quote = '\"'; doublequote = "\\\""; singlequote = "\'"; } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	952	952	1	add	
38	[BUG] [BUGGY] quote = '\"'; [FE] ComparisonFailure [CONTEXT] if (singleq < doubleq) {  quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  [BUGGY] quote = '\"'; [BUGGY] doublequote = "\\\""; singlequote = "\'"; } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	replace	
39	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (singleq < doubleq) {  quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  [BUGGY] [BUGGY] quote = '\"'; doublequote = "\\\""; singlequote = "\'"; } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	959	959	1	add	
40	[BUG] [BUGGY] doublequote = "\\\""; [FE] ComparisonFailure [CONTEXT] if (singleq < doubleq) {  quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  quote = '\"'; [BUGGY] doublequote = "\\\""; [BUGGY] singlequote = "\'"; } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	960	960	1	replace	
41	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (singleq < doubleq) {  quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  quote = '\"'; [BUGGY] [BUGGY] doublequote = "\\\""; singlequote = "\'"; } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	960	960	1	add	
42	[BUG] [BUGGY] singlequote = "\'"; [FE] ComparisonFailure [CONTEXT] if (singleq < doubleq) {  quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  quote = '\"'; doublequote = "\\\""; [BUGGY] singlequote = "\'"; [BUGGY] } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	961	961	1	replace	
43	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (singleq < doubleq) {  quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  quote = '\"'; doublequote = "\\\""; [BUGGY] [BUGGY] singlequote = "\'"; } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	961	961	1	add	
44	[BUG] [BUGGY] return strEscape(s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder); [FE] ComparisonFailure [CONTEXT] quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  quote = '\"'; doublequote = "\\\""; singlequote = "\'"; } [BUGGY] return strEscape(s, quote, doublequote, singlequote, "\\\\",  outputCharsetEncoder); [BUGGY] outputCharsetEncoder); } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	964	965	1	replace	
45	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] quote = '\''; doublequote = "\""; singlequote = "\\\'"; } else {  quote = '\"'; doublequote = "\\\""; singlequote = "\'"; } [BUGGY] [BUGGY] return strEscape(s, quote, doublequote, singlequote, "\\\\",  outputCharsetEncoder); outputCharsetEncoder); } [CLASS] CodeGenerator Context [METHOD] jsString [RETURN_TYPE] String  String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean char quote CodeConsumer cc consumer String doublequote s singlequote CharsetEncoder outputCharsetEncoder int doubleq i singleq char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	964	965	1	add	
46	[BUG] [BUGGY] StringBuilder sb = new StringBuilder(s.length() + 2); [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { [BUGGY] StringBuilder sb = new StringBuilder(s.length() + 2); [BUGGY] sb.append(quote); for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); switch (c) { case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	replace	
47	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { [BUGGY] [BUGGY] StringBuilder sb = new StringBuilder(s.length() + 2); sb.append(quote); for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); switch (c) { case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	993	993	1	add	
48	[BUG] [BUGGY] sb.append(quote); [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { StringBuilder sb = new StringBuilder(s.length() + 2); [BUGGY] sb.append(quote); [BUGGY] for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); switch (c) { case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; case '\'': sb.append(singlequoteEscape); break; [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	994	994	1	replace	
49	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { StringBuilder sb = new StringBuilder(s.length() + 2); [BUGGY] [BUGGY] sb.append(quote); for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); switch (c) { case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; case '\'': sb.append(singlequoteEscape); break; [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	994	994	1	add	
50	[BUG] [BUGGY] for (int i = 0; i < s.length(); i++) { [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { StringBuilder sb = new StringBuilder(s.length() + 2); sb.append(quote); [BUGGY] for (int i = 0; i < s.length(); i++) { [BUGGY] char c = s.charAt(i); switch (c) { case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; case '\'': sb.append(singlequoteEscape); break; case '>': // Break --> into --\> or ]]> into ]]\> [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	replace	
51	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] CharsetEncoder outputCharsetEncoder) { StringBuilder sb = new StringBuilder(s.length() + 2); sb.append(quote); [BUGGY] [BUGGY] for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); switch (c) { case '\0': sb.append("\\0"); break; case '\n': sb.append("\\n"); break; case '\r': sb.append("\\r"); break; case '\t': sb.append("\\t"); break; case '\\': sb.append(backslashEscape); break; case '\"': sb.append(doublequoteEscape); break; case '\'': sb.append(singlequoteEscape); break; case '>': // Break --> into --\> or ]]> into ]]\> [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	995	995	1	add	
52	[BUG] [BUGGY] sb.append(quote); [FE] ComparisonFailure [CONTEXT] sb.append(c); } else {    appendHexJavaScriptRepresentation(sb, c); } } } } [BUGGY] sb.append(quote); [BUGGY] return sb.toString(); } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	replace	
53	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] sb.append(c); } else {    appendHexJavaScriptRepresentation(sb, c); } } } } [BUGGY] [BUGGY] sb.append(quote); return sb.toString(); } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1056	1056	1	add	
54	[BUG] [BUGGY] return sb.toString(); [FE] ComparisonFailure [CONTEXT] } else {    appendHexJavaScriptRepresentation(sb, c); } } } } sb.append(quote); [BUGGY] return sb.toString(); [BUGGY] } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	replace	
55	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } else {    appendHexJavaScriptRepresentation(sb, c); } } } } sb.append(quote); [BUGGY] [BUGGY] return sb.toString(); } [CLASS] CodeGenerator Context [METHOD] strEscape [RETURN_TYPE] String  String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context BEFORE_DANGLING_ELSE IN_FOR_INIT_CLAUSE OTHER PRESERVE_BLOCK START_OF_EXPR STATEMENT context lhsContext rhsContext boolean StringBuilder sb char c quote CodeConsumer cc consumer String END_SCRIPT START_COMMENT backslashEscape doublequoteEscape s singlequoteEscape CharsetEncoder outputCharsetEncoder int i char[] HEX_CHARS  	projects/Closure73/src/com/google/javascript/jscomp/CodeGenerator.java	0.24253562503633297	1057	1057	1	add	
